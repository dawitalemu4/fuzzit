<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1926" onload="init(evt)" viewBox="0 0 1200 1926" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1926" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1909.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1909.00"> </text><svg id="frames" x="10" width="1180" total_samples="662"><g><title>`0x7FFE2F042A6F (1 samples, 0.15%)</title><rect x="0.0000%" y="1845" width="0.1511%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1855.50"></text></g><g><title>`0x7FFE2F042AE2 (1 samples, 0.15%)</title><rect x="0.0000%" y="1829" width="0.1511%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1839.50"></text></g><g><title>`0x7FFE2F0B3F3B (1 samples, 0.15%)</title><rect x="0.1511%" y="1813" width="0.1511%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.4011%" y="1823.50"></text></g><g><title>`0x7FFE2F060762 (1 samples, 0.15%)</title><rect x="0.1511%" y="1797" width="0.1511%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.4011%" y="1807.50"></text></g><g><title>`0x7FFE2F0609CD (1 samples, 0.15%)</title><rect x="0.1511%" y="1781" width="0.1511%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.4011%" y="1791.50"></text></g><g><title>`0x7FFE2F090E0F (1 samples, 0.15%)</title><rect x="0.1511%" y="1765" width="0.1511%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.4011%" y="1775.50"></text></g><g><title>`0x7FFE11AF0347 (1 samples, 0.15%)</title><rect x="0.3021%" y="1765" width="0.1511%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.5521%" y="1775.50"></text></g><g><title>`0x7FFE11AE5409 (1 samples, 0.15%)</title><rect x="0.3021%" y="1749" width="0.1511%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.5521%" y="1759.50"></text></g><g><title>`0x7FFE11AE55AE (1 samples, 0.15%)</title><rect x="0.3021%" y="1733" width="0.1511%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.5521%" y="1743.50"></text></g><g><title>`0x7FFE2DD28648 (1 samples, 0.15%)</title><rect x="0.3021%" y="1717" width="0.1511%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.5521%" y="1727.50"></text></g><g><title>`0x7FFE2C8C3FFD (3 samples, 0.45%)</title><rect x="0.4532%" y="1765" width="0.4532%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="3"/><text x="0.7032%" y="1775.50"></text></g><g><title>`0x7FFE2C7F4653 (3 samples, 0.45%)</title><rect x="0.4532%" y="1749" width="0.4532%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="3"/><text x="0.7032%" y="1759.50"></text></g><g><title>`0x7FFE2C7F4DC4 (3 samples, 0.45%)</title><rect x="0.4532%" y="1733" width="0.4532%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="3"/><text x="0.7032%" y="1743.50"></text></g><g><title>`0x7FFE2F1A3314 (3 samples, 0.45%)</title><rect x="0.4532%" y="1717" width="0.4532%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="3"/><text x="0.7032%" y="1727.50"></text></g><g><title>`0x7FFE2ECF7B3B (1 samples, 0.15%)</title><rect x="0.9063%" y="1765" width="0.1511%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1775.50"></text></g><g><title>`0x7FFE2ED0D826 (1 samples, 0.15%)</title><rect x="0.9063%" y="1749" width="0.1511%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1759.50"></text></g><g><title>`0x7FFE2ED0DA69 (1 samples, 0.15%)</title><rect x="0.9063%" y="1733" width="0.1511%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1743.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="0.9063%" y="1717" width="0.1511%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1727.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.15%)</title><rect x="0.9063%" y="1701" width="0.1511%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1711.50"></text></g><g><title>`0x7FFE2F0672DF (1 samples, 0.15%)</title><rect x="0.9063%" y="1685" width="0.1511%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1695.50"></text></g><g><title>`0x7FFE2F065FDC (1 samples, 0.15%)</title><rect x="0.9063%" y="1669" width="0.1511%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1679.50"></text></g><g><title>`0x7FFE2F06601C (1 samples, 0.15%)</title><rect x="0.9063%" y="1653" width="0.1511%" height="15" fill="rgb(235,183,28)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1663.50"></text></g><g><title>`0x7FFE2F0660E2 (1 samples, 0.15%)</title><rect x="0.9063%" y="1637" width="0.1511%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1647.50"></text></g><g><title>`0x7FFE2F1A3534 (1 samples, 0.15%)</title><rect x="0.9063%" y="1621" width="0.1511%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="1"/><text x="1.1563%" y="1631.50"></text></g><g><title>`0x7FFE2F11262B (7 samples, 1.06%)</title><rect x="0.1511%" y="1829" width="1.0574%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="7"/><text x="0.4011%" y="1839.50"></text></g><g><title>`0x7FFE2F0B4147 (6 samples, 0.91%)</title><rect x="0.3021%" y="1813" width="0.9063%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="6"/><text x="0.5521%" y="1823.50"></text></g><g><title>`0x7FFE2F0B483E (6 samples, 0.91%)</title><rect x="0.3021%" y="1797" width="0.9063%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="6"/><text x="0.5521%" y="1807.50"></text></g><g><title>`0x7FFE2F1A0EDE (6 samples, 0.91%)</title><rect x="0.3021%" y="1781" width="0.9063%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="6"/><text x="0.5521%" y="1791.50"></text></g><g><title>`0x7FFE2ECF7B64 (1 samples, 0.15%)</title><rect x="1.0574%" y="1765" width="0.1511%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="1.3074%" y="1775.50"></text></g><g><title>`0x7FFE2ED2EC9A (1 samples, 0.15%)</title><rect x="1.0574%" y="1749" width="0.1511%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="1.3074%" y="1759.50"></text></g><g><title>`0x7FFE2ED1C660 (1 samples, 0.15%)</title><rect x="1.0574%" y="1733" width="0.1511%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="1.3074%" y="1743.50"></text></g><g><title>`0x7FFE2F11337F (1 samples, 0.15%)</title><rect x="1.2085%" y="1813" width="0.1511%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="1"/><text x="1.4585%" y="1823.50"></text></g><g><title>`0x7FFE2F15C079 (1 samples, 0.15%)</title><rect x="1.2085%" y="1797" width="0.1511%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="1"/><text x="1.4585%" y="1807.50"></text></g><g><title>`0x7FFE2F183F78 (1 samples, 0.15%)</title><rect x="1.2085%" y="1781" width="0.1511%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="1"/><text x="1.4585%" y="1791.50"></text></g><g><title>`0x7FFE2F0F2FC6 (1 samples, 0.15%)</title><rect x="1.2085%" y="1765" width="0.1511%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="1"/><text x="1.4585%" y="1775.50"></text></g><g><title>`0x7FFE2F0F2EE0 (1 samples, 0.15%)</title><rect x="1.2085%" y="1749" width="0.1511%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="1.4585%" y="1759.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="1.2085%" y="1733" width="0.1511%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="1.4585%" y="1743.50"></text></g><g><title>`0x7FFE2F113578 (1 samples, 0.15%)</title><rect x="1.3595%" y="1813" width="0.1511%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="1"/><text x="1.6095%" y="1823.50"></text></g><g><title>`0x7FFE2F042CD3 (1 samples, 0.15%)</title><rect x="1.3595%" y="1797" width="0.1511%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="1"/><text x="1.6095%" y="1807.50"></text></g><g><title>`0x7FFE2F0448FF (1 samples, 0.15%)</title><rect x="1.3595%" y="1781" width="0.1511%" height="15" fill="rgb(232,182,51)" fg:x="9" fg:w="1"/><text x="1.6095%" y="1791.50"></text></g><g><title>`0x7FFE2F0453BA (1 samples, 0.15%)</title><rect x="1.3595%" y="1765" width="0.1511%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="1.6095%" y="1775.50"></text></g><g><title>`0x7FFE2F1A6BC4 (1 samples, 0.15%)</title><rect x="1.3595%" y="1749" width="0.1511%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="1.6095%" y="1759.50"></text></g><g><title>`0x7FFE2F113E8C (1 samples, 0.15%)</title><rect x="1.5106%" y="1813" width="0.1511%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="1"/><text x="1.7606%" y="1823.50"></text></g><g><title>`0x7FFE2F0AE13D (1 samples, 0.15%)</title><rect x="1.5106%" y="1797" width="0.1511%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="1"/><text x="1.7606%" y="1807.50"></text></g><g><title>`0x7FFE2F06247B (1 samples, 0.15%)</title><rect x="1.5106%" y="1781" width="0.1511%" height="15" fill="rgb(222,207,29)" fg:x="10" fg:w="1"/><text x="1.7606%" y="1791.50"></text></g><g><title>`0x7FFE2F08B80E (1 samples, 0.15%)</title><rect x="1.6616%" y="1685" width="0.1511%" height="15" fill="rgb(206,96,30)" fg:x="11" fg:w="1"/><text x="1.9116%" y="1695.50"></text></g><g><title>`0x7FFE2F062180 (1 samples, 0.15%)</title><rect x="1.6616%" y="1669" width="0.1511%" height="15" fill="rgb(218,138,4)" fg:x="11" fg:w="1"/><text x="1.9116%" y="1679.50"></text></g><g><title>`0x7FFE2F08BABE (1 samples, 0.15%)</title><rect x="1.8127%" y="1685" width="0.1511%" height="15" fill="rgb(250,191,14)" fg:x="12" fg:w="1"/><text x="2.0627%" y="1695.50"></text></g><g><title>`0x7FFE2F08CC06 (1 samples, 0.15%)</title><rect x="1.8127%" y="1669" width="0.1511%" height="15" fill="rgb(239,60,40)" fg:x="12" fg:w="1"/><text x="2.0627%" y="1679.50"></text></g><g><title>`0x7FFE2F08A4F2 (3 samples, 0.45%)</title><rect x="1.6616%" y="1749" width="0.4532%" height="15" fill="rgb(206,27,48)" fg:x="11" fg:w="3"/><text x="1.9116%" y="1759.50"></text></g><g><title>`0x7FFE2F08EF05 (3 samples, 0.45%)</title><rect x="1.6616%" y="1733" width="0.4532%" height="15" fill="rgb(225,35,8)" fg:x="11" fg:w="3"/><text x="1.9116%" y="1743.50"></text></g><g><title>`0x7FFE2F0AD001 (3 samples, 0.45%)</title><rect x="1.6616%" y="1717" width="0.4532%" height="15" fill="rgb(250,213,24)" fg:x="11" fg:w="3"/><text x="1.9116%" y="1727.50"></text></g><g><title>`0x7FFE2F0AD5A8 (3 samples, 0.45%)</title><rect x="1.6616%" y="1701" width="0.4532%" height="15" fill="rgb(247,123,22)" fg:x="11" fg:w="3"/><text x="1.9116%" y="1711.50"></text></g><g><title>`0x7FFE2F08BC32 (1 samples, 0.15%)</title><rect x="1.9637%" y="1685" width="0.1511%" height="15" fill="rgb(231,138,38)" fg:x="13" fg:w="1"/><text x="2.2137%" y="1695.50"></text></g><g><title>`0x7FFE2F052FEF (1 samples, 0.15%)</title><rect x="1.9637%" y="1669" width="0.1511%" height="15" fill="rgb(231,145,46)" fg:x="13" fg:w="1"/><text x="2.2137%" y="1679.50"></text></g><g><title>`0x7FFE2C7F4856 (1 samples, 0.15%)</title><rect x="2.1148%" y="1621" width="0.1511%" height="15" fill="rgb(251,118,11)" fg:x="14" fg:w="1"/><text x="2.3648%" y="1631.50"></text></g><g><title>`0x7FFE2F0756F8 (1 samples, 0.15%)</title><rect x="2.1148%" y="1605" width="0.1511%" height="15" fill="rgb(217,147,25)" fg:x="14" fg:w="1"/><text x="2.3648%" y="1615.50"></text></g><g><title>`0x7FFE2F0762B8 (1 samples, 0.15%)</title><rect x="2.1148%" y="1589" width="0.1511%" height="15" fill="rgb(247,81,37)" fg:x="14" fg:w="1"/><text x="2.3648%" y="1599.50"></text></g><g><title>`0x7FFE2F0770EC (1 samples, 0.15%)</title><rect x="2.1148%" y="1573" width="0.1511%" height="15" fill="rgb(209,12,38)" fg:x="14" fg:w="1"/><text x="2.3648%" y="1583.50"></text></g><g><title>`0x7FFE2F1A9907 (1 samples, 0.15%)</title><rect x="2.1148%" y="1557" width="0.1511%" height="15" fill="rgb(227,1,9)" fg:x="14" fg:w="1"/><text x="2.3648%" y="1567.50"></text></g><g><title>`0x7FFE2C8C3FFD (2 samples, 0.30%)</title><rect x="2.1148%" y="1637" width="0.3021%" height="15" fill="rgb(248,47,43)" fg:x="14" fg:w="2"/><text x="2.3648%" y="1647.50"></text></g><g><title>`0x7FFE2C7F4AA3 (1 samples, 0.15%)</title><rect x="2.2659%" y="1621" width="0.1511%" height="15" fill="rgb(221,10,30)" fg:x="15" fg:w="1"/><text x="2.5159%" y="1631.50"></text></g><g><title>`0x7FFE2C7F344F (1 samples, 0.15%)</title><rect x="2.2659%" y="1605" width="0.1511%" height="15" fill="rgb(210,229,1)" fg:x="15" fg:w="1"/><text x="2.5159%" y="1615.50"></text></g><g><title>`0x7FFE2C8DAB4C (1 samples, 0.15%)</title><rect x="2.2659%" y="1589" width="0.1511%" height="15" fill="rgb(222,148,37)" fg:x="15" fg:w="1"/><text x="2.5159%" y="1599.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="2.2659%" y="1573" width="0.1511%" height="15" fill="rgb(234,67,33)" fg:x="15" fg:w="1"/><text x="2.5159%" y="1583.50"></text></g><g><title>`0x7FFE2C8C40AF (1 samples, 0.15%)</title><rect x="2.4169%" y="1637" width="0.1511%" height="15" fill="rgb(247,98,35)" fg:x="16" fg:w="1"/><text x="2.6669%" y="1647.50"></text></g><g><title>`0x7FFE2C86E871 (1 samples, 0.15%)</title><rect x="2.4169%" y="1621" width="0.1511%" height="15" fill="rgb(247,138,52)" fg:x="16" fg:w="1"/><text x="2.6669%" y="1631.50"></text></g><g><title>`0x7FFE2C86E630 (1 samples, 0.15%)</title><rect x="2.4169%" y="1605" width="0.1511%" height="15" fill="rgb(213,79,30)" fg:x="16" fg:w="1"/><text x="2.6669%" y="1615.50"></text></g><g><title>`0x7FFE2C83D833 (1 samples, 0.15%)</title><rect x="2.4169%" y="1589" width="0.1511%" height="15" fill="rgb(246,177,23)" fg:x="16" fg:w="1"/><text x="2.6669%" y="1599.50"></text></g><g><title>`0x7FFE2C83D903 (1 samples, 0.15%)</title><rect x="2.4169%" y="1573" width="0.1511%" height="15" fill="rgb(230,62,27)" fg:x="16" fg:w="1"/><text x="2.6669%" y="1583.50"></text></g><g><title>`0x7FFE2C86FAFA (1 samples, 0.15%)</title><rect x="2.4169%" y="1557" width="0.1511%" height="15" fill="rgb(216,154,8)" fg:x="16" fg:w="1"/><text x="2.6669%" y="1567.50"></text></g><g><title>`0x7FFE2F1A4964 (1 samples, 0.15%)</title><rect x="2.4169%" y="1541" width="0.1511%" height="15" fill="rgb(244,35,45)" fg:x="16" fg:w="1"/><text x="2.6669%" y="1551.50"></text></g><g><title>`0x7FFE2F10B934 (7 samples, 1.06%)</title><rect x="1.6616%" y="1797" width="1.0574%" height="15" fill="rgb(251,115,12)" fg:x="11" fg:w="7"/><text x="1.9116%" y="1807.50"></text></g><g><title>`0x7FFE2F054FB0 (7 samples, 1.06%)</title><rect x="1.6616%" y="1781" width="1.0574%" height="15" fill="rgb(240,54,50)" fg:x="11" fg:w="7"/><text x="1.9116%" y="1791.50"></text></g><g><title>`0x7FFE2F08A190 (7 samples, 1.06%)</title><rect x="1.6616%" y="1765" width="1.0574%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="7"/><text x="1.9116%" y="1775.50"></text></g><g><title>`0x7FFE2F08A584 (4 samples, 0.60%)</title><rect x="2.1148%" y="1749" width="0.6042%" height="15" fill="rgb(207,117,47)" fg:x="14" fg:w="4"/><text x="2.3648%" y="1759.50"></text></g><g><title>`0x7FFE2F047883 (4 samples, 0.60%)</title><rect x="2.1148%" y="1733" width="0.6042%" height="15" fill="rgb(249,43,39)" fg:x="14" fg:w="4"/><text x="2.3648%" y="1743.50"></text></g><g><title>`0x7FFE2F048726 (4 samples, 0.60%)</title><rect x="2.1148%" y="1717" width="0.6042%" height="15" fill="rgb(209,38,44)" fg:x="14" fg:w="4"/><text x="2.3648%" y="1727.50"></text></g><g><title>`0x7FFE2F0486FA (4 samples, 0.60%)</title><rect x="2.1148%" y="1701" width="0.6042%" height="15" fill="rgb(236,212,23)" fg:x="14" fg:w="4"/><text x="2.3648%" y="1711.50"></text></g><g><title>`0x7FFE2F0B37AC (4 samples, 0.60%)</title><rect x="2.1148%" y="1685" width="0.6042%" height="15" fill="rgb(242,79,21)" fg:x="14" fg:w="4"/><text x="2.3648%" y="1695.50"></text></g><g><title>`0x7FFE2F0B483E (4 samples, 0.60%)</title><rect x="2.1148%" y="1669" width="0.6042%" height="15" fill="rgb(211,96,35)" fg:x="14" fg:w="4"/><text x="2.3648%" y="1679.50"></text></g><g><title>`0x7FFE2F1A0EDE (4 samples, 0.60%)</title><rect x="2.1148%" y="1653" width="0.6042%" height="15" fill="rgb(253,215,40)" fg:x="14" fg:w="4"/><text x="2.3648%" y="1663.50"></text></g><g><title>`0x7FFE2C8C40DA (1 samples, 0.15%)</title><rect x="2.5680%" y="1637" width="0.1511%" height="15" fill="rgb(211,81,21)" fg:x="17" fg:w="1"/><text x="2.8180%" y="1647.50"></text></g><g><title>`0x7FFE2C86EFBA (1 samples, 0.15%)</title><rect x="2.5680%" y="1621" width="0.1511%" height="15" fill="rgb(208,190,38)" fg:x="17" fg:w="1"/><text x="2.8180%" y="1631.50"></text></g><g><title>`0x7FFE2C86F080 (1 samples, 0.15%)</title><rect x="2.5680%" y="1605" width="0.1511%" height="15" fill="rgb(235,213,38)" fg:x="17" fg:w="1"/><text x="2.8180%" y="1615.50"></text></g><g><title>`0x7FFE2F129B7C (1 samples, 0.15%)</title><rect x="2.5680%" y="1589" width="0.1511%" height="15" fill="rgb(237,122,38)" fg:x="17" fg:w="1"/><text x="2.8180%" y="1599.50"></text></g><g><title>`0x7FFE2F129CB2 (1 samples, 0.15%)</title><rect x="2.5680%" y="1573" width="0.1511%" height="15" fill="rgb(244,218,35)" fg:x="17" fg:w="1"/><text x="2.8180%" y="1583.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.15%)</title><rect x="2.5680%" y="1557" width="0.1511%" height="15" fill="rgb(240,68,47)" fg:x="17" fg:w="1"/><text x="2.8180%" y="1567.50"></text></g><g><title>`0x7FFE2F114345 (8 samples, 1.21%)</title><rect x="1.6616%" y="1813" width="1.2085%" height="15" fill="rgb(210,16,53)" fg:x="11" fg:w="8"/><text x="1.9116%" y="1823.50"></text></g><g><title>`0x7FFE2F10B9A9 (1 samples, 0.15%)</title><rect x="2.7190%" y="1797" width="0.1511%" height="15" fill="rgb(235,124,12)" fg:x="18" fg:w="1"/><text x="2.9690%" y="1807.50"></text></g><g><title>`0x7FFE2F0B17A0 (1 samples, 0.15%)</title><rect x="2.7190%" y="1781" width="0.1511%" height="15" fill="rgb(224,169,11)" fg:x="18" fg:w="1"/><text x="2.9690%" y="1791.50"></text></g><g><title>`0x7FFE2F060FBB (1 samples, 0.15%)</title><rect x="2.7190%" y="1765" width="0.1511%" height="15" fill="rgb(250,166,2)" fg:x="18" fg:w="1"/><text x="2.9690%" y="1775.50"></text></g><g><title>`0x7FFE2F06118D (1 samples, 0.15%)</title><rect x="2.7190%" y="1749" width="0.1511%" height="15" fill="rgb(242,216,29)" fg:x="18" fg:w="1"/><text x="2.9690%" y="1759.50"></text></g><g><title>`0x7FFE2F0631CC (1 samples, 0.15%)</title><rect x="2.7190%" y="1733" width="0.1511%" height="15" fill="rgb(230,116,27)" fg:x="18" fg:w="1"/><text x="2.9690%" y="1743.50"></text></g><g><title>`0x7FFE2F053D26 (1 samples, 0.15%)</title><rect x="2.7190%" y="1717" width="0.1511%" height="15" fill="rgb(228,99,48)" fg:x="18" fg:w="1"/><text x="2.9690%" y="1727.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.15%)</title><rect x="2.8701%" y="1749" width="0.1511%" height="15" fill="rgb(253,11,6)" fg:x="19" fg:w="1"/><text x="3.1201%" y="1759.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.15%)</title><rect x="2.8701%" y="1733" width="0.1511%" height="15" fill="rgb(247,143,39)" fg:x="19" fg:w="1"/><text x="3.1201%" y="1743.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.15%)</title><rect x="2.8701%" y="1717" width="0.1511%" height="15" fill="rgb(236,97,10)" fg:x="19" fg:w="1"/><text x="3.1201%" y="1727.50"></text></g><g><title>`0x7FFE2F08C35E (1 samples, 0.15%)</title><rect x="3.0211%" y="1717" width="0.1511%" height="15" fill="rgb(233,208,19)" fg:x="20" fg:w="1"/><text x="3.2711%" y="1727.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.15%)</title><rect x="3.1722%" y="1685" width="0.1511%" height="15" fill="rgb(216,164,2)" fg:x="21" fg:w="1"/><text x="3.4222%" y="1695.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.15%)</title><rect x="3.1722%" y="1669" width="0.1511%" height="15" fill="rgb(220,129,5)" fg:x="21" fg:w="1"/><text x="3.4222%" y="1679.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.15%)</title><rect x="3.1722%" y="1653" width="0.1511%" height="15" fill="rgb(242,17,10)" fg:x="21" fg:w="1"/><text x="3.4222%" y="1663.50"></text></g><g><title>`0x7FFE2F08B80E (1 samples, 0.15%)</title><rect x="3.3233%" y="1669" width="0.1511%" height="15" fill="rgb(242,107,0)" fg:x="22" fg:w="1"/><text x="3.5733%" y="1679.50"></text></g><g><title>`0x7FFE2F062111 (1 samples, 0.15%)</title><rect x="3.3233%" y="1653" width="0.1511%" height="15" fill="rgb(251,28,31)" fg:x="22" fg:w="1"/><text x="3.5733%" y="1663.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.15%)</title><rect x="3.4743%" y="1621" width="0.1511%" height="15" fill="rgb(233,223,10)" fg:x="23" fg:w="1"/><text x="3.7243%" y="1631.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.15%)</title><rect x="3.4743%" y="1605" width="0.1511%" height="15" fill="rgb(215,21,27)" fg:x="23" fg:w="1"/><text x="3.7243%" y="1615.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.15%)</title><rect x="3.4743%" y="1589" width="0.1511%" height="15" fill="rgb(232,23,21)" fg:x="23" fg:w="1"/><text x="3.7243%" y="1599.50"></text></g><g><title>`0x7FFE2F0ACF73 (1 samples, 0.15%)</title><rect x="3.6254%" y="1573" width="0.1511%" height="15" fill="rgb(244,5,23)" fg:x="24" fg:w="1"/><text x="3.8754%" y="1583.50"></text></g><g><title>`0x7FFE2F0AD2D9 (1 samples, 0.15%)</title><rect x="3.6254%" y="1557" width="0.1511%" height="15" fill="rgb(226,81,46)" fg:x="24" fg:w="1"/><text x="3.8754%" y="1567.50"></text></g><g><title>`0x7FFE2F1A3914 (1 samples, 0.15%)</title><rect x="3.6254%" y="1541" width="0.1511%" height="15" fill="rgb(247,70,30)" fg:x="24" fg:w="1"/><text x="3.8754%" y="1551.50"></text></g><g><title>`0x7FFE2F0AD5A8 (6 samples, 0.91%)</title><rect x="3.0211%" y="1749" width="0.9063%" height="15" fill="rgb(212,68,19)" fg:x="20" fg:w="6"/><text x="3.2711%" y="1759.50"></text></g><g><title>`0x7FFE2F08BABE (6 samples, 0.91%)</title><rect x="3.0211%" y="1733" width="0.9063%" height="15" fill="rgb(240,187,13)" fg:x="20" fg:w="6"/><text x="3.2711%" y="1743.50"></text></g><g><title>`0x7FFE2F08D8EE (5 samples, 0.76%)</title><rect x="3.1722%" y="1717" width="0.7553%" height="15" fill="rgb(223,113,26)" fg:x="21" fg:w="5"/><text x="3.4222%" y="1727.50"></text></g><g><title>`0x7FFE2F0AD001 (5 samples, 0.76%)</title><rect x="3.1722%" y="1701" width="0.7553%" height="15" fill="rgb(206,192,2)" fg:x="21" fg:w="5"/><text x="3.4222%" y="1711.50"></text></g><g><title>`0x7FFE2F0AD5A8 (4 samples, 0.60%)</title><rect x="3.3233%" y="1685" width="0.6042%" height="15" fill="rgb(241,108,4)" fg:x="22" fg:w="4"/><text x="3.5733%" y="1695.50"></text></g><g><title>`0x7FFE2F08BABE (3 samples, 0.45%)</title><rect x="3.4743%" y="1669" width="0.4532%" height="15" fill="rgb(247,173,49)" fg:x="23" fg:w="3"/><text x="3.7243%" y="1679.50"></text></g><g><title>`0x7FFE2F08D8EE (3 samples, 0.45%)</title><rect x="3.4743%" y="1653" width="0.4532%" height="15" fill="rgb(224,114,35)" fg:x="23" fg:w="3"/><text x="3.7243%" y="1663.50"></text></g><g><title>`0x7FFE2F0AD001 (3 samples, 0.45%)</title><rect x="3.4743%" y="1637" width="0.4532%" height="15" fill="rgb(245,159,27)" fg:x="23" fg:w="3"/><text x="3.7243%" y="1647.50"></text></g><g><title>`0x7FFE2F0AD5A8 (2 samples, 0.30%)</title><rect x="3.6254%" y="1621" width="0.3021%" height="15" fill="rgb(245,172,44)" fg:x="24" fg:w="2"/><text x="3.8754%" y="1631.50"></text></g><g><title>`0x7FFE2F08BABE (2 samples, 0.30%)</title><rect x="3.6254%" y="1605" width="0.3021%" height="15" fill="rgb(236,23,11)" fg:x="24" fg:w="2"/><text x="3.8754%" y="1615.50"></text></g><g><title>`0x7FFE2F08D8EE (2 samples, 0.30%)</title><rect x="3.6254%" y="1589" width="0.3021%" height="15" fill="rgb(205,117,38)" fg:x="24" fg:w="2"/><text x="3.8754%" y="1599.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.15%)</title><rect x="3.7764%" y="1573" width="0.1511%" height="15" fill="rgb(237,72,25)" fg:x="25" fg:w="1"/><text x="4.0264%" y="1583.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.15%)</title><rect x="3.7764%" y="1557" width="0.1511%" height="15" fill="rgb(244,70,9)" fg:x="25" fg:w="1"/><text x="4.0264%" y="1567.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.15%)</title><rect x="3.7764%" y="1541" width="0.1511%" height="15" fill="rgb(217,125,39)" fg:x="25" fg:w="1"/><text x="4.0264%" y="1551.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.15%)</title><rect x="3.7764%" y="1525" width="0.1511%" height="15" fill="rgb(235,36,10)" fg:x="25" fg:w="1"/><text x="4.0264%" y="1535.50"></text></g><g><title>`0x7FFE2F062430 (1 samples, 0.15%)</title><rect x="3.9275%" y="1717" width="0.1511%" height="15" fill="rgb(251,123,47)" fg:x="26" fg:w="1"/><text x="4.1775%" y="1727.50"></text></g><g><title>`0x7FFE2F11444F (9 samples, 1.36%)</title><rect x="2.8701%" y="1813" width="1.3595%" height="15" fill="rgb(221,13,13)" fg:x="19" fg:w="9"/><text x="3.1201%" y="1823.50"></text></g><g><title>`0x7FFE2F08BABE (9 samples, 1.36%)</title><rect x="2.8701%" y="1797" width="1.3595%" height="15" fill="rgb(238,131,9)" fg:x="19" fg:w="9"/><text x="3.1201%" y="1807.50"></text></g><g><title>`0x7FFE2F08D8EE (9 samples, 1.36%)</title><rect x="2.8701%" y="1781" width="1.3595%" height="15" fill="rgb(211,50,8)" fg:x="19" fg:w="9"/><text x="3.1201%" y="1791.50"></text></g><g><title>`0x7FFE2F0AD001 (9 samples, 1.36%)</title><rect x="2.8701%" y="1765" width="1.3595%" height="15" fill="rgb(245,182,24)" fg:x="19" fg:w="9"/><text x="3.1201%" y="1775.50"></text></g><g><title>`0x7FFE2F0AD64C (2 samples, 0.30%)</title><rect x="3.9275%" y="1749" width="0.3021%" height="15" fill="rgb(242,14,37)" fg:x="26" fg:w="2"/><text x="4.1775%" y="1759.50"></text></g><g><title>`0x7FFE2F0AE13D (2 samples, 0.30%)</title><rect x="3.9275%" y="1733" width="0.3021%" height="15" fill="rgb(246,228,12)" fg:x="26" fg:w="2"/><text x="4.1775%" y="1743.50"></text></g><g><title>`0x7FFE2F0624BB (1 samples, 0.15%)</title><rect x="4.0785%" y="1717" width="0.1511%" height="15" fill="rgb(213,55,15)" fg:x="27" fg:w="1"/><text x="4.3285%" y="1727.50"></text></g><g><title>`0x7FFE2F18CB96 (1 samples, 0.15%)</title><rect x="4.0785%" y="1701" width="0.1511%" height="15" fill="rgb(209,9,3)" fg:x="27" fg:w="1"/><text x="4.3285%" y="1711.50"></text></g><g><title>`0x7FFE2F114457 (1 samples, 0.15%)</title><rect x="4.2296%" y="1813" width="0.1511%" height="15" fill="rgb(230,59,30)" fg:x="28" fg:w="1"/><text x="4.4796%" y="1823.50"></text></g><g><title>`0x7FFE2F0AFC27 (1 samples, 0.15%)</title><rect x="4.2296%" y="1797" width="0.1511%" height="15" fill="rgb(209,121,21)" fg:x="28" fg:w="1"/><text x="4.4796%" y="1807.50"></text></g><g><title>`0x7FFE2F0AFCDA (1 samples, 0.15%)</title><rect x="4.2296%" y="1781" width="0.1511%" height="15" fill="rgb(220,109,13)" fg:x="28" fg:w="1"/><text x="4.4796%" y="1791.50"></text></g><g><title>`0x7FFE2F0AFF81 (1 samples, 0.15%)</title><rect x="4.2296%" y="1765" width="0.1511%" height="15" fill="rgb(232,18,1)" fg:x="28" fg:w="1"/><text x="4.4796%" y="1775.50"></text></g><g><title>`0x7FFE2F0B0659 (1 samples, 0.15%)</title><rect x="4.2296%" y="1749" width="0.1511%" height="15" fill="rgb(215,41,42)" fg:x="28" fg:w="1"/><text x="4.4796%" y="1759.50"></text></g><g><title>`0x7FFE2F0B0BB0 (1 samples, 0.15%)</title><rect x="4.2296%" y="1733" width="0.1511%" height="15" fill="rgb(224,123,36)" fg:x="28" fg:w="1"/><text x="4.4796%" y="1743.50"></text></g><g><title>`0x7FFE2F0B0EE3 (1 samples, 0.15%)</title><rect x="4.2296%" y="1717" width="0.1511%" height="15" fill="rgb(240,125,3)" fg:x="28" fg:w="1"/><text x="4.4796%" y="1727.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="4.2296%" y="1701" width="0.1511%" height="15" fill="rgb(205,98,50)" fg:x="28" fg:w="1"/><text x="4.4796%" y="1711.50"></text></g><g><title>`0x7FFE2F114495 (1 samples, 0.15%)</title><rect x="4.3807%" y="1813" width="0.1511%" height="15" fill="rgb(205,185,37)" fg:x="29" fg:w="1"/><text x="4.6307%" y="1823.50"></text></g><g><title>`0x7FFE2F04780F (1 samples, 0.15%)</title><rect x="4.3807%" y="1797" width="0.1511%" height="15" fill="rgb(238,207,15)" fg:x="29" fg:w="1"/><text x="4.6307%" y="1807.50"></text></g><g><title>`0x7FFE2F047936 (1 samples, 0.15%)</title><rect x="4.3807%" y="1781" width="0.1511%" height="15" fill="rgb(213,199,42)" fg:x="29" fg:w="1"/><text x="4.6307%" y="1791.50"></text></g><g><title>`0x7FFE2F0478F5 (1 samples, 0.15%)</title><rect x="4.3807%" y="1765" width="0.1511%" height="15" fill="rgb(235,201,11)" fg:x="29" fg:w="1"/><text x="4.6307%" y="1775.50"></text></g><g><title>`0x7FFE2F0B145B (1 samples, 0.15%)</title><rect x="4.3807%" y="1749" width="0.1511%" height="15" fill="rgb(207,46,11)" fg:x="29" fg:w="1"/><text x="4.6307%" y="1759.50"></text></g><g><title>`0x7FFE2F0B1FA5 (1 samples, 0.15%)</title><rect x="4.3807%" y="1733" width="0.1511%" height="15" fill="rgb(241,35,35)" fg:x="29" fg:w="1"/><text x="4.6307%" y="1743.50"></text></g><g><title>`0x7FFE2F0B135D (1 samples, 0.15%)</title><rect x="4.3807%" y="1717" width="0.1511%" height="15" fill="rgb(243,32,47)" fg:x="29" fg:w="1"/><text x="4.6307%" y="1727.50"></text></g><g><title>`0x7FFE2F1A3BB4 (1 samples, 0.15%)</title><rect x="4.3807%" y="1701" width="0.1511%" height="15" fill="rgb(247,202,23)" fg:x="29" fg:w="1"/><text x="4.6307%" y="1711.50"></text></g><g><title>`0x7FFE2C2003B2 (1 samples, 0.15%)</title><rect x="4.5317%" y="1717" width="0.1511%" height="15" fill="rgb(219,102,11)" fg:x="30" fg:w="1"/><text x="4.7817%" y="1727.50"></text></g><g><title>`0x7FFE2C200738 (1 samples, 0.15%)</title><rect x="4.5317%" y="1701" width="0.1511%" height="15" fill="rgb(243,110,44)" fg:x="30" fg:w="1"/><text x="4.7817%" y="1711.50"></text></g><g><title>`0x7FFE2C2196EF (1 samples, 0.15%)</title><rect x="4.5317%" y="1685" width="0.1511%" height="15" fill="rgb(222,74,54)" fg:x="30" fg:w="1"/><text x="4.7817%" y="1695.50"></text></g><g><title>`0x7FFE2C7EB475 (1 samples, 0.15%)</title><rect x="4.5317%" y="1669" width="0.1511%" height="15" fill="rgb(216,99,12)" fg:x="30" fg:w="1"/><text x="4.7817%" y="1679.50"></text></g><g><title>`0x7FFE2C89F864 (1 samples, 0.15%)</title><rect x="4.5317%" y="1653" width="0.1511%" height="15" fill="rgb(226,22,26)" fg:x="30" fg:w="1"/><text x="4.7817%" y="1663.50"></text></g><g><title>`0x7FFE2F1A35B4 (1 samples, 0.15%)</title><rect x="4.5317%" y="1637" width="0.1511%" height="15" fill="rgb(217,163,10)" fg:x="30" fg:w="1"/><text x="4.7817%" y="1647.50"></text></g><g><title>`0x7FFE2E415ADB (1 samples, 0.15%)</title><rect x="4.6828%" y="1717" width="0.1511%" height="15" fill="rgb(213,25,53)" fg:x="31" fg:w="1"/><text x="4.9328%" y="1727.50"></text></g><g><title>`0x7FFE2E415962 (1 samples, 0.15%)</title><rect x="4.6828%" y="1701" width="0.1511%" height="15" fill="rgb(252,105,26)" fg:x="31" fg:w="1"/><text x="4.9328%" y="1711.50"></text></g><g><title>`0x7FFE2C53E716 (1 samples, 0.15%)</title><rect x="4.6828%" y="1685" width="0.1511%" height="15" fill="rgb(220,39,43)" fg:x="31" fg:w="1"/><text x="4.9328%" y="1695.50"></text></g><g><title>`0x7FFE2E28F199 (1 samples, 0.15%)</title><rect x="4.6828%" y="1669" width="0.1511%" height="15" fill="rgb(229,68,48)" fg:x="31" fg:w="1"/><text x="4.9328%" y="1679.50"></text></g><g><title>`0x7FFE2E28E8A8 (1 samples, 0.15%)</title><rect x="4.6828%" y="1653" width="0.1511%" height="15" fill="rgb(252,8,32)" fg:x="31" fg:w="1"/><text x="4.9328%" y="1663.50"></text></g><g><title>`0x7FFE2E415AF6 (1 samples, 0.15%)</title><rect x="4.8338%" y="1717" width="0.1511%" height="15" fill="rgb(223,20,43)" fg:x="32" fg:w="1"/><text x="5.0838%" y="1727.50"></text></g><g><title>`0x7FFE2E27ED53 (1 samples, 0.15%)</title><rect x="4.8338%" y="1701" width="0.1511%" height="15" fill="rgb(229,81,49)" fg:x="32" fg:w="1"/><text x="5.0838%" y="1711.50"></text></g><g><title>`0x7FFE2E27F275 (1 samples, 0.15%)</title><rect x="4.8338%" y="1685" width="0.1511%" height="15" fill="rgb(236,28,36)" fg:x="32" fg:w="1"/><text x="5.0838%" y="1695.50"></text></g><g><title>`0x7FFE2F129B7C (1 samples, 0.15%)</title><rect x="4.8338%" y="1669" width="0.1511%" height="15" fill="rgb(249,185,26)" fg:x="32" fg:w="1"/><text x="5.0838%" y="1679.50"></text></g><g><title>`0x7FFE2F129CB2 (1 samples, 0.15%)</title><rect x="4.8338%" y="1653" width="0.1511%" height="15" fill="rgb(249,174,33)" fg:x="32" fg:w="1"/><text x="5.0838%" y="1663.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.15%)</title><rect x="4.8338%" y="1637" width="0.1511%" height="15" fill="rgb(233,201,37)" fg:x="32" fg:w="1"/><text x="5.0838%" y="1647.50"></text></g><g><title>`0x7FFE2F0486FA (4 samples, 0.60%)</title><rect x="4.5317%" y="1781" width="0.6042%" height="15" fill="rgb(221,78,26)" fg:x="30" fg:w="4"/><text x="4.7817%" y="1791.50"></text></g><g><title>`0x7FFE2F0B37AC (4 samples, 0.60%)</title><rect x="4.5317%" y="1765" width="0.6042%" height="15" fill="rgb(250,127,30)" fg:x="30" fg:w="4"/><text x="4.7817%" y="1775.50"></text></g><g><title>`0x7FFE2F0B483E (4 samples, 0.60%)</title><rect x="4.5317%" y="1749" width="0.6042%" height="15" fill="rgb(230,49,44)" fg:x="30" fg:w="4"/><text x="4.7817%" y="1759.50"></text></g><g><title>`0x7FFE2F1A0EDE (4 samples, 0.60%)</title><rect x="4.5317%" y="1733" width="0.6042%" height="15" fill="rgb(229,67,23)" fg:x="30" fg:w="4"/><text x="4.7817%" y="1743.50"></text></g><g><title>`0x7FFE2EB96366 (1 samples, 0.15%)</title><rect x="4.9849%" y="1717" width="0.1511%" height="15" fill="rgb(249,83,47)" fg:x="33" fg:w="1"/><text x="5.2349%" y="1727.50"></text></g><g><title>`0x7FFE2EB9198D (1 samples, 0.15%)</title><rect x="4.9849%" y="1701" width="0.1511%" height="15" fill="rgb(215,43,3)" fg:x="33" fg:w="1"/><text x="5.2349%" y="1711.50"></text></g><g><title>`0x7FFE2C810726 (1 samples, 0.15%)</title><rect x="4.9849%" y="1685" width="0.1511%" height="15" fill="rgb(238,154,13)" fg:x="33" fg:w="1"/><text x="5.2349%" y="1695.50"></text></g><g><title>`0x7FFE2F0896F7 (1 samples, 0.15%)</title><rect x="4.9849%" y="1669" width="0.1511%" height="15" fill="rgb(219,56,2)" fg:x="33" fg:w="1"/><text x="5.2349%" y="1679.50"></text></g><g><title>`0x7FFE2F0894E2 (1 samples, 0.15%)</title><rect x="4.9849%" y="1653" width="0.1511%" height="15" fill="rgb(233,0,4)" fg:x="33" fg:w="1"/><text x="5.2349%" y="1663.50"></text></g><g><title>`0x7FFE2F0B0BB0 (1 samples, 0.15%)</title><rect x="4.9849%" y="1637" width="0.1511%" height="15" fill="rgb(235,30,7)" fg:x="33" fg:w="1"/><text x="5.2349%" y="1647.50"></text></g><g><title>`0x7FFE2F0B0EE3 (1 samples, 0.15%)</title><rect x="4.9849%" y="1621" width="0.1511%" height="15" fill="rgb(250,79,13)" fg:x="33" fg:w="1"/><text x="5.2349%" y="1631.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="4.9849%" y="1605" width="0.1511%" height="15" fill="rgb(211,146,34)" fg:x="33" fg:w="1"/><text x="5.2349%" y="1615.50"></text></g><g><title>`0x7FFE2C41839B (1 samples, 0.15%)</title><rect x="5.1360%" y="1701" width="0.1511%" height="15" fill="rgb(228,22,38)" fg:x="34" fg:w="1"/><text x="5.3860%" y="1711.50"></text></g><g><title>`0x7FFE2C418222 (1 samples, 0.15%)</title><rect x="5.1360%" y="1685" width="0.1511%" height="15" fill="rgb(235,168,5)" fg:x="34" fg:w="1"/><text x="5.3860%" y="1695.50"></text></g><g><title>`0x7FFE2C53E716 (1 samples, 0.15%)</title><rect x="5.1360%" y="1669" width="0.1511%" height="15" fill="rgb(221,155,16)" fg:x="34" fg:w="1"/><text x="5.3860%" y="1679.50"></text></g><g><title>`0x7FFE2C40EE20 (1 samples, 0.15%)</title><rect x="5.1360%" y="1653" width="0.1511%" height="15" fill="rgb(215,215,53)" fg:x="34" fg:w="1"/><text x="5.3860%" y="1663.50"></text></g><g><title>`0x7FFE2C3F8DBA (1 samples, 0.15%)</title><rect x="5.1360%" y="1637" width="0.1511%" height="15" fill="rgb(223,4,10)" fg:x="34" fg:w="1"/><text x="5.3860%" y="1647.50"></text></g><g><title>`0x7FFE2C3F8887 (1 samples, 0.15%)</title><rect x="5.1360%" y="1621" width="0.1511%" height="15" fill="rgb(234,103,6)" fg:x="34" fg:w="1"/><text x="5.3860%" y="1631.50"></text></g><g><title>`0x7FFE2F054F46 (1 samples, 0.15%)</title><rect x="5.2870%" y="1653" width="0.1511%" height="15" fill="rgb(227,97,0)" fg:x="35" fg:w="1"/><text x="5.5370%" y="1663.50"></text></g><g><title>`0x7FFE2F0BB408 (1 samples, 0.15%)</title><rect x="5.2870%" y="1637" width="0.1511%" height="15" fill="rgb(234,150,53)" fg:x="35" fg:w="1"/><text x="5.5370%" y="1647.50"></text></g><g><title>`0x7FFE2DE9DC26 (2 samples, 0.30%)</title><rect x="5.2870%" y="1701" width="0.3021%" height="15" fill="rgb(228,201,54)" fg:x="35" fg:w="2"/><text x="5.5370%" y="1711.50"></text></g><g><title>`0x7FFE2DE6568C (2 samples, 0.30%)</title><rect x="5.2870%" y="1685" width="0.3021%" height="15" fill="rgb(222,22,37)" fg:x="35" fg:w="2"/><text x="5.5370%" y="1695.50"></text></g><g><title>`0x7FFE2C7FDD0F (2 samples, 0.30%)</title><rect x="5.2870%" y="1669" width="0.3021%" height="15" fill="rgb(237,53,32)" fg:x="35" fg:w="2"/><text x="5.5370%" y="1679.50"></text></g><g><title>`0x7FFE2F054FB0 (1 samples, 0.15%)</title><rect x="5.4381%" y="1653" width="0.1511%" height="15" fill="rgb(233,25,53)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1663.50"></text></g><g><title>`0x7FFE2F08A190 (1 samples, 0.15%)</title><rect x="5.4381%" y="1637" width="0.1511%" height="15" fill="rgb(210,40,34)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1647.50"></text></g><g><title>`0x7FFE2F08A584 (1 samples, 0.15%)</title><rect x="5.4381%" y="1621" width="0.1511%" height="15" fill="rgb(241,220,44)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1631.50"></text></g><g><title>`0x7FFE2F047883 (1 samples, 0.15%)</title><rect x="5.4381%" y="1605" width="0.1511%" height="15" fill="rgb(235,28,35)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1615.50"></text></g><g><title>`0x7FFE2F0486FA (1 samples, 0.15%)</title><rect x="5.4381%" y="1589" width="0.1511%" height="15" fill="rgb(210,56,17)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1599.50"></text></g><g><title>`0x7FFE2F0B37AC (1 samples, 0.15%)</title><rect x="5.4381%" y="1573" width="0.1511%" height="15" fill="rgb(224,130,29)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1583.50"></text></g><g><title>`0x7FFE2F0B483E (1 samples, 0.15%)</title><rect x="5.4381%" y="1557" width="0.1511%" height="15" fill="rgb(235,212,8)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1567.50"></text></g><g><title>`0x7FFE2F1A0EDE (1 samples, 0.15%)</title><rect x="5.4381%" y="1541" width="0.1511%" height="15" fill="rgb(223,33,50)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1551.50"></text></g><g><title>`0x7FFE2EA28374 (1 samples, 0.15%)</title><rect x="5.4381%" y="1525" width="0.1511%" height="15" fill="rgb(219,149,13)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1535.50"></text></g><g><title>`0x7FFE2DE64C45 (1 samples, 0.15%)</title><rect x="5.4381%" y="1509" width="0.1511%" height="15" fill="rgb(250,156,29)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1519.50"></text></g><g><title>`0x7FFE2DE65223 (1 samples, 0.15%)</title><rect x="5.4381%" y="1493" width="0.1511%" height="15" fill="rgb(216,193,19)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1503.50"></text></g><g><title>`0x7FFE2C8107F2 (1 samples, 0.15%)</title><rect x="5.4381%" y="1477" width="0.1511%" height="15" fill="rgb(216,135,14)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1487.50"></text></g><g><title>`0x7FFE2F047FC7 (1 samples, 0.15%)</title><rect x="5.4381%" y="1461" width="0.1511%" height="15" fill="rgb(241,47,5)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1471.50"></text></g><g><title>`0x7FFE2F053D3A (1 samples, 0.15%)</title><rect x="5.4381%" y="1445" width="0.1511%" height="15" fill="rgb(233,42,35)" fg:x="36" fg:w="1"/><text x="5.6881%" y="1455.50"></text></g><g><title>`0x7FFE2C6A3203 (1 samples, 0.15%)</title><rect x="5.5891%" y="1685" width="0.1511%" height="15" fill="rgb(231,13,6)" fg:x="37" fg:w="1"/><text x="5.8391%" y="1695.50"></text></g><g><title>`0x7FFE2C6B4B97 (1 samples, 0.15%)</title><rect x="5.5891%" y="1669" width="0.1511%" height="15" fill="rgb(207,181,40)" fg:x="37" fg:w="1"/><text x="5.8391%" y="1679.50"></text></g><g><title>`0x7FFE2C8D69FB (1 samples, 0.15%)</title><rect x="5.5891%" y="1653" width="0.1511%" height="15" fill="rgb(254,173,49)" fg:x="37" fg:w="1"/><text x="5.8391%" y="1663.50"></text></g><g><title>`0x7FFE2F076382 (1 samples, 0.15%)</title><rect x="5.5891%" y="1637" width="0.1511%" height="15" fill="rgb(221,1,38)" fg:x="37" fg:w="1"/><text x="5.8391%" y="1647.50"></text></g><g><title>`0x7FFE2F07682A (1 samples, 0.15%)</title><rect x="5.5891%" y="1621" width="0.1511%" height="15" fill="rgb(206,124,46)" fg:x="37" fg:w="1"/><text x="5.8391%" y="1631.50"></text></g><g><title>`0x7FFE2F0F8DEF (1 samples, 0.15%)</title><rect x="5.5891%" y="1605" width="0.1511%" height="15" fill="rgb(249,21,11)" fg:x="37" fg:w="1"/><text x="5.8391%" y="1615.50"></text></g><g><title>`0x7FFE2F1A35F4 (1 samples, 0.15%)</title><rect x="5.5891%" y="1589" width="0.1511%" height="15" fill="rgb(222,201,40)" fg:x="37" fg:w="1"/><text x="5.8391%" y="1599.50"></text></g><g><title>`0x7FFE2F0486FA (6 samples, 0.91%)</title><rect x="5.1360%" y="1765" width="0.9063%" height="15" fill="rgb(235,61,29)" fg:x="34" fg:w="6"/><text x="5.3860%" y="1775.50"></text></g><g><title>`0x7FFE2F0B37AC (6 samples, 0.91%)</title><rect x="5.1360%" y="1749" width="0.9063%" height="15" fill="rgb(219,207,3)" fg:x="34" fg:w="6"/><text x="5.3860%" y="1759.50"></text></g><g><title>`0x7FFE2F0B483E (6 samples, 0.91%)</title><rect x="5.1360%" y="1733" width="0.9063%" height="15" fill="rgb(222,56,46)" fg:x="34" fg:w="6"/><text x="5.3860%" y="1743.50"></text></g><g><title>`0x7FFE2F1A0EDE (6 samples, 0.91%)</title><rect x="5.1360%" y="1717" width="0.9063%" height="15" fill="rgb(239,76,54)" fg:x="34" fg:w="6"/><text x="5.3860%" y="1727.50"></text></g><g><title>`0x7FFE2DE9E1E1 (3 samples, 0.45%)</title><rect x="5.5891%" y="1701" width="0.4532%" height="15" fill="rgb(231,124,27)" fg:x="37" fg:w="3"/><text x="5.8391%" y="1711.50"></text></g><g><title>`0x7FFE2C6A321D (2 samples, 0.30%)</title><rect x="5.7402%" y="1685" width="0.3021%" height="15" fill="rgb(249,195,6)" fg:x="38" fg:w="2"/><text x="5.9902%" y="1695.50"></text></g><g><title>`0x7FFE2C6A6ED6 (2 samples, 0.30%)</title><rect x="5.7402%" y="1669" width="0.3021%" height="15" fill="rgb(237,174,47)" fg:x="38" fg:w="2"/><text x="5.9902%" y="1679.50"></text></g><g><title>`0x7FFE2C6A9FAC (2 samples, 0.30%)</title><rect x="5.7402%" y="1653" width="0.3021%" height="15" fill="rgb(206,201,31)" fg:x="38" fg:w="2"/><text x="5.9902%" y="1663.50"></text></g><g><title>`0x7FFE2C4A6FA4 (2 samples, 0.30%)</title><rect x="5.7402%" y="1637" width="0.3021%" height="15" fill="rgb(231,57,52)" fg:x="38" fg:w="2"/><text x="5.9902%" y="1647.50"></text></g><g><title>`0x7FFE2F1A7254 (1 samples, 0.15%)</title><rect x="5.8912%" y="1621" width="0.1511%" height="15" fill="rgb(248,177,22)" fg:x="39" fg:w="1"/><text x="6.1412%" y="1631.50"></text></g><g><title>`0x7FFE2DE82709 (1 samples, 0.15%)</title><rect x="5.8912%" y="1605" width="0.1511%" height="15" fill="rgb(215,211,37)" fg:x="39" fg:w="1"/><text x="6.1412%" y="1615.50"></text></g><g><title>`0x7FFE2DE827DD (1 samples, 0.15%)</title><rect x="5.8912%" y="1589" width="0.1511%" height="15" fill="rgb(241,128,51)" fg:x="39" fg:w="1"/><text x="6.1412%" y="1599.50"></text></g><g><title>`0x7FFE2E97A855 (1 samples, 0.15%)</title><rect x="5.8912%" y="1573" width="0.1511%" height="15" fill="rgb(227,165,31)" fg:x="39" fg:w="1"/><text x="6.1412%" y="1583.50"></text></g><g><title>`0x7FFE2E976022 (1 samples, 0.15%)</title><rect x="5.8912%" y="1557" width="0.1511%" height="15" fill="rgb(228,167,24)" fg:x="39" fg:w="1"/><text x="6.1412%" y="1567.50"></text></g><g><title>`0x7FFE2F06118D (1 samples, 0.15%)</title><rect x="5.8912%" y="1541" width="0.1511%" height="15" fill="rgb(228,143,12)" fg:x="39" fg:w="1"/><text x="6.1412%" y="1551.50"></text></g><g><title>`0x7FFE2F0632C5 (1 samples, 0.15%)</title><rect x="5.8912%" y="1525" width="0.1511%" height="15" fill="rgb(249,149,8)" fg:x="39" fg:w="1"/><text x="6.1412%" y="1535.50"></text></g><g><title>`0x7FFE2F063636 (1 samples, 0.15%)</title><rect x="5.8912%" y="1509" width="0.1511%" height="15" fill="rgb(243,35,44)" fg:x="39" fg:w="1"/><text x="6.1412%" y="1519.50"></text></g><g><title>`0x7FFE2F1A3C34 (1 samples, 0.15%)</title><rect x="5.8912%" y="1493" width="0.1511%" height="15" fill="rgb(246,89,9)" fg:x="39" fg:w="1"/><text x="6.1412%" y="1503.50"></text></g><g><title>`0x7FFE2F0B377B (1 samples, 0.15%)</title><rect x="6.0423%" y="1733" width="0.1511%" height="15" fill="rgb(233,213,13)" fg:x="40" fg:w="1"/><text x="6.2923%" y="1743.50"></text></g><g><title>`0x7FFE2F0B4465 (1 samples, 0.15%)</title><rect x="6.0423%" y="1717" width="0.1511%" height="15" fill="rgb(233,141,41)" fg:x="40" fg:w="1"/><text x="6.2923%" y="1727.50"></text></g><g><title>`0x7FFE2C4E6E26 (1 samples, 0.15%)</title><rect x="6.1934%" y="1685" width="0.1511%" height="15" fill="rgb(239,167,4)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1695.50"></text></g><g><title>`0x7FFE2C54AD56 (1 samples, 0.15%)</title><rect x="6.1934%" y="1669" width="0.1511%" height="15" fill="rgb(209,217,16)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1679.50"></text></g><g><title>`0x7FFE2C4DA776 (1 samples, 0.15%)</title><rect x="6.1934%" y="1653" width="0.1511%" height="15" fill="rgb(219,88,35)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1663.50"></text></g><g><title>`0x7FFE2C4DA906 (1 samples, 0.15%)</title><rect x="6.1934%" y="1637" width="0.1511%" height="15" fill="rgb(220,193,23)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1647.50"></text></g><g><title>`0x7FFE2C4DAE4A (1 samples, 0.15%)</title><rect x="6.1934%" y="1621" width="0.1511%" height="15" fill="rgb(230,90,52)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1631.50"></text></g><g><title>`0x7FFE2C4DAFD1 (1 samples, 0.15%)</title><rect x="6.1934%" y="1605" width="0.1511%" height="15" fill="rgb(252,106,19)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1615.50"></text></g><g><title>`0x7FFE2C4DA266 (1 samples, 0.15%)</title><rect x="6.1934%" y="1589" width="0.1511%" height="15" fill="rgb(206,74,20)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1599.50"></text></g><g><title>`0x7FFE2C7F657D (1 samples, 0.15%)</title><rect x="6.1934%" y="1573" width="0.1511%" height="15" fill="rgb(230,138,44)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1583.50"></text></g><g><title>`0x7FFE2C7F77DE (1 samples, 0.15%)</title><rect x="6.1934%" y="1557" width="0.1511%" height="15" fill="rgb(235,182,43)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1567.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="6.1934%" y="1541" width="0.1511%" height="15" fill="rgb(242,16,51)" fg:x="41" fg:w="1"/><text x="6.4434%" y="1551.50"></text></g><g><title>`0x7FFE2D829671 (1 samples, 0.15%)</title><rect x="6.3444%" y="1669" width="0.1511%" height="15" fill="rgb(248,9,4)" fg:x="42" fg:w="1"/><text x="6.5944%" y="1679.50"></text></g><g><title>`0x7FFE2D79C36D (1 samples, 0.15%)</title><rect x="6.3444%" y="1653" width="0.1511%" height="15" fill="rgb(210,31,22)" fg:x="42" fg:w="1"/><text x="6.5944%" y="1663.50"></text></g><g><title>`0x7FFE2D7813E5 (1 samples, 0.15%)</title><rect x="6.3444%" y="1637" width="0.1511%" height="15" fill="rgb(239,54,39)" fg:x="42" fg:w="1"/><text x="6.5944%" y="1647.50"></text></g><g><title>`0x7FFE2D7825EF (1 samples, 0.15%)</title><rect x="6.3444%" y="1621" width="0.1511%" height="15" fill="rgb(230,99,41)" fg:x="42" fg:w="1"/><text x="6.5944%" y="1631.50"></text></g><g><title>`0x7FFE2D78283F (1 samples, 0.15%)</title><rect x="6.3444%" y="1605" width="0.1511%" height="15" fill="rgb(253,106,12)" fg:x="42" fg:w="1"/><text x="6.5944%" y="1615.50"></text></g><g><title>`0x7FFE2D783049 (1 samples, 0.15%)</title><rect x="6.3444%" y="1589" width="0.1511%" height="15" fill="rgb(213,46,41)" fg:x="42" fg:w="1"/><text x="6.5944%" y="1599.50"></text></g><g><title>`0x7FFE2D783618 (1 samples, 0.15%)</title><rect x="6.3444%" y="1573" width="0.1511%" height="15" fill="rgb(215,133,35)" fg:x="42" fg:w="1"/><text x="6.5944%" y="1583.50"></text></g><g><title>`0x7FFE2C7E8A52 (1 samples, 0.15%)</title><rect x="6.3444%" y="1557" width="0.1511%" height="15" fill="rgb(213,28,5)" fg:x="42" fg:w="1"/><text x="6.5944%" y="1567.50"></text></g><g><title>`0x7FFE2F1A5684 (1 samples, 0.15%)</title><rect x="6.3444%" y="1541" width="0.1511%" height="15" fill="rgb(215,77,49)" fg:x="42" fg:w="1"/><text x="6.5944%" y="1551.50"></text></g><g><title>`0x7FFE2F114566 (14 samples, 2.11%)</title><rect x="4.5317%" y="1813" width="2.1148%" height="15" fill="rgb(248,100,22)" fg:x="30" fg:w="14"/><text x="4.7817%" y="1823.50">`..</text></g><g><title>`0x7FFE2F048726 (14 samples, 2.11%)</title><rect x="4.5317%" y="1797" width="2.1148%" height="15" fill="rgb(208,67,9)" fg:x="30" fg:w="14"/><text x="4.7817%" y="1807.50">`..</text></g><g><title>`0x7FFE2F048726 (10 samples, 1.51%)</title><rect x="5.1360%" y="1781" width="1.5106%" height="15" fill="rgb(219,133,21)" fg:x="34" fg:w="10"/><text x="5.3860%" y="1791.50"></text></g><g><title>`0x7FFE2F048726 (4 samples, 0.60%)</title><rect x="6.0423%" y="1765" width="0.6042%" height="15" fill="rgb(246,46,29)" fg:x="40" fg:w="4"/><text x="6.2923%" y="1775.50"></text></g><g><title>`0x7FFE2F0486FA (4 samples, 0.60%)</title><rect x="6.0423%" y="1749" width="0.6042%" height="15" fill="rgb(246,185,52)" fg:x="40" fg:w="4"/><text x="6.2923%" y="1759.50"></text></g><g><title>`0x7FFE2F0B37AC (3 samples, 0.45%)</title><rect x="6.1934%" y="1733" width="0.4532%" height="15" fill="rgb(252,136,11)" fg:x="41" fg:w="3"/><text x="6.4434%" y="1743.50"></text></g><g><title>`0x7FFE2F0B483E (3 samples, 0.45%)</title><rect x="6.1934%" y="1717" width="0.4532%" height="15" fill="rgb(219,138,53)" fg:x="41" fg:w="3"/><text x="6.4434%" y="1727.50"></text></g><g><title>`0x7FFE2F1A0EDE (3 samples, 0.45%)</title><rect x="6.1934%" y="1701" width="0.4532%" height="15" fill="rgb(211,51,23)" fg:x="41" fg:w="3"/><text x="6.4434%" y="1711.50"></text></g><g><title>`0x7FFE2D8D39B6 (2 samples, 0.30%)</title><rect x="6.3444%" y="1685" width="0.3021%" height="15" fill="rgb(247,221,28)" fg:x="42" fg:w="2"/><text x="6.5944%" y="1695.50"></text></g><g><title>`0x7FFE2D8297E7 (1 samples, 0.15%)</title><rect x="6.4955%" y="1669" width="0.1511%" height="15" fill="rgb(251,222,45)" fg:x="43" fg:w="1"/><text x="6.7455%" y="1679.50"></text></g><g><title>`0x7FFE2D82B01D (1 samples, 0.15%)</title><rect x="6.4955%" y="1653" width="0.1511%" height="15" fill="rgb(217,162,53)" fg:x="43" fg:w="1"/><text x="6.7455%" y="1663.50"></text></g><g><title>`0x7FFE2F085613 (1 samples, 0.15%)</title><rect x="6.4955%" y="1637" width="0.1511%" height="15" fill="rgb(229,93,14)" fg:x="43" fg:w="1"/><text x="6.7455%" y="1647.50"></text></g><g><title>`0x7FFE2F0857A1 (1 samples, 0.15%)</title><rect x="6.4955%" y="1621" width="0.1511%" height="15" fill="rgb(209,67,49)" fg:x="43" fg:w="1"/><text x="6.7455%" y="1631.50"></text></g><g><title>`0x7FFE2F085482 (1 samples, 0.15%)</title><rect x="6.4955%" y="1605" width="0.1511%" height="15" fill="rgb(213,87,29)" fg:x="43" fg:w="1"/><text x="6.7455%" y="1615.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.15%)</title><rect x="6.4955%" y="1589" width="0.1511%" height="15" fill="rgb(205,151,52)" fg:x="43" fg:w="1"/><text x="6.7455%" y="1599.50"></text></g><g><title>`0x7FFE2F042A2E (45 samples, 6.80%)</title><rect x="0.0000%" y="1861" width="6.7976%" height="15" fill="rgb(253,215,39)" fg:x="0" fg:w="45"/><text x="0.2500%" y="1871.50">`0x7FFE2F..</text></g><g><title>`0x7FFE2F1124DA (44 samples, 6.65%)</title><rect x="0.1511%" y="1845" width="6.6465%" height="15" fill="rgb(221,220,41)" fg:x="1" fg:w="44"/><text x="0.4011%" y="1855.50">`0x7FFE2F..</text></g><g><title>`0x7FFE2F1126F0 (37 samples, 5.59%)</title><rect x="1.2085%" y="1829" width="5.5891%" height="15" fill="rgb(218,133,21)" fg:x="8" fg:w="37"/><text x="1.4585%" y="1839.50">`0x7FFE..</text></g><g><title>`0x7FFE2F1145D5 (1 samples, 0.15%)</title><rect x="6.6465%" y="1813" width="0.1511%" height="15" fill="rgb(221,193,43)" fg:x="44" fg:w="1"/><text x="6.8965%" y="1823.50"></text></g><g><title>`0x7FFE2F138D28 (1 samples, 0.15%)</title><rect x="6.6465%" y="1797" width="0.1511%" height="15" fill="rgb(240,128,52)" fg:x="44" fg:w="1"/><text x="6.8965%" y="1807.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="6.6465%" y="1781" width="0.1511%" height="15" fill="rgb(253,114,12)" fg:x="44" fg:w="1"/><text x="6.8965%" y="1791.50"></text></g><g><title>`0x7FFE2F052E23 (1 samples, 0.15%)</title><rect x="6.7976%" y="1781" width="0.1511%" height="15" fill="rgb(215,223,47)" fg:x="45" fg:w="1"/><text x="7.0476%" y="1791.50"></text></g><g><title>`0x7FFE2F052E8A (1 samples, 0.15%)</title><rect x="6.9486%" y="1781" width="0.1511%" height="15" fill="rgb(248,225,23)" fg:x="46" fg:w="1"/><text x="7.1986%" y="1791.50"></text></g><g><title>`0x7FFE2F052EC6 (1 samples, 0.15%)</title><rect x="7.0997%" y="1781" width="0.1511%" height="15" fill="rgb(250,108,0)" fg:x="47" fg:w="1"/><text x="7.3497%" y="1791.50"></text></g><g><title>`0x7FFE2F052EC9 (4 samples, 0.60%)</title><rect x="7.2508%" y="1781" width="0.6042%" height="15" fill="rgb(228,208,7)" fg:x="48" fg:w="4"/><text x="7.5008%" y="1791.50"></text></g><g><title>`0x7FFE2F052FAB (1 samples, 0.15%)</title><rect x="7.8550%" y="1781" width="0.1511%" height="15" fill="rgb(244,45,10)" fg:x="52" fg:w="1"/><text x="8.1050%" y="1791.50"></text></g><g><title>`0x7FFE2F0BE4B1 (9 samples, 1.36%)</title><rect x="6.7976%" y="1829" width="1.3595%" height="15" fill="rgb(207,125,25)" fg:x="45" fg:w="9"/><text x="7.0476%" y="1839.50"></text></g><g><title>`0x7FFE2F0BD270 (9 samples, 1.36%)</title><rect x="6.7976%" y="1813" width="1.3595%" height="15" fill="rgb(210,195,18)" fg:x="45" fg:w="9"/><text x="7.0476%" y="1823.50"></text></g><g><title>`0x7FFE2F0AFDA1 (9 samples, 1.36%)</title><rect x="6.7976%" y="1797" width="1.3595%" height="15" fill="rgb(249,80,12)" fg:x="45" fg:w="9"/><text x="7.0476%" y="1807.50"></text></g><g><title>`0x7FFE2F0532E7 (1 samples, 0.15%)</title><rect x="8.0060%" y="1781" width="0.1511%" height="15" fill="rgb(221,65,9)" fg:x="53" fg:w="1"/><text x="8.2560%" y="1791.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.15%)</title><rect x="8.1571%" y="1637" width="0.1511%" height="15" fill="rgb(235,49,36)" fg:x="54" fg:w="1"/><text x="8.4071%" y="1647.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.15%)</title><rect x="8.1571%" y="1621" width="0.1511%" height="15" fill="rgb(225,32,20)" fg:x="54" fg:w="1"/><text x="8.4071%" y="1631.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.15%)</title><rect x="8.1571%" y="1605" width="0.1511%" height="15" fill="rgb(215,141,46)" fg:x="54" fg:w="1"/><text x="8.4071%" y="1615.50"></text></g><g><title>`0x7FFE2C570046 (2 samples, 0.30%)</title><rect x="8.1571%" y="1813" width="0.3021%" height="15" fill="rgb(250,160,47)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1823.50"></text></g><g><title>`0x7FFE2C55553D (2 samples, 0.30%)</title><rect x="8.1571%" y="1797" width="0.3021%" height="15" fill="rgb(216,222,40)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1807.50"></text></g><g><title>`0x7FFE2C4E423B (2 samples, 0.30%)</title><rect x="8.1571%" y="1781" width="0.3021%" height="15" fill="rgb(234,217,39)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1791.50"></text></g><g><title>`0x7FFE2C546225 (2 samples, 0.30%)</title><rect x="8.1571%" y="1765" width="0.3021%" height="15" fill="rgb(207,178,40)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1775.50"></text></g><g><title>`0x7FFE2C7FDD0F (2 samples, 0.30%)</title><rect x="8.1571%" y="1749" width="0.3021%" height="15" fill="rgb(221,136,13)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1759.50"></text></g><g><title>`0x7FFE2F054FB0 (2 samples, 0.30%)</title><rect x="8.1571%" y="1733" width="0.3021%" height="15" fill="rgb(249,199,10)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1743.50"></text></g><g><title>`0x7FFE2F08A190 (2 samples, 0.30%)</title><rect x="8.1571%" y="1717" width="0.3021%" height="15" fill="rgb(249,222,13)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1727.50"></text></g><g><title>`0x7FFE2F08A510 (2 samples, 0.30%)</title><rect x="8.1571%" y="1701" width="0.3021%" height="15" fill="rgb(244,185,38)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1711.50"></text></g><g><title>`0x7FFE2F0AFDB4 (2 samples, 0.30%)</title><rect x="8.1571%" y="1685" width="0.3021%" height="15" fill="rgb(236,202,9)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1695.50"></text></g><g><title>`0x7FFE2F0B039D (2 samples, 0.30%)</title><rect x="8.1571%" y="1669" width="0.3021%" height="15" fill="rgb(250,229,37)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1679.50"></text></g><g><title>`0x7FFE2F0B24CC (2 samples, 0.30%)</title><rect x="8.1571%" y="1653" width="0.3021%" height="15" fill="rgb(206,174,23)" fg:x="54" fg:w="2"/><text x="8.4071%" y="1663.50"></text></g><g><title>`0x7FFE2F0AD5A8 (1 samples, 0.15%)</title><rect x="8.3082%" y="1637" width="0.1511%" height="15" fill="rgb(211,33,43)" fg:x="55" fg:w="1"/><text x="8.5582%" y="1647.50"></text></g><g><title>`0x7FFE2F08BC32 (1 samples, 0.15%)</title><rect x="8.3082%" y="1621" width="0.1511%" height="15" fill="rgb(245,58,50)" fg:x="55" fg:w="1"/><text x="8.5582%" y="1631.50"></text></g><g><title>`0x7FFE2F052EC9 (1 samples, 0.15%)</title><rect x="8.3082%" y="1605" width="0.1511%" height="15" fill="rgb(244,68,36)" fg:x="55" fg:w="1"/><text x="8.5582%" y="1615.50"></text></g><g><title>`0x7FFE2A13437E (1 samples, 0.15%)</title><rect x="8.4592%" y="1717" width="0.1511%" height="15" fill="rgb(232,229,15)" fg:x="56" fg:w="1"/><text x="8.7092%" y="1727.50"></text></g><g><title>`0x7FFE2A134255 (1 samples, 0.15%)</title><rect x="8.4592%" y="1701" width="0.1511%" height="15" fill="rgb(254,30,23)" fg:x="56" fg:w="1"/><text x="8.7092%" y="1711.50"></text></g><g><title>`0x7FFE2C542F0C (1 samples, 0.15%)</title><rect x="8.4592%" y="1685" width="0.1511%" height="15" fill="rgb(235,160,14)" fg:x="56" fg:w="1"/><text x="8.7092%" y="1695.50"></text></g><g><title>`0x7FFE2C51B84D (1 samples, 0.15%)</title><rect x="8.4592%" y="1669" width="0.1511%" height="15" fill="rgb(212,155,44)" fg:x="56" fg:w="1"/><text x="8.7092%" y="1679.50"></text></g><g><title>`0x7FFE2C51B897 (1 samples, 0.15%)</title><rect x="8.4592%" y="1653" width="0.1511%" height="15" fill="rgb(226,2,50)" fg:x="56" fg:w="1"/><text x="8.7092%" y="1663.50"></text></g><g><title>`0x7FFE2C51BC5C (1 samples, 0.15%)</title><rect x="8.4592%" y="1637" width="0.1511%" height="15" fill="rgb(234,177,6)" fg:x="56" fg:w="1"/><text x="8.7092%" y="1647.50"></text></g><g><title>`0x7FFE2C0FF33E (1 samples, 0.15%)</title><rect x="8.6103%" y="1717" width="0.1511%" height="15" fill="rgb(217,24,9)" fg:x="57" fg:w="1"/><text x="8.8603%" y="1727.50"></text></g><g><title>`0x7FFE2C0FF215 (1 samples, 0.15%)</title><rect x="8.6103%" y="1701" width="0.1511%" height="15" fill="rgb(220,13,46)" fg:x="57" fg:w="1"/><text x="8.8603%" y="1711.50"></text></g><g><title>`0x7FFE2C542F0C (1 samples, 0.15%)</title><rect x="8.6103%" y="1685" width="0.1511%" height="15" fill="rgb(239,221,27)" fg:x="57" fg:w="1"/><text x="8.8603%" y="1695.50"></text></g><g><title>`0x7FFE2C51B84D (1 samples, 0.15%)</title><rect x="8.6103%" y="1669" width="0.1511%" height="15" fill="rgb(222,198,25)" fg:x="57" fg:w="1"/><text x="8.8603%" y="1679.50"></text></g><g><title>`0x7FFE2C51B897 (1 samples, 0.15%)</title><rect x="8.6103%" y="1653" width="0.1511%" height="15" fill="rgb(211,99,13)" fg:x="57" fg:w="1"/><text x="8.8603%" y="1663.50"></text></g><g><title>`0x7FFE2C51BC75 (1 samples, 0.15%)</title><rect x="8.6103%" y="1637" width="0.1511%" height="15" fill="rgb(232,111,31)" fg:x="57" fg:w="1"/><text x="8.8603%" y="1647.50"></text></g><g><title>`0x7FFE2C108009 (1 samples, 0.15%)</title><rect x="8.6103%" y="1621" width="0.1511%" height="15" fill="rgb(245,82,37)" fg:x="57" fg:w="1"/><text x="8.8603%" y="1631.50"></text></g><g><title>`0x7FFE2C0FEFA1 (1 samples, 0.15%)</title><rect x="8.6103%" y="1605" width="0.1511%" height="15" fill="rgb(227,149,46)" fg:x="57" fg:w="1"/><text x="8.8603%" y="1615.50"></text></g><g><title>`0x7FFE2C1011D0 (1 samples, 0.15%)</title><rect x="8.6103%" y="1589" width="0.1511%" height="15" fill="rgb(218,36,50)" fg:x="57" fg:w="1"/><text x="8.8603%" y="1599.50"></text></g><g><title>`0x7FFE2D8D3A0E (1 samples, 0.15%)</title><rect x="8.7613%" y="1717" width="0.1511%" height="15" fill="rgb(226,80,48)" fg:x="58" fg:w="1"/><text x="9.0113%" y="1727.50"></text></g><g><title>`0x7FFE2D8D38E5 (1 samples, 0.15%)</title><rect x="8.7613%" y="1701" width="0.1511%" height="15" fill="rgb(238,224,15)" fg:x="58" fg:w="1"/><text x="9.0113%" y="1711.50"></text></g><g><title>`0x7FFE2C542F0C (1 samples, 0.15%)</title><rect x="8.7613%" y="1685" width="0.1511%" height="15" fill="rgb(241,136,10)" fg:x="58" fg:w="1"/><text x="9.0113%" y="1695.50"></text></g><g><title>`0x7FFE2C51B84D (1 samples, 0.15%)</title><rect x="8.7613%" y="1669" width="0.1511%" height="15" fill="rgb(208,32,45)" fg:x="58" fg:w="1"/><text x="9.0113%" y="1679.50"></text></g><g><title>`0x7FFE2C51B897 (1 samples, 0.15%)</title><rect x="8.7613%" y="1653" width="0.1511%" height="15" fill="rgb(207,135,9)" fg:x="58" fg:w="1"/><text x="9.0113%" y="1663.50"></text></g><g><title>`0x7FFE2C51BC75 (1 samples, 0.15%)</title><rect x="8.7613%" y="1637" width="0.1511%" height="15" fill="rgb(206,86,44)" fg:x="58" fg:w="1"/><text x="9.0113%" y="1647.50"></text></g><g><title>`0x7FFE2D8772A0 (1 samples, 0.15%)</title><rect x="8.7613%" y="1621" width="0.1511%" height="15" fill="rgb(245,177,15)" fg:x="58" fg:w="1"/><text x="9.0113%" y="1631.50"></text></g><g><title>`0x7FFE2C570093 (4 samples, 0.60%)</title><rect x="8.4592%" y="1813" width="0.6042%" height="15" fill="rgb(206,64,50)" fg:x="56" fg:w="4"/><text x="8.7092%" y="1823.50"></text></g><g><title>`0x7FFE2DD518AB (4 samples, 0.60%)</title><rect x="8.4592%" y="1797" width="0.6042%" height="15" fill="rgb(234,36,40)" fg:x="56" fg:w="4"/><text x="8.7092%" y="1807.50"></text></g><g><title>`0x7FFE2F048EDE (4 samples, 0.60%)</title><rect x="8.4592%" y="1781" width="0.6042%" height="15" fill="rgb(213,64,8)" fg:x="56" fg:w="4"/><text x="8.7092%" y="1791.50"></text></g><g><title>`0x7FFE2F13DFFF (4 samples, 0.60%)</title><rect x="8.4592%" y="1765" width="0.6042%" height="15" fill="rgb(210,75,36)" fg:x="56" fg:w="4"/><text x="8.7092%" y="1775.50"></text></g><g><title>`0x7FFE2F0B483E (4 samples, 0.60%)</title><rect x="8.4592%" y="1749" width="0.6042%" height="15" fill="rgb(229,88,21)" fg:x="56" fg:w="4"/><text x="8.7092%" y="1759.50"></text></g><g><title>`0x7FFE2F1A0EDE (4 samples, 0.60%)</title><rect x="8.4592%" y="1733" width="0.6042%" height="15" fill="rgb(252,204,47)" fg:x="56" fg:w="4"/><text x="8.7092%" y="1743.50"></text></g><g><title>`0x7FFE2EB963BE (1 samples, 0.15%)</title><rect x="8.9124%" y="1717" width="0.1511%" height="15" fill="rgb(208,77,27)" fg:x="59" fg:w="1"/><text x="9.1624%" y="1727.50"></text></g><g><title>`0x7FFE2EB96295 (1 samples, 0.15%)</title><rect x="8.9124%" y="1701" width="0.1511%" height="15" fill="rgb(221,76,26)" fg:x="59" fg:w="1"/><text x="9.1624%" y="1711.50"></text></g><g><title>`0x7FFE2C542F0C (1 samples, 0.15%)</title><rect x="8.9124%" y="1685" width="0.1511%" height="15" fill="rgb(225,139,18)" fg:x="59" fg:w="1"/><text x="9.1624%" y="1695.50"></text></g><g><title>`0x7FFE2C51B84D (1 samples, 0.15%)</title><rect x="8.9124%" y="1669" width="0.1511%" height="15" fill="rgb(230,137,11)" fg:x="59" fg:w="1"/><text x="9.1624%" y="1679.50"></text></g><g><title>`0x7FFE2C51B897 (1 samples, 0.15%)</title><rect x="8.9124%" y="1653" width="0.1511%" height="15" fill="rgb(212,28,1)" fg:x="59" fg:w="1"/><text x="9.1624%" y="1663.50"></text></g><g><title>`0x7FFE2C51BC75 (1 samples, 0.15%)</title><rect x="8.9124%" y="1637" width="0.1511%" height="15" fill="rgb(248,164,17)" fg:x="59" fg:w="1"/><text x="9.1624%" y="1647.50"></text></g><g><title>`0x7FFE2EC27AE9 (1 samples, 0.15%)</title><rect x="8.9124%" y="1621" width="0.1511%" height="15" fill="rgb(222,171,42)" fg:x="59" fg:w="1"/><text x="9.1624%" y="1631.50"></text></g><g><title>`0x7FFE2EB73CEE (1 samples, 0.15%)</title><rect x="8.9124%" y="1605" width="0.1511%" height="15" fill="rgb(243,84,45)" fg:x="59" fg:w="1"/><text x="9.1624%" y="1615.50"></text></g><g><title>`0x7FFE2EB8F340 (1 samples, 0.15%)</title><rect x="8.9124%" y="1589" width="0.1511%" height="15" fill="rgb(252,49,23)" fg:x="59" fg:w="1"/><text x="9.1624%" y="1599.50"></text></g><g><title>fuzzit.exe`clap_builder::derive::Parser::parse (1 samples, 0.15%)</title><rect x="9.0634%" y="1637" width="0.1511%" height="15" fill="rgb(215,19,7)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1647.50"></text></g><g><title>fuzzit.exe`fuzzit::impl$2::from_arg_matches_mut (1 samples, 0.15%)</title><rect x="9.0634%" y="1621" width="0.1511%" height="15" fill="rgb(238,81,41)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1631.50"></text></g><g><title>fuzzit.exe`clap_builder::parser::matches::arg_matches::ArgMatches::remove_one(ref$ (1 samples, 0.15%)</title><rect x="9.0634%" y="1605" width="0.1511%" height="15" fill="rgb(210,199,37)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1615.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::command::Command::get_matches_from&lt;std::env::ArgsOs,std::ffi::os_str::OsString&gt; (1 samples, 0.15%)</title><rect x="9.0634%" y="1589" width="0.1511%" height="15" fill="rgb(244,192,49)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1599.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.15%)</title><rect x="9.0634%" y="1573" width="0.1511%" height="15" fill="rgb(226,211,11)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1583.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="9.0634%" y="1557" width="0.1511%" height="15" fill="rgb(236,162,54)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1567.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.15%)</title><rect x="9.0634%" y="1541" width="0.1511%" height="15" fill="rgb(220,229,9)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1551.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (1 samples, 0.15%)</title><rect x="9.0634%" y="1525" width="0.1511%" height="15" fill="rgb(250,87,22)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1535.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::command::Command::_do_parse (1 samples, 0.15%)</title><rect x="9.0634%" y="1509" width="0.1511%" height="15" fill="rgb(239,43,17)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1519.50"></text></g><g><title>fuzzit.exe`clap_builder::parser::arg_matcher::ArgMatcher::new (1 samples, 0.15%)</title><rect x="9.0634%" y="1493" width="0.1511%" height="15" fill="rgb(231,177,25)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1503.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::command::Command::_build_self (1 samples, 0.15%)</title><rect x="9.0634%" y="1477" width="0.1511%" height="15" fill="rgb(219,179,1)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1487.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::command::Command::_check_help_and_version (1 samples, 0.15%)</title><rect x="9.0634%" y="1461" width="0.1511%" height="15" fill="rgb(238,219,53)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1471.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::command::Command::long_help_exists_ (1 samples, 0.15%)</title><rect x="9.0634%" y="1445" width="0.1511%" height="15" fill="rgb(232,167,36)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1455.50"></text></g><g><title>fuzzit.exe`core::slice::iter::impl$182::any(core::slice::iter::Iter (1 samples, 0.15%)</title><rect x="9.0634%" y="1429" width="0.1511%" height="15" fill="rgb(244,19,51)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1439.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::command::impl$7::long_help_exists_::closure$0 (1 samples, 0.15%)</title><rect x="9.0634%" y="1413" width="0.1511%" height="15" fill="rgb(224,6,22)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1423.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::arg::Arg::get_possible_values (1 samples, 0.15%)</title><rect x="9.0634%" y="1397" width="0.1511%" height="15" fill="rgb(224,145,5)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1407.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::value_parser::ValueParser::possible_values (1 samples, 0.15%)</title><rect x="9.0634%" y="1381" width="0.1511%" height="15" fill="rgb(234,130,49)" fg:x="60" fg:w="1"/><text x="9.3134%" y="1391.50"></text></g><g><title>`0x7FFE29DF3090 (1 samples, 0.15%)</title><rect x="9.2145%" y="1557" width="0.1511%" height="15" fill="rgb(254,6,2)" fg:x="61" fg:w="1"/><text x="9.4645%" y="1567.50"></text></g><g><title>`0x7FFE29DF3383 (1 samples, 0.15%)</title><rect x="9.2145%" y="1541" width="0.1511%" height="15" fill="rgb(208,96,46)" fg:x="61" fg:w="1"/><text x="9.4645%" y="1551.50"></text></g><g><title>`0x7FFE2A1D45B3 (1 samples, 0.15%)</title><rect x="9.2145%" y="1525" width="0.1511%" height="15" fill="rgb(239,3,39)" fg:x="61" fg:w="1"/><text x="9.4645%" y="1535.50"></text></g><g><title>`0x7FFE2A1CFE1E (1 samples, 0.15%)</title><rect x="9.2145%" y="1509" width="0.1511%" height="15" fill="rgb(233,210,1)" fg:x="61" fg:w="1"/><text x="9.4645%" y="1519.50"></text></g><g><title>`0x7FFE2A1D05B7 (1 samples, 0.15%)</title><rect x="9.2145%" y="1493" width="0.1511%" height="15" fill="rgb(244,137,37)" fg:x="61" fg:w="1"/><text x="9.4645%" y="1503.50"></text></g><g><title>`0x7FFE2A1D462B (1 samples, 0.15%)</title><rect x="9.2145%" y="1477" width="0.1511%" height="15" fill="rgb(240,136,2)" fg:x="61" fg:w="1"/><text x="9.4645%" y="1487.50"></text></g><g><title>`0x7FFE2A1D0346 (1 samples, 0.15%)</title><rect x="9.2145%" y="1461" width="0.1511%" height="15" fill="rgb(239,18,37)" fg:x="61" fg:w="1"/><text x="9.4645%" y="1471.50"></text></g><g><title>`0x7FFE2A1D08BC (1 samples, 0.15%)</title><rect x="9.2145%" y="1445" width="0.1511%" height="15" fill="rgb(218,185,22)" fg:x="61" fg:w="1"/><text x="9.4645%" y="1455.50"></text></g><g><title>`0x7FFE29DF2210 (1 samples, 0.15%)</title><rect x="9.3656%" y="1525" width="0.1511%" height="15" fill="rgb(225,218,4)" fg:x="62" fg:w="1"/><text x="9.6156%" y="1535.50"></text></g><g><title>`0x7FFE2A02DE44 (1 samples, 0.15%)</title><rect x="9.3656%" y="1509" width="0.1511%" height="15" fill="rgb(230,182,32)" fg:x="62" fg:w="1"/><text x="9.6156%" y="1519.50"></text></g><g><title>`0x7FFE2F08A4F2 (1 samples, 0.15%)</title><rect x="9.5166%" y="1429" width="0.1511%" height="15" fill="rgb(242,56,43)" fg:x="63" fg:w="1"/><text x="9.7666%" y="1439.50"></text></g><g><title>`0x7FFE2F08EF05 (1 samples, 0.15%)</title><rect x="9.5166%" y="1413" width="0.1511%" height="15" fill="rgb(233,99,24)" fg:x="63" fg:w="1"/><text x="9.7666%" y="1423.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.15%)</title><rect x="9.5166%" y="1397" width="0.1511%" height="15" fill="rgb(234,209,42)" fg:x="63" fg:w="1"/><text x="9.7666%" y="1407.50"></text></g><g><title>`0x7FFE2F0AD64C (1 samples, 0.15%)</title><rect x="9.5166%" y="1381" width="0.1511%" height="15" fill="rgb(227,7,12)" fg:x="63" fg:w="1"/><text x="9.7666%" y="1391.50"></text></g><g><title>`0x7FFE2F0AE175 (1 samples, 0.15%)</title><rect x="9.5166%" y="1365" width="0.1511%" height="15" fill="rgb(245,203,43)" fg:x="63" fg:w="1"/><text x="9.7666%" y="1375.50"></text></g><g><title>`0x7FFE2F06140F (1 samples, 0.15%)</title><rect x="9.5166%" y="1349" width="0.1511%" height="15" fill="rgb(238,205,33)" fg:x="63" fg:w="1"/><text x="9.7666%" y="1359.50"></text></g><g><title>`0x7FFE2F1A3C34 (1 samples, 0.15%)</title><rect x="9.5166%" y="1333" width="0.1511%" height="15" fill="rgb(231,56,7)" fg:x="63" fg:w="1"/><text x="9.7666%" y="1343.50"></text></g><g><title>`0x7FFE29DF2343 (2 samples, 0.30%)</title><rect x="9.5166%" y="1525" width="0.3021%" height="15" fill="rgb(244,186,29)" fg:x="63" fg:w="2"/><text x="9.7666%" y="1535.50"></text></g><g><title>`0x7FFE2A1357C1 (2 samples, 0.30%)</title><rect x="9.5166%" y="1509" width="0.3021%" height="15" fill="rgb(234,111,31)" fg:x="63" fg:w="2"/><text x="9.7666%" y="1519.50"></text></g><g><title>`0x7FFE2A0333F2 (2 samples, 0.30%)</title><rect x="9.5166%" y="1493" width="0.3021%" height="15" fill="rgb(241,149,10)" fg:x="63" fg:w="2"/><text x="9.7666%" y="1503.50"></text></g><g><title>`0x7FFE2F06118D (2 samples, 0.30%)</title><rect x="9.5166%" y="1477" width="0.3021%" height="15" fill="rgb(249,206,44)" fg:x="63" fg:w="2"/><text x="9.7666%" y="1487.50"></text></g><g><title>`0x7FFE2F063013 (2 samples, 0.30%)</title><rect x="9.5166%" y="1461" width="0.3021%" height="15" fill="rgb(251,153,30)" fg:x="63" fg:w="2"/><text x="9.7666%" y="1471.50"></text></g><g><title>`0x7FFE2F08AB06 (2 samples, 0.30%)</title><rect x="9.5166%" y="1445" width="0.3021%" height="15" fill="rgb(239,152,38)" fg:x="63" fg:w="2"/><text x="9.7666%" y="1455.50"></text></g><g><title>`0x7FFE2F08A584 (1 samples, 0.15%)</title><rect x="9.6677%" y="1429" width="0.1511%" height="15" fill="rgb(249,139,47)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1439.50"></text></g><g><title>`0x7FFE2F047883 (1 samples, 0.15%)</title><rect x="9.6677%" y="1413" width="0.1511%" height="15" fill="rgb(244,64,35)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1423.50"></text></g><g><title>`0x7FFE2F0486FA (1 samples, 0.15%)</title><rect x="9.6677%" y="1397" width="0.1511%" height="15" fill="rgb(216,46,15)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1407.50"></text></g><g><title>`0x7FFE2F0B37AC (1 samples, 0.15%)</title><rect x="9.6677%" y="1381" width="0.1511%" height="15" fill="rgb(250,74,19)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1391.50"></text></g><g><title>`0x7FFE2F0B483E (1 samples, 0.15%)</title><rect x="9.6677%" y="1365" width="0.1511%" height="15" fill="rgb(249,42,33)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1375.50"></text></g><g><title>`0x7FFE2F1A0EDE (1 samples, 0.15%)</title><rect x="9.6677%" y="1349" width="0.1511%" height="15" fill="rgb(242,149,17)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1359.50"></text></g><g><title>`0x7FFE2D4D3306 (1 samples, 0.15%)</title><rect x="9.6677%" y="1333" width="0.1511%" height="15" fill="rgb(244,29,21)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1343.50"></text></g><g><title>`0x7FFE2D494FAB (1 samples, 0.15%)</title><rect x="9.6677%" y="1317" width="0.1511%" height="15" fill="rgb(220,130,37)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1327.50"></text></g><g><title>`0x7FFE2D4950BF (1 samples, 0.15%)</title><rect x="9.6677%" y="1301" width="0.1511%" height="15" fill="rgb(211,67,2)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1311.50"></text></g><g><title>`0x7FFE2D4950F3 (1 samples, 0.15%)</title><rect x="9.6677%" y="1285" width="0.1511%" height="15" fill="rgb(235,68,52)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1295.50"></text></g><g><title>`0x7FFE2D49514C (1 samples, 0.15%)</title><rect x="9.6677%" y="1269" width="0.1511%" height="15" fill="rgb(246,142,3)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1279.50"></text></g><g><title>`0x7FFE2D49522D (1 samples, 0.15%)</title><rect x="9.6677%" y="1253" width="0.1511%" height="15" fill="rgb(241,25,7)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1263.50"></text></g><g><title>`0x7FFE2D495275 (1 samples, 0.15%)</title><rect x="9.6677%" y="1237" width="0.1511%" height="15" fill="rgb(242,119,39)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1247.50"></text></g><g><title>`0x7FFE2D4952F4 (1 samples, 0.15%)</title><rect x="9.6677%" y="1221" width="0.1511%" height="15" fill="rgb(241,98,45)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1231.50"></text></g><g><title>`0x7FFE2F085613 (1 samples, 0.15%)</title><rect x="9.6677%" y="1205" width="0.1511%" height="15" fill="rgb(254,28,30)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1215.50"></text></g><g><title>`0x7FFE2F0857A1 (1 samples, 0.15%)</title><rect x="9.6677%" y="1189" width="0.1511%" height="15" fill="rgb(241,142,54)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1199.50"></text></g><g><title>`0x7FFE2F085482 (1 samples, 0.15%)</title><rect x="9.6677%" y="1173" width="0.1511%" height="15" fill="rgb(222,85,15)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1183.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.15%)</title><rect x="9.6677%" y="1157" width="0.1511%" height="15" fill="rgb(210,85,47)" fg:x="64" fg:w="1"/><text x="9.9177%" y="1167.50"></text></g><g><title>`0x7FFE29EDCCC9 (1 samples, 0.15%)</title><rect x="9.8187%" y="1461" width="0.1511%" height="15" fill="rgb(224,206,25)" fg:x="65" fg:w="1"/><text x="10.0687%" y="1471.50"></text></g><g><title>`0x7FFE29FEE6D0 (1 samples, 0.15%)</title><rect x="9.8187%" y="1445" width="0.1511%" height="15" fill="rgb(243,201,19)" fg:x="65" fg:w="1"/><text x="10.0687%" y="1455.50"></text></g><g><title>`0x7FFE2A135664 (1 samples, 0.15%)</title><rect x="9.8187%" y="1429" width="0.1511%" height="15" fill="rgb(236,59,4)" fg:x="65" fg:w="1"/><text x="10.0687%" y="1439.50"></text></g><g><title>`0x7FFE2A0333F2 (1 samples, 0.15%)</title><rect x="9.8187%" y="1413" width="0.1511%" height="15" fill="rgb(254,179,45)" fg:x="65" fg:w="1"/><text x="10.0687%" y="1423.50"></text></g><g><title>`0x7FFE2F06118D (1 samples, 0.15%)</title><rect x="9.8187%" y="1397" width="0.1511%" height="15" fill="rgb(226,14,10)" fg:x="65" fg:w="1"/><text x="10.0687%" y="1407.50"></text></g><g><title>`0x7FFE2F0631CC (1 samples, 0.15%)</title><rect x="9.8187%" y="1381" width="0.1511%" height="15" fill="rgb(244,27,41)" fg:x="65" fg:w="1"/><text x="10.0687%" y="1391.50"></text></g><g><title>`0x7FFE2F053D40 (1 samples, 0.15%)</title><rect x="9.8187%" y="1365" width="0.1511%" height="15" fill="rgb(235,35,32)" fg:x="65" fg:w="1"/><text x="10.0687%" y="1375.50"></text></g><g><title>`0x7FFE29EDC94F (2 samples, 0.30%)</title><rect x="9.8187%" y="1493" width="0.3021%" height="15" fill="rgb(218,68,31)" fg:x="65" fg:w="2"/><text x="10.0687%" y="1503.50"></text></g><g><title>`0x7FFE29EDC561 (2 samples, 0.30%)</title><rect x="9.8187%" y="1477" width="0.3021%" height="15" fill="rgb(207,120,37)" fg:x="65" fg:w="2"/><text x="10.0687%" y="1487.50"></text></g><g><title>`0x7FFE29EDD111 (1 samples, 0.15%)</title><rect x="9.9698%" y="1461" width="0.1511%" height="15" fill="rgb(227,98,0)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1471.50"></text></g><g><title>`0x7FFE2A13A9BA (1 samples, 0.15%)</title><rect x="9.9698%" y="1445" width="0.1511%" height="15" fill="rgb(207,7,3)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1455.50"></text></g><g><title>`0x7FFE2A0333F2 (1 samples, 0.15%)</title><rect x="9.9698%" y="1429" width="0.1511%" height="15" fill="rgb(206,98,19)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1439.50"></text></g><g><title>`0x7FFE2F06118D (1 samples, 0.15%)</title><rect x="9.9698%" y="1413" width="0.1511%" height="15" fill="rgb(217,5,26)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1423.50"></text></g><g><title>`0x7FFE2F063013 (1 samples, 0.15%)</title><rect x="9.9698%" y="1397" width="0.1511%" height="15" fill="rgb(235,190,38)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1407.50"></text></g><g><title>`0x7FFE2F08AB06 (1 samples, 0.15%)</title><rect x="9.9698%" y="1381" width="0.1511%" height="15" fill="rgb(247,86,24)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1391.50"></text></g><g><title>`0x7FFE2F08A4F2 (1 samples, 0.15%)</title><rect x="9.9698%" y="1365" width="0.1511%" height="15" fill="rgb(205,101,16)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1375.50"></text></g><g><title>`0x7FFE2F08EF05 (1 samples, 0.15%)</title><rect x="9.9698%" y="1349" width="0.1511%" height="15" fill="rgb(246,168,33)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1359.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.15%)</title><rect x="9.9698%" y="1333" width="0.1511%" height="15" fill="rgb(231,114,1)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1343.50"></text></g><g><title>`0x7FFE2F0AD5A8 (1 samples, 0.15%)</title><rect x="9.9698%" y="1317" width="0.1511%" height="15" fill="rgb(207,184,53)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1327.50"></text></g><g><title>`0x7FFE2F08BABE (1 samples, 0.15%)</title><rect x="9.9698%" y="1301" width="0.1511%" height="15" fill="rgb(224,95,51)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1311.50"></text></g><g><title>`0x7FFE2F08D66D (1 samples, 0.15%)</title><rect x="9.9698%" y="1285" width="0.1511%" height="15" fill="rgb(212,188,45)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1295.50"></text></g><g><title>`0x7FFE2F087B80 (1 samples, 0.15%)</title><rect x="9.9698%" y="1269" width="0.1511%" height="15" fill="rgb(223,154,38)" fg:x="66" fg:w="1"/><text x="10.2198%" y="1279.50"></text></g><g><title>`0x7FFE29E6C4FD (3 samples, 0.45%)</title><rect x="9.8187%" y="1509" width="0.4532%" height="15" fill="rgb(251,22,52)" fg:x="65" fg:w="3"/><text x="10.0687%" y="1519.50"></text></g><g><title>`0x7FFE29EDC9BB (1 samples, 0.15%)</title><rect x="10.1208%" y="1493" width="0.1511%" height="15" fill="rgb(229,209,22)" fg:x="67" fg:w="1"/><text x="10.3708%" y="1503.50"></text></g><g><title>`0x7FFE29FD2BE0 (1 samples, 0.15%)</title><rect x="10.1208%" y="1477" width="0.1511%" height="15" fill="rgb(234,138,34)" fg:x="67" fg:w="1"/><text x="10.3708%" y="1487.50"></text></g><g><title>`0x7FFE29DF30C5 (7 samples, 1.06%)</title><rect x="9.3656%" y="1557" width="1.0574%" height="15" fill="rgb(212,95,11)" fg:x="62" fg:w="7"/><text x="9.6156%" y="1567.50"></text></g><g><title>`0x7FFE29DF1830 (7 samples, 1.06%)</title><rect x="9.3656%" y="1541" width="1.0574%" height="15" fill="rgb(240,179,47)" fg:x="62" fg:w="7"/><text x="9.6156%" y="1551.50"></text></g><g><title>`0x7FFE29DF26F2 (4 samples, 0.60%)</title><rect x="9.8187%" y="1525" width="0.6042%" height="15" fill="rgb(240,163,11)" fg:x="65" fg:w="4"/><text x="10.0687%" y="1535.50"></text></g><g><title>`0x7FFE29E6C897 (1 samples, 0.15%)</title><rect x="10.2719%" y="1509" width="0.1511%" height="15" fill="rgb(236,37,12)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1519.50"></text></g><g><title>`0x7FFE29F62783 (1 samples, 0.15%)</title><rect x="10.2719%" y="1493" width="0.1511%" height="15" fill="rgb(232,164,16)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1503.50"></text></g><g><title>`0x7FFE29F60F73 (1 samples, 0.15%)</title><rect x="10.2719%" y="1477" width="0.1511%" height="15" fill="rgb(244,205,15)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1487.50"></text></g><g><title>`0x7FFE2A138E7E (1 samples, 0.15%)</title><rect x="10.2719%" y="1461" width="0.1511%" height="15" fill="rgb(223,117,47)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1471.50"></text></g><g><title>`0x7FFE2A0333F2 (1 samples, 0.15%)</title><rect x="10.2719%" y="1445" width="0.1511%" height="15" fill="rgb(244,107,35)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1455.50"></text></g><g><title>`0x7FFE2F06118D (1 samples, 0.15%)</title><rect x="10.2719%" y="1429" width="0.1511%" height="15" fill="rgb(205,140,8)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1439.50"></text></g><g><title>`0x7FFE2F063013 (1 samples, 0.15%)</title><rect x="10.2719%" y="1413" width="0.1511%" height="15" fill="rgb(228,84,46)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1423.50"></text></g><g><title>`0x7FFE2F08AB06 (1 samples, 0.15%)</title><rect x="10.2719%" y="1397" width="0.1511%" height="15" fill="rgb(254,188,9)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1407.50"></text></g><g><title>`0x7FFE2F08A510 (1 samples, 0.15%)</title><rect x="10.2719%" y="1381" width="0.1511%" height="15" fill="rgb(206,112,54)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1391.50"></text></g><g><title>`0x7FFE2F0AFCDA (1 samples, 0.15%)</title><rect x="10.2719%" y="1365" width="0.1511%" height="15" fill="rgb(216,84,49)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1375.50"></text></g><g><title>`0x7FFE2F0B00AC (1 samples, 0.15%)</title><rect x="10.2719%" y="1349" width="0.1511%" height="15" fill="rgb(214,194,35)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1359.50"></text></g><g><title>`0x7FFE2F0B24CC (1 samples, 0.15%)</title><rect x="10.2719%" y="1333" width="0.1511%" height="15" fill="rgb(249,28,3)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1343.50"></text></g><g><title>`0x7FFE2F0AD64C (1 samples, 0.15%)</title><rect x="10.2719%" y="1317" width="0.1511%" height="15" fill="rgb(222,56,52)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1327.50"></text></g><g><title>`0x7FFE2F0AE175 (1 samples, 0.15%)</title><rect x="10.2719%" y="1301" width="0.1511%" height="15" fill="rgb(245,217,50)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1311.50"></text></g><g><title>`0x7FFE2F06140F (1 samples, 0.15%)</title><rect x="10.2719%" y="1285" width="0.1511%" height="15" fill="rgb(213,201,24)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1295.50"></text></g><g><title>`0x7FFE2F1A3C34 (1 samples, 0.15%)</title><rect x="10.2719%" y="1269" width="0.1511%" height="15" fill="rgb(248,116,28)" fg:x="68" fg:w="1"/><text x="10.5219%" y="1279.50"></text></g><g><title>`0x7FFE2F0B032F (1 samples, 0.15%)</title><rect x="10.4230%" y="1445" width="0.1511%" height="15" fill="rgb(219,72,43)" fg:x="69" fg:w="1"/><text x="10.6730%" y="1455.50"></text></g><g><title>`0x7FFE2F0B0BB0 (1 samples, 0.15%)</title><rect x="10.4230%" y="1429" width="0.1511%" height="15" fill="rgb(209,138,14)" fg:x="69" fg:w="1"/><text x="10.6730%" y="1439.50"></text></g><g><title>`0x7FFE2F0B0EE3 (1 samples, 0.15%)</title><rect x="10.4230%" y="1413" width="0.1511%" height="15" fill="rgb(222,18,33)" fg:x="69" fg:w="1"/><text x="10.6730%" y="1423.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="10.4230%" y="1397" width="0.1511%" height="15" fill="rgb(213,199,7)" fg:x="69" fg:w="1"/><text x="10.6730%" y="1407.50"></text></g><g><title>`0x7FFE2F08D70F (1 samples, 0.15%)</title><rect x="10.5740%" y="1381" width="0.1511%" height="15" fill="rgb(250,110,10)" fg:x="70" fg:w="1"/><text x="10.8240%" y="1391.50"></text></g><g><title>`0x7FFE2F08A510 (3 samples, 0.45%)</title><rect x="10.4230%" y="1477" width="0.4532%" height="15" fill="rgb(248,123,6)" fg:x="69" fg:w="3"/><text x="10.6730%" y="1487.50"></text></g><g><title>`0x7FFE2F0AFDB4 (3 samples, 0.45%)</title><rect x="10.4230%" y="1461" width="0.4532%" height="15" fill="rgb(206,91,31)" fg:x="69" fg:w="3"/><text x="10.6730%" y="1471.50"></text></g><g><title>`0x7FFE2F0B039D (2 samples, 0.30%)</title><rect x="10.5740%" y="1445" width="0.3021%" height="15" fill="rgb(211,154,13)" fg:x="70" fg:w="2"/><text x="10.8240%" y="1455.50"></text></g><g><title>`0x7FFE2F0B24CC (2 samples, 0.30%)</title><rect x="10.5740%" y="1429" width="0.3021%" height="15" fill="rgb(225,148,7)" fg:x="70" fg:w="2"/><text x="10.8240%" y="1439.50"></text></g><g><title>`0x7FFE2F0AD5A8 (2 samples, 0.30%)</title><rect x="10.5740%" y="1413" width="0.3021%" height="15" fill="rgb(220,160,43)" fg:x="70" fg:w="2"/><text x="10.8240%" y="1423.50"></text></g><g><title>`0x7FFE2F08BABE (2 samples, 0.30%)</title><rect x="10.5740%" y="1397" width="0.3021%" height="15" fill="rgb(213,52,39)" fg:x="70" fg:w="2"/><text x="10.8240%" y="1407.50"></text></g><g><title>`0x7FFE2F08D8EE (1 samples, 0.15%)</title><rect x="10.7251%" y="1381" width="0.1511%" height="15" fill="rgb(243,137,7)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1391.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.15%)</title><rect x="10.7251%" y="1365" width="0.1511%" height="15" fill="rgb(230,79,13)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1375.50"></text></g><g><title>`0x7FFE2F0AD5A8 (1 samples, 0.15%)</title><rect x="10.7251%" y="1349" width="0.1511%" height="15" fill="rgb(247,105,23)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1359.50"></text></g><g><title>`0x7FFE2F08BABE (1 samples, 0.15%)</title><rect x="10.7251%" y="1333" width="0.1511%" height="15" fill="rgb(223,179,41)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1343.50"></text></g><g><title>`0x7FFE2F08D8EE (1 samples, 0.15%)</title><rect x="10.7251%" y="1317" width="0.1511%" height="15" fill="rgb(218,9,34)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1327.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.15%)</title><rect x="10.7251%" y="1301" width="0.1511%" height="15" fill="rgb(222,106,8)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1311.50"></text></g><g><title>`0x7FFE2F0AD64C (1 samples, 0.15%)</title><rect x="10.7251%" y="1285" width="0.1511%" height="15" fill="rgb(211,220,0)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1295.50"></text></g><g><title>`0x7FFE2F0AE175 (1 samples, 0.15%)</title><rect x="10.7251%" y="1269" width="0.1511%" height="15" fill="rgb(229,52,16)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1279.50"></text></g><g><title>`0x7FFE2F0613E9 (1 samples, 0.15%)</title><rect x="10.7251%" y="1253" width="0.1511%" height="15" fill="rgb(212,155,18)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1263.50"></text></g><g><title>`0x7FFE2F060A2C (1 samples, 0.15%)</title><rect x="10.7251%" y="1237" width="0.1511%" height="15" fill="rgb(242,21,14)" fg:x="71" fg:w="1"/><text x="10.9751%" y="1247.50"></text></g><g><title>`0x7FFE2A13430B (1 samples, 0.15%)</title><rect x="10.8761%" y="1381" width="0.1511%" height="15" fill="rgb(222,19,48)" fg:x="72" fg:w="1"/><text x="11.1261%" y="1391.50"></text></g><g><title>`0x7FFE2A134192 (1 samples, 0.15%)</title><rect x="10.8761%" y="1365" width="0.1511%" height="15" fill="rgb(232,45,27)" fg:x="72" fg:w="1"/><text x="11.1261%" y="1375.50"></text></g><g><title>`0x7FFE2C53E716 (1 samples, 0.15%)</title><rect x="10.8761%" y="1349" width="0.1511%" height="15" fill="rgb(249,103,42)" fg:x="72" fg:w="1"/><text x="11.1261%" y="1359.50"></text></g><g><title>`0x7FFE2A0BEE10 (1 samples, 0.15%)</title><rect x="10.8761%" y="1333" width="0.1511%" height="15" fill="rgb(246,81,33)" fg:x="72" fg:w="1"/><text x="11.1261%" y="1343.50"></text></g><g><title>`0x7FFE2F0486FA (2 samples, 0.30%)</title><rect x="10.8761%" y="1445" width="0.3021%" height="15" fill="rgb(252,33,42)" fg:x="72" fg:w="2"/><text x="11.1261%" y="1455.50"></text></g><g><title>`0x7FFE2F0B37AC (2 samples, 0.30%)</title><rect x="10.8761%" y="1429" width="0.3021%" height="15" fill="rgb(209,212,41)" fg:x="72" fg:w="2"/><text x="11.1261%" y="1439.50"></text></g><g><title>`0x7FFE2F0B483E (2 samples, 0.30%)</title><rect x="10.8761%" y="1413" width="0.3021%" height="15" fill="rgb(207,154,6)" fg:x="72" fg:w="2"/><text x="11.1261%" y="1423.50"></text></g><g><title>`0x7FFE2F1A0EDE (2 samples, 0.30%)</title><rect x="10.8761%" y="1397" width="0.3021%" height="15" fill="rgb(223,64,47)" fg:x="72" fg:w="2"/><text x="11.1261%" y="1407.50"></text></g><g><title>`0x7FFE2A134326 (1 samples, 0.15%)</title><rect x="11.0272%" y="1381" width="0.1511%" height="15" fill="rgb(211,161,38)" fg:x="73" fg:w="1"/><text x="11.2772%" y="1391.50"></text></g><g><title>`0x7FFE29FA7D70 (1 samples, 0.15%)</title><rect x="11.0272%" y="1365" width="0.1511%" height="15" fill="rgb(219,138,40)" fg:x="73" fg:w="1"/><text x="11.2772%" y="1375.50"></text></g><g><title>`0x7FFE29FA8B20 (1 samples, 0.15%)</title><rect x="11.0272%" y="1349" width="0.1511%" height="15" fill="rgb(241,228,46)" fg:x="73" fg:w="1"/><text x="11.2772%" y="1359.50"></text></g><g><title>`0x7FFE29FA8C04 (1 samples, 0.15%)</title><rect x="11.0272%" y="1333" width="0.1511%" height="15" fill="rgb(223,209,38)" fg:x="73" fg:w="1"/><text x="11.2772%" y="1343.50"></text></g><g><title>`0x7FFE2A05DF60 (1 samples, 0.15%)</title><rect x="11.0272%" y="1317" width="0.1511%" height="15" fill="rgb(236,164,45)" fg:x="73" fg:w="1"/><text x="11.2772%" y="1327.50"></text></g><g><title>fuzzit.exe`dirs::home_dir (14 samples, 2.11%)</title><rect x="9.2145%" y="1605" width="2.1148%" height="15" fill="rgb(231,15,5)" fg:x="61" fg:w="14"/><text x="9.4645%" y="1615.50">f..</text></g><g><title>fuzzit.exe`dirs_sys::target_windows::known_folder_profile (14 samples, 2.11%)</title><rect x="9.2145%" y="1589" width="2.1148%" height="15" fill="rgb(252,35,15)" fg:x="61" fg:w="14"/><text x="9.4645%" y="1599.50">f..</text></g><g><title>fuzzit.exe`dirs_sys::target_windows::known_folder (14 samples, 2.11%)</title><rect x="9.2145%" y="1573" width="2.1148%" height="15" fill="rgb(248,181,18)" fg:x="61" fg:w="14"/><text x="9.4645%" y="1583.50">f..</text></g><g><title>`0x7FFE2E41AFE5 (6 samples, 0.91%)</title><rect x="10.4230%" y="1557" width="0.9063%" height="15" fill="rgb(233,39,42)" fg:x="69" fg:w="6"/><text x="10.6730%" y="1567.50"></text></g><g><title>`0x7FFE2E3224D2 (6 samples, 0.91%)</title><rect x="10.4230%" y="1541" width="0.9063%" height="15" fill="rgb(238,110,33)" fg:x="69" fg:w="6"/><text x="10.6730%" y="1551.50"></text></g><g><title>`0x7FFE2F06118D (6 samples, 0.91%)</title><rect x="10.4230%" y="1525" width="0.9063%" height="15" fill="rgb(233,195,10)" fg:x="69" fg:w="6"/><text x="10.6730%" y="1535.50"></text></g><g><title>`0x7FFE2F063013 (6 samples, 0.91%)</title><rect x="10.4230%" y="1509" width="0.9063%" height="15" fill="rgb(254,105,3)" fg:x="69" fg:w="6"/><text x="10.6730%" y="1519.50"></text></g><g><title>`0x7FFE2F08AB06 (6 samples, 0.91%)</title><rect x="10.4230%" y="1493" width="0.9063%" height="15" fill="rgb(221,225,9)" fg:x="69" fg:w="6"/><text x="10.6730%" y="1503.50"></text></g><g><title>`0x7FFE2F08A584 (3 samples, 0.45%)</title><rect x="10.8761%" y="1477" width="0.4532%" height="15" fill="rgb(224,227,45)" fg:x="72" fg:w="3"/><text x="11.1261%" y="1487.50"></text></g><g><title>`0x7FFE2F047883 (3 samples, 0.45%)</title><rect x="10.8761%" y="1461" width="0.4532%" height="15" fill="rgb(229,198,43)" fg:x="72" fg:w="3"/><text x="11.1261%" y="1471.50"></text></g><g><title>`0x7FFE2F048726 (1 samples, 0.15%)</title><rect x="11.1782%" y="1445" width="0.1511%" height="15" fill="rgb(206,209,35)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1455.50"></text></g><g><title>`0x7FFE2F048726 (1 samples, 0.15%)</title><rect x="11.1782%" y="1429" width="0.1511%" height="15" fill="rgb(245,195,53)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1439.50"></text></g><g><title>`0x7FFE2F0486FA (1 samples, 0.15%)</title><rect x="11.1782%" y="1413" width="0.1511%" height="15" fill="rgb(240,92,26)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1423.50"></text></g><g><title>`0x7FFE2F0B37AC (1 samples, 0.15%)</title><rect x="11.1782%" y="1397" width="0.1511%" height="15" fill="rgb(207,40,23)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1407.50"></text></g><g><title>`0x7FFE2F0B483E (1 samples, 0.15%)</title><rect x="11.1782%" y="1381" width="0.1511%" height="15" fill="rgb(223,111,35)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1391.50"></text></g><g><title>`0x7FFE2F1A0EDE (1 samples, 0.15%)</title><rect x="11.1782%" y="1365" width="0.1511%" height="15" fill="rgb(229,147,28)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1375.50"></text></g><g><title>`0x7FFE2E11990A (1 samples, 0.15%)</title><rect x="11.1782%" y="1349" width="0.1511%" height="15" fill="rgb(211,29,28)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1359.50"></text></g><g><title>`0x7FFE2E109AC9 (1 samples, 0.15%)</title><rect x="11.1782%" y="1333" width="0.1511%" height="15" fill="rgb(228,72,33)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1343.50"></text></g><g><title>`0x7FFE2E109C0E (1 samples, 0.15%)</title><rect x="11.1782%" y="1317" width="0.1511%" height="15" fill="rgb(205,214,31)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1327.50"></text></g><g><title>`0x7FFE2E10A114 (1 samples, 0.15%)</title><rect x="11.1782%" y="1301" width="0.1511%" height="15" fill="rgb(224,111,15)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1311.50"></text></g><g><title>`0x7FFE2F129B7C (1 samples, 0.15%)</title><rect x="11.1782%" y="1285" width="0.1511%" height="15" fill="rgb(253,21,26)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1295.50"></text></g><g><title>`0x7FFE2F129CB2 (1 samples, 0.15%)</title><rect x="11.1782%" y="1269" width="0.1511%" height="15" fill="rgb(245,139,43)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1279.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.15%)</title><rect x="11.1782%" y="1253" width="0.1511%" height="15" fill="rgb(252,170,7)" fg:x="74" fg:w="1"/><text x="11.4282%" y="1263.50"></text></g><g><title>fuzzit.exe`fuzzit::cache::mtime_matches_cache(ref$ (1 samples, 0.15%)</title><rect x="11.3293%" y="1605" width="0.1511%" height="15" fill="rgb(231,118,14)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1615.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,std::io::error::Error&gt; &gt;::ok(enum2$&lt;core::result::Result (1 samples, 0.15%)</title><rect x="11.3293%" y="1589" width="0.1511%" height="15" fill="rgb(238,83,0)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1599.50"></text></g><g><title>fuzzit.exe`std::fs::read_to_string::inner (1 samples, 0.15%)</title><rect x="11.3293%" y="1573" width="0.1511%" height="15" fill="rgb(221,39,39)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1583.50"></text></g><g><title>fuzzit.exe`std::io::default_read_to_string (1 samples, 0.15%)</title><rect x="11.3293%" y="1557" width="0.1511%" height="15" fill="rgb(222,119,46)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1567.50"></text></g><g><title>fuzzit.exe`std::io::append_to_string (1 samples, 0.15%)</title><rect x="11.3293%" y="1541" width="0.1511%" height="15" fill="rgb(222,165,49)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1551.50"></text></g><g><title>fuzzit.exe`std::io::default_read_to_end&lt;std::fs::File&gt; (1 samples, 0.15%)</title><rect x="11.3293%" y="1525" width="0.1511%" height="15" fill="rgb(219,113,52)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1535.50"></text></g><g><title>fuzzit.exe`std::fs::impl$11::read_buf (1 samples, 0.15%)</title><rect x="11.3293%" y="1509" width="0.1511%" height="15" fill="rgb(214,7,15)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1519.50"></text></g><g><title>fuzzit.exe`std::fs::impl$8::read_buf (1 samples, 0.15%)</title><rect x="11.3293%" y="1493" width="0.1511%" height="15" fill="rgb(235,32,4)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1503.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::read_buf (1 samples, 0.15%)</title><rect x="11.3293%" y="1477" width="0.1511%" height="15" fill="rgb(238,90,54)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1487.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::read_buf (1 samples, 0.15%)</title><rect x="11.3293%" y="1461" width="0.1511%" height="15" fill="rgb(213,208,19)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1471.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::synchronous_read (1 samples, 0.15%)</title><rect x="11.3293%" y="1445" width="0.1511%" height="15" fill="rgb(233,156,4)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1455.50"></text></g><g><title>`0x7FFE2F1A32F4 (1 samples, 0.15%)</title><rect x="11.3293%" y="1429" width="0.1511%" height="15" fill="rgb(207,194,5)" fg:x="75" fg:w="1"/><text x="11.5793%" y="1439.50"></text></g><g><title>fuzzit.exe`alloc::boxed::impl$0::new(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (1 samples, 0.15%)</title><rect x="11.4804%" y="1109" width="0.1511%" height="15" fill="rgb(206,111,30)" fg:x="76" fg:w="1"/><text x="11.7304%" y="1119.50"></text></g><g><title>fuzzit.exe`alloc::alloc::exchange_malloc (1 samples, 0.15%)</title><rect x="11.4804%" y="1093" width="0.1511%" height="15" fill="rgb(243,70,54)" fg:x="76" fg:w="1"/><text x="11.7304%" y="1103.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="11.4804%" y="1077" width="0.1511%" height="15" fill="rgb(242,28,8)" fg:x="76" fg:w="1"/><text x="11.7304%" y="1087.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.15%)</title><rect x="11.4804%" y="1061" width="0.1511%" height="15" fill="rgb(219,106,18)" fg:x="76" fg:w="1"/><text x="11.7304%" y="1071.50"></text></g><g><title>`0x7FFE2F0663CB (1 samples, 0.15%)</title><rect x="11.4804%" y="1045" width="0.1511%" height="15" fill="rgb(244,222,10)" fg:x="76" fg:w="1"/><text x="11.7304%" y="1055.50"></text></g><g><title>`0x7FFE2F0979BE (1 samples, 0.15%)</title><rect x="11.4804%" y="1029" width="0.1511%" height="15" fill="rgb(236,179,52)" fg:x="76" fg:w="1"/><text x="11.7304%" y="1039.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;tuple$ (17 samples, 2.57%)</title><rect x="9.2145%" y="1637" width="2.5680%" height="15" fill="rgb(213,23,39)" fg:x="61" fg:w="17"/><text x="9.4645%" y="1647.50">fu..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data(enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt;, enum2$&lt;core::option::Option (17 samples, 2.57%)</title><rect x="9.2145%" y="1621" width="2.5680%" height="15" fill="rgb(238,48,10)" fg:x="61" fg:w="17"/><text x="9.4645%" y="1631.50">fu..</text></g><g><title>fuzzit.exe`rayon::iter::ParallelIterator::collect(rayon::iter::map::Map&lt;rayon::slice::Iter (2 samples, 0.30%)</title><rect x="11.4804%" y="1605" width="0.3021%" height="15" fill="rgb(251,196,23)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1615.50"></text></g><g><title>fuzzit.exe`rayon::iter::from_par_iter::impl$0::from_par_iter(rayon::iter::map::Map&lt;rayon::slice::Iter (2 samples, 0.30%)</title><rect x="11.4804%" y="1589" width="0.3021%" height="15" fill="rgb(250,152,24)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1599.50"></text></g><g><title>fuzzit.exe`rayon::iter::from_par_iter::collect_extended(rayon::iter::map::Map&lt;rayon::slice::Iter (2 samples, 0.30%)</title><rect x="11.4804%" y="1573" width="0.3021%" height="15" fill="rgb(209,150,17)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1583.50"></text></g><g><title>fuzzit.exe`rayon::iter::collect::collect_with_consumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,rayon::iter::collect::special_extend::closure_env$0&lt;rayon::iter::map::Map&lt;rayon::slice::Iter&lt;std::path::PathBuf&gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(alloc::vec::Vec&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,alloc::alloc::Global&gt;*, unsigned long long, rayon::iter::collect::special_extend::closure_env$0&lt;rayon::iter::map::Map&lt;rayon::slice::Iter&lt;std::path::PathBuf&gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt;,tuple$ (2 samples, 0.30%)</title><rect x="11.4804%" y="1557" width="0.3021%" height="15" fill="rgb(234,202,34)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1567.50"></text></g><g><title>fuzzit.exe`rayon::iter::collect::special_extend::closure$0(rayon::iter::collect::special_extend::closure_env$0&lt;rayon::iter::map::Map&lt;rayon::slice::Iter&lt;std::path::PathBuf&gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (2 samples, 0.30%)</title><rect x="11.4804%" y="1541" width="0.3021%" height="15" fill="rgb(253,148,53)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1551.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$2::drive_unindexed(rayon::iter::map::Map&lt;rayon::slice::Iter&lt;std::path::PathBuf&gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt;, rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (2 samples, 0.30%)</title><rect x="11.4804%" y="1525" width="0.3021%" height="15" fill="rgb(218,129,16)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1535.50"></text></g><g><title>fuzzit.exe`rayon::slice::impl$7::drive_unindexed(rayon::slice::Iter&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (2 samples, 0.30%)</title><rect x="11.4804%" y="1509" width="0.3021%" height="15" fill="rgb(216,85,19)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1519.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge(rayon::slice::Iter&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (2 samples, 0.30%)</title><rect x="11.4804%" y="1493" width="0.3021%" height="15" fill="rgb(235,228,7)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1503.50"></text></g><g><title>fuzzit.exe`rayon::slice::impl$8::with_producer(rayon::slice::Iter&lt;std::path::PathBuf&gt;, rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (2 samples, 0.30%)</title><rect x="11.4804%" y="1477" width="0.3021%" height="15" fill="rgb(245,175,0)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1487.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge::impl$0::callback(rayon::iter::plumbing::bridge::Callback&lt;rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;, rayon::slice::IterProducer (2 samples, 0.30%)</title><rect x="11.4804%" y="1461" width="0.3021%" height="15" fill="rgb(208,168,36)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1471.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer(unsigned long long, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (2 samples, 0.30%)</title><rect x="11.4804%" y="1445" width="0.3021%" height="15" fill="rgb(246,171,24)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1455.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::LengthSplitter::new (2 samples, 0.30%)</title><rect x="11.4804%" y="1429" width="0.3021%" height="15" fill="rgb(215,142,24)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1439.50"></text></g><g><title>fuzzit.exe`rayon_core::current_num_threads (2 samples, 0.30%)</title><rect x="11.4804%" y="1413" width="0.3021%" height="15" fill="rgb(250,187,7)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1423.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::Registry::current_num_threads (2 samples, 0.30%)</title><rect x="11.4804%" y="1397" width="0.3021%" height="15" fill="rgb(228,66,33)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1407.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (2 samples, 0.30%)</title><rect x="11.4804%" y="1381" width="0.3021%" height="15" fill="rgb(234,215,21)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1391.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (2 samples, 0.30%)</title><rect x="11.4804%" y="1365" width="0.3021%" height="15" fill="rgb(222,191,20)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1375.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (2 samples, 0.30%)</title><rect x="11.4804%" y="1349" width="0.3021%" height="15" fill="rgb(245,79,54)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1359.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::global_registry (2 samples, 0.30%)</title><rect x="11.4804%" y="1333" width="0.3021%" height="15" fill="rgb(240,10,37)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1343.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::set_global_registry(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (2 samples, 0.30%)</title><rect x="11.4804%" y="1317" width="0.3021%" height="15" fill="rgb(214,192,32)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1327.50"></text></g><g><title>fuzzit.exe`std::sync::poison::once::Once::call_once(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (2 samples, 0.30%)</title><rect x="11.4804%" y="1301" width="0.3021%" height="15" fill="rgb(209,36,54)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1311.50"></text></g><g><title>fuzzit.exe`std::sys::sync::once::futex::Once::call (2 samples, 0.30%)</title><rect x="11.4804%" y="1285" width="0.3021%" height="15" fill="rgb(220,10,11)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1295.50"></text></g><g><title>fuzzit.exe`core::cell::Cell::get (2 samples, 0.30%)</title><rect x="11.4804%" y="1269" width="0.3021%" height="15" fill="rgb(221,106,17)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1279.50"></text></g><g><title>fuzzit.exe`std::sync::poison::once::impl$2::call_once::closure$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*)()&gt; &gt;(std::sync::poison::once::impl$2::call_once::closure_env$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (2 samples, 0.30%)</title><rect x="11.4804%" y="1253" width="0.3021%" height="15" fill="rgb(251,142,44)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1263.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::set_global_registry::closure$0(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (2 samples, 0.30%)</title><rect x="11.4804%" y="1237" width="0.3021%" height="15" fill="rgb(238,13,15)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1247.50"></text></g><g><title>fuzzit.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (2 samples, 0.30%)</title><rect x="11.4804%" y="1221" width="0.3021%" height="15" fill="rgb(208,107,27)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1231.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::default_global_registry (2 samples, 0.30%)</title><rect x="11.4804%" y="1205" width="0.3021%" height="15" fill="rgb(205,136,37)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1215.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::Registry::new&lt;rayon_core::registry::DefaultSpawn&gt;(rayon_core::ThreadPoolBuilder (2 samples, 0.30%)</title><rect x="11.4804%" y="1189" width="0.3021%" height="15" fill="rgb(250,205,27)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1199.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$2::spawn (2 samples, 0.30%)</title><rect x="11.4804%" y="1173" width="0.3021%" height="15" fill="rgb(210,80,43)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1183.50"></text></g><g><title>fuzzit.exe`std::thread::Builder::spawn (2 samples, 0.30%)</title><rect x="11.4804%" y="1157" width="0.3021%" height="15" fill="rgb(247,160,36)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1167.50"></text></g><g><title>fuzzit.exe`std::thread::Builder::spawn_unchecked&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (2 samples, 0.30%)</title><rect x="11.4804%" y="1141" width="0.3021%" height="15" fill="rgb(234,13,49)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1151.50"></text></g><g><title>fuzzit.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, rayon_core::registry::impl$2::spawn::closure_env$0, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (2 samples, 0.30%)</title><rect x="11.4804%" y="1125" width="0.3021%" height="15" fill="rgb(234,122,0)" fg:x="76" fg:w="2"/><text x="11.7304%" y="1135.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::thread::Thread::new (1 samples, 0.15%)</title><rect x="11.6314%" y="1109" width="0.1511%" height="15" fill="rgb(207,146,38)" fg:x="77" fg:w="1"/><text x="11.8814%" y="1119.50"></text></g><g><title>`0x7FFE2DD4313D (1 samples, 0.15%)</title><rect x="11.6314%" y="1093" width="0.1511%" height="15" fill="rgb(207,177,25)" fg:x="77" fg:w="1"/><text x="11.8814%" y="1103.50"></text></g><g><title>`0x7FFE2C8B0ED9 (1 samples, 0.15%)</title><rect x="11.6314%" y="1077" width="0.1511%" height="15" fill="rgb(211,178,42)" fg:x="77" fg:w="1"/><text x="11.8814%" y="1087.50"></text></g><g><title>`0x7FFE2F1A4B44 (1 samples, 0.15%)</title><rect x="11.6314%" y="1061" width="0.1511%" height="15" fill="rgb(230,69,54)" fg:x="77" fg:w="1"/><text x="11.8814%" y="1071.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::is_console (1 samples, 0.15%)</title><rect x="11.7825%" y="1381" width="0.1511%" height="15" fill="rgb(214,135,41)" fg:x="78" fg:w="1"/><text x="12.0325%" y="1391.50"></text></g><g><title>`0x7FFE2C8D8B82 (1 samples, 0.15%)</title><rect x="11.7825%" y="1365" width="0.1511%" height="15" fill="rgb(237,67,25)" fg:x="78" fg:w="1"/><text x="12.0325%" y="1375.50"></text></g><g><title>`0x7FFE2F1A3314 (1 samples, 0.15%)</title><rect x="11.7825%" y="1349" width="0.1511%" height="15" fill="rgb(222,189,50)" fg:x="78" fg:w="1"/><text x="12.0325%" y="1359.50"></text></g><g><title>fuzzit.exe`__scrt_common_main_seh() (26 samples, 3.93%)</title><rect x="8.1571%" y="1829" width="3.9275%" height="15" fill="rgb(245,148,34)" fg:x="54" fg:w="26"/><text x="8.4071%" y="1839.50">fuzz..</text></g><g><title>fuzzit.exe`invoke_main() (20 samples, 3.02%)</title><rect x="9.0634%" y="1813" width="3.0211%" height="15" fill="rgb(222,29,6)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1823.50">fuz..</text></g><g><title>fuzzit.exe`main (20 samples, 3.02%)</title><rect x="9.0634%" y="1797" width="3.0211%" height="15" fill="rgb(221,189,43)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1807.50">fuz..</text></g><g><title>fuzzit.exe`std::rt::lang_start_internal (20 samples, 3.02%)</title><rect x="9.0634%" y="1781" width="3.0211%" height="15" fill="rgb(207,36,27)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1791.50">fuz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind (20 samples, 3.02%)</title><rect x="9.0634%" y="1765" width="3.0211%" height="15" fill="rgb(217,90,24)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1775.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try (20 samples, 3.02%)</title><rect x="9.0634%" y="1749" width="3.0211%" height="15" fill="rgb(224,66,35)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1759.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (20 samples, 3.02%)</title><rect x="9.0634%" y="1733" width="3.0211%" height="15" fill="rgb(221,13,50)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1743.50">fuz..</text></g><g><title>fuzzit.exe`std::rt::lang_start_internal::closure$0 (20 samples, 3.02%)</title><rect x="9.0634%" y="1717" width="3.0211%" height="15" fill="rgb(236,68,49)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1727.50">fuz..</text></g><g><title>fuzzit.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$ (20 samples, 3.02%)</title><rect x="9.0634%" y="1701" width="3.0211%" height="15" fill="rgb(229,146,28)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1711.50">fuz..</text></g><g><title>fuzzit.exe`std::process::impl$67::report(enum2$&lt;core::result::Result&lt;tuple$ (20 samples, 3.02%)</title><rect x="9.0634%" y="1685" width="3.0211%" height="15" fill="rgb(225,31,38)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1695.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt; (*)(),enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt; (*) (20 samples, 3.02%)</title><rect x="9.0634%" y="1669" width="3.0211%" height="15" fill="rgb(250,208,3)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1679.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::main (20 samples, 3.02%)</title><rect x="9.0634%" y="1653" width="3.0211%" height="15" fill="rgb(246,54,23)" fg:x="60" fg:w="20"/><text x="9.3134%" y="1663.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::status::display(alloc::string::String, bool, alloc::vec::Vec&lt;tuple$ (2 samples, 0.30%)</title><rect x="11.7825%" y="1637" width="0.3021%" height="15" fill="rgb(243,76,11)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1647.50"></text></g><g><title>fuzzit.exe`std::io::stdio::_print (2 samples, 0.30%)</title><rect x="11.7825%" y="1621" width="0.3021%" height="15" fill="rgb(245,21,50)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1631.50"></text></g><g><title>fuzzit.exe`std::io::stdio::print_to (2 samples, 0.30%)</title><rect x="11.7825%" y="1605" width="0.3021%" height="15" fill="rgb(228,9,43)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1615.50"></text></g><g><title>fuzzit.exe`std::io::stdio::impl$16::write_fmt (2 samples, 0.30%)</title><rect x="11.7825%" y="1589" width="0.3021%" height="15" fill="rgb(208,100,47)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1599.50"></text></g><g><title>fuzzit.exe`std::io::Write::write_fmt (2 samples, 0.30%)</title><rect x="11.7825%" y="1573" width="0.3021%" height="15" fill="rgb(232,26,8)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1583.50"></text></g><g><title>fuzzit.exe`std::io::default_write_fmt (2 samples, 0.30%)</title><rect x="11.7825%" y="1557" width="0.3021%" height="15" fill="rgb(216,166,38)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1567.50"></text></g><g><title>fuzzit.exe`core::fmt::write (2 samples, 0.30%)</title><rect x="11.7825%" y="1541" width="0.3021%" height="15" fill="rgb(251,202,51)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1551.50"></text></g><g><title>fuzzit.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (2 samples, 0.30%)</title><rect x="11.7825%" y="1525" width="0.3021%" height="15" fill="rgb(254,216,34)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1535.50"></text></g><g><title>fuzzit.exe`std::io::stdio::impl$19::write_all (2 samples, 0.30%)</title><rect x="11.7825%" y="1509" width="0.3021%" height="15" fill="rgb(251,32,27)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1519.50"></text></g><g><title>fuzzit.exe`std::sync::reentrant_lock::impl$11::deref (2 samples, 0.30%)</title><rect x="11.7825%" y="1493" width="0.3021%" height="15" fill="rgb(208,127,28)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1503.50"></text></g><g><title>fuzzit.exe`std::io::buffered::linewritershim::impl$1::write_all (2 samples, 0.30%)</title><rect x="11.7825%" y="1477" width="0.3021%" height="15" fill="rgb(224,137,22)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1487.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (2 samples, 0.30%)</title><rect x="11.7825%" y="1461" width="0.3021%" height="15" fill="rgb(254,70,32)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1471.50"></text></g><g><title>fuzzit.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (2 samples, 0.30%)</title><rect x="11.7825%" y="1445" width="0.3021%" height="15" fill="rgb(229,75,37)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1455.50"></text></g><g><title>fuzzit.exe`std::io::stdio::impl$1::write (2 samples, 0.30%)</title><rect x="11.7825%" y="1429" width="0.3021%" height="15" fill="rgb(252,64,23)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1439.50"></text></g><g><title>fuzzit.exe`std::io::stdio::handle_ebadf (2 samples, 0.30%)</title><rect x="11.7825%" y="1413" width="0.3021%" height="15" fill="rgb(232,162,48)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1423.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::write (2 samples, 0.30%)</title><rect x="11.7825%" y="1397" width="0.3021%" height="15" fill="rgb(246,160,12)" fg:x="78" fg:w="2"/><text x="12.0325%" y="1407.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::is_utf8_console (1 samples, 0.15%)</title><rect x="11.9335%" y="1381" width="0.1511%" height="15" fill="rgb(247,166,0)" fg:x="79" fg:w="1"/><text x="12.1835%" y="1391.50"></text></g><g><title>`0x7FFE2C89E425 (1 samples, 0.15%)</title><rect x="11.9335%" y="1365" width="0.1511%" height="15" fill="rgb(249,219,21)" fg:x="79" fg:w="1"/><text x="12.1835%" y="1375.50"></text></g><g><title>`0x7FFE2F1A3314 (1 samples, 0.15%)</title><rect x="11.9335%" y="1349" width="0.1511%" height="15" fill="rgb(205,209,3)" fg:x="79" fg:w="1"/><text x="12.1835%" y="1359.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (2 samples, 0.30%)</title><rect x="12.0846%" y="1525" width="0.3021%" height="15" fill="rgb(243,44,1)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1535.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (2 samples, 0.30%)</title><rect x="12.0846%" y="1509" width="0.3021%" height="15" fill="rgb(206,159,16)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1519.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (2 samples, 0.30%)</title><rect x="12.0846%" y="1493" width="0.3021%" height="15" fill="rgb(244,77,30)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1503.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::find_work (2 samples, 0.30%)</title><rect x="12.0846%" y="1477" width="0.3021%" height="15" fill="rgb(218,69,12)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1487.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::option::Option&lt;rayon_core::job::JobRef&gt; &gt;::or_else(enum2$&lt;core::option::Option (2 samples, 0.30%)</title><rect x="12.0846%" y="1461" width="0.3021%" height="15" fill="rgb(212,87,7)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1471.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::find_work::closure$0 (2 samples, 0.30%)</title><rect x="12.0846%" y="1445" width="0.3021%" height="15" fill="rgb(245,114,25)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1455.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::steal (2 samples, 0.30%)</title><rect x="12.0846%" y="1429" width="0.3021%" height="15" fill="rgb(210,61,42)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1439.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range (2 samples, 0.30%)</title><rect x="12.0846%" y="1413" width="0.3021%" height="15" fill="rgb(211,52,33)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1423.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::try_fold(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (2 samples, 0.30%)</title><rect x="12.0846%" y="1397" width="0.3021%" height="15" fill="rgb(234,58,33)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1407.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::chain::impl$1::try_fold&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt;,tuple$&lt;&gt;,core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (2 samples, 0.30%)</title><rect x="12.0846%" y="1381" width="0.3021%" height="15" fill="rgb(220,115,36)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1391.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::range::Range&lt;usize&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (2 samples, 0.30%)</title><rect x="12.0846%" y="1365" width="0.3021%" height="15" fill="rgb(243,153,54)" fg:x="80" fg:w="2"/><text x="12.3346%" y="1375.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$3::call_mut(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;**, tuple$ (1 samples, 0.15%)</title><rect x="12.2356%" y="1349" width="0.1511%" height="15" fill="rgb(251,47,18)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1359.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;*, tuple$ (1 samples, 0.15%)</title><rect x="12.2356%" y="1333" width="0.1511%" height="15" fill="rgb(242,102,42)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1343.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt;*, tuple$ (1 samples, 0.15%)</title><rect x="12.2356%" y="1317" width="0.1511%" height="15" fill="rgb(234,31,38)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1327.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::steal::closure$1 (1 samples, 0.15%)</title><rect x="12.2356%" y="1301" width="0.1511%" height="15" fill="rgb(221,117,51)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1311.50"></text></g><g><title>fuzzit.exe`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal&lt;rayon_core::job::JobRef&gt; (1 samples, 0.15%)</title><rect x="12.2356%" y="1285" width="0.1511%" height="15" fill="rgb(212,20,18)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1295.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::is_pinned (1 samples, 0.15%)</title><rect x="12.2356%" y="1269" width="0.1511%" height="15" fill="rgb(245,133,36)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1279.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle (1 samples, 0.15%)</title><rect x="12.2356%" y="1253" width="0.1511%" height="15" fill="rgb(212,6,19)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1263.50"></text></g><g><title>fuzzit.exe`std::thread::local::LocalKey&lt;crossbeam_epoch::collector::LocalHandle&gt;::try_with(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.15%)</title><rect x="12.2356%" y="1237" width="0.1511%" height="15" fill="rgb(218,1,36)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1247.50"></text></g><g><title>fuzzit.exe`core::ops::function::FnOnce::call_once(crossbeam_epoch::default::HANDLE::constant$0::closure_env$0, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option (1 samples, 0.15%)</title><rect x="12.2356%" y="1221" width="0.1511%" height="15" fill="rgb(246,84,54)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1231.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::HANDLE::constant$0::closure$0(crossbeam_epoch::default::HANDLE::constant$0::closure_env$0*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option (1 samples, 0.15%)</title><rect x="12.2356%" y="1205" width="0.1511%" height="15" fill="rgb(242,110,6)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1215.50"></text></g><g><title>fuzzit.exe`std::sys::thread_local::native::lazy::Storage&lt;crossbeam_epoch::collector::LocalHandle,tuple$&lt;&gt; &gt;::get_or_init(enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;crossbeam_epoch::collector::LocalHandle&gt; &gt; &gt; &gt; &gt;, crossbeam_epoch::collector::LocalHandle (*) (1 samples, 0.15%)</title><rect x="12.2356%" y="1189" width="0.1511%" height="15" fill="rgb(214,47,5)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1199.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::HANDLE::constant$0::closure$0::VAL (1 samples, 0.15%)</title><rect x="12.2356%" y="1173" width="0.1511%" height="15" fill="rgb(218,159,25)" fg:x="81" fg:w="1"/><text x="12.4856%" y="1183.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (1 samples, 0.15%)</title><rect x="12.3867%" y="1269" width="0.1511%" height="15" fill="rgb(215,211,28)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1279.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.15%)</title><rect x="12.3867%" y="1253" width="0.1511%" height="15" fill="rgb(238,59,32)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1263.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (1 samples, 0.15%)</title><rect x="12.3867%" y="1237" width="0.1511%" height="15" fill="rgb(226,82,3)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1247.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (1 samples, 0.15%)</title><rect x="12.3867%" y="1221" width="0.1511%" height="15" fill="rgb(240,164,32)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1231.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (1 samples, 0.15%)</title><rect x="12.3867%" y="1205" width="0.1511%" height="15" fill="rgb(232,46,7)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1215.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::find_work (1 samples, 0.15%)</title><rect x="12.3867%" y="1189" width="0.1511%" height="15" fill="rgb(229,129,53)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1199.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::option::Option&lt;rayon_core::job::JobRef&gt; &gt;::or_else(enum2$&lt;core::option::Option (1 samples, 0.15%)</title><rect x="12.3867%" y="1173" width="0.1511%" height="15" fill="rgb(234,188,29)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1183.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::find_work::closure$0 (1 samples, 0.15%)</title><rect x="12.3867%" y="1157" width="0.1511%" height="15" fill="rgb(246,141,4)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1167.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::steal (1 samples, 0.15%)</title><rect x="12.3867%" y="1141" width="0.1511%" height="15" fill="rgb(229,23,39)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1151.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range (1 samples, 0.15%)</title><rect x="12.3867%" y="1125" width="0.1511%" height="15" fill="rgb(206,12,3)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1135.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::try_fold(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.15%)</title><rect x="12.3867%" y="1109" width="0.1511%" height="15" fill="rgb(252,226,20)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1119.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::chain::impl$1::try_fold&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt;,tuple$&lt;&gt;,core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.15%)</title><rect x="12.3867%" y="1093" width="0.1511%" height="15" fill="rgb(216,123,35)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1103.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::range::Range&lt;usize&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.15%)</title><rect x="12.3867%" y="1077" width="0.1511%" height="15" fill="rgb(212,68,40)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1087.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$3::call_mut(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;**, tuple$ (1 samples, 0.15%)</title><rect x="12.3867%" y="1061" width="0.1511%" height="15" fill="rgb(254,125,32)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1071.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;*, tuple$ (1 samples, 0.15%)</title><rect x="12.3867%" y="1045" width="0.1511%" height="15" fill="rgb(253,97,22)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1055.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt;*, tuple$ (1 samples, 0.15%)</title><rect x="12.3867%" y="1029" width="0.1511%" height="15" fill="rgb(241,101,14)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1039.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::steal::closure$1 (1 samples, 0.15%)</title><rect x="12.3867%" y="1013" width="0.1511%" height="15" fill="rgb(238,103,29)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1023.50"></text></g><g><title>fuzzit.exe`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal&lt;rayon_core::job::JobRef&gt; (1 samples, 0.15%)</title><rect x="12.3867%" y="997" width="0.1511%" height="15" fill="rgb(233,195,47)" fg:x="82" fg:w="1"/><text x="12.6367%" y="1007.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin (1 samples, 0.15%)</title><rect x="12.3867%" y="981" width="0.1511%" height="15" fill="rgb(246,218,30)" fg:x="82" fg:w="1"/><text x="12.6367%" y="991.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle&lt;crossbeam_epoch::default::pin::closure_env$0,crossbeam_epoch::guard::Guard&gt; (1 samples, 0.15%)</title><rect x="12.3867%" y="965" width="0.1511%" height="15" fill="rgb(219,145,47)" fg:x="82" fg:w="1"/><text x="12.6367%" y="975.50"></text></g><g><title>fuzzit.exe`std::thread::local::LocalKey&lt;crossbeam_epoch::collector::LocalHandle&gt;::try_with(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.15%)</title><rect x="12.3867%" y="949" width="0.1511%" height="15" fill="rgb(243,12,26)" fg:x="82" fg:w="1"/><text x="12.6367%" y="959.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle::closure$0(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.15%)</title><rect x="12.3867%" y="933" width="0.1511%" height="15" fill="rgb(214,87,16)" fg:x="82" fg:w="1"/><text x="12.6367%" y="943.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin::closure$0 (1 samples, 0.15%)</title><rect x="12.3867%" y="917" width="0.1511%" height="15" fill="rgb(208,99,42)" fg:x="82" fg:w="1"/><text x="12.6367%" y="927.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.15%)</title><rect x="12.3867%" y="901" width="0.1511%" height="15" fill="rgb(253,99,2)" fg:x="82" fg:w="1"/><text x="12.6367%" y="911.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::internal::Local::pin (1 samples, 0.15%)</title><rect x="12.3867%" y="885" width="0.1511%" height="15" fill="rgb(220,168,23)" fg:x="82" fg:w="1"/><text x="12.6367%" y="895.50"></text></g><g><title>fuzzit.exe`core::cell::Cell&lt;core::num::wrapping::Wrapping&lt;usize&gt; &gt;::get (1 samples, 0.15%)</title><rect x="12.3867%" y="869" width="0.1511%" height="15" fill="rgb(242,38,24)" fg:x="82" fg:w="1"/><text x="12.6367%" y="879.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="12.5378%" y="309" width="0.1511%" height="15" fill="rgb(225,182,9)" fg:x="83" fg:w="1"/><text x="12.7878%" y="319.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="12.5378%" y="293" width="0.1511%" height="15" fill="rgb(243,178,37)" fg:x="83" fg:w="1"/><text x="12.7878%" y="303.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$25::drop (1 samples, 0.15%)</title><rect x="12.5378%" y="277" width="0.1511%" height="15" fill="rgb(232,139,19)" fg:x="83" fg:w="1"/><text x="12.7878%" y="287.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.15%)</title><rect x="12.5378%" y="261" width="0.1511%" height="15" fill="rgb(225,201,24)" fg:x="83" fg:w="1"/><text x="12.7878%" y="271.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="12.5378%" y="245" width="0.1511%" height="15" fill="rgb(221,47,46)" fg:x="83" fg:w="1"/><text x="12.7878%" y="255.50"></text></g><g><title>`0x7FFE2C875055 (1 samples, 0.15%)</title><rect x="12.6888%" y="245" width="0.1511%" height="15" fill="rgb(249,23,13)" fg:x="84" fg:w="1"/><text x="12.9388%" y="255.50"></text></g><g><title>`0x7FFE2F1A9819 (1 samples, 0.15%)</title><rect x="12.6888%" y="229" width="0.1511%" height="15" fill="rgb(219,9,5)" fg:x="84" fg:w="1"/><text x="12.9388%" y="239.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="12.8399%" y="245" width="0.4532%" height="15" fill="rgb(254,171,16)" fg:x="85" fg:w="3"/><text x="13.0899%" y="255.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="12.8399%" y="229" width="0.4532%" height="15" fill="rgb(230,171,20)" fg:x="85" fg:w="3"/><text x="13.0899%" y="239.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.45%)</title><rect x="13.2931%" y="245" width="0.4532%" height="15" fill="rgb(210,71,41)" fg:x="88" fg:w="3"/><text x="13.5431%" y="255.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.45%)</title><rect x="13.2931%" y="229" width="0.4532%" height="15" fill="rgb(206,173,20)" fg:x="88" fg:w="3"/><text x="13.5431%" y="239.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="13.2931%" y="213" width="0.4532%" height="15" fill="rgb(233,88,34)" fg:x="88" fg:w="3"/><text x="13.5431%" y="223.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="13.2931%" y="197" width="0.4532%" height="15" fill="rgb(223,209,46)" fg:x="88" fg:w="3"/><text x="13.5431%" y="207.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.21%)</title><rect x="12.6888%" y="309" width="1.2085%" height="15" fill="rgb(250,43,18)" fg:x="84" fg:w="8"/><text x="12.9388%" y="319.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.21%)</title><rect x="12.6888%" y="293" width="1.2085%" height="15" fill="rgb(208,13,10)" fg:x="84" fg:w="8"/><text x="12.9388%" y="303.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.21%)</title><rect x="12.6888%" y="277" width="1.2085%" height="15" fill="rgb(212,200,36)" fg:x="84" fg:w="8"/><text x="12.9388%" y="287.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.21%)</title><rect x="12.6888%" y="261" width="1.2085%" height="15" fill="rgb(225,90,30)" fg:x="84" fg:w="8"/><text x="12.9388%" y="271.50"></text></g><g><title>`0x7FFE2C87892F (1 samples, 0.15%)</title><rect x="13.7462%" y="245" width="0.1511%" height="15" fill="rgb(236,182,39)" fg:x="91" fg:w="1"/><text x="13.9962%" y="255.50"></text></g><g><title>`0x7FFE2DD37F15 (1 samples, 0.15%)</title><rect x="13.7462%" y="229" width="0.1511%" height="15" fill="rgb(212,144,35)" fg:x="91" fg:w="1"/><text x="13.9962%" y="239.50"></text></g><g><title>`0x7FFE2DD37743 (1 samples, 0.15%)</title><rect x="13.7462%" y="213" width="0.1511%" height="15" fill="rgb(228,63,44)" fg:x="91" fg:w="1"/><text x="13.9962%" y="223.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.15%)</title><rect x="13.7462%" y="197" width="0.1511%" height="15" fill="rgb(228,109,6)" fg:x="91" fg:w="1"/><text x="13.9962%" y="207.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="13.8973%" y="277" width="0.1511%" height="15" fill="rgb(238,117,24)" fg:x="92" fg:w="1"/><text x="14.1473%" y="287.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (1 samples, 0.15%)</title><rect x="13.8973%" y="261" width="0.1511%" height="15" fill="rgb(242,26,26)" fg:x="92" fg:w="1"/><text x="14.1473%" y="271.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="13.8973%" y="245" width="0.1511%" height="15" fill="rgb(221,92,48)" fg:x="92" fg:w="1"/><text x="14.1473%" y="255.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="13.8973%" y="229" width="0.1511%" height="15" fill="rgb(209,209,32)" fg:x="92" fg:w="1"/><text x="14.1473%" y="239.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="13.8973%" y="213" width="0.1511%" height="15" fill="rgb(221,70,22)" fg:x="92" fg:w="1"/><text x="14.1473%" y="223.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="13.8973%" y="197" width="0.1511%" height="15" fill="rgb(248,145,5)" fg:x="92" fg:w="1"/><text x="14.1473%" y="207.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="13.8973%" y="181" width="0.1511%" height="15" fill="rgb(226,116,26)" fg:x="92" fg:w="1"/><text x="14.1473%" y="191.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="13.8973%" y="165" width="0.1511%" height="15" fill="rgb(244,5,17)" fg:x="92" fg:w="1"/><text x="14.1473%" y="175.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="12.5378%" y="485" width="1.8127%" height="15" fill="rgb(252,159,33)" fg:x="83" fg:w="12"/><text x="12.7878%" y="495.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="12.5378%" y="469" width="1.8127%" height="15" fill="rgb(206,71,0)" fg:x="83" fg:w="12"/><text x="12.7878%" y="479.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="12.5378%" y="453" width="1.8127%" height="15" fill="rgb(233,118,54)" fg:x="83" fg:w="12"/><text x="12.7878%" y="463.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (12 samples, 1.81%)</title><rect x="12.5378%" y="437" width="1.8127%" height="15" fill="rgb(234,83,48)" fg:x="83" fg:w="12"/><text x="12.7878%" y="447.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="12.5378%" y="421" width="1.8127%" height="15" fill="rgb(228,3,54)" fg:x="83" fg:w="12"/><text x="12.7878%" y="431.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.81%)</title><rect x="12.5378%" y="405" width="1.8127%" height="15" fill="rgb(226,155,13)" fg:x="83" fg:w="12"/><text x="12.7878%" y="415.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="12.5378%" y="389" width="1.8127%" height="15" fill="rgb(241,28,37)" fg:x="83" fg:w="12"/><text x="12.7878%" y="399.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.81%)</title><rect x="12.5378%" y="373" width="1.8127%" height="15" fill="rgb(233,93,10)" fg:x="83" fg:w="12"/><text x="12.7878%" y="383.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.81%)</title><rect x="12.5378%" y="357" width="1.8127%" height="15" fill="rgb(225,113,19)" fg:x="83" fg:w="12"/><text x="12.7878%" y="367.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (12 samples, 1.81%)</title><rect x="12.5378%" y="341" width="1.8127%" height="15" fill="rgb(241,2,18)" fg:x="83" fg:w="12"/><text x="12.7878%" y="351.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (12 samples, 1.81%)</title><rect x="12.5378%" y="325" width="1.8127%" height="15" fill="rgb(228,207,21)" fg:x="83" fg:w="12"/><text x="12.7878%" y="335.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="13.8973%" y="309" width="0.4532%" height="15" fill="rgb(213,211,35)" fg:x="92" fg:w="3"/><text x="14.1473%" y="319.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="13.8973%" y="293" width="0.4532%" height="15" fill="rgb(209,83,10)" fg:x="92" fg:w="3"/><text x="14.1473%" y="303.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="14.0483%" y="277" width="0.3021%" height="15" fill="rgb(209,164,1)" fg:x="93" fg:w="2"/><text x="14.2983%" y="287.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="14.0483%" y="261" width="0.3021%" height="15" fill="rgb(213,184,43)" fg:x="93" fg:w="2"/><text x="14.2983%" y="271.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="14.0483%" y="245" width="0.3021%" height="15" fill="rgb(231,61,34)" fg:x="93" fg:w="2"/><text x="14.2983%" y="255.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="14.0483%" y="229" width="0.3021%" height="15" fill="rgb(235,75,3)" fg:x="93" fg:w="2"/><text x="14.2983%" y="239.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.30%)</title><rect x="14.0483%" y="213" width="0.3021%" height="15" fill="rgb(220,106,47)" fg:x="93" fg:w="2"/><text x="14.2983%" y="223.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.30%)</title><rect x="14.0483%" y="197" width="0.3021%" height="15" fill="rgb(210,196,33)" fg:x="93" fg:w="2"/><text x="14.2983%" y="207.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.15%)</title><rect x="14.3505%" y="277" width="0.1511%" height="15" fill="rgb(229,154,42)" fg:x="95" fg:w="1"/><text x="14.6005%" y="287.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.15%)</title><rect x="14.3505%" y="261" width="0.1511%" height="15" fill="rgb(228,114,26)" fg:x="95" fg:w="1"/><text x="14.6005%" y="271.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.15%)</title><rect x="14.3505%" y="245" width="0.1511%" height="15" fill="rgb(208,144,1)" fg:x="95" fg:w="1"/><text x="14.6005%" y="255.50"></text></g><g><title>`0x7FFE2C7FF233 (1 samples, 0.15%)</title><rect x="14.3505%" y="229" width="0.1511%" height="15" fill="rgb(239,112,37)" fg:x="95" fg:w="1"/><text x="14.6005%" y="239.50"></text></g><g><title>`0x7FFE2F1A3D84 (1 samples, 0.15%)</title><rect x="14.3505%" y="213" width="0.1511%" height="15" fill="rgb(210,96,50)" fg:x="95" fg:w="1"/><text x="14.6005%" y="223.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="14.5015%" y="245" width="0.1511%" height="15" fill="rgb(222,178,2)" fg:x="96" fg:w="1"/><text x="14.7515%" y="255.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="14.5015%" y="229" width="0.1511%" height="15" fill="rgb(226,74,18)" fg:x="96" fg:w="1"/><text x="14.7515%" y="239.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="14.5015%" y="213" width="0.1511%" height="15" fill="rgb(225,67,54)" fg:x="96" fg:w="1"/><text x="14.7515%" y="223.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="14.5015%" y="197" width="0.1511%" height="15" fill="rgb(251,92,32)" fg:x="96" fg:w="1"/><text x="14.7515%" y="207.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.15%)</title><rect x="14.5015%" y="181" width="0.1511%" height="15" fill="rgb(228,149,22)" fg:x="96" fg:w="1"/><text x="14.7515%" y="191.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.15%)</title><rect x="14.5015%" y="165" width="0.1511%" height="15" fill="rgb(243,54,13)" fg:x="96" fg:w="1"/><text x="14.7515%" y="175.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.15%)</title><rect x="14.5015%" y="149" width="0.1511%" height="15" fill="rgb(243,180,28)" fg:x="96" fg:w="1"/><text x="14.7515%" y="159.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.15%)</title><rect x="14.5015%" y="133" width="0.1511%" height="15" fill="rgb(208,167,24)" fg:x="96" fg:w="1"/><text x="14.7515%" y="143.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.15%)</title><rect x="14.5015%" y="117" width="0.1511%" height="15" fill="rgb(245,73,45)" fg:x="96" fg:w="1"/><text x="14.7515%" y="127.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="14.5015%" y="101" width="0.1511%" height="15" fill="rgb(237,203,48)" fg:x="96" fg:w="1"/><text x="14.7515%" y="111.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="14.6526%" y="181" width="0.4532%" height="15" fill="rgb(211,197,16)" fg:x="97" fg:w="3"/><text x="14.9026%" y="191.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="14.6526%" y="165" width="0.4532%" height="15" fill="rgb(243,99,51)" fg:x="97" fg:w="3"/><text x="14.9026%" y="175.50"></text></g><g><title>`0x7FFE2DD2D5B5 (1 samples, 0.15%)</title><rect x="15.1057%" y="149" width="0.1511%" height="15" fill="rgb(215,123,29)" fg:x="100" fg:w="1"/><text x="15.3557%" y="159.50"></text></g><g><title>`0x7FFE2DD2E31C (1 samples, 0.15%)</title><rect x="15.1057%" y="133" width="0.1511%" height="15" fill="rgb(239,186,37)" fg:x="100" fg:w="1"/><text x="15.3557%" y="143.50"></text></g><g><title>`0x7FFE2C8107F2 (1 samples, 0.15%)</title><rect x="15.1057%" y="117" width="0.1511%" height="15" fill="rgb(252,136,39)" fg:x="100" fg:w="1"/><text x="15.3557%" y="127.50"></text></g><g><title>`0x7FFE2F047BE2 (1 samples, 0.15%)</title><rect x="15.1057%" y="101" width="0.1511%" height="15" fill="rgb(223,213,32)" fg:x="100" fg:w="1"/><text x="15.3557%" y="111.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 1.06%)</title><rect x="14.6526%" y="245" width="1.0574%" height="15" fill="rgb(233,115,5)" fg:x="97" fg:w="7"/><text x="14.9026%" y="255.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 1.06%)</title><rect x="14.6526%" y="229" width="1.0574%" height="15" fill="rgb(207,226,44)" fg:x="97" fg:w="7"/><text x="14.9026%" y="239.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 1.06%)</title><rect x="14.6526%" y="213" width="1.0574%" height="15" fill="rgb(208,126,0)" fg:x="97" fg:w="7"/><text x="14.9026%" y="223.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 1.06%)</title><rect x="14.6526%" y="197" width="1.0574%" height="15" fill="rgb(244,66,21)" fg:x="97" fg:w="7"/><text x="14.9026%" y="207.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.60%)</title><rect x="15.1057%" y="181" width="0.6042%" height="15" fill="rgb(222,97,12)" fg:x="100" fg:w="4"/><text x="15.3557%" y="191.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.60%)</title><rect x="15.1057%" y="165" width="0.6042%" height="15" fill="rgb(219,213,19)" fg:x="100" fg:w="4"/><text x="15.3557%" y="175.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="15.2568%" y="149" width="0.4532%" height="15" fill="rgb(252,169,30)" fg:x="101" fg:w="3"/><text x="15.5068%" y="159.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="15.2568%" y="133" width="0.4532%" height="15" fill="rgb(206,32,51)" fg:x="101" fg:w="3"/><text x="15.5068%" y="143.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (24 samples, 3.63%)</title><rect x="12.5378%" y="837" width="3.6254%" height="15" fill="rgb(250,172,42)" fg:x="83" fg:w="24"/><text x="12.7878%" y="847.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (24 samples, 3.63%)</title><rect x="12.5378%" y="821" width="3.6254%" height="15" fill="rgb(209,34,43)" fg:x="83" fg:w="24"/><text x="12.7878%" y="831.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="805" width="3.6254%" height="15" fill="rgb(223,11,35)" fg:x="83" fg:w="24"/><text x="12.7878%" y="815.50">fuzz..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="789" width="3.6254%" height="15" fill="rgb(251,219,26)" fg:x="83" fg:w="24"/><text x="12.7878%" y="799.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="773" width="3.6254%" height="15" fill="rgb(231,119,3)" fg:x="83" fg:w="24"/><text x="12.7878%" y="783.50">fuzz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="757" width="3.6254%" height="15" fill="rgb(216,97,11)" fg:x="83" fg:w="24"/><text x="12.7878%" y="767.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="741" width="3.6254%" height="15" fill="rgb(223,59,9)" fg:x="83" fg:w="24"/><text x="12.7878%" y="751.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (24 samples, 3.63%)</title><rect x="12.5378%" y="725" width="3.6254%" height="15" fill="rgb(233,93,31)" fg:x="83" fg:w="24"/><text x="12.7878%" y="735.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="709" width="3.6254%" height="15" fill="rgb(239,81,33)" fg:x="83" fg:w="24"/><text x="12.7878%" y="719.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="693" width="3.6254%" height="15" fill="rgb(213,120,34)" fg:x="83" fg:w="24"/><text x="12.7878%" y="703.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="677" width="3.6254%" height="15" fill="rgb(243,49,53)" fg:x="83" fg:w="24"/><text x="12.7878%" y="687.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="661" width="3.6254%" height="15" fill="rgb(247,216,33)" fg:x="83" fg:w="24"/><text x="12.7878%" y="671.50">fuzz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="645" width="3.6254%" height="15" fill="rgb(226,26,14)" fg:x="83" fg:w="24"/><text x="12.7878%" y="655.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="629" width="3.6254%" height="15" fill="rgb(215,49,53)" fg:x="83" fg:w="24"/><text x="12.7878%" y="639.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (24 samples, 3.63%)</title><rect x="12.5378%" y="613" width="3.6254%" height="15" fill="rgb(245,162,40)" fg:x="83" fg:w="24"/><text x="12.7878%" y="623.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="597" width="3.6254%" height="15" fill="rgb(229,68,17)" fg:x="83" fg:w="24"/><text x="12.7878%" y="607.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (24 samples, 3.63%)</title><rect x="12.5378%" y="581" width="3.6254%" height="15" fill="rgb(213,182,10)" fg:x="83" fg:w="24"/><text x="12.7878%" y="591.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (24 samples, 3.63%)</title><rect x="12.5378%" y="565" width="3.6254%" height="15" fill="rgb(245,125,30)" fg:x="83" fg:w="24"/><text x="12.7878%" y="575.50">fuzz..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (24 samples, 3.63%)</title><rect x="12.5378%" y="549" width="3.6254%" height="15" fill="rgb(232,202,2)" fg:x="83" fg:w="24"/><text x="12.7878%" y="559.50">fuzz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (24 samples, 3.63%)</title><rect x="12.5378%" y="533" width="3.6254%" height="15" fill="rgb(237,140,51)" fg:x="83" fg:w="24"/><text x="12.7878%" y="543.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (24 samples, 3.63%)</title><rect x="12.5378%" y="517" width="3.6254%" height="15" fill="rgb(236,157,25)" fg:x="83" fg:w="24"/><text x="12.7878%" y="527.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (24 samples, 3.63%)</title><rect x="12.5378%" y="501" width="3.6254%" height="15" fill="rgb(219,209,0)" fg:x="83" fg:w="24"/><text x="12.7878%" y="511.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="14.3505%" y="485" width="1.8127%" height="15" fill="rgb(240,116,54)" fg:x="95" fg:w="12"/><text x="14.6005%" y="495.50">f..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="14.3505%" y="469" width="1.8127%" height="15" fill="rgb(216,10,36)" fg:x="95" fg:w="12"/><text x="14.6005%" y="479.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="14.3505%" y="453" width="1.8127%" height="15" fill="rgb(222,72,44)" fg:x="95" fg:w="12"/><text x="14.6005%" y="463.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.81%)</title><rect x="14.3505%" y="437" width="1.8127%" height="15" fill="rgb(232,159,9)" fg:x="95" fg:w="12"/><text x="14.6005%" y="447.50">f..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="14.3505%" y="421" width="1.8127%" height="15" fill="rgb(210,39,32)" fg:x="95" fg:w="12"/><text x="14.6005%" y="431.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="14.3505%" y="405" width="1.8127%" height="15" fill="rgb(216,194,45)" fg:x="95" fg:w="12"/><text x="14.6005%" y="415.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="14.3505%" y="389" width="1.8127%" height="15" fill="rgb(218,18,35)" fg:x="95" fg:w="12"/><text x="14.6005%" y="399.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (12 samples, 1.81%)</title><rect x="14.3505%" y="373" width="1.8127%" height="15" fill="rgb(207,83,51)" fg:x="95" fg:w="12"/><text x="14.6005%" y="383.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="14.3505%" y="357" width="1.8127%" height="15" fill="rgb(225,63,43)" fg:x="95" fg:w="12"/><text x="14.6005%" y="367.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.81%)</title><rect x="14.3505%" y="341" width="1.8127%" height="15" fill="rgb(207,57,36)" fg:x="95" fg:w="12"/><text x="14.6005%" y="351.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="14.3505%" y="325" width="1.8127%" height="15" fill="rgb(216,99,33)" fg:x="95" fg:w="12"/><text x="14.6005%" y="335.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.81%)</title><rect x="14.3505%" y="309" width="1.8127%" height="15" fill="rgb(225,42,16)" fg:x="95" fg:w="12"/><text x="14.6005%" y="319.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.81%)</title><rect x="14.3505%" y="293" width="1.8127%" height="15" fill="rgb(220,201,45)" fg:x="95" fg:w="12"/><text x="14.6005%" y="303.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.66%)</title><rect x="14.5015%" y="277" width="1.6616%" height="15" fill="rgb(225,33,4)" fg:x="96" fg:w="11"/><text x="14.7515%" y="287.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.66%)</title><rect x="14.5015%" y="261" width="1.6616%" height="15" fill="rgb(224,33,50)" fg:x="96" fg:w="11"/><text x="14.7515%" y="271.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="15.7100%" y="245" width="0.4532%" height="15" fill="rgb(246,198,51)" fg:x="104" fg:w="3"/><text x="15.9600%" y="255.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="15.7100%" y="229" width="0.4532%" height="15" fill="rgb(205,22,4)" fg:x="104" fg:w="3"/><text x="15.9600%" y="239.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (3 samples, 0.45%)</title><rect x="15.7100%" y="213" width="0.4532%" height="15" fill="rgb(206,3,8)" fg:x="104" fg:w="3"/><text x="15.9600%" y="223.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="15.7100%" y="197" width="0.4532%" height="15" fill="rgb(251,23,15)" fg:x="104" fg:w="3"/><text x="15.9600%" y="207.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="15.7100%" y="181" width="0.4532%" height="15" fill="rgb(252,88,28)" fg:x="104" fg:w="3"/><text x="15.9600%" y="191.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (3 samples, 0.45%)</title><rect x="15.7100%" y="165" width="0.4532%" height="15" fill="rgb(212,127,14)" fg:x="104" fg:w="3"/><text x="15.9600%" y="175.50"></text></g><g><title>`0x7FFE2C81DF99 (3 samples, 0.45%)</title><rect x="15.7100%" y="149" width="0.4532%" height="15" fill="rgb(247,145,37)" fg:x="104" fg:w="3"/><text x="15.9600%" y="159.50"></text></g><g><title>`0x7FFE2F1A39D4 (3 samples, 0.45%)</title><rect x="15.7100%" y="133" width="0.4532%" height="15" fill="rgb(209,117,53)" fg:x="104" fg:w="3"/><text x="15.9600%" y="143.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (25 samples, 3.78%)</title><rect x="12.5378%" y="869" width="3.7764%" height="15" fill="rgb(212,90,42)" fg:x="83" fg:w="25"/><text x="12.7878%" y="879.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 3.78%)</title><rect x="12.5378%" y="853" width="3.7764%" height="15" fill="rgb(218,164,37)" fg:x="83" fg:w="25"/><text x="12.7878%" y="863.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::take_local_job (1 samples, 0.15%)</title><rect x="16.1631%" y="837" width="0.1511%" height="15" fill="rgb(246,65,34)" fg:x="107" fg:w="1"/><text x="16.4131%" y="847.50"></text></g><g><title>fuzzit.exe`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal&lt;rayon_core::job::JobRef&gt; (1 samples, 0.15%)</title><rect x="16.1631%" y="821" width="0.1511%" height="15" fill="rgb(231,100,33)" fg:x="107" fg:w="1"/><text x="16.4131%" y="831.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.15%)</title><rect x="16.3142%" y="565" width="0.1511%" height="15" fill="rgb(228,126,14)" fg:x="108" fg:w="1"/><text x="16.5642%" y="575.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="16.3142%" y="549" width="0.1511%" height="15" fill="rgb(215,173,21)" fg:x="108" fg:w="1"/><text x="16.5642%" y="559.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="16.3142%" y="533" width="0.1511%" height="15" fill="rgb(210,6,40)" fg:x="108" fg:w="1"/><text x="16.5642%" y="543.50"></text></g><g><title>`0x7FFE2C8776C5 (2 samples, 0.30%)</title><rect x="16.4653%" y="565" width="0.3021%" height="15" fill="rgb(212,48,18)" fg:x="109" fg:w="2"/><text x="16.7153%" y="575.50"></text></g><g><title>`0x7FFE2F1A4C44 (2 samples, 0.30%)</title><rect x="16.4653%" y="549" width="0.3021%" height="15" fill="rgb(230,214,11)" fg:x="109" fg:w="2"/><text x="16.7153%" y="559.50"></text></g><g><title>`0x7FFE2DD2D5B5 (1 samples, 0.15%)</title><rect x="16.7674%" y="533" width="0.1511%" height="15" fill="rgb(254,105,39)" fg:x="111" fg:w="1"/><text x="17.0174%" y="543.50"></text></g><g><title>`0x7FFE2DD2E2FE (1 samples, 0.15%)</title><rect x="16.7674%" y="517" width="0.1511%" height="15" fill="rgb(245,158,5)" fg:x="111" fg:w="1"/><text x="17.0174%" y="527.50"></text></g><g><title>`0x7FFE2C7FDD0F (1 samples, 0.15%)</title><rect x="16.7674%" y="501" width="0.1511%" height="15" fill="rgb(249,208,11)" fg:x="111" fg:w="1"/><text x="17.0174%" y="511.50"></text></g><g><title>`0x7FFE2F054F17 (1 samples, 0.15%)</title><rect x="16.7674%" y="485" width="0.1511%" height="15" fill="rgb(210,39,28)" fg:x="111" fg:w="1"/><text x="17.0174%" y="495.50"></text></g><g><title>`0x7FFE2F0BB3E6 (1 samples, 0.15%)</title><rect x="16.7674%" y="469" width="0.1511%" height="15" fill="rgb(211,56,53)" fg:x="111" fg:w="1"/><text x="17.0174%" y="479.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.45%)</title><rect x="16.7674%" y="565" width="0.4532%" height="15" fill="rgb(226,201,30)" fg:x="111" fg:w="3"/><text x="17.0174%" y="575.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.45%)</title><rect x="16.7674%" y="549" width="0.4532%" height="15" fill="rgb(239,101,34)" fg:x="111" fg:w="3"/><text x="17.0174%" y="559.50"></text></g><g><title>`0x7FFE2DD2D646 (2 samples, 0.30%)</title><rect x="16.9184%" y="533" width="0.3021%" height="15" fill="rgb(226,209,5)" fg:x="112" fg:w="2"/><text x="17.1684%" y="543.50"></text></g><g><title>`0x7FFE2F1A3BB4 (2 samples, 0.30%)</title><rect x="16.9184%" y="517" width="0.3021%" height="15" fill="rgb(250,105,47)" fg:x="112" fg:w="2"/><text x="17.1684%" y="527.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 1.06%)</title><rect x="16.3142%" y="629" width="1.0574%" height="15" fill="rgb(230,72,3)" fg:x="108" fg:w="7"/><text x="16.5642%" y="639.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 1.06%)</title><rect x="16.3142%" y="613" width="1.0574%" height="15" fill="rgb(232,218,39)" fg:x="108" fg:w="7"/><text x="16.5642%" y="623.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 1.06%)</title><rect x="16.3142%" y="597" width="1.0574%" height="15" fill="rgb(248,166,6)" fg:x="108" fg:w="7"/><text x="16.5642%" y="607.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 1.06%)</title><rect x="16.3142%" y="581" width="1.0574%" height="15" fill="rgb(247,89,20)" fg:x="108" fg:w="7"/><text x="16.5642%" y="591.50"></text></g><g><title>`0x7FFE2C878B3F (1 samples, 0.15%)</title><rect x="17.2205%" y="565" width="0.1511%" height="15" fill="rgb(248,130,54)" fg:x="114" fg:w="1"/><text x="17.4705%" y="575.50"></text></g><g><title>`0x7FFE2F075D02 (1 samples, 0.15%)</title><rect x="17.2205%" y="549" width="0.1511%" height="15" fill="rgb(234,196,4)" fg:x="114" fg:w="1"/><text x="17.4705%" y="559.50"></text></g><g><title>`0x7FFE2F1A43E4 (1 samples, 0.15%)</title><rect x="17.2205%" y="533" width="0.1511%" height="15" fill="rgb(250,143,31)" fg:x="114" fg:w="1"/><text x="17.4705%" y="543.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::LatchRef&lt;rayon_core::latch::LockLatch&gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1493" width="5.5891%" height="15" fill="rgb(211,110,34)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1503.50">fuzzit...</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt; &gt;::call(rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1477" width="5.5891%" height="15" fill="rgb(215,124,48)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1487.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1461" width="5.5891%" height="15" fill="rgb(216,46,13)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1471.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1445" width="5.5891%" height="15" fill="rgb(205,184,25)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1455.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1429" width="5.5891%" height="15" fill="rgb(228,1,10)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1439.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (37 samples, 5.59%)</title><rect x="12.3867%" y="1413" width="5.5891%" height="15" fill="rgb(213,116,27)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1423.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1397" width="5.5891%" height="15" fill="rgb(241,95,50)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1407.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1381" width="5.5891%" height="15" fill="rgb(238,48,32)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1391.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1365" width="5.5891%" height="15" fill="rgb(235,113,49)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1375.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1349" width="5.5891%" height="15" fill="rgb(205,127,43)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1359.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (37 samples, 5.59%)</title><rect x="12.3867%" y="1333" width="5.5891%" height="15" fill="rgb(250,162,2)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1343.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1317" width="5.5891%" height="15" fill="rgb(220,13,41)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1327.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1301" width="5.5891%" height="15" fill="rgb(249,221,25)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1311.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (37 samples, 5.59%)</title><rect x="12.3867%" y="1285" width="5.5891%" height="15" fill="rgb(215,208,19)" fg:x="82" fg:w="37"/><text x="12.6367%" y="1295.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1269" width="5.4381%" height="15" fill="rgb(236,175,2)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1279.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1253" width="5.4381%" height="15" fill="rgb(241,52,2)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1263.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1237" width="5.4381%" height="15" fill="rgb(248,140,14)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1247.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (36 samples, 5.44%)</title><rect x="12.5378%" y="1221" width="5.4381%" height="15" fill="rgb(253,22,42)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1231.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1205" width="5.4381%" height="15" fill="rgb(234,61,47)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1215.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1189" width="5.4381%" height="15" fill="rgb(208,226,15)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1199.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1173" width="5.4381%" height="15" fill="rgb(217,221,4)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1183.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1157" width="5.4381%" height="15" fill="rgb(212,174,34)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1167.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1141" width="5.4381%" height="15" fill="rgb(253,83,4)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1151.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1125" width="5.4381%" height="15" fill="rgb(250,195,49)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1135.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (36 samples, 5.44%)</title><rect x="12.5378%" y="1109" width="5.4381%" height="15" fill="rgb(241,192,25)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1119.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1093" width="5.4381%" height="15" fill="rgb(208,124,10)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1103.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1077" width="5.4381%" height="15" fill="rgb(222,33,0)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1087.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1061" width="5.4381%" height="15" fill="rgb(234,209,28)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1071.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1045" width="5.4381%" height="15" fill="rgb(224,11,23)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1055.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1029" width="5.4381%" height="15" fill="rgb(232,99,1)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1039.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="1013" width="5.4381%" height="15" fill="rgb(237,95,45)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1023.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (36 samples, 5.44%)</title><rect x="12.5378%" y="997" width="5.4381%" height="15" fill="rgb(208,109,11)" fg:x="83" fg:w="36"/><text x="12.7878%" y="1007.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="981" width="5.4381%" height="15" fill="rgb(216,190,48)" fg:x="83" fg:w="36"/><text x="12.7878%" y="991.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (36 samples, 5.44%)</title><rect x="12.5378%" y="965" width="5.4381%" height="15" fill="rgb(251,171,36)" fg:x="83" fg:w="36"/><text x="12.7878%" y="975.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (36 samples, 5.44%)</title><rect x="12.5378%" y="949" width="5.4381%" height="15" fill="rgb(230,62,22)" fg:x="83" fg:w="36"/><text x="12.7878%" y="959.50">fuzzit...</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (36 samples, 5.44%)</title><rect x="12.5378%" y="933" width="5.4381%" height="15" fill="rgb(225,114,35)" fg:x="83" fg:w="36"/><text x="12.7878%" y="943.50">fuzzit...</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (36 samples, 5.44%)</title><rect x="12.5378%" y="917" width="5.4381%" height="15" fill="rgb(215,118,42)" fg:x="83" fg:w="36"/><text x="12.7878%" y="927.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (36 samples, 5.44%)</title><rect x="12.5378%" y="901" width="5.4381%" height="15" fill="rgb(243,119,21)" fg:x="83" fg:w="36"/><text x="12.7878%" y="911.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (36 samples, 5.44%)</title><rect x="12.5378%" y="885" width="5.4381%" height="15" fill="rgb(252,177,53)" fg:x="83" fg:w="36"/><text x="12.7878%" y="895.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="16.3142%" y="869" width="1.6616%" height="15" fill="rgb(237,209,29)" fg:x="108" fg:w="11"/><text x="16.5642%" y="879.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="16.3142%" y="853" width="1.6616%" height="15" fill="rgb(212,65,23)" fg:x="108" fg:w="11"/><text x="16.5642%" y="863.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="16.3142%" y="837" width="1.6616%" height="15" fill="rgb(230,222,46)" fg:x="108" fg:w="11"/><text x="16.5642%" y="847.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (11 samples, 1.66%)</title><rect x="16.3142%" y="821" width="1.6616%" height="15" fill="rgb(215,135,32)" fg:x="108" fg:w="11"/><text x="16.5642%" y="831.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="16.3142%" y="805" width="1.6616%" height="15" fill="rgb(246,101,22)" fg:x="108" fg:w="11"/><text x="16.5642%" y="815.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="16.3142%" y="789" width="1.6616%" height="15" fill="rgb(206,107,13)" fg:x="108" fg:w="11"/><text x="16.5642%" y="799.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="16.3142%" y="773" width="1.6616%" height="15" fill="rgb(250,100,44)" fg:x="108" fg:w="11"/><text x="16.5642%" y="783.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (11 samples, 1.66%)</title><rect x="16.3142%" y="757" width="1.6616%" height="15" fill="rgb(231,147,38)" fg:x="108" fg:w="11"/><text x="16.5642%" y="767.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="16.3142%" y="741" width="1.6616%" height="15" fill="rgb(229,8,40)" fg:x="108" fg:w="11"/><text x="16.5642%" y="751.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (11 samples, 1.66%)</title><rect x="16.3142%" y="725" width="1.6616%" height="15" fill="rgb(221,135,30)" fg:x="108" fg:w="11"/><text x="16.5642%" y="735.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="16.3142%" y="709" width="1.6616%" height="15" fill="rgb(249,193,18)" fg:x="108" fg:w="11"/><text x="16.5642%" y="719.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (11 samples, 1.66%)</title><rect x="16.3142%" y="693" width="1.6616%" height="15" fill="rgb(209,133,39)" fg:x="108" fg:w="11"/><text x="16.5642%" y="703.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (11 samples, 1.66%)</title><rect x="16.3142%" y="677" width="1.6616%" height="15" fill="rgb(232,100,14)" fg:x="108" fg:w="11"/><text x="16.5642%" y="687.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.66%)</title><rect x="16.3142%" y="661" width="1.6616%" height="15" fill="rgb(224,185,1)" fg:x="108" fg:w="11"/><text x="16.5642%" y="671.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.66%)</title><rect x="16.3142%" y="645" width="1.6616%" height="15" fill="rgb(223,139,8)" fg:x="108" fg:w="11"/><text x="16.5642%" y="655.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (4 samples, 0.60%)</title><rect x="17.3716%" y="629" width="0.6042%" height="15" fill="rgb(232,213,38)" fg:x="115" fg:w="4"/><text x="17.6216%" y="639.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (4 samples, 0.60%)</title><rect x="17.3716%" y="613" width="0.6042%" height="15" fill="rgb(207,94,22)" fg:x="115" fg:w="4"/><text x="17.6216%" y="623.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (4 samples, 0.60%)</title><rect x="17.3716%" y="597" width="0.6042%" height="15" fill="rgb(219,183,54)" fg:x="115" fg:w="4"/><text x="17.6216%" y="607.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.60%)</title><rect x="17.3716%" y="581" width="0.6042%" height="15" fill="rgb(216,185,54)" fg:x="115" fg:w="4"/><text x="17.6216%" y="591.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.60%)</title><rect x="17.3716%" y="565" width="0.6042%" height="15" fill="rgb(254,217,39)" fg:x="115" fg:w="4"/><text x="17.6216%" y="575.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (4 samples, 0.60%)</title><rect x="17.3716%" y="549" width="0.6042%" height="15" fill="rgb(240,178,23)" fg:x="115" fg:w="4"/><text x="17.6216%" y="559.50"></text></g><g><title>`0x7FFE2C81DF99 (4 samples, 0.60%)</title><rect x="17.3716%" y="533" width="0.6042%" height="15" fill="rgb(218,11,47)" fg:x="115" fg:w="4"/><text x="17.6216%" y="543.50"></text></g><g><title>`0x7FFE2F1A39D4 (4 samples, 0.60%)</title><rect x="17.3716%" y="517" width="0.6042%" height="15" fill="rgb(218,51,51)" fg:x="115" fg:w="4"/><text x="17.6216%" y="527.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="17.9758%" y="1253" width="0.1511%" height="15" fill="rgb(238,126,27)" fg:x="119" fg:w="1"/><text x="18.2258%" y="1263.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.15%)</title><rect x="17.9758%" y="1237" width="0.1511%" height="15" fill="rgb(249,202,22)" fg:x="119" fg:w="1"/><text x="18.2258%" y="1247.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="17.9758%" y="1221" width="0.1511%" height="15" fill="rgb(254,195,49)" fg:x="119" fg:w="1"/><text x="18.2258%" y="1231.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.15%)</title><rect x="18.1269%" y="1237" width="0.1511%" height="15" fill="rgb(208,123,14)" fg:x="120" fg:w="1"/><text x="18.3769%" y="1247.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.15%)</title><rect x="18.1269%" y="1221" width="0.1511%" height="15" fill="rgb(224,200,8)" fg:x="120" fg:w="1"/><text x="18.3769%" y="1231.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::result (1 samples, 0.15%)</title><rect x="18.1269%" y="1205" width="0.1511%" height="15" fill="rgb(217,61,36)" fg:x="120" fg:w="1"/><text x="18.3769%" y="1215.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::overlapped_result (1 samples, 0.15%)</title><rect x="18.1269%" y="1189" width="0.1511%" height="15" fill="rgb(206,35,45)" fg:x="120" fg:w="1"/><text x="18.3769%" y="1199.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.15%)</title><rect x="18.1269%" y="1173" width="0.1511%" height="15" fill="rgb(217,65,33)" fg:x="120" fg:w="1"/><text x="18.3769%" y="1183.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.15%)</title><rect x="18.1269%" y="1157" width="0.1511%" height="15" fill="rgb(222,158,48)" fg:x="120" fg:w="1"/><text x="18.3769%" y="1167.50"></text></g><g><title>`0x7FFE2C7FE6B8 (1 samples, 0.15%)</title><rect x="18.1269%" y="1141" width="0.1511%" height="15" fill="rgb(254,2,54)" fg:x="120" fg:w="1"/><text x="18.3769%" y="1151.50"></text></g><g><title>`0x7FFE2C8DC1F3 (1 samples, 0.15%)</title><rect x="18.1269%" y="1125" width="0.1511%" height="15" fill="rgb(250,143,38)" fg:x="120" fg:w="1"/><text x="18.3769%" y="1135.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.15%)</title><rect x="18.2779%" y="1157" width="0.1511%" height="15" fill="rgb(248,25,0)" fg:x="121" fg:w="1"/><text x="18.5279%" y="1167.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.15%)</title><rect x="18.2779%" y="1141" width="0.1511%" height="15" fill="rgb(206,152,27)" fg:x="121" fg:w="1"/><text x="18.5279%" y="1151.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (2 samples, 0.30%)</title><rect x="18.2779%" y="1205" width="0.3021%" height="15" fill="rgb(240,77,30)" fg:x="121" fg:w="2"/><text x="18.5279%" y="1215.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (2 samples, 0.30%)</title><rect x="18.2779%" y="1189" width="0.3021%" height="15" fill="rgb(231,5,3)" fg:x="121" fg:w="2"/><text x="18.5279%" y="1199.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (2 samples, 0.30%)</title><rect x="18.2779%" y="1173" width="0.3021%" height="15" fill="rgb(207,226,32)" fg:x="121" fg:w="2"/><text x="18.5279%" y="1183.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="18.4290%" y="1157" width="0.1511%" height="15" fill="rgb(222,207,47)" fg:x="122" fg:w="1"/><text x="18.6790%" y="1167.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.15%)</title><rect x="18.4290%" y="1141" width="0.1511%" height="15" fill="rgb(229,115,45)" fg:x="122" fg:w="1"/><text x="18.6790%" y="1151.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.15%)</title><rect x="18.4290%" y="1125" width="0.1511%" height="15" fill="rgb(224,191,6)" fg:x="122" fg:w="1"/><text x="18.6790%" y="1135.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.15%)</title><rect x="18.4290%" y="1109" width="0.1511%" height="15" fill="rgb(230,227,24)" fg:x="122" fg:w="1"/><text x="18.6790%" y="1119.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.15%)</title><rect x="18.4290%" y="1093" width="0.1511%" height="15" fill="rgb(228,80,19)" fg:x="122" fg:w="1"/><text x="18.6790%" y="1103.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.15%)</title><rect x="18.4290%" y="1077" width="0.1511%" height="15" fill="rgb(247,229,0)" fg:x="122" fg:w="1"/><text x="18.6790%" y="1087.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="18.4290%" y="1061" width="0.1511%" height="15" fill="rgb(237,194,15)" fg:x="122" fg:w="1"/><text x="18.6790%" y="1071.50"></text></g><g><title>`0x7FFE2C8776C5 (16 samples, 2.42%)</title><rect x="18.5801%" y="1141" width="2.4169%" height="15" fill="rgb(219,203,20)" fg:x="123" fg:w="16"/><text x="18.8301%" y="1151.50">`0..</text></g><g><title>`0x7FFE2F1A4C44 (16 samples, 2.42%)</title><rect x="18.5801%" y="1125" width="2.4169%" height="15" fill="rgb(234,128,8)" fg:x="123" fg:w="16"/><text x="18.8301%" y="1135.50">`0..</text></g><g><title>`0x7FFE2DD2E4E1 (1 samples, 0.15%)</title><rect x="20.9970%" y="1093" width="0.1511%" height="15" fill="rgb(248,202,8)" fg:x="139" fg:w="1"/><text x="21.2470%" y="1103.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="20.9970%" y="1077" width="0.1511%" height="15" fill="rgb(206,104,37)" fg:x="139" fg:w="1"/><text x="21.2470%" y="1087.50"></text></g><g><title>`0x7FFE2DD2D5FB (2 samples, 0.30%)</title><rect x="20.9970%" y="1109" width="0.3021%" height="15" fill="rgb(223,8,27)" fg:x="139" fg:w="2"/><text x="21.2470%" y="1119.50"></text></g><g><title>`0x7FFE2DD2E553 (1 samples, 0.15%)</title><rect x="21.1480%" y="1093" width="0.1511%" height="15" fill="rgb(216,217,28)" fg:x="140" fg:w="1"/><text x="21.3980%" y="1103.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="21.1480%" y="1077" width="0.1511%" height="15" fill="rgb(249,199,1)" fg:x="140" fg:w="1"/><text x="21.3980%" y="1087.50"></text></g><g><title>`0x7FFE2C8787CB (15 samples, 2.27%)</title><rect x="20.9970%" y="1141" width="2.2659%" height="15" fill="rgb(240,85,17)" fg:x="139" fg:w="15"/><text x="21.2470%" y="1151.50">`..</text></g><g><title>`0x7FFE2DD2D052 (15 samples, 2.27%)</title><rect x="20.9970%" y="1125" width="2.2659%" height="15" fill="rgb(206,108,45)" fg:x="139" fg:w="15"/><text x="21.2470%" y="1135.50">`..</text></g><g><title>`0x7FFE2DD2D646 (13 samples, 1.96%)</title><rect x="21.2991%" y="1109" width="1.9637%" height="15" fill="rgb(245,210,41)" fg:x="141" fg:w="13"/><text x="21.5491%" y="1119.50">`..</text></g><g><title>`0x7FFE2F1A3BB4 (13 samples, 1.96%)</title><rect x="21.2991%" y="1093" width="1.9637%" height="15" fill="rgb(206,13,37)" fg:x="141" fg:w="13"/><text x="21.5491%" y="1103.50">`..</text></g><g><title>`0x7FFE2C87892F (1 samples, 0.15%)</title><rect x="23.2628%" y="1141" width="0.1511%" height="15" fill="rgb(250,61,18)" fg:x="154" fg:w="1"/><text x="23.5128%" y="1151.50"></text></g><g><title>`0x7FFE2DD37F15 (1 samples, 0.15%)</title><rect x="23.2628%" y="1125" width="0.1511%" height="15" fill="rgb(235,172,48)" fg:x="154" fg:w="1"/><text x="23.5128%" y="1135.50"></text></g><g><title>`0x7FFE2DD3776B (1 samples, 0.15%)</title><rect x="23.2628%" y="1109" width="0.1511%" height="15" fill="rgb(249,201,17)" fg:x="154" fg:w="1"/><text x="23.5128%" y="1119.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="23.2628%" y="1093" width="0.1511%" height="15" fill="rgb(219,208,6)" fg:x="154" fg:w="1"/><text x="23.5128%" y="1103.50"></text></g><g><title>`0x7FFE2C8796C7 (1 samples, 0.15%)</title><rect x="23.4139%" y="1141" width="0.1511%" height="15" fill="rgb(248,31,23)" fg:x="155" fg:w="1"/><text x="23.6639%" y="1151.50"></text></g><g><title>`0x7FFE2DD40D96 (1 samples, 0.15%)</title><rect x="23.4139%" y="1125" width="0.1511%" height="15" fill="rgb(245,15,42)" fg:x="155" fg:w="1"/><text x="23.6639%" y="1135.50"></text></g><g><title>`0x7FFE2DD410BE (1 samples, 0.15%)</title><rect x="23.4139%" y="1109" width="0.1511%" height="15" fill="rgb(222,217,39)" fg:x="155" fg:w="1"/><text x="23.6639%" y="1119.50"></text></g><g><title>`0x7FFE2F079E0F (1 samples, 0.15%)</title><rect x="23.4139%" y="1093" width="0.1511%" height="15" fill="rgb(210,219,27)" fg:x="155" fg:w="1"/><text x="23.6639%" y="1103.50"></text></g><g><title>`0x7FFE2F1A5E24 (1 samples, 0.15%)</title><rect x="23.4139%" y="1077" width="0.1511%" height="15" fill="rgb(252,166,36)" fg:x="155" fg:w="1"/><text x="23.6639%" y="1087.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (34 samples, 5.14%)</title><rect x="18.5801%" y="1205" width="5.1360%" height="15" fill="rgb(245,132,34)" fg:x="123" fg:w="34"/><text x="18.8301%" y="1215.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (34 samples, 5.14%)</title><rect x="18.5801%" y="1189" width="5.1360%" height="15" fill="rgb(236,54,3)" fg:x="123" fg:w="34"/><text x="18.8301%" y="1199.50">fuzzit..</text></g><g><title>`0x7FFE2DD4C6D4 (34 samples, 5.14%)</title><rect x="18.5801%" y="1173" width="5.1360%" height="15" fill="rgb(241,173,43)" fg:x="123" fg:w="34"/><text x="18.8301%" y="1183.50">`0x7FF..</text></g><g><title>`0x7FFE2C874E26 (34 samples, 5.14%)</title><rect x="18.5801%" y="1157" width="5.1360%" height="15" fill="rgb(215,190,9)" fg:x="123" fg:w="34"/><text x="18.8301%" y="1167.50">`0x7FF..</text></g><g><title>`0x7FFE2C879763 (1 samples, 0.15%)</title><rect x="23.5650%" y="1141" width="0.1511%" height="15" fill="rgb(242,101,16)" fg:x="156" fg:w="1"/><text x="23.8150%" y="1151.50"></text></g><g><title>`0x7FFE2F1A3974 (1 samples, 0.15%)</title><rect x="23.5650%" y="1125" width="0.1511%" height="15" fill="rgb(223,190,21)" fg:x="156" fg:w="1"/><text x="23.8150%" y="1135.50"></text></g><g><title>`0x7FFE2C8CFD81 (1 samples, 0.15%)</title><rect x="23.7160%" y="1173" width="0.1511%" height="15" fill="rgb(215,228,25)" fg:x="157" fg:w="1"/><text x="23.9660%" y="1183.50"></text></g><g><title>`0x7FFE2F0A5BCA (1 samples, 0.15%)</title><rect x="23.7160%" y="1157" width="0.1511%" height="15" fill="rgb(225,36,22)" fg:x="157" fg:w="1"/><text x="23.9660%" y="1167.50"></text></g><g><title>`0x7FFE2F1A3654 (1 samples, 0.15%)</title><rect x="23.7160%" y="1141" width="0.1511%" height="15" fill="rgb(251,106,46)" fg:x="157" fg:w="1"/><text x="23.9660%" y="1151.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.15%)</title><rect x="23.8671%" y="1173" width="0.1511%" height="15" fill="rgb(208,90,1)" fg:x="158" fg:w="1"/><text x="24.1171%" y="1183.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.15%)</title><rect x="23.8671%" y="1157" width="0.1511%" height="15" fill="rgb(243,10,4)" fg:x="158" fg:w="1"/><text x="24.1171%" y="1167.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (3 samples, 0.45%)</title><rect x="23.7160%" y="1205" width="0.4532%" height="15" fill="rgb(212,137,27)" fg:x="157" fg:w="3"/><text x="23.9660%" y="1215.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (3 samples, 0.45%)</title><rect x="23.7160%" y="1189" width="0.4532%" height="15" fill="rgb(231,220,49)" fg:x="157" fg:w="3"/><text x="23.9660%" y="1199.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="24.0181%" y="1173" width="0.1511%" height="15" fill="rgb(237,96,20)" fg:x="159" fg:w="1"/><text x="24.2681%" y="1183.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.15%)</title><rect x="24.0181%" y="1157" width="0.1511%" height="15" fill="rgb(239,229,30)" fg:x="159" fg:w="1"/><text x="24.2681%" y="1167.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.15%)</title><rect x="24.0181%" y="1141" width="0.1511%" height="15" fill="rgb(219,65,33)" fg:x="159" fg:w="1"/><text x="24.2681%" y="1151.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.15%)</title><rect x="24.0181%" y="1125" width="0.1511%" height="15" fill="rgb(243,134,7)" fg:x="159" fg:w="1"/><text x="24.2681%" y="1135.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.15%)</title><rect x="24.0181%" y="1109" width="0.1511%" height="15" fill="rgb(216,177,54)" fg:x="159" fg:w="1"/><text x="24.2681%" y="1119.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.15%)</title><rect x="24.0181%" y="1093" width="0.1511%" height="15" fill="rgb(211,160,20)" fg:x="159" fg:w="1"/><text x="24.2681%" y="1103.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="24.0181%" y="1077" width="0.1511%" height="15" fill="rgb(239,85,39)" fg:x="159" fg:w="1"/><text x="24.2681%" y="1087.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (2 samples, 0.30%)</title><rect x="24.1692%" y="1157" width="0.3021%" height="15" fill="rgb(232,125,22)" fg:x="160" fg:w="2"/><text x="24.4192%" y="1167.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="24.1692%" y="1141" width="0.3021%" height="15" fill="rgb(244,57,34)" fg:x="160" fg:w="2"/><text x="24.4192%" y="1151.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="24.1692%" y="1125" width="0.3021%" height="15" fill="rgb(214,203,32)" fg:x="160" fg:w="2"/><text x="24.4192%" y="1135.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="24.1692%" y="1109" width="0.3021%" height="15" fill="rgb(207,58,43)" fg:x="160" fg:w="2"/><text x="24.4192%" y="1119.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="24.1692%" y="1093" width="0.3021%" height="15" fill="rgb(215,193,15)" fg:x="160" fg:w="2"/><text x="24.4192%" y="1103.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.30%)</title><rect x="24.1692%" y="1077" width="0.3021%" height="15" fill="rgb(232,15,44)" fg:x="160" fg:w="2"/><text x="24.4192%" y="1087.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.30%)</title><rect x="24.1692%" y="1061" width="0.3021%" height="15" fill="rgb(212,3,48)" fg:x="160" fg:w="2"/><text x="24.4192%" y="1071.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (3 samples, 0.45%)</title><rect x="24.1692%" y="1173" width="0.4532%" height="15" fill="rgb(218,128,7)" fg:x="160" fg:w="3"/><text x="24.4192%" y="1183.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (1 samples, 0.15%)</title><rect x="24.4713%" y="1157" width="0.1511%" height="15" fill="rgb(226,216,39)" fg:x="162" fg:w="1"/><text x="24.7213%" y="1167.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="24.4713%" y="1141" width="0.1511%" height="15" fill="rgb(243,47,51)" fg:x="162" fg:w="1"/><text x="24.7213%" y="1151.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="24.4713%" y="1125" width="0.1511%" height="15" fill="rgb(241,183,40)" fg:x="162" fg:w="1"/><text x="24.7213%" y="1135.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="24.4713%" y="1109" width="0.1511%" height="15" fill="rgb(231,217,32)" fg:x="162" fg:w="1"/><text x="24.7213%" y="1119.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="24.4713%" y="1093" width="0.1511%" height="15" fill="rgb(229,61,38)" fg:x="162" fg:w="1"/><text x="24.7213%" y="1103.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="24.4713%" y="1077" width="0.1511%" height="15" fill="rgb(225,210,5)" fg:x="162" fg:w="1"/><text x="24.7213%" y="1087.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="24.4713%" y="1061" width="0.1511%" height="15" fill="rgb(231,79,45)" fg:x="162" fg:w="1"/><text x="24.7213%" y="1071.50"></text></g><g><title>`0x7FFE2C81DF4E (1 samples, 0.15%)</title><rect x="24.6224%" y="1109" width="0.1511%" height="15" fill="rgb(224,100,7)" fg:x="163" fg:w="1"/><text x="24.8724%" y="1119.50"></text></g><g><title>`0x7FFE2F11D2DD (1 samples, 0.15%)</title><rect x="24.6224%" y="1093" width="0.1511%" height="15" fill="rgb(241,198,18)" fg:x="163" fg:w="1"/><text x="24.8724%" y="1103.50"></text></g><g><title>`0x7FFE2F055969 (1 samples, 0.15%)</title><rect x="24.6224%" y="1077" width="0.1511%" height="15" fill="rgb(252,97,53)" fg:x="163" fg:w="1"/><text x="24.8724%" y="1087.50"></text></g><g><title>`0x7FFE2F057917 (1 samples, 0.15%)</title><rect x="24.6224%" y="1061" width="0.1511%" height="15" fill="rgb(220,88,7)" fg:x="163" fg:w="1"/><text x="24.8724%" y="1071.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (53 samples, 8.01%)</title><rect x="17.9758%" y="1493" width="8.0060%" height="15" fill="rgb(213,176,14)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1503.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (53 samples, 8.01%)</title><rect x="17.9758%" y="1477" width="8.0060%" height="15" fill="rgb(246,73,7)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1487.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (53 samples, 8.01%)</title><rect x="17.9758%" y="1461" width="8.0060%" height="15" fill="rgb(245,64,36)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1471.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (53 samples, 8.01%)</title><rect x="17.9758%" y="1445" width="8.0060%" height="15" fill="rgb(245,80,10)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1455.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (53 samples, 8.01%)</title><rect x="17.9758%" y="1429" width="8.0060%" height="15" fill="rgb(232,107,50)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1439.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (53 samples, 8.01%)</title><rect x="17.9758%" y="1413" width="8.0060%" height="15" fill="rgb(253,3,0)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1423.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (53 samples, 8.01%)</title><rect x="17.9758%" y="1397" width="8.0060%" height="15" fill="rgb(212,99,53)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1407.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (53 samples, 8.01%)</title><rect x="17.9758%" y="1381" width="8.0060%" height="15" fill="rgb(249,111,54)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1391.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (53 samples, 8.01%)</title><rect x="17.9758%" y="1365" width="8.0060%" height="15" fill="rgb(249,55,30)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1375.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (53 samples, 8.01%)</title><rect x="17.9758%" y="1349" width="8.0060%" height="15" fill="rgb(237,47,42)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1359.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (53 samples, 8.01%)</title><rect x="17.9758%" y="1333" width="8.0060%" height="15" fill="rgb(211,20,18)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1343.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (53 samples, 8.01%)</title><rect x="17.9758%" y="1317" width="8.0060%" height="15" fill="rgb(231,203,46)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1327.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (53 samples, 8.01%)</title><rect x="17.9758%" y="1301" width="8.0060%" height="15" fill="rgb(237,142,3)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1311.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (53 samples, 8.01%)</title><rect x="17.9758%" y="1285" width="8.0060%" height="15" fill="rgb(241,107,1)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1295.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::process::Command::output (53 samples, 8.01%)</title><rect x="17.9758%" y="1269" width="8.0060%" height="15" fill="rgb(229,83,13)" fg:x="119" fg:w="53"/><text x="18.2258%" y="1279.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::sys::process::output (52 samples, 7.85%)</title><rect x="18.1269%" y="1253" width="7.8550%" height="15" fill="rgb(241,91,40)" fg:x="120" fg:w="52"/><text x="18.3769%" y="1263.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (51 samples, 7.70%)</title><rect x="18.2779%" y="1237" width="7.7039%" height="15" fill="rgb(225,3,45)" fg:x="121" fg:w="51"/><text x="18.5279%" y="1247.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (51 samples, 7.70%)</title><rect x="18.2779%" y="1221" width="7.7039%" height="15" fill="rgb(244,223,14)" fg:x="121" fg:w="51"/><text x="18.5279%" y="1231.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (12 samples, 1.81%)</title><rect x="24.1692%" y="1205" width="1.8127%" height="15" fill="rgb(224,124,37)" fg:x="160" fg:w="12"/><text x="24.4192%" y="1215.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (12 samples, 1.81%)</title><rect x="24.1692%" y="1189" width="1.8127%" height="15" fill="rgb(251,171,30)" fg:x="160" fg:w="12"/><text x="24.4192%" y="1199.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (9 samples, 1.36%)</title><rect x="24.6224%" y="1173" width="1.3595%" height="15" fill="rgb(236,46,54)" fg:x="163" fg:w="9"/><text x="24.8724%" y="1183.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (9 samples, 1.36%)</title><rect x="24.6224%" y="1157" width="1.3595%" height="15" fill="rgb(245,213,5)" fg:x="163" fg:w="9"/><text x="24.8724%" y="1167.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (9 samples, 1.36%)</title><rect x="24.6224%" y="1141" width="1.3595%" height="15" fill="rgb(230,144,27)" fg:x="163" fg:w="9"/><text x="24.8724%" y="1151.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (9 samples, 1.36%)</title><rect x="24.6224%" y="1125" width="1.3595%" height="15" fill="rgb(220,86,6)" fg:x="163" fg:w="9"/><text x="24.8724%" y="1135.50"></text></g><g><title>`0x7FFE2C81DF99 (8 samples, 1.21%)</title><rect x="24.7734%" y="1109" width="1.2085%" height="15" fill="rgb(240,20,13)" fg:x="164" fg:w="8"/><text x="25.0234%" y="1119.50"></text></g><g><title>`0x7FFE2F1A39D4 (8 samples, 1.21%)</title><rect x="24.7734%" y="1093" width="1.2085%" height="15" fill="rgb(217,89,34)" fg:x="164" fg:w="8"/><text x="25.0234%" y="1103.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.15%)</title><rect x="25.9819%" y="1045" width="0.1511%" height="15" fill="rgb(229,13,5)" fg:x="172" fg:w="1"/><text x="26.2319%" y="1055.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.15%)</title><rect x="25.9819%" y="1029" width="0.1511%" height="15" fill="rgb(244,67,35)" fg:x="172" fg:w="1"/><text x="26.2319%" y="1039.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.15%)</title><rect x="25.9819%" y="1013" width="0.1511%" height="15" fill="rgb(221,40,2)" fg:x="172" fg:w="1"/><text x="26.2319%" y="1023.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="25.9819%" y="997" width="0.1511%" height="15" fill="rgb(237,157,21)" fg:x="172" fg:w="1"/><text x="26.2319%" y="1007.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="26.1329%" y="1045" width="0.4532%" height="15" fill="rgb(222,94,11)" fg:x="173" fg:w="3"/><text x="26.3829%" y="1055.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="26.1329%" y="1029" width="0.4532%" height="15" fill="rgb(249,113,6)" fg:x="173" fg:w="3"/><text x="26.3829%" y="1039.50"></text></g><g><title>`0x7FFE2DD2D5FB (1 samples, 0.15%)</title><rect x="26.5861%" y="1013" width="0.1511%" height="15" fill="rgb(238,137,36)" fg:x="176" fg:w="1"/><text x="26.8361%" y="1023.50"></text></g><g><title>`0x7FFE2DD2E523 (1 samples, 0.15%)</title><rect x="26.5861%" y="997" width="0.1511%" height="15" fill="rgb(210,102,26)" fg:x="176" fg:w="1"/><text x="26.8361%" y="1007.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.15%)</title><rect x="26.5861%" y="981" width="0.1511%" height="15" fill="rgb(218,30,30)" fg:x="176" fg:w="1"/><text x="26.8361%" y="991.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.45%)</title><rect x="26.5861%" y="1045" width="0.4532%" height="15" fill="rgb(214,67,26)" fg:x="176" fg:w="3"/><text x="26.8361%" y="1055.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.45%)</title><rect x="26.5861%" y="1029" width="0.4532%" height="15" fill="rgb(251,9,53)" fg:x="176" fg:w="3"/><text x="26.8361%" y="1039.50"></text></g><g><title>`0x7FFE2DD2D646 (2 samples, 0.30%)</title><rect x="26.7372%" y="1013" width="0.3021%" height="15" fill="rgb(228,204,25)" fg:x="177" fg:w="2"/><text x="26.9872%" y="1023.50"></text></g><g><title>`0x7FFE2F1A3BB4 (2 samples, 0.30%)</title><rect x="26.7372%" y="997" width="0.3021%" height="15" fill="rgb(207,153,8)" fg:x="177" fg:w="2"/><text x="26.9872%" y="1007.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.21%)</title><rect x="25.9819%" y="1109" width="1.2085%" height="15" fill="rgb(242,9,16)" fg:x="172" fg:w="8"/><text x="26.2319%" y="1119.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.21%)</title><rect x="25.9819%" y="1093" width="1.2085%" height="15" fill="rgb(217,211,10)" fg:x="172" fg:w="8"/><text x="26.2319%" y="1103.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.21%)</title><rect x="25.9819%" y="1077" width="1.2085%" height="15" fill="rgb(219,228,52)" fg:x="172" fg:w="8"/><text x="26.2319%" y="1087.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.21%)</title><rect x="25.9819%" y="1061" width="1.2085%" height="15" fill="rgb(231,92,29)" fg:x="172" fg:w="8"/><text x="26.2319%" y="1071.50"></text></g><g><title>`0x7FFE2C87892F (1 samples, 0.15%)</title><rect x="27.0393%" y="1045" width="0.1511%" height="15" fill="rgb(232,8,23)" fg:x="179" fg:w="1"/><text x="27.2893%" y="1055.50"></text></g><g><title>`0x7FFE2DD37F15 (1 samples, 0.15%)</title><rect x="27.0393%" y="1029" width="0.1511%" height="15" fill="rgb(216,211,34)" fg:x="179" fg:w="1"/><text x="27.2893%" y="1039.50"></text></g><g><title>`0x7FFE2DD376F3 (1 samples, 0.15%)</title><rect x="27.0393%" y="1013" width="0.1511%" height="15" fill="rgb(236,151,0)" fg:x="179" fg:w="1"/><text x="27.2893%" y="1023.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="27.0393%" y="997" width="0.1511%" height="15" fill="rgb(209,168,3)" fg:x="179" fg:w="1"/><text x="27.2893%" y="1007.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="27.1903%" y="1077" width="0.1511%" height="15" fill="rgb(208,129,28)" fg:x="180" fg:w="1"/><text x="27.4403%" y="1087.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (1 samples, 0.15%)</title><rect x="27.1903%" y="1061" width="0.1511%" height="15" fill="rgb(229,78,22)" fg:x="180" fg:w="1"/><text x="27.4403%" y="1071.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="27.1903%" y="1045" width="0.1511%" height="15" fill="rgb(228,187,13)" fg:x="180" fg:w="1"/><text x="27.4403%" y="1055.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="27.1903%" y="1029" width="0.1511%" height="15" fill="rgb(240,119,24)" fg:x="180" fg:w="1"/><text x="27.4403%" y="1039.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="27.1903%" y="1013" width="0.1511%" height="15" fill="rgb(209,194,42)" fg:x="180" fg:w="1"/><text x="27.4403%" y="1023.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="27.1903%" y="997" width="0.1511%" height="15" fill="rgb(247,200,46)" fg:x="180" fg:w="1"/><text x="27.4403%" y="1007.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="27.1903%" y="981" width="0.1511%" height="15" fill="rgb(218,76,16)" fg:x="180" fg:w="1"/><text x="27.4403%" y="991.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="27.1903%" y="965" width="0.1511%" height="15" fill="rgb(225,21,48)" fg:x="180" fg:w="1"/><text x="27.4403%" y="975.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="25.9819%" y="1285" width="1.6616%" height="15" fill="rgb(239,223,50)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1295.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="25.9819%" y="1269" width="1.6616%" height="15" fill="rgb(244,45,21)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1279.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="25.9819%" y="1253" width="1.6616%" height="15" fill="rgb(232,33,43)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1263.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (11 samples, 1.66%)</title><rect x="25.9819%" y="1237" width="1.6616%" height="15" fill="rgb(209,8,3)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1247.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="25.9819%" y="1221" width="1.6616%" height="15" fill="rgb(214,25,53)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1231.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (11 samples, 1.66%)</title><rect x="25.9819%" y="1205" width="1.6616%" height="15" fill="rgb(254,186,54)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1215.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="25.9819%" y="1189" width="1.6616%" height="15" fill="rgb(208,174,49)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1199.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (11 samples, 1.66%)</title><rect x="25.9819%" y="1173" width="1.6616%" height="15" fill="rgb(233,191,51)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1183.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (11 samples, 1.66%)</title><rect x="25.9819%" y="1157" width="1.6616%" height="15" fill="rgb(222,134,10)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1167.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.66%)</title><rect x="25.9819%" y="1141" width="1.6616%" height="15" fill="rgb(230,226,20)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1151.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.66%)</title><rect x="25.9819%" y="1125" width="1.6616%" height="15" fill="rgb(251,111,25)" fg:x="172" fg:w="11"/><text x="26.2319%" y="1135.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="27.1903%" y="1109" width="0.4532%" height="15" fill="rgb(224,40,46)" fg:x="180" fg:w="3"/><text x="27.4403%" y="1119.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="27.1903%" y="1093" width="0.4532%" height="15" fill="rgb(236,108,47)" fg:x="180" fg:w="3"/><text x="27.4403%" y="1103.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="27.3414%" y="1077" width="0.3021%" height="15" fill="rgb(234,93,0)" fg:x="181" fg:w="2"/><text x="27.5914%" y="1087.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="27.3414%" y="1061" width="0.3021%" height="15" fill="rgb(224,213,32)" fg:x="181" fg:w="2"/><text x="27.5914%" y="1071.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="27.3414%" y="1045" width="0.3021%" height="15" fill="rgb(251,11,48)" fg:x="181" fg:w="2"/><text x="27.5914%" y="1055.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="27.3414%" y="1029" width="0.3021%" height="15" fill="rgb(236,173,5)" fg:x="181" fg:w="2"/><text x="27.5914%" y="1039.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.30%)</title><rect x="27.3414%" y="1013" width="0.3021%" height="15" fill="rgb(230,95,12)" fg:x="181" fg:w="2"/><text x="27.5914%" y="1023.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.30%)</title><rect x="27.3414%" y="997" width="0.3021%" height="15" fill="rgb(232,209,1)" fg:x="181" fg:w="2"/><text x="27.5914%" y="1007.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.15%)</title><rect x="27.6435%" y="965" width="0.1511%" height="15" fill="rgb(232,6,1)" fg:x="183" fg:w="1"/><text x="27.8935%" y="975.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.15%)</title><rect x="27.6435%" y="949" width="0.1511%" height="15" fill="rgb(210,224,50)" fg:x="183" fg:w="1"/><text x="27.8935%" y="959.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.15%)</title><rect x="27.6435%" y="933" width="0.1511%" height="15" fill="rgb(228,127,35)" fg:x="183" fg:w="1"/><text x="27.8935%" y="943.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.15%)</title><rect x="27.6435%" y="917" width="0.1511%" height="15" fill="rgb(245,102,45)" fg:x="183" fg:w="1"/><text x="27.8935%" y="927.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="27.6435%" y="901" width="0.1511%" height="15" fill="rgb(214,1,49)" fg:x="183" fg:w="1"/><text x="27.8935%" y="911.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.15%)</title><rect x="27.7946%" y="869" width="0.1511%" height="15" fill="rgb(226,163,40)" fg:x="184" fg:w="1"/><text x="28.0446%" y="879.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="27.7946%" y="853" width="0.1511%" height="15" fill="rgb(239,212,28)" fg:x="184" fg:w="1"/><text x="28.0446%" y="863.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="27.7946%" y="837" width="0.1511%" height="15" fill="rgb(220,20,13)" fg:x="184" fg:w="1"/><text x="28.0446%" y="847.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="27.9456%" y="869" width="0.4532%" height="15" fill="rgb(210,164,35)" fg:x="185" fg:w="3"/><text x="28.1956%" y="879.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="27.9456%" y="853" width="0.4532%" height="15" fill="rgb(248,109,41)" fg:x="185" fg:w="3"/><text x="28.1956%" y="863.50"></text></g><g><title>`0x7FFE2DD2D5B5 (1 samples, 0.15%)</title><rect x="28.3988%" y="837" width="0.1511%" height="15" fill="rgb(238,23,50)" fg:x="188" fg:w="1"/><text x="28.6488%" y="847.50"></text></g><g><title>`0x7FFE2DD2E1E0 (1 samples, 0.15%)</title><rect x="28.3988%" y="821" width="0.1511%" height="15" fill="rgb(211,48,49)" fg:x="188" fg:w="1"/><text x="28.6488%" y="831.50"></text></g><g><title>`0x7FFE2C8D4741 (1 samples, 0.15%)</title><rect x="28.3988%" y="805" width="0.1511%" height="15" fill="rgb(223,36,21)" fg:x="188" fg:w="1"/><text x="28.6488%" y="815.50"></text></g><g><title>`0x7FFE2F0EA5FB (1 samples, 0.15%)</title><rect x="28.3988%" y="789" width="0.1511%" height="15" fill="rgb(207,123,46)" fg:x="188" fg:w="1"/><text x="28.6488%" y="799.50"></text></g><g><title>`0x7FFE2F0589D4 (1 samples, 0.15%)</title><rect x="28.3988%" y="773" width="0.1511%" height="15" fill="rgb(240,218,32)" fg:x="188" fg:w="1"/><text x="28.6488%" y="783.50"></text></g><g><title>`0x7FFE2F1A6F57 (1 samples, 0.15%)</title><rect x="28.3988%" y="757" width="0.1511%" height="15" fill="rgb(252,5,43)" fg:x="188" fg:w="1"/><text x="28.6488%" y="767.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.21%)</title><rect x="27.7946%" y="933" width="1.2085%" height="15" fill="rgb(252,84,19)" fg:x="184" fg:w="8"/><text x="28.0446%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.21%)</title><rect x="27.7946%" y="917" width="1.2085%" height="15" fill="rgb(243,152,39)" fg:x="184" fg:w="8"/><text x="28.0446%" y="927.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.21%)</title><rect x="27.7946%" y="901" width="1.2085%" height="15" fill="rgb(234,160,15)" fg:x="184" fg:w="8"/><text x="28.0446%" y="911.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.21%)</title><rect x="27.7946%" y="885" width="1.2085%" height="15" fill="rgb(237,34,20)" fg:x="184" fg:w="8"/><text x="28.0446%" y="895.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.60%)</title><rect x="28.3988%" y="869" width="0.6042%" height="15" fill="rgb(229,97,13)" fg:x="188" fg:w="4"/><text x="28.6488%" y="879.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.60%)</title><rect x="28.3988%" y="853" width="0.6042%" height="15" fill="rgb(234,71,50)" fg:x="188" fg:w="4"/><text x="28.6488%" y="863.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="28.5498%" y="837" width="0.4532%" height="15" fill="rgb(253,155,4)" fg:x="189" fg:w="3"/><text x="28.7998%" y="847.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="28.5498%" y="821" width="0.4532%" height="15" fill="rgb(222,185,37)" fg:x="189" fg:w="3"/><text x="28.7998%" y="831.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="29.0030%" y="901" width="0.1511%" height="15" fill="rgb(251,177,13)" fg:x="192" fg:w="1"/><text x="29.2530%" y="911.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.15%)</title><rect x="29.0030%" y="885" width="0.1511%" height="15" fill="rgb(250,179,40)" fg:x="192" fg:w="1"/><text x="29.2530%" y="895.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="29.0030%" y="869" width="0.1511%" height="15" fill="rgb(242,44,2)" fg:x="192" fg:w="1"/><text x="29.2530%" y="879.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="29.0030%" y="853" width="0.1511%" height="15" fill="rgb(216,177,13)" fg:x="192" fg:w="1"/><text x="29.2530%" y="863.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="29.0030%" y="837" width="0.1511%" height="15" fill="rgb(216,106,43)" fg:x="192" fg:w="1"/><text x="29.2530%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="29.0030%" y="821" width="0.1511%" height="15" fill="rgb(216,183,2)" fg:x="192" fg:w="1"/><text x="29.2530%" y="831.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="29.0030%" y="805" width="0.1511%" height="15" fill="rgb(249,75,3)" fg:x="192" fg:w="1"/><text x="29.2530%" y="815.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="29.0030%" y="789" width="0.1511%" height="15" fill="rgb(219,67,39)" fg:x="192" fg:w="1"/><text x="29.2530%" y="799.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (12 samples, 1.81%)</title><rect x="27.6435%" y="1221" width="1.8127%" height="15" fill="rgb(253,228,2)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1231.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="27.6435%" y="1205" width="1.8127%" height="15" fill="rgb(235,138,27)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1215.50">f..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="27.6435%" y="1189" width="1.8127%" height="15" fill="rgb(236,97,51)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1199.50">f..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="27.6435%" y="1173" width="1.8127%" height="15" fill="rgb(240,80,30)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1183.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="27.6435%" y="1157" width="1.8127%" height="15" fill="rgb(230,178,19)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1167.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.81%)</title><rect x="27.6435%" y="1141" width="1.8127%" height="15" fill="rgb(210,190,27)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1151.50">f..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="27.6435%" y="1125" width="1.8127%" height="15" fill="rgb(222,107,31)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1135.50">f..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="27.6435%" y="1109" width="1.8127%" height="15" fill="rgb(216,127,34)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1119.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="27.6435%" y="1093" width="1.8127%" height="15" fill="rgb(234,116,52)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1103.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="27.6435%" y="1077" width="1.8127%" height="15" fill="rgb(222,124,15)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1087.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (12 samples, 1.81%)</title><rect x="27.6435%" y="1061" width="1.8127%" height="15" fill="rgb(231,179,28)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1071.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="27.6435%" y="1045" width="1.8127%" height="15" fill="rgb(226,93,45)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1055.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.81%)</title><rect x="27.6435%" y="1029" width="1.8127%" height="15" fill="rgb(215,8,51)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1039.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="27.6435%" y="1013" width="1.8127%" height="15" fill="rgb(223,106,5)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1023.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.81%)</title><rect x="27.6435%" y="997" width="1.8127%" height="15" fill="rgb(250,191,5)" fg:x="183" fg:w="12"/><text x="27.8935%" y="1007.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.81%)</title><rect x="27.6435%" y="981" width="1.8127%" height="15" fill="rgb(242,132,44)" fg:x="183" fg:w="12"/><text x="27.8935%" y="991.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.66%)</title><rect x="27.7946%" y="965" width="1.6616%" height="15" fill="rgb(251,152,29)" fg:x="184" fg:w="11"/><text x="28.0446%" y="975.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.66%)</title><rect x="27.7946%" y="949" width="1.6616%" height="15" fill="rgb(218,179,5)" fg:x="184" fg:w="11"/><text x="28.0446%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="29.0030%" y="933" width="0.4532%" height="15" fill="rgb(227,67,19)" fg:x="192" fg:w="3"/><text x="29.2530%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="29.0030%" y="917" width="0.4532%" height="15" fill="rgb(233,119,31)" fg:x="192" fg:w="3"/><text x="29.2530%" y="927.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="29.1541%" y="901" width="0.3021%" height="15" fill="rgb(241,120,22)" fg:x="193" fg:w="2"/><text x="29.4041%" y="911.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="29.1541%" y="885" width="0.3021%" height="15" fill="rgb(224,102,30)" fg:x="193" fg:w="2"/><text x="29.4041%" y="895.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="29.1541%" y="869" width="0.3021%" height="15" fill="rgb(210,164,37)" fg:x="193" fg:w="2"/><text x="29.4041%" y="879.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="29.1541%" y="853" width="0.3021%" height="15" fill="rgb(226,191,16)" fg:x="193" fg:w="2"/><text x="29.4041%" y="863.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.30%)</title><rect x="29.1541%" y="837" width="0.3021%" height="15" fill="rgb(214,40,45)" fg:x="193" fg:w="2"/><text x="29.4041%" y="847.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.30%)</title><rect x="29.1541%" y="821" width="0.3021%" height="15" fill="rgb(244,29,26)" fg:x="193" fg:w="2"/><text x="29.4041%" y="831.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (1 samples, 0.15%)</title><rect x="29.4562%" y="1013" width="0.1511%" height="15" fill="rgb(216,16,5)" fg:x="195" fg:w="1"/><text x="29.7062%" y="1023.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.15%)</title><rect x="29.4562%" y="997" width="0.1511%" height="15" fill="rgb(249,76,35)" fg:x="195" fg:w="1"/><text x="29.7062%" y="1007.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::no_work_found (1 samples, 0.15%)</title><rect x="29.4562%" y="981" width="0.1511%" height="15" fill="rgb(207,11,44)" fg:x="195" fg:w="1"/><text x="29.7062%" y="991.50"></text></g><g><title>`0x7FFE2C89696B (1 samples, 0.15%)</title><rect x="29.4562%" y="965" width="0.1511%" height="15" fill="rgb(228,190,49)" fg:x="195" fg:w="1"/><text x="29.7062%" y="975.50"></text></g><g><title>`0x7FFE2F10E134 (1 samples, 0.15%)</title><rect x="29.4562%" y="949" width="0.1511%" height="15" fill="rgb(214,173,12)" fg:x="195" fg:w="1"/><text x="29.7062%" y="959.50"></text></g><g><title>`0x7FFE2F1A38B4 (1 samples, 0.15%)</title><rect x="29.4562%" y="933" width="0.1511%" height="15" fill="rgb(218,26,35)" fg:x="195" fg:w="1"/><text x="29.7062%" y="943.50"></text></g><g><title>`0x7FFE2C875055 (1 samples, 0.15%)</title><rect x="29.6073%" y="709" width="0.1511%" height="15" fill="rgb(220,200,19)" fg:x="196" fg:w="1"/><text x="29.8573%" y="719.50"></text></g><g><title>`0x7FFE2F1A9819 (1 samples, 0.15%)</title><rect x="29.6073%" y="693" width="0.1511%" height="15" fill="rgb(239,95,49)" fg:x="196" fg:w="1"/><text x="29.8573%" y="703.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="29.7583%" y="709" width="0.4532%" height="15" fill="rgb(235,85,53)" fg:x="197" fg:w="3"/><text x="30.0083%" y="719.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="29.7583%" y="693" width="0.4532%" height="15" fill="rgb(233,133,31)" fg:x="197" fg:w="3"/><text x="30.0083%" y="703.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.60%)</title><rect x="30.2115%" y="709" width="0.6042%" height="15" fill="rgb(218,25,20)" fg:x="200" fg:w="4"/><text x="30.4615%" y="719.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.60%)</title><rect x="30.2115%" y="693" width="0.6042%" height="15" fill="rgb(252,210,38)" fg:x="200" fg:w="4"/><text x="30.4615%" y="703.50"></text></g><g><title>`0x7FFE2DD2D646 (4 samples, 0.60%)</title><rect x="30.2115%" y="677" width="0.6042%" height="15" fill="rgb(242,134,21)" fg:x="200" fg:w="4"/><text x="30.4615%" y="687.50"></text></g><g><title>`0x7FFE2F1A3BB4 (4 samples, 0.60%)</title><rect x="30.2115%" y="661" width="0.6042%" height="15" fill="rgb(213,28,48)" fg:x="200" fg:w="4"/><text x="30.4615%" y="671.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (9 samples, 1.36%)</title><rect x="29.6073%" y="773" width="1.3595%" height="15" fill="rgb(250,196,2)" fg:x="196" fg:w="9"/><text x="29.8573%" y="783.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (9 samples, 1.36%)</title><rect x="29.6073%" y="757" width="1.3595%" height="15" fill="rgb(227,5,17)" fg:x="196" fg:w="9"/><text x="29.8573%" y="767.50"></text></g><g><title>`0x7FFE2DD4C6D4 (9 samples, 1.36%)</title><rect x="29.6073%" y="741" width="1.3595%" height="15" fill="rgb(221,226,24)" fg:x="196" fg:w="9"/><text x="29.8573%" y="751.50"></text></g><g><title>`0x7FFE2C874E26 (9 samples, 1.36%)</title><rect x="29.6073%" y="725" width="1.3595%" height="15" fill="rgb(211,5,48)" fg:x="196" fg:w="9"/><text x="29.8573%" y="735.50"></text></g><g><title>`0x7FFE2C879B5C (1 samples, 0.15%)</title><rect x="30.8157%" y="709" width="0.1511%" height="15" fill="rgb(219,150,6)" fg:x="204" fg:w="1"/><text x="31.0657%" y="719.50"></text></g><g><title>`0x7FFE2F1A3C74 (1 samples, 0.15%)</title><rect x="30.8157%" y="693" width="0.1511%" height="15" fill="rgb(251,46,16)" fg:x="204" fg:w="1"/><text x="31.0657%" y="703.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (24 samples, 3.63%)</title><rect x="27.6435%" y="1285" width="3.6254%" height="15" fill="rgb(220,204,40)" fg:x="183" fg:w="24"/><text x="27.8935%" y="1295.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (24 samples, 3.63%)</title><rect x="27.6435%" y="1269" width="3.6254%" height="15" fill="rgb(211,85,2)" fg:x="183" fg:w="24"/><text x="27.8935%" y="1279.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (24 samples, 3.63%)</title><rect x="27.6435%" y="1253" width="3.6254%" height="15" fill="rgb(229,17,7)" fg:x="183" fg:w="24"/><text x="27.8935%" y="1263.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (24 samples, 3.63%)</title><rect x="27.6435%" y="1237" width="3.6254%" height="15" fill="rgb(239,72,28)" fg:x="183" fg:w="24"/><text x="27.8935%" y="1247.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (12 samples, 1.81%)</title><rect x="29.4562%" y="1221" width="1.8127%" height="15" fill="rgb(230,47,54)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1231.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.81%)</title><rect x="29.4562%" y="1205" width="1.8127%" height="15" fill="rgb(214,50,8)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1215.50">f..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.81%)</title><rect x="29.4562%" y="1189" width="1.8127%" height="15" fill="rgb(216,198,43)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1199.50">f..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.81%)</title><rect x="29.4562%" y="1173" width="1.8127%" height="15" fill="rgb(234,20,35)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1183.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.81%)</title><rect x="29.4562%" y="1157" width="1.8127%" height="15" fill="rgb(254,45,19)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1167.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.81%)</title><rect x="29.4562%" y="1141" width="1.8127%" height="15" fill="rgb(219,14,44)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1151.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.81%)</title><rect x="29.4562%" y="1125" width="1.8127%" height="15" fill="rgb(217,220,26)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1135.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.81%)</title><rect x="29.4562%" y="1109" width="1.8127%" height="15" fill="rgb(213,158,28)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1119.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (12 samples, 1.81%)</title><rect x="29.4562%" y="1093" width="1.8127%" height="15" fill="rgb(252,51,52)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1103.50">f..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (12 samples, 1.81%)</title><rect x="29.4562%" y="1077" width="1.8127%" height="15" fill="rgb(246,89,16)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1087.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (12 samples, 1.81%)</title><rect x="29.4562%" y="1061" width="1.8127%" height="15" fill="rgb(216,158,49)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1071.50">f..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="29.4562%" y="1045" width="1.8127%" height="15" fill="rgb(236,107,19)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1055.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="29.4562%" y="1029" width="1.8127%" height="15" fill="rgb(228,185,30)" fg:x="195" fg:w="12"/><text x="29.7062%" y="1039.50">f..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="29.6073%" y="1013" width="1.6616%" height="15" fill="rgb(246,134,8)" fg:x="196" fg:w="11"/><text x="29.8573%" y="1023.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="29.6073%" y="997" width="1.6616%" height="15" fill="rgb(214,143,50)" fg:x="196" fg:w="11"/><text x="29.8573%" y="1007.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="29.6073%" y="981" width="1.6616%" height="15" fill="rgb(228,75,8)" fg:x="196" fg:w="11"/><text x="29.8573%" y="991.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (11 samples, 1.66%)</title><rect x="29.6073%" y="965" width="1.6616%" height="15" fill="rgb(207,175,4)" fg:x="196" fg:w="11"/><text x="29.8573%" y="975.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="29.6073%" y="949" width="1.6616%" height="15" fill="rgb(205,108,24)" fg:x="196" fg:w="11"/><text x="29.8573%" y="959.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="29.6073%" y="933" width="1.6616%" height="15" fill="rgb(244,120,49)" fg:x="196" fg:w="11"/><text x="29.8573%" y="943.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="29.6073%" y="917" width="1.6616%" height="15" fill="rgb(223,47,38)" fg:x="196" fg:w="11"/><text x="29.8573%" y="927.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (11 samples, 1.66%)</title><rect x="29.6073%" y="901" width="1.6616%" height="15" fill="rgb(229,179,11)" fg:x="196" fg:w="11"/><text x="29.8573%" y="911.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="29.6073%" y="885" width="1.6616%" height="15" fill="rgb(231,122,1)" fg:x="196" fg:w="11"/><text x="29.8573%" y="895.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (11 samples, 1.66%)</title><rect x="29.6073%" y="869" width="1.6616%" height="15" fill="rgb(245,119,9)" fg:x="196" fg:w="11"/><text x="29.8573%" y="879.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="29.6073%" y="853" width="1.6616%" height="15" fill="rgb(241,163,25)" fg:x="196" fg:w="11"/><text x="29.8573%" y="863.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (11 samples, 1.66%)</title><rect x="29.6073%" y="837" width="1.6616%" height="15" fill="rgb(217,214,3)" fg:x="196" fg:w="11"/><text x="29.8573%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (11 samples, 1.66%)</title><rect x="29.6073%" y="821" width="1.6616%" height="15" fill="rgb(240,86,28)" fg:x="196" fg:w="11"/><text x="29.8573%" y="831.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.66%)</title><rect x="29.6073%" y="805" width="1.6616%" height="15" fill="rgb(215,47,9)" fg:x="196" fg:w="11"/><text x="29.8573%" y="815.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.66%)</title><rect x="29.6073%" y="789" width="1.6616%" height="15" fill="rgb(252,25,45)" fg:x="196" fg:w="11"/><text x="29.8573%" y="799.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (2 samples, 0.30%)</title><rect x="30.9668%" y="773" width="0.3021%" height="15" fill="rgb(251,164,9)" fg:x="205" fg:w="2"/><text x="31.2168%" y="783.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (2 samples, 0.30%)</title><rect x="30.9668%" y="757" width="0.3021%" height="15" fill="rgb(233,194,0)" fg:x="205" fg:w="2"/><text x="31.2168%" y="767.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="30.9668%" y="741" width="0.3021%" height="15" fill="rgb(249,111,24)" fg:x="205" fg:w="2"/><text x="31.2168%" y="751.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="30.9668%" y="725" width="0.3021%" height="15" fill="rgb(250,223,3)" fg:x="205" fg:w="2"/><text x="31.2168%" y="735.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="30.9668%" y="709" width="0.3021%" height="15" fill="rgb(236,178,37)" fg:x="205" fg:w="2"/><text x="31.2168%" y="719.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="30.9668%" y="693" width="0.3021%" height="15" fill="rgb(241,158,50)" fg:x="205" fg:w="2"/><text x="31.2168%" y="703.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.30%)</title><rect x="30.9668%" y="677" width="0.3021%" height="15" fill="rgb(213,121,41)" fg:x="205" fg:w="2"/><text x="31.2168%" y="687.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.30%)</title><rect x="30.9668%" y="661" width="0.3021%" height="15" fill="rgb(240,92,3)" fg:x="205" fg:w="2"/><text x="31.2168%" y="671.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (2 samples, 0.30%)</title><rect x="31.2689%" y="1045" width="0.3021%" height="15" fill="rgb(205,123,3)" fg:x="207" fg:w="2"/><text x="31.5189%" y="1055.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (2 samples, 0.30%)</title><rect x="31.2689%" y="1029" width="0.3021%" height="15" fill="rgb(205,97,47)" fg:x="207" fg:w="2"/><text x="31.5189%" y="1039.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (2 samples, 0.30%)</title><rect x="31.2689%" y="1013" width="0.3021%" height="15" fill="rgb(247,152,14)" fg:x="207" fg:w="2"/><text x="31.5189%" y="1023.50"></text></g><g><title>`0x7FFE2C8CFEE5 (2 samples, 0.30%)</title><rect x="31.2689%" y="997" width="0.3021%" height="15" fill="rgb(248,195,53)" fg:x="207" fg:w="2"/><text x="31.5189%" y="1007.50"></text></g><g><title>`0x7FFE2F1A4984 (2 samples, 0.30%)</title><rect x="31.2689%" y="981" width="0.3021%" height="15" fill="rgb(226,201,16)" fg:x="207" fg:w="2"/><text x="31.5189%" y="991.50"></text></g><g><title>`0x7FFE2C8776C5 (11 samples, 1.66%)</title><rect x="31.5710%" y="981" width="1.6616%" height="15" fill="rgb(205,98,0)" fg:x="209" fg:w="11"/><text x="31.8210%" y="991.50"></text></g><g><title>`0x7FFE2F1A4C44 (11 samples, 1.66%)</title><rect x="31.5710%" y="965" width="1.6616%" height="15" fill="rgb(214,191,48)" fg:x="209" fg:w="11"/><text x="31.8210%" y="975.50"></text></g><g><title>`0x7FFE2DD2E2FE (1 samples, 0.15%)</title><rect x="33.2326%" y="933" width="0.1511%" height="15" fill="rgb(237,112,39)" fg:x="220" fg:w="1"/><text x="33.4826%" y="943.50"></text></g><g><title>`0x7FFE2C7FDD0F (1 samples, 0.15%)</title><rect x="33.2326%" y="917" width="0.1511%" height="15" fill="rgb(247,203,27)" fg:x="220" fg:w="1"/><text x="33.4826%" y="927.50"></text></g><g><title>`0x7FFE2F055035 (1 samples, 0.15%)</title><rect x="33.2326%" y="901" width="0.1511%" height="15" fill="rgb(235,124,28)" fg:x="220" fg:w="1"/><text x="33.4826%" y="911.50"></text></g><g><title>`0x7FFE2F0BB45D (1 samples, 0.15%)</title><rect x="33.2326%" y="885" width="0.1511%" height="15" fill="rgb(208,207,46)" fg:x="220" fg:w="1"/><text x="33.4826%" y="895.50"></text></g><g><title>`0x7FFE2DD2D5B5 (2 samples, 0.30%)</title><rect x="33.2326%" y="949" width="0.3021%" height="15" fill="rgb(234,176,4)" fg:x="220" fg:w="2"/><text x="33.4826%" y="959.50"></text></g><g><title>`0x7FFE2DD2E333 (1 samples, 0.15%)</title><rect x="33.3837%" y="933" width="0.1511%" height="15" fill="rgb(230,133,28)" fg:x="221" fg:w="1"/><text x="33.6337%" y="943.50"></text></g><g><title>`0x7FFE2C8D4322 (1 samples, 0.15%)</title><rect x="33.3837%" y="917" width="0.1511%" height="15" fill="rgb(211,137,40)" fg:x="221" fg:w="1"/><text x="33.6337%" y="927.50"></text></g><g><title>`0x7FFE2C8D4596 (1 samples, 0.15%)</title><rect x="33.3837%" y="901" width="0.1511%" height="15" fill="rgb(254,35,13)" fg:x="221" fg:w="1"/><text x="33.6337%" y="911.50"></text></g><g><title>`0x7FFE2DD2D5FB (1 samples, 0.15%)</title><rect x="33.5347%" y="949" width="0.1511%" height="15" fill="rgb(225,49,51)" fg:x="222" fg:w="1"/><text x="33.7847%" y="959.50"></text></g><g><title>`0x7FFE2DD2E4E1 (1 samples, 0.15%)</title><rect x="33.5347%" y="933" width="0.1511%" height="15" fill="rgb(251,10,15)" fg:x="222" fg:w="1"/><text x="33.7847%" y="943.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="33.5347%" y="917" width="0.1511%" height="15" fill="rgb(228,207,15)" fg:x="222" fg:w="1"/><text x="33.7847%" y="927.50"></text></g><g><title>`0x7FFE2C8787CB (12 samples, 1.81%)</title><rect x="33.2326%" y="981" width="1.8127%" height="15" fill="rgb(241,99,19)" fg:x="220" fg:w="12"/><text x="33.4826%" y="991.50">`..</text></g><g><title>`0x7FFE2DD2D052 (12 samples, 1.81%)</title><rect x="33.2326%" y="965" width="1.8127%" height="15" fill="rgb(207,104,49)" fg:x="220" fg:w="12"/><text x="33.4826%" y="975.50">`..</text></g><g><title>`0x7FFE2DD2D646 (9 samples, 1.36%)</title><rect x="33.6858%" y="949" width="1.3595%" height="15" fill="rgb(234,99,18)" fg:x="223" fg:w="9"/><text x="33.9358%" y="959.50"></text></g><g><title>`0x7FFE2F1A3BB4 (9 samples, 1.36%)</title><rect x="33.6858%" y="933" width="1.3595%" height="15" fill="rgb(213,191,49)" fg:x="223" fg:w="9"/><text x="33.9358%" y="943.50"></text></g><g><title>`0x7FFE2C87892F (1 samples, 0.15%)</title><rect x="35.0453%" y="981" width="0.1511%" height="15" fill="rgb(210,226,19)" fg:x="232" fg:w="1"/><text x="35.2953%" y="991.50"></text></g><g><title>`0x7FFE2DD37F15 (1 samples, 0.15%)</title><rect x="35.0453%" y="965" width="0.1511%" height="15" fill="rgb(229,97,18)" fg:x="232" fg:w="1"/><text x="35.2953%" y="975.50"></text></g><g><title>`0x7FFE2DD376F3 (1 samples, 0.15%)</title><rect x="35.0453%" y="949" width="0.1511%" height="15" fill="rgb(211,167,15)" fg:x="232" fg:w="1"/><text x="35.2953%" y="959.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="35.0453%" y="933" width="0.1511%" height="15" fill="rgb(210,169,34)" fg:x="232" fg:w="1"/><text x="35.2953%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (25 samples, 3.78%)</title><rect x="31.5710%" y="1045" width="3.7764%" height="15" fill="rgb(241,121,31)" fg:x="209" fg:w="25"/><text x="31.8210%" y="1055.50">fuzz..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (25 samples, 3.78%)</title><rect x="31.5710%" y="1029" width="3.7764%" height="15" fill="rgb(232,40,11)" fg:x="209" fg:w="25"/><text x="31.8210%" y="1039.50">fuzz..</text></g><g><title>`0x7FFE2DD4C6D4 (25 samples, 3.78%)</title><rect x="31.5710%" y="1013" width="3.7764%" height="15" fill="rgb(205,86,26)" fg:x="209" fg:w="25"/><text x="31.8210%" y="1023.50">`0x7..</text></g><g><title>`0x7FFE2C874E26 (25 samples, 3.78%)</title><rect x="31.5710%" y="997" width="3.7764%" height="15" fill="rgb(231,126,28)" fg:x="209" fg:w="25"/><text x="31.8210%" y="1007.50">`0x7..</text></g><g><title>`0x7FFE2C878B3F (1 samples, 0.15%)</title><rect x="35.1964%" y="981" width="0.1511%" height="15" fill="rgb(219,221,18)" fg:x="233" fg:w="1"/><text x="35.4464%" y="991.50"></text></g><g><title>`0x7FFE2F075D02 (1 samples, 0.15%)</title><rect x="35.1964%" y="965" width="0.1511%" height="15" fill="rgb(211,40,0)" fg:x="233" fg:w="1"/><text x="35.4464%" y="975.50"></text></g><g><title>`0x7FFE2F1A43E4 (1 samples, 0.15%)</title><rect x="35.1964%" y="949" width="0.1511%" height="15" fill="rgb(239,85,43)" fg:x="233" fg:w="1"/><text x="35.4464%" y="959.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.15%)</title><rect x="35.3474%" y="949" width="0.1511%" height="15" fill="rgb(231,55,21)" fg:x="234" fg:w="1"/><text x="35.5974%" y="959.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.15%)</title><rect x="35.3474%" y="933" width="0.1511%" height="15" fill="rgb(225,184,43)" fg:x="234" fg:w="1"/><text x="35.5974%" y="943.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.15%)</title><rect x="35.3474%" y="917" width="0.1511%" height="15" fill="rgb(251,158,41)" fg:x="234" fg:w="1"/><text x="35.5974%" y="927.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.15%)</title><rect x="35.3474%" y="901" width="0.1511%" height="15" fill="rgb(234,159,37)" fg:x="234" fg:w="1"/><text x="35.5974%" y="911.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.15%)</title><rect x="35.3474%" y="885" width="0.1511%" height="15" fill="rgb(216,204,22)" fg:x="234" fg:w="1"/><text x="35.5974%" y="895.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="35.3474%" y="869" width="0.1511%" height="15" fill="rgb(214,17,3)" fg:x="234" fg:w="1"/><text x="35.5974%" y="879.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.15%)</title><rect x="35.3474%" y="853" width="0.1511%" height="15" fill="rgb(212,111,17)" fg:x="234" fg:w="1"/><text x="35.5974%" y="863.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="35.3474%" y="837" width="0.1511%" height="15" fill="rgb(221,157,24)" fg:x="234" fg:w="1"/><text x="35.5974%" y="847.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="35.3474%" y="821" width="0.1511%" height="15" fill="rgb(252,16,13)" fg:x="234" fg:w="1"/><text x="35.5974%" y="831.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="35.3474%" y="805" width="0.1511%" height="15" fill="rgb(221,62,2)" fg:x="234" fg:w="1"/><text x="35.5974%" y="815.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.15%)</title><rect x="35.3474%" y="789" width="0.1511%" height="15" fill="rgb(247,87,22)" fg:x="234" fg:w="1"/><text x="35.5974%" y="799.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="35.3474%" y="773" width="0.1511%" height="15" fill="rgb(215,73,9)" fg:x="234" fg:w="1"/><text x="35.5974%" y="783.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="35.3474%" y="757" width="0.1511%" height="15" fill="rgb(207,175,33)" fg:x="234" fg:w="1"/><text x="35.5974%" y="767.50"></text></g><g><title>`0x7FFE2F069E2D (1 samples, 0.15%)</title><rect x="35.3474%" y="741" width="0.1511%" height="15" fill="rgb(243,129,54)" fg:x="234" fg:w="1"/><text x="35.5974%" y="751.50"></text></g><g><title>`0x7FFE2F06A0D5 (1 samples, 0.15%)</title><rect x="35.3474%" y="725" width="0.1511%" height="15" fill="rgb(227,119,45)" fg:x="234" fg:w="1"/><text x="35.5974%" y="735.50"></text></g><g><title>`0x7FFE2F06A98A (1 samples, 0.15%)</title><rect x="35.3474%" y="709" width="0.1511%" height="15" fill="rgb(205,109,36)" fg:x="234" fg:w="1"/><text x="35.5974%" y="719.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="35.3474%" y="693" width="0.1511%" height="15" fill="rgb(205,6,39)" fg:x="234" fg:w="1"/><text x="35.5974%" y="703.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.15%)</title><rect x="35.3474%" y="677" width="0.1511%" height="15" fill="rgb(221,32,16)" fg:x="234" fg:w="1"/><text x="35.5974%" y="687.50"></text></g><g><title>`0x7FFE2F0917B0 (1 samples, 0.15%)</title><rect x="35.3474%" y="661" width="0.1511%" height="15" fill="rgb(228,144,50)" fg:x="234" fg:w="1"/><text x="35.5974%" y="671.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (2 samples, 0.30%)</title><rect x="35.3474%" y="1013" width="0.3021%" height="15" fill="rgb(229,201,53)" fg:x="234" fg:w="2"/><text x="35.5974%" y="1023.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (2 samples, 0.30%)</title><rect x="35.3474%" y="997" width="0.3021%" height="15" fill="rgb(249,153,27)" fg:x="234" fg:w="2"/><text x="35.5974%" y="1007.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.30%)</title><rect x="35.3474%" y="981" width="0.3021%" height="15" fill="rgb(227,106,25)" fg:x="234" fg:w="2"/><text x="35.5974%" y="991.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (2 samples, 0.30%)</title><rect x="35.3474%" y="965" width="0.3021%" height="15" fill="rgb(230,65,29)" fg:x="234" fg:w="2"/><text x="35.5974%" y="975.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.15%)</title><rect x="35.4985%" y="949" width="0.1511%" height="15" fill="rgb(221,57,46)" fg:x="235" fg:w="1"/><text x="35.7485%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.15%)</title><rect x="35.4985%" y="933" width="0.1511%" height="15" fill="rgb(229,161,17)" fg:x="235" fg:w="1"/><text x="35.7485%" y="943.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.15%)</title><rect x="35.4985%" y="917" width="0.1511%" height="15" fill="rgb(222,213,11)" fg:x="235" fg:w="1"/><text x="35.7485%" y="927.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.15%)</title><rect x="35.4985%" y="901" width="0.1511%" height="15" fill="rgb(235,35,13)" fg:x="235" fg:w="1"/><text x="35.7485%" y="911.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="35.6495%" y="1013" width="0.1511%" height="15" fill="rgb(233,158,34)" fg:x="236" fg:w="1"/><text x="35.8995%" y="1023.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.15%)</title><rect x="35.6495%" y="997" width="0.1511%" height="15" fill="rgb(215,151,48)" fg:x="236" fg:w="1"/><text x="35.8995%" y="1007.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="35.6495%" y="981" width="0.1511%" height="15" fill="rgb(229,84,14)" fg:x="236" fg:w="1"/><text x="35.8995%" y="991.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="35.6495%" y="965" width="0.1511%" height="15" fill="rgb(229,68,14)" fg:x="236" fg:w="1"/><text x="35.8995%" y="975.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="35.6495%" y="949" width="0.1511%" height="15" fill="rgb(243,106,26)" fg:x="236" fg:w="1"/><text x="35.8995%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="35.6495%" y="933" width="0.1511%" height="15" fill="rgb(206,45,38)" fg:x="236" fg:w="1"/><text x="35.8995%" y="943.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="35.6495%" y="917" width="0.1511%" height="15" fill="rgb(226,6,15)" fg:x="236" fg:w="1"/><text x="35.8995%" y="927.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="35.6495%" y="901" width="0.1511%" height="15" fill="rgb(232,22,54)" fg:x="236" fg:w="1"/><text x="35.8995%" y="911.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (72 samples, 10.88%)</title><rect x="25.9819%" y="1381" width="10.8761%" height="15" fill="rgb(229,222,32)" fg:x="172" fg:w="72"/><text x="26.2319%" y="1391.50">fuzzit.exe`rayon..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (72 samples, 10.88%)</title><rect x="25.9819%" y="1365" width="10.8761%" height="15" fill="rgb(228,62,29)" fg:x="172" fg:w="72"/><text x="26.2319%" y="1375.50">fuzzit.exe`rayon..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (72 samples, 10.88%)</title><rect x="25.9819%" y="1349" width="10.8761%" height="15" fill="rgb(251,103,34)" fg:x="172" fg:w="72"/><text x="26.2319%" y="1359.50">fuzzit.exe`core:..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (72 samples, 10.88%)</title><rect x="25.9819%" y="1333" width="10.8761%" height="15" fill="rgb(233,12,30)" fg:x="172" fg:w="72"/><text x="26.2319%" y="1343.50">fuzzit.exe`fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (72 samples, 10.88%)</title><rect x="25.9819%" y="1317" width="10.8761%" height="15" fill="rgb(238,52,0)" fg:x="172" fg:w="72"/><text x="26.2319%" y="1327.50">fuzzit.exe`rayon..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (72 samples, 10.88%)</title><rect x="25.9819%" y="1301" width="10.8761%" height="15" fill="rgb(223,98,5)" fg:x="172" fg:w="72"/><text x="26.2319%" y="1311.50">fuzzit.exe`rayon..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 5.59%)</title><rect x="31.2689%" y="1285" width="5.5891%" height="15" fill="rgb(228,75,37)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1295.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 5.59%)</title><rect x="31.2689%" y="1269" width="5.5891%" height="15" fill="rgb(205,115,49)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1279.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 5.59%)</title><rect x="31.2689%" y="1253" width="5.5891%" height="15" fill="rgb(250,154,43)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1263.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (37 samples, 5.59%)</title><rect x="31.2689%" y="1237" width="5.5891%" height="15" fill="rgb(226,43,29)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1247.50">fuzzit...</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 5.59%)</title><rect x="31.2689%" y="1221" width="5.5891%" height="15" fill="rgb(249,228,39)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1231.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 5.59%)</title><rect x="31.2689%" y="1205" width="5.5891%" height="15" fill="rgb(216,79,43)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1215.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (37 samples, 5.59%)</title><rect x="31.2689%" y="1189" width="5.5891%" height="15" fill="rgb(228,95,12)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1199.50">fuzzit...</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (37 samples, 5.59%)</title><rect x="31.2689%" y="1173" width="5.5891%" height="15" fill="rgb(249,221,15)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1183.50">fuzzit...</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (37 samples, 5.59%)</title><rect x="31.2689%" y="1157" width="5.5891%" height="15" fill="rgb(233,34,13)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1167.50">fuzzit...</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (37 samples, 5.59%)</title><rect x="31.2689%" y="1141" width="5.5891%" height="15" fill="rgb(214,103,39)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1151.50">fuzzit...</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (37 samples, 5.59%)</title><rect x="31.2689%" y="1125" width="5.5891%" height="15" fill="rgb(251,126,39)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1135.50">fuzzit...</text></g><g><title>fuzzit.exe`std::process::Command::output (37 samples, 5.59%)</title><rect x="31.2689%" y="1109" width="5.5891%" height="15" fill="rgb(214,216,36)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1119.50">fuzzit...</text></g><g><title>fuzzit.exe`std::sys::process::output (37 samples, 5.59%)</title><rect x="31.2689%" y="1093" width="5.5891%" height="15" fill="rgb(220,221,8)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1103.50">fuzzit...</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (37 samples, 5.59%)</title><rect x="31.2689%" y="1077" width="5.5891%" height="15" fill="rgb(240,216,3)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1087.50">fuzzit...</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (37 samples, 5.59%)</title><rect x="31.2689%" y="1061" width="5.5891%" height="15" fill="rgb(232,218,17)" fg:x="207" fg:w="37"/><text x="31.5189%" y="1071.50">fuzzit...</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (10 samples, 1.51%)</title><rect x="35.3474%" y="1045" width="1.5106%" height="15" fill="rgb(229,163,45)" fg:x="234" fg:w="10"/><text x="35.5974%" y="1055.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (10 samples, 1.51%)</title><rect x="35.3474%" y="1029" width="1.5106%" height="15" fill="rgb(231,110,42)" fg:x="234" fg:w="10"/><text x="35.5974%" y="1039.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (7 samples, 1.06%)</title><rect x="35.8006%" y="1013" width="1.0574%" height="15" fill="rgb(208,170,48)" fg:x="237" fg:w="7"/><text x="36.0506%" y="1023.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (7 samples, 1.06%)</title><rect x="35.8006%" y="997" width="1.0574%" height="15" fill="rgb(239,116,25)" fg:x="237" fg:w="7"/><text x="36.0506%" y="1007.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (7 samples, 1.06%)</title><rect x="35.8006%" y="981" width="1.0574%" height="15" fill="rgb(219,200,50)" fg:x="237" fg:w="7"/><text x="36.0506%" y="991.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (7 samples, 1.06%)</title><rect x="35.8006%" y="965" width="1.0574%" height="15" fill="rgb(245,200,0)" fg:x="237" fg:w="7"/><text x="36.0506%" y="975.50"></text></g><g><title>`0x7FFE2C81DF99 (7 samples, 1.06%)</title><rect x="35.8006%" y="949" width="1.0574%" height="15" fill="rgb(245,119,33)" fg:x="237" fg:w="7"/><text x="36.0506%" y="959.50"></text></g><g><title>`0x7FFE2F1A39D4 (7 samples, 1.06%)</title><rect x="35.8006%" y="933" width="1.0574%" height="15" fill="rgb(231,125,12)" fg:x="237" fg:w="7"/><text x="36.0506%" y="943.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="36.8580%" y="949" width="0.1511%" height="15" fill="rgb(216,96,41)" fg:x="244" fg:w="1"/><text x="37.1080%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="36.8580%" y="933" width="0.1511%" height="15" fill="rgb(248,43,45)" fg:x="244" fg:w="1"/><text x="37.1080%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="36.8580%" y="917" width="0.1511%" height="15" fill="rgb(217,222,7)" fg:x="244" fg:w="1"/><text x="37.1080%" y="927.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.15%)</title><rect x="36.8580%" y="901" width="0.1511%" height="15" fill="rgb(233,28,6)" fg:x="244" fg:w="1"/><text x="37.1080%" y="911.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.15%)</title><rect x="36.8580%" y="885" width="0.1511%" height="15" fill="rgb(231,218,15)" fg:x="244" fg:w="1"/><text x="37.1080%" y="895.50"></text></g><g><title>`0x7FFE2C8776C5 (4 samples, 0.60%)</title><rect x="37.0091%" y="885" width="0.6042%" height="15" fill="rgb(226,171,48)" fg:x="245" fg:w="4"/><text x="37.2591%" y="895.50"></text></g><g><title>`0x7FFE2F1A4C44 (4 samples, 0.60%)</title><rect x="37.0091%" y="869" width="0.6042%" height="15" fill="rgb(235,201,9)" fg:x="245" fg:w="4"/><text x="37.2591%" y="879.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.45%)</title><rect x="37.6133%" y="885" width="0.4532%" height="15" fill="rgb(217,80,15)" fg:x="249" fg:w="3"/><text x="37.8633%" y="895.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.45%)</title><rect x="37.6133%" y="869" width="0.4532%" height="15" fill="rgb(219,152,8)" fg:x="249" fg:w="3"/><text x="37.8633%" y="879.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="37.6133%" y="853" width="0.4532%" height="15" fill="rgb(243,107,38)" fg:x="249" fg:w="3"/><text x="37.8633%" y="863.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="37.6133%" y="837" width="0.4532%" height="15" fill="rgb(231,17,5)" fg:x="249" fg:w="3"/><text x="37.8633%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.21%)</title><rect x="37.0091%" y="949" width="1.2085%" height="15" fill="rgb(209,25,54)" fg:x="245" fg:w="8"/><text x="37.2591%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.21%)</title><rect x="37.0091%" y="933" width="1.2085%" height="15" fill="rgb(219,0,2)" fg:x="245" fg:w="8"/><text x="37.2591%" y="943.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.21%)</title><rect x="37.0091%" y="917" width="1.2085%" height="15" fill="rgb(246,9,5)" fg:x="245" fg:w="8"/><text x="37.2591%" y="927.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.21%)</title><rect x="37.0091%" y="901" width="1.2085%" height="15" fill="rgb(226,159,4)" fg:x="245" fg:w="8"/><text x="37.2591%" y="911.50"></text></g><g><title>`0x7FFE2C879763 (1 samples, 0.15%)</title><rect x="38.0665%" y="885" width="0.1511%" height="15" fill="rgb(219,175,34)" fg:x="252" fg:w="1"/><text x="38.3165%" y="895.50"></text></g><g><title>`0x7FFE2F1A3974 (1 samples, 0.15%)</title><rect x="38.0665%" y="869" width="0.1511%" height="15" fill="rgb(236,10,46)" fg:x="252" fg:w="1"/><text x="38.3165%" y="879.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.15%)</title><rect x="38.2175%" y="917" width="0.1511%" height="15" fill="rgb(240,211,16)" fg:x="253" fg:w="1"/><text x="38.4675%" y="927.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.15%)</title><rect x="38.2175%" y="901" width="0.1511%" height="15" fill="rgb(205,3,43)" fg:x="253" fg:w="1"/><text x="38.4675%" y="911.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.15%)</title><rect x="38.2175%" y="885" width="0.1511%" height="15" fill="rgb(245,7,22)" fg:x="253" fg:w="1"/><text x="38.4675%" y="895.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (1 samples, 0.15%)</title><rect x="38.2175%" y="869" width="0.1511%" height="15" fill="rgb(239,132,32)" fg:x="253" fg:w="1"/><text x="38.4675%" y="879.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.15%)</title><rect x="38.2175%" y="853" width="0.1511%" height="15" fill="rgb(228,202,34)" fg:x="253" fg:w="1"/><text x="38.4675%" y="863.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.15%)</title><rect x="38.2175%" y="837" width="0.1511%" height="15" fill="rgb(254,200,22)" fg:x="253" fg:w="1"/><text x="38.4675%" y="847.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.15%)</title><rect x="38.2175%" y="821" width="0.1511%" height="15" fill="rgb(219,10,39)" fg:x="253" fg:w="1"/><text x="38.4675%" y="831.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.15%)</title><rect x="38.2175%" y="805" width="0.1511%" height="15" fill="rgb(226,210,39)" fg:x="253" fg:w="1"/><text x="38.4675%" y="815.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.15%)</title><rect x="38.2175%" y="789" width="0.1511%" height="15" fill="rgb(208,219,16)" fg:x="253" fg:w="1"/><text x="38.4675%" y="799.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="38.2175%" y="773" width="0.1511%" height="15" fill="rgb(216,158,51)" fg:x="253" fg:w="1"/><text x="38.4675%" y="783.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.15%)</title><rect x="38.2175%" y="757" width="0.1511%" height="15" fill="rgb(233,14,44)" fg:x="253" fg:w="1"/><text x="38.4675%" y="767.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="38.2175%" y="741" width="0.1511%" height="15" fill="rgb(237,97,39)" fg:x="253" fg:w="1"/><text x="38.4675%" y="751.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="38.2175%" y="725" width="0.1511%" height="15" fill="rgb(218,198,43)" fg:x="253" fg:w="1"/><text x="38.4675%" y="735.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="38.2175%" y="709" width="0.1511%" height="15" fill="rgb(231,104,20)" fg:x="253" fg:w="1"/><text x="38.4675%" y="719.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.15%)</title><rect x="38.2175%" y="693" width="0.1511%" height="15" fill="rgb(254,36,13)" fg:x="253" fg:w="1"/><text x="38.4675%" y="703.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="38.2175%" y="677" width="0.1511%" height="15" fill="rgb(248,14,50)" fg:x="253" fg:w="1"/><text x="38.4675%" y="687.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="38.2175%" y="661" width="0.1511%" height="15" fill="rgb(217,107,29)" fg:x="253" fg:w="1"/><text x="38.4675%" y="671.50"></text></g><g><title>`0x7FFE2F069E2D (1 samples, 0.15%)</title><rect x="38.2175%" y="645" width="0.1511%" height="15" fill="rgb(251,169,33)" fg:x="253" fg:w="1"/><text x="38.4675%" y="655.50"></text></g><g><title>`0x7FFE2F06A083 (1 samples, 0.15%)</title><rect x="38.2175%" y="629" width="0.1511%" height="15" fill="rgb(217,108,32)" fg:x="253" fg:w="1"/><text x="38.4675%" y="639.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="38.3686%" y="917" width="0.1511%" height="15" fill="rgb(219,66,42)" fg:x="254" fg:w="1"/><text x="38.6186%" y="927.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (1 samples, 0.15%)</title><rect x="38.3686%" y="901" width="0.1511%" height="15" fill="rgb(206,180,7)" fg:x="254" fg:w="1"/><text x="38.6186%" y="911.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="38.3686%" y="885" width="0.1511%" height="15" fill="rgb(208,226,31)" fg:x="254" fg:w="1"/><text x="38.6186%" y="895.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="38.3686%" y="869" width="0.1511%" height="15" fill="rgb(218,26,49)" fg:x="254" fg:w="1"/><text x="38.6186%" y="879.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="38.3686%" y="853" width="0.1511%" height="15" fill="rgb(233,197,48)" fg:x="254" fg:w="1"/><text x="38.6186%" y="863.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="38.3686%" y="837" width="0.1511%" height="15" fill="rgb(252,181,51)" fg:x="254" fg:w="1"/><text x="38.6186%" y="847.50"></text></g><g><title>`0x7FFE2C81DF4E (1 samples, 0.15%)</title><rect x="38.3686%" y="821" width="0.1511%" height="15" fill="rgb(253,90,19)" fg:x="254" fg:w="1"/><text x="38.6186%" y="831.50"></text></g><g><title>`0x7FFE2F11D2DD (1 samples, 0.15%)</title><rect x="38.3686%" y="805" width="0.1511%" height="15" fill="rgb(215,171,30)" fg:x="254" fg:w="1"/><text x="38.6186%" y="815.50"></text></g><g><title>`0x7FFE2F055969 (1 samples, 0.15%)</title><rect x="38.3686%" y="789" width="0.1511%" height="15" fill="rgb(214,222,9)" fg:x="254" fg:w="1"/><text x="38.6186%" y="799.50"></text></g><g><title>`0x7FFE2F057789 (1 samples, 0.15%)</title><rect x="38.3686%" y="773" width="0.1511%" height="15" fill="rgb(223,3,22)" fg:x="254" fg:w="1"/><text x="38.6186%" y="783.50"></text></g><g><title>`0x7FFE2F1A9819 (1 samples, 0.15%)</title><rect x="38.3686%" y="757" width="0.1511%" height="15" fill="rgb(225,196,46)" fg:x="254" fg:w="1"/><text x="38.6186%" y="767.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.81%)</title><rect x="36.8580%" y="1349" width="1.8127%" height="15" fill="rgb(209,110,37)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1359.50">f..</text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.81%)</title><rect x="36.8580%" y="1333" width="1.8127%" height="15" fill="rgb(249,89,12)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1343.50">f..</text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.81%)</title><rect x="36.8580%" y="1317" width="1.8127%" height="15" fill="rgb(226,27,33)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1327.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.81%)</title><rect x="36.8580%" y="1301" width="1.8127%" height="15" fill="rgb(213,82,22)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1311.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.81%)</title><rect x="36.8580%" y="1285" width="1.8127%" height="15" fill="rgb(248,140,0)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1295.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (12 samples, 1.81%)</title><rect x="36.8580%" y="1269" width="1.8127%" height="15" fill="rgb(228,106,3)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1279.50">f..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (12 samples, 1.81%)</title><rect x="36.8580%" y="1253" width="1.8127%" height="15" fill="rgb(209,23,37)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1263.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1237" width="1.8127%" height="15" fill="rgb(241,93,50)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1247.50">f..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1221" width="1.8127%" height="15" fill="rgb(253,46,43)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1231.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1205" width="1.8127%" height="15" fill="rgb(226,206,43)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1215.50">f..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1189" width="1.8127%" height="15" fill="rgb(217,54,7)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1199.50">f..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1173" width="1.8127%" height="15" fill="rgb(223,5,52)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1183.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1157" width="1.8127%" height="15" fill="rgb(206,52,46)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1167.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.81%)</title><rect x="36.8580%" y="1141" width="1.8127%" height="15" fill="rgb(253,136,11)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1151.50">f..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1125" width="1.8127%" height="15" fill="rgb(208,106,33)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1135.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1109" width="1.8127%" height="15" fill="rgb(206,54,4)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1119.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1093" width="1.8127%" height="15" fill="rgb(213,3,15)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1103.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (12 samples, 1.81%)</title><rect x="36.8580%" y="1077" width="1.8127%" height="15" fill="rgb(252,211,39)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1087.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="36.8580%" y="1061" width="1.8127%" height="15" fill="rgb(223,6,36)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1071.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.81%)</title><rect x="36.8580%" y="1045" width="1.8127%" height="15" fill="rgb(252,169,45)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1055.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="36.8580%" y="1029" width="1.8127%" height="15" fill="rgb(212,48,26)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1039.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.81%)</title><rect x="36.8580%" y="1013" width="1.8127%" height="15" fill="rgb(251,102,48)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1023.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.81%)</title><rect x="36.8580%" y="997" width="1.8127%" height="15" fill="rgb(243,208,16)" fg:x="244" fg:w="12"/><text x="37.1080%" y="1007.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (12 samples, 1.81%)</title><rect x="36.8580%" y="981" width="1.8127%" height="15" fill="rgb(219,96,24)" fg:x="244" fg:w="12"/><text x="37.1080%" y="991.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (12 samples, 1.81%)</title><rect x="36.8580%" y="965" width="1.8127%" height="15" fill="rgb(219,33,29)" fg:x="244" fg:w="12"/><text x="37.1080%" y="975.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="38.2175%" y="949" width="0.4532%" height="15" fill="rgb(223,176,5)" fg:x="253" fg:w="3"/><text x="38.4675%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="38.2175%" y="933" width="0.4532%" height="15" fill="rgb(228,140,14)" fg:x="253" fg:w="3"/><text x="38.4675%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="38.5196%" y="917" width="0.1511%" height="15" fill="rgb(217,179,31)" fg:x="255" fg:w="1"/><text x="38.7696%" y="927.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="38.5196%" y="901" width="0.1511%" height="15" fill="rgb(230,9,30)" fg:x="255" fg:w="1"/><text x="38.7696%" y="911.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="38.5196%" y="885" width="0.1511%" height="15" fill="rgb(230,136,20)" fg:x="255" fg:w="1"/><text x="38.7696%" y="895.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="38.5196%" y="869" width="0.1511%" height="15" fill="rgb(215,210,22)" fg:x="255" fg:w="1"/><text x="38.7696%" y="879.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="38.5196%" y="853" width="0.1511%" height="15" fill="rgb(218,43,5)" fg:x="255" fg:w="1"/><text x="38.7696%" y="863.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="38.5196%" y="837" width="0.1511%" height="15" fill="rgb(216,11,5)" fg:x="255" fg:w="1"/><text x="38.7696%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="38.6707%" y="965" width="0.1511%" height="15" fill="rgb(209,82,29)" fg:x="256" fg:w="1"/><text x="38.9207%" y="975.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="38.6707%" y="949" width="0.1511%" height="15" fill="rgb(244,115,12)" fg:x="256" fg:w="1"/><text x="38.9207%" y="959.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="38.6707%" y="933" width="0.1511%" height="15" fill="rgb(222,82,18)" fg:x="256" fg:w="1"/><text x="38.9207%" y="943.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.15%)</title><rect x="38.6707%" y="917" width="0.1511%" height="15" fill="rgb(249,227,8)" fg:x="256" fg:w="1"/><text x="38.9207%" y="927.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.15%)</title><rect x="38.6707%" y="901" width="0.1511%" height="15" fill="rgb(253,141,45)" fg:x="256" fg:w="1"/><text x="38.9207%" y="911.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.15%)</title><rect x="38.6707%" y="885" width="0.1511%" height="15" fill="rgb(234,184,4)" fg:x="256" fg:w="1"/><text x="38.9207%" y="895.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (2 samples, 0.30%)</title><rect x="38.6707%" y="997" width="0.3021%" height="15" fill="rgb(218,194,23)" fg:x="256" fg:w="2"/><text x="38.9207%" y="1007.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (2 samples, 0.30%)</title><rect x="38.6707%" y="981" width="0.3021%" height="15" fill="rgb(235,66,41)" fg:x="256" fg:w="2"/><text x="38.9207%" y="991.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="38.8218%" y="965" width="0.1511%" height="15" fill="rgb(245,217,1)" fg:x="257" fg:w="1"/><text x="39.0718%" y="975.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="38.8218%" y="949" width="0.1511%" height="15" fill="rgb(229,91,1)" fg:x="257" fg:w="1"/><text x="39.0718%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.15%)</title><rect x="38.8218%" y="933" width="0.1511%" height="15" fill="rgb(207,101,30)" fg:x="257" fg:w="1"/><text x="39.0718%" y="943.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.15%)</title><rect x="38.8218%" y="917" width="0.1511%" height="15" fill="rgb(223,82,49)" fg:x="257" fg:w="1"/><text x="39.0718%" y="927.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.15%)</title><rect x="38.8218%" y="901" width="0.1511%" height="15" fill="rgb(218,167,17)" fg:x="257" fg:w="1"/><text x="39.0718%" y="911.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.15%)</title><rect x="38.8218%" y="885" width="0.1511%" height="15" fill="rgb(208,103,14)" fg:x="257" fg:w="1"/><text x="39.0718%" y="895.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.15%)</title><rect x="38.8218%" y="869" width="0.1511%" height="15" fill="rgb(238,20,8)" fg:x="257" fg:w="1"/><text x="39.0718%" y="879.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="38.8218%" y="853" width="0.1511%" height="15" fill="rgb(218,80,54)" fg:x="257" fg:w="1"/><text x="39.0718%" y="863.50"></text></g><g><title>`0x7FFE2C876079 (1 samples, 0.15%)</title><rect x="38.9728%" y="933" width="0.1511%" height="15" fill="rgb(240,144,17)" fg:x="258" fg:w="1"/><text x="39.2228%" y="943.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.15%)</title><rect x="39.1239%" y="933" width="0.1511%" height="15" fill="rgb(245,27,50)" fg:x="259" fg:w="1"/><text x="39.3739%" y="943.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.15%)</title><rect x="39.1239%" y="917" width="0.1511%" height="15" fill="rgb(251,51,7)" fg:x="259" fg:w="1"/><text x="39.3739%" y="927.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.15%)</title><rect x="39.1239%" y="901" width="0.1511%" height="15" fill="rgb(245,217,29)" fg:x="259" fg:w="1"/><text x="39.3739%" y="911.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="39.1239%" y="885" width="0.1511%" height="15" fill="rgb(221,176,29)" fg:x="259" fg:w="1"/><text x="39.3739%" y="895.50"></text></g><g><title>`0x7FFE2C8776C5 (11 samples, 1.66%)</title><rect x="39.2749%" y="933" width="1.6616%" height="15" fill="rgb(212,180,24)" fg:x="260" fg:w="11"/><text x="39.5249%" y="943.50"></text></g><g><title>`0x7FFE2F1A4C44 (11 samples, 1.66%)</title><rect x="39.2749%" y="917" width="1.6616%" height="15" fill="rgb(254,24,2)" fg:x="260" fg:w="11"/><text x="39.5249%" y="927.50"></text></g><g><title>`0x7FFE2DD2D5CA (1 samples, 0.15%)</title><rect x="40.9366%" y="901" width="0.1511%" height="15" fill="rgb(230,100,2)" fg:x="271" fg:w="1"/><text x="41.1866%" y="911.50"></text></g><g><title>`0x7FFE2DD2DE41 (1 samples, 0.15%)</title><rect x="40.9366%" y="885" width="0.1511%" height="15" fill="rgb(219,142,25)" fg:x="271" fg:w="1"/><text x="41.1866%" y="895.50"></text></g><g><title>`0x7FFE2DD2E011 (1 samples, 0.15%)</title><rect x="40.9366%" y="869" width="0.1511%" height="15" fill="rgb(240,73,43)" fg:x="271" fg:w="1"/><text x="41.1866%" y="879.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (25 samples, 3.78%)</title><rect x="38.9728%" y="997" width="3.7764%" height="15" fill="rgb(214,114,15)" fg:x="258" fg:w="25"/><text x="39.2228%" y="1007.50">fuzz..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (25 samples, 3.78%)</title><rect x="38.9728%" y="981" width="3.7764%" height="15" fill="rgb(207,130,4)" fg:x="258" fg:w="25"/><text x="39.2228%" y="991.50">fuzz..</text></g><g><title>`0x7FFE2DD4C6D4 (25 samples, 3.78%)</title><rect x="38.9728%" y="965" width="3.7764%" height="15" fill="rgb(221,25,40)" fg:x="258" fg:w="25"/><text x="39.2228%" y="975.50">`0x7..</text></g><g><title>`0x7FFE2C874E26 (25 samples, 3.78%)</title><rect x="38.9728%" y="949" width="3.7764%" height="15" fill="rgb(241,184,7)" fg:x="258" fg:w="25"/><text x="39.2228%" y="959.50">`0x7..</text></g><g><title>`0x7FFE2C8787CB (12 samples, 1.81%)</title><rect x="40.9366%" y="933" width="1.8127%" height="15" fill="rgb(235,159,4)" fg:x="271" fg:w="12"/><text x="41.1866%" y="943.50">`..</text></g><g><title>`0x7FFE2DD2D052 (12 samples, 1.81%)</title><rect x="40.9366%" y="917" width="1.8127%" height="15" fill="rgb(214,87,48)" fg:x="271" fg:w="12"/><text x="41.1866%" y="927.50">`..</text></g><g><title>`0x7FFE2DD2D646 (11 samples, 1.66%)</title><rect x="41.0876%" y="901" width="1.6616%" height="15" fill="rgb(246,198,24)" fg:x="272" fg:w="11"/><text x="41.3376%" y="911.50"></text></g><g><title>`0x7FFE2F1A3BB4 (11 samples, 1.66%)</title><rect x="41.0876%" y="885" width="1.6616%" height="15" fill="rgb(209,66,40)" fg:x="272" fg:w="11"/><text x="41.3376%" y="895.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="42.7492%" y="869" width="0.1511%" height="15" fill="rgb(233,147,39)" fg:x="283" fg:w="1"/><text x="42.9992%" y="879.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="42.7492%" y="853" width="0.1511%" height="15" fill="rgb(231,145,52)" fg:x="283" fg:w="1"/><text x="42.9992%" y="863.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (2 samples, 0.30%)</title><rect x="42.7492%" y="965" width="0.3021%" height="15" fill="rgb(206,20,26)" fg:x="283" fg:w="2"/><text x="42.9992%" y="975.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (2 samples, 0.30%)</title><rect x="42.7492%" y="949" width="0.3021%" height="15" fill="rgb(238,220,4)" fg:x="283" fg:w="2"/><text x="42.9992%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="42.7492%" y="933" width="0.3021%" height="15" fill="rgb(252,195,42)" fg:x="283" fg:w="2"/><text x="42.9992%" y="943.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="42.7492%" y="917" width="0.3021%" height="15" fill="rgb(209,10,6)" fg:x="283" fg:w="2"/><text x="42.9992%" y="927.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="42.7492%" y="901" width="0.3021%" height="15" fill="rgb(229,3,52)" fg:x="283" fg:w="2"/><text x="42.9992%" y="911.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="42.7492%" y="885" width="0.3021%" height="15" fill="rgb(253,49,37)" fg:x="283" fg:w="2"/><text x="42.9992%" y="895.50"></text></g><g><title>`0x7FFE2C81DFA7 (1 samples, 0.15%)</title><rect x="42.9003%" y="869" width="0.1511%" height="15" fill="rgb(240,103,49)" fg:x="284" fg:w="1"/><text x="43.1503%" y="879.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (41 samples, 6.19%)</title><rect x="38.6707%" y="1285" width="6.1934%" height="15" fill="rgb(250,182,30)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1295.50">fuzzit.e..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="38.6707%" y="1269" width="6.1934%" height="15" fill="rgb(248,8,30)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1279.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="38.6707%" y="1253" width="6.1934%" height="15" fill="rgb(237,120,30)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1263.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="38.6707%" y="1237" width="6.1934%" height="15" fill="rgb(221,146,34)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1247.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="38.6707%" y="1221" width="6.1934%" height="15" fill="rgb(242,55,13)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1231.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (41 samples, 6.19%)</title><rect x="38.6707%" y="1205" width="6.1934%" height="15" fill="rgb(242,112,31)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1215.50">fuzzit.e..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="38.6707%" y="1189" width="6.1934%" height="15" fill="rgb(249,192,27)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1199.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="38.6707%" y="1173" width="6.1934%" height="15" fill="rgb(208,204,44)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1183.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="38.6707%" y="1157" width="6.1934%" height="15" fill="rgb(208,93,54)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1167.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="38.6707%" y="1141" width="6.1934%" height="15" fill="rgb(242,1,31)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1151.50">fuzzit.e..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (41 samples, 6.19%)</title><rect x="38.6707%" y="1125" width="6.1934%" height="15" fill="rgb(241,83,25)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1135.50">fuzzit.e..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (41 samples, 6.19%)</title><rect x="38.6707%" y="1109" width="6.1934%" height="15" fill="rgb(205,169,50)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1119.50">fuzzit.e..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (41 samples, 6.19%)</title><rect x="38.6707%" y="1093" width="6.1934%" height="15" fill="rgb(239,186,37)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1103.50">fuzzit.e..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (41 samples, 6.19%)</title><rect x="38.6707%" y="1077" width="6.1934%" height="15" fill="rgb(205,221,10)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1087.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::process::Command::output (41 samples, 6.19%)</title><rect x="38.6707%" y="1061" width="6.1934%" height="15" fill="rgb(218,196,15)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1071.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::output (41 samples, 6.19%)</title><rect x="38.6707%" y="1045" width="6.1934%" height="15" fill="rgb(218,196,35)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1055.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (41 samples, 6.19%)</title><rect x="38.6707%" y="1029" width="6.1934%" height="15" fill="rgb(233,63,24)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1039.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (41 samples, 6.19%)</title><rect x="38.6707%" y="1013" width="6.1934%" height="15" fill="rgb(225,8,4)" fg:x="256" fg:w="41"/><text x="38.9207%" y="1023.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (14 samples, 2.11%)</title><rect x="42.7492%" y="997" width="2.1148%" height="15" fill="rgb(234,105,35)" fg:x="283" fg:w="14"/><text x="42.9992%" y="1007.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (14 samples, 2.11%)</title><rect x="42.7492%" y="981" width="2.1148%" height="15" fill="rgb(236,21,32)" fg:x="283" fg:w="14"/><text x="42.9992%" y="991.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (12 samples, 1.81%)</title><rect x="43.0514%" y="965" width="1.8127%" height="15" fill="rgb(228,109,6)" fg:x="285" fg:w="12"/><text x="43.3014%" y="975.50">f..</text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (12 samples, 1.81%)</title><rect x="43.0514%" y="949" width="1.8127%" height="15" fill="rgb(229,215,31)" fg:x="285" fg:w="12"/><text x="43.3014%" y="959.50">f..</text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (12 samples, 1.81%)</title><rect x="43.0514%" y="933" width="1.8127%" height="15" fill="rgb(221,52,54)" fg:x="285" fg:w="12"/><text x="43.3014%" y="943.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (12 samples, 1.81%)</title><rect x="43.0514%" y="917" width="1.8127%" height="15" fill="rgb(252,129,43)" fg:x="285" fg:w="12"/><text x="43.3014%" y="927.50">f..</text></g><g><title>`0x7FFE2C81DF99 (12 samples, 1.81%)</title><rect x="43.0514%" y="901" width="1.8127%" height="15" fill="rgb(248,183,27)" fg:x="285" fg:w="12"/><text x="43.3014%" y="911.50">`..</text></g><g><title>`0x7FFE2F1A39D4 (12 samples, 1.81%)</title><rect x="43.0514%" y="885" width="1.8127%" height="15" fill="rgb(250,0,22)" fg:x="285" fg:w="12"/><text x="43.3014%" y="895.50">`..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (1 samples, 0.15%)</title><rect x="44.8640%" y="1077" width="0.1511%" height="15" fill="rgb(213,166,10)" fg:x="297" fg:w="1"/><text x="45.1140%" y="1087.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.15%)</title><rect x="44.8640%" y="1061" width="0.1511%" height="15" fill="rgb(207,163,36)" fg:x="297" fg:w="1"/><text x="45.1140%" y="1071.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (1 samples, 0.15%)</title><rect x="44.8640%" y="1045" width="0.1511%" height="15" fill="rgb(208,122,22)" fg:x="297" fg:w="1"/><text x="45.1140%" y="1055.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (1 samples, 0.15%)</title><rect x="44.8640%" y="1029" width="0.1511%" height="15" fill="rgb(207,104,49)" fg:x="297" fg:w="1"/><text x="45.1140%" y="1039.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (1 samples, 0.15%)</title><rect x="44.8640%" y="1013" width="0.1511%" height="15" fill="rgb(248,211,50)" fg:x="297" fg:w="1"/><text x="45.1140%" y="1023.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::find_work (1 samples, 0.15%)</title><rect x="44.8640%" y="997" width="0.1511%" height="15" fill="rgb(217,13,45)" fg:x="297" fg:w="1"/><text x="45.1140%" y="1007.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::option::Option&lt;rayon_core::job::JobRef&gt; &gt;::or_else(enum2$&lt;core::option::Option (1 samples, 0.15%)</title><rect x="44.8640%" y="981" width="0.1511%" height="15" fill="rgb(211,216,49)" fg:x="297" fg:w="1"/><text x="45.1140%" y="991.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::find_work::closure$0 (1 samples, 0.15%)</title><rect x="44.8640%" y="965" width="0.1511%" height="15" fill="rgb(221,58,53)" fg:x="297" fg:w="1"/><text x="45.1140%" y="975.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::steal (1 samples, 0.15%)</title><rect x="44.8640%" y="949" width="0.1511%" height="15" fill="rgb(220,112,41)" fg:x="297" fg:w="1"/><text x="45.1140%" y="959.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range (1 samples, 0.15%)</title><rect x="44.8640%" y="933" width="0.1511%" height="15" fill="rgb(236,38,28)" fg:x="297" fg:w="1"/><text x="45.1140%" y="943.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::try_fold(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.15%)</title><rect x="44.8640%" y="917" width="0.1511%" height="15" fill="rgb(227,195,22)" fg:x="297" fg:w="1"/><text x="45.1140%" y="927.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::chain::impl$1::try_fold&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt;,tuple$&lt;&gt;,core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.15%)</title><rect x="44.8640%" y="901" width="0.1511%" height="15" fill="rgb(214,55,33)" fg:x="297" fg:w="1"/><text x="45.1140%" y="911.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::range::Range&lt;usize&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.15%)</title><rect x="44.8640%" y="885" width="0.1511%" height="15" fill="rgb(248,80,13)" fg:x="297" fg:w="1"/><text x="45.1140%" y="895.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$3::call_mut(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;**, tuple$ (1 samples, 0.15%)</title><rect x="44.8640%" y="869" width="0.1511%" height="15" fill="rgb(238,52,6)" fg:x="297" fg:w="1"/><text x="45.1140%" y="879.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;*, tuple$ (1 samples, 0.15%)</title><rect x="44.8640%" y="853" width="0.1511%" height="15" fill="rgb(224,198,47)" fg:x="297" fg:w="1"/><text x="45.1140%" y="863.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt;*, tuple$ (1 samples, 0.15%)</title><rect x="44.8640%" y="837" width="0.1511%" height="15" fill="rgb(233,171,20)" fg:x="297" fg:w="1"/><text x="45.1140%" y="847.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::steal::closure$1 (1 samples, 0.15%)</title><rect x="44.8640%" y="821" width="0.1511%" height="15" fill="rgb(241,30,25)" fg:x="297" fg:w="1"/><text x="45.1140%" y="831.50"></text></g><g><title>fuzzit.exe`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal&lt;rayon_core::job::JobRef&gt; (1 samples, 0.15%)</title><rect x="44.8640%" y="805" width="0.1511%" height="15" fill="rgb(207,171,38)" fg:x="297" fg:w="1"/><text x="45.1140%" y="815.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin (1 samples, 0.15%)</title><rect x="44.8640%" y="789" width="0.1511%" height="15" fill="rgb(234,70,1)" fg:x="297" fg:w="1"/><text x="45.1140%" y="799.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle&lt;crossbeam_epoch::default::pin::closure_env$0,crossbeam_epoch::guard::Guard&gt; (1 samples, 0.15%)</title><rect x="44.8640%" y="773" width="0.1511%" height="15" fill="rgb(232,178,18)" fg:x="297" fg:w="1"/><text x="45.1140%" y="783.50"></text></g><g><title>fuzzit.exe`std::thread::local::LocalKey&lt;crossbeam_epoch::collector::LocalHandle&gt;::try_with(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.15%)</title><rect x="44.8640%" y="757" width="0.1511%" height="15" fill="rgb(241,78,40)" fg:x="297" fg:w="1"/><text x="45.1140%" y="767.50"></text></g><g><title>fuzzit.exe`core::ops::function::FnOnce::call_once(crossbeam_epoch::default::HANDLE::constant$0::closure_env$0, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option (1 samples, 0.15%)</title><rect x="44.8640%" y="741" width="0.1511%" height="15" fill="rgb(222,35,25)" fg:x="297" fg:w="1"/><text x="45.1140%" y="751.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::HANDLE::constant$0::closure$0(crossbeam_epoch::default::HANDLE::constant$0::closure_env$0*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option (1 samples, 0.15%)</title><rect x="44.8640%" y="725" width="0.1511%" height="15" fill="rgb(207,92,16)" fg:x="297" fg:w="1"/><text x="45.1140%" y="735.50"></text></g><g><title>fuzzit.exe`std::sys::thread_local::native::lazy::Storage&lt;crossbeam_epoch::collector::LocalHandle,tuple$&lt;&gt; &gt;::get_or_init(enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;crossbeam_epoch::collector::LocalHandle&gt; &gt; &gt; &gt; &gt;, crossbeam_epoch::collector::LocalHandle (*) (1 samples, 0.15%)</title><rect x="44.8640%" y="709" width="0.1511%" height="15" fill="rgb(216,59,51)" fg:x="297" fg:w="1"/><text x="45.1140%" y="719.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::HANDLE::constant$0::closure$0::VAL (1 samples, 0.15%)</title><rect x="44.8640%" y="693" width="0.1511%" height="15" fill="rgb(213,80,28)" fg:x="297" fg:w="1"/><text x="45.1140%" y="703.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.15%)</title><rect x="45.0151%" y="837" width="0.1511%" height="15" fill="rgb(220,93,7)" fg:x="298" fg:w="1"/><text x="45.2651%" y="847.50"></text></g><g><title>`0x7FFE2C7FF233 (1 samples, 0.15%)</title><rect x="45.0151%" y="821" width="0.1511%" height="15" fill="rgb(225,24,44)" fg:x="298" fg:w="1"/><text x="45.2651%" y="831.50"></text></g><g><title>`0x7FFE2F1A3D84 (1 samples, 0.15%)</title><rect x="45.0151%" y="805" width="0.1511%" height="15" fill="rgb(243,74,40)" fg:x="298" fg:w="1"/><text x="45.2651%" y="815.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (2 samples, 0.30%)</title><rect x="45.0151%" y="869" width="0.3021%" height="15" fill="rgb(228,39,7)" fg:x="298" fg:w="2"/><text x="45.2651%" y="879.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (2 samples, 0.30%)</title><rect x="45.0151%" y="853" width="0.3021%" height="15" fill="rgb(227,79,8)" fg:x="298" fg:w="2"/><text x="45.2651%" y="863.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.15%)</title><rect x="45.1662%" y="837" width="0.1511%" height="15" fill="rgb(236,58,11)" fg:x="299" fg:w="1"/><text x="45.4162%" y="847.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.15%)</title><rect x="45.1662%" y="821" width="0.1511%" height="15" fill="rgb(249,63,35)" fg:x="299" fg:w="1"/><text x="45.4162%" y="831.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="45.1662%" y="805" width="0.1511%" height="15" fill="rgb(252,114,16)" fg:x="299" fg:w="1"/><text x="45.4162%" y="815.50"></text></g><g><title>`0x7FFE2C8773BA (1 samples, 0.15%)</title><rect x="45.3172%" y="773" width="0.1511%" height="15" fill="rgb(254,151,24)" fg:x="300" fg:w="1"/><text x="45.5672%" y="783.50"></text></g><g><title>`0x7FFE2C8D5DEC (1 samples, 0.15%)</title><rect x="45.3172%" y="757" width="0.1511%" height="15" fill="rgb(253,54,39)" fg:x="300" fg:w="1"/><text x="45.5672%" y="767.50"></text></g><g><title>`0x7FFE2F125AD7 (1 samples, 0.15%)</title><rect x="45.3172%" y="741" width="0.1511%" height="15" fill="rgb(243,25,45)" fg:x="300" fg:w="1"/><text x="45.5672%" y="751.50"></text></g><g><title>`0x7FFE2F125D17 (1 samples, 0.15%)</title><rect x="45.3172%" y="725" width="0.1511%" height="15" fill="rgb(234,134,9)" fg:x="300" fg:w="1"/><text x="45.5672%" y="735.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="45.3172%" y="709" width="0.1511%" height="15" fill="rgb(227,166,31)" fg:x="300" fg:w="1"/><text x="45.5672%" y="719.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.15%)</title><rect x="45.3172%" y="693" width="0.1511%" height="15" fill="rgb(245,143,41)" fg:x="300" fg:w="1"/><text x="45.5672%" y="703.50"></text></g><g><title>`0x7FFE2F066A24 (1 samples, 0.15%)</title><rect x="45.3172%" y="677" width="0.1511%" height="15" fill="rgb(238,181,32)" fg:x="300" fg:w="1"/><text x="45.5672%" y="687.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.15%)</title><rect x="45.4683%" y="773" width="0.1511%" height="15" fill="rgb(224,113,18)" fg:x="301" fg:w="1"/><text x="45.7183%" y="783.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.15%)</title><rect x="45.4683%" y="757" width="0.1511%" height="15" fill="rgb(240,229,28)" fg:x="301" fg:w="1"/><text x="45.7183%" y="767.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.15%)</title><rect x="45.4683%" y="741" width="0.1511%" height="15" fill="rgb(250,185,3)" fg:x="301" fg:w="1"/><text x="45.7183%" y="751.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="45.4683%" y="725" width="0.1511%" height="15" fill="rgb(212,59,25)" fg:x="301" fg:w="1"/><text x="45.7183%" y="735.50"></text></g><g><title>`0x7FFE2C8776C5 (6 samples, 0.91%)</title><rect x="45.6193%" y="773" width="0.9063%" height="15" fill="rgb(221,87,20)" fg:x="302" fg:w="6"/><text x="45.8693%" y="783.50"></text></g><g><title>`0x7FFE2F1A4C44 (6 samples, 0.91%)</title><rect x="45.6193%" y="757" width="0.9063%" height="15" fill="rgb(213,74,28)" fg:x="302" fg:w="6"/><text x="45.8693%" y="767.50"></text></g><g><title>`0x7FFE2DD2D5CA (1 samples, 0.15%)</title><rect x="46.5257%" y="741" width="0.1511%" height="15" fill="rgb(224,132,34)" fg:x="308" fg:w="1"/><text x="46.7757%" y="751.50"></text></g><g><title>`0x7FFE2DD2DE5C (1 samples, 0.15%)</title><rect x="46.5257%" y="725" width="0.1511%" height="15" fill="rgb(222,101,24)" fg:x="308" fg:w="1"/><text x="46.7757%" y="735.50"></text></g><g><title>`0x7FFE2DD2E835 (1 samples, 0.15%)</title><rect x="46.5257%" y="709" width="0.1511%" height="15" fill="rgb(254,142,4)" fg:x="308" fg:w="1"/><text x="46.7757%" y="719.50"></text></g><g><title>`0x7FFE2F0C32F7 (1 samples, 0.15%)</title><rect x="46.5257%" y="693" width="0.1511%" height="15" fill="rgb(230,229,49)" fg:x="308" fg:w="1"/><text x="46.7757%" y="703.50"></text></g><g><title>`0x7FFE2F0C13F0 (1 samples, 0.15%)</title><rect x="46.5257%" y="677" width="0.1511%" height="15" fill="rgb(238,70,47)" fg:x="308" fg:w="1"/><text x="46.7757%" y="687.50"></text></g><g><title>`0x7FFE2F096364 (1 samples, 0.15%)</title><rect x="46.5257%" y="661" width="0.1511%" height="15" fill="rgb(231,160,17)" fg:x="308" fg:w="1"/><text x="46.7757%" y="671.50"></text></g><g><title>`0x7FFE2DD2D646 (5 samples, 0.76%)</title><rect x="46.6767%" y="741" width="0.7553%" height="15" fill="rgb(218,68,53)" fg:x="309" fg:w="5"/><text x="46.9267%" y="751.50"></text></g><g><title>`0x7FFE2F1A3BB4 (5 samples, 0.76%)</title><rect x="46.6767%" y="725" width="0.7553%" height="15" fill="rgb(236,111,10)" fg:x="309" fg:w="5"/><text x="46.9267%" y="735.50"></text></g><g><title>`0x7FFE2C8787CB (7 samples, 1.06%)</title><rect x="46.5257%" y="773" width="1.0574%" height="15" fill="rgb(224,34,41)" fg:x="308" fg:w="7"/><text x="46.7757%" y="783.50"></text></g><g><title>`0x7FFE2DD2D052 (7 samples, 1.06%)</title><rect x="46.5257%" y="757" width="1.0574%" height="15" fill="rgb(241,118,19)" fg:x="308" fg:w="7"/><text x="46.7757%" y="767.50"></text></g><g><title>`0x7FFE2DD2D762 (1 samples, 0.15%)</title><rect x="47.4320%" y="741" width="0.1511%" height="15" fill="rgb(238,129,25)" fg:x="314" fg:w="1"/><text x="47.6820%" y="751.50"></text></g><g><title>`0x7FFE2DD2EB1D (1 samples, 0.15%)</title><rect x="47.4320%" y="725" width="0.1511%" height="15" fill="rgb(238,22,31)" fg:x="314" fg:w="1"/><text x="47.6820%" y="735.50"></text></g><g><title>`0x7FFE2F0C0EC4 (1 samples, 0.15%)</title><rect x="47.4320%" y="709" width="0.1511%" height="15" fill="rgb(222,174,48)" fg:x="314" fg:w="1"/><text x="47.6820%" y="719.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (16 samples, 2.42%)</title><rect x="45.3172%" y="837" width="2.4169%" height="15" fill="rgb(206,152,40)" fg:x="300" fg:w="16"/><text x="45.5672%" y="847.50">fu..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (16 samples, 2.42%)</title><rect x="45.3172%" y="821" width="2.4169%" height="15" fill="rgb(218,99,54)" fg:x="300" fg:w="16"/><text x="45.5672%" y="831.50">fu..</text></g><g><title>`0x7FFE2DD4C6D4 (16 samples, 2.42%)</title><rect x="45.3172%" y="805" width="2.4169%" height="15" fill="rgb(220,174,26)" fg:x="300" fg:w="16"/><text x="45.5672%" y="815.50">`0..</text></g><g><title>`0x7FFE2C874E26 (16 samples, 2.42%)</title><rect x="45.3172%" y="789" width="2.4169%" height="15" fill="rgb(245,116,9)" fg:x="300" fg:w="16"/><text x="45.5672%" y="799.50">`0..</text></g><g><title>`0x7FFE2C878B3F (1 samples, 0.15%)</title><rect x="47.5831%" y="773" width="0.1511%" height="15" fill="rgb(209,72,35)" fg:x="315" fg:w="1"/><text x="47.8331%" y="783.50"></text></g><g><title>`0x7FFE2F075D02 (1 samples, 0.15%)</title><rect x="47.5831%" y="757" width="0.1511%" height="15" fill="rgb(226,126,21)" fg:x="315" fg:w="1"/><text x="47.8331%" y="767.50"></text></g><g><title>`0x7FFE2F1A43E4 (1 samples, 0.15%)</title><rect x="47.5831%" y="741" width="0.1511%" height="15" fill="rgb(227,192,1)" fg:x="315" fg:w="1"/><text x="47.8331%" y="751.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="47.7341%" y="805" width="0.1511%" height="15" fill="rgb(237,180,29)" fg:x="316" fg:w="1"/><text x="47.9841%" y="815.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.15%)</title><rect x="47.7341%" y="789" width="0.1511%" height="15" fill="rgb(230,197,35)" fg:x="316" fg:w="1"/><text x="47.9841%" y="799.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="47.7341%" y="773" width="0.1511%" height="15" fill="rgb(246,193,31)" fg:x="316" fg:w="1"/><text x="47.9841%" y="783.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="47.7341%" y="757" width="0.1511%" height="15" fill="rgb(241,36,4)" fg:x="316" fg:w="1"/><text x="47.9841%" y="767.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="47.7341%" y="741" width="0.1511%" height="15" fill="rgb(241,130,17)" fg:x="316" fg:w="1"/><text x="47.9841%" y="751.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="47.7341%" y="725" width="0.1511%" height="15" fill="rgb(206,137,32)" fg:x="316" fg:w="1"/><text x="47.9841%" y="735.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="47.7341%" y="709" width="0.1511%" height="15" fill="rgb(237,228,51)" fg:x="316" fg:w="1"/><text x="47.9841%" y="719.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="47.7341%" y="693" width="0.1511%" height="15" fill="rgb(243,6,42)" fg:x="316" fg:w="1"/><text x="47.9841%" y="703.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (67 samples, 10.12%)</title><rect x="38.6707%" y="1317" width="10.1208%" height="15" fill="rgb(251,74,28)" fg:x="256" fg:w="67"/><text x="38.9207%" y="1327.50">fuzzit.exe`rayo..</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (67 samples, 10.12%)</title><rect x="38.6707%" y="1301" width="10.1208%" height="15" fill="rgb(218,20,49)" fg:x="256" fg:w="67"/><text x="38.9207%" y="1311.50">fuzzit.exe`rayo..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (26 samples, 3.93%)</title><rect x="44.8640%" y="1285" width="3.9275%" height="15" fill="rgb(238,28,14)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1295.50">fuzz..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (26 samples, 3.93%)</title><rect x="44.8640%" y="1269" width="3.9275%" height="15" fill="rgb(229,40,46)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1279.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (26 samples, 3.93%)</title><rect x="44.8640%" y="1253" width="3.9275%" height="15" fill="rgb(244,195,20)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1263.50">fuzz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (26 samples, 3.93%)</title><rect x="44.8640%" y="1237" width="3.9275%" height="15" fill="rgb(253,56,35)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1247.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (26 samples, 3.93%)</title><rect x="44.8640%" y="1221" width="3.9275%" height="15" fill="rgb(210,149,44)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1231.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (26 samples, 3.93%)</title><rect x="44.8640%" y="1205" width="3.9275%" height="15" fill="rgb(240,135,12)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1215.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (26 samples, 3.93%)</title><rect x="44.8640%" y="1189" width="3.9275%" height="15" fill="rgb(251,24,50)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1199.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (26 samples, 3.93%)</title><rect x="44.8640%" y="1173" width="3.9275%" height="15" fill="rgb(243,200,47)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1183.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (26 samples, 3.93%)</title><rect x="44.8640%" y="1157" width="3.9275%" height="15" fill="rgb(224,166,26)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1167.50">fuzz..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (26 samples, 3.93%)</title><rect x="44.8640%" y="1141" width="3.9275%" height="15" fill="rgb(233,0,47)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1151.50">fuzz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (26 samples, 3.93%)</title><rect x="44.8640%" y="1125" width="3.9275%" height="15" fill="rgb(253,80,5)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1135.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (26 samples, 3.93%)</title><rect x="44.8640%" y="1109" width="3.9275%" height="15" fill="rgb(214,133,25)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1119.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (26 samples, 3.93%)</title><rect x="44.8640%" y="1093" width="3.9275%" height="15" fill="rgb(209,27,14)" fg:x="297" fg:w="26"/><text x="45.1140%" y="1103.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.78%)</title><rect x="45.0151%" y="1077" width="3.7764%" height="15" fill="rgb(219,102,51)" fg:x="298" fg:w="25"/><text x="45.2651%" y="1087.50">fuzz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.78%)</title><rect x="45.0151%" y="1061" width="3.7764%" height="15" fill="rgb(237,18,16)" fg:x="298" fg:w="25"/><text x="45.2651%" y="1071.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.78%)</title><rect x="45.0151%" y="1045" width="3.7764%" height="15" fill="rgb(241,85,17)" fg:x="298" fg:w="25"/><text x="45.2651%" y="1055.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (25 samples, 3.78%)</title><rect x="45.0151%" y="1029" width="3.7764%" height="15" fill="rgb(236,90,42)" fg:x="298" fg:w="25"/><text x="45.2651%" y="1039.50">fuzz..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.78%)</title><rect x="45.0151%" y="1013" width="3.7764%" height="15" fill="rgb(249,57,21)" fg:x="298" fg:w="25"/><text x="45.2651%" y="1023.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.78%)</title><rect x="45.0151%" y="997" width="3.7764%" height="15" fill="rgb(243,12,36)" fg:x="298" fg:w="25"/><text x="45.2651%" y="1007.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (25 samples, 3.78%)</title><rect x="45.0151%" y="981" width="3.7764%" height="15" fill="rgb(253,128,47)" fg:x="298" fg:w="25"/><text x="45.2651%" y="991.50">fuzz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (25 samples, 3.78%)</title><rect x="45.0151%" y="965" width="3.7764%" height="15" fill="rgb(207,33,20)" fg:x="298" fg:w="25"/><text x="45.2651%" y="975.50">fuzz..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (25 samples, 3.78%)</title><rect x="45.0151%" y="949" width="3.7764%" height="15" fill="rgb(233,215,35)" fg:x="298" fg:w="25"/><text x="45.2651%" y="959.50">fuzz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (25 samples, 3.78%)</title><rect x="45.0151%" y="933" width="3.7764%" height="15" fill="rgb(249,188,52)" fg:x="298" fg:w="25"/><text x="45.2651%" y="943.50">fuzz..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (25 samples, 3.78%)</title><rect x="45.0151%" y="917" width="3.7764%" height="15" fill="rgb(225,12,32)" fg:x="298" fg:w="25"/><text x="45.2651%" y="927.50">fuzz..</text></g><g><title>fuzzit.exe`std::process::Command::output (25 samples, 3.78%)</title><rect x="45.0151%" y="901" width="3.7764%" height="15" fill="rgb(247,98,14)" fg:x="298" fg:w="25"/><text x="45.2651%" y="911.50">fuzz..</text></g><g><title>fuzzit.exe`std::sys::process::output (25 samples, 3.78%)</title><rect x="45.0151%" y="885" width="3.7764%" height="15" fill="rgb(247,219,48)" fg:x="298" fg:w="25"/><text x="45.2651%" y="895.50">fuzz..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (23 samples, 3.47%)</title><rect x="45.3172%" y="869" width="3.4743%" height="15" fill="rgb(253,60,48)" fg:x="300" fg:w="23"/><text x="45.5672%" y="879.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (23 samples, 3.47%)</title><rect x="45.3172%" y="853" width="3.4743%" height="15" fill="rgb(245,15,52)" fg:x="300" fg:w="23"/><text x="45.5672%" y="863.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (7 samples, 1.06%)</title><rect x="47.7341%" y="837" width="1.0574%" height="15" fill="rgb(220,133,28)" fg:x="316" fg:w="7"/><text x="47.9841%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (7 samples, 1.06%)</title><rect x="47.7341%" y="821" width="1.0574%" height="15" fill="rgb(217,180,4)" fg:x="316" fg:w="7"/><text x="47.9841%" y="831.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (6 samples, 0.91%)</title><rect x="47.8852%" y="805" width="0.9063%" height="15" fill="rgb(251,24,1)" fg:x="317" fg:w="6"/><text x="48.1352%" y="815.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (6 samples, 0.91%)</title><rect x="47.8852%" y="789" width="0.9063%" height="15" fill="rgb(212,185,49)" fg:x="317" fg:w="6"/><text x="48.1352%" y="799.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (6 samples, 0.91%)</title><rect x="47.8852%" y="773" width="0.9063%" height="15" fill="rgb(215,175,22)" fg:x="317" fg:w="6"/><text x="48.1352%" y="783.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (6 samples, 0.91%)</title><rect x="47.8852%" y="757" width="0.9063%" height="15" fill="rgb(250,205,14)" fg:x="317" fg:w="6"/><text x="48.1352%" y="767.50"></text></g><g><title>`0x7FFE2C81DF99 (6 samples, 0.91%)</title><rect x="47.8852%" y="741" width="0.9063%" height="15" fill="rgb(225,211,22)" fg:x="317" fg:w="6"/><text x="48.1352%" y="751.50"></text></g><g><title>`0x7FFE2F1A39D4 (6 samples, 0.91%)</title><rect x="47.8852%" y="725" width="0.9063%" height="15" fill="rgb(251,179,42)" fg:x="317" fg:w="6"/><text x="48.1352%" y="735.50"></text></g><g><title>`0x7FFE2C89696B (1 samples, 0.15%)</title><rect x="48.7915%" y="1301" width="0.1511%" height="15" fill="rgb(208,216,51)" fg:x="323" fg:w="1"/><text x="49.0415%" y="1311.50"></text></g><g><title>`0x7FFE2F10E134 (1 samples, 0.15%)</title><rect x="48.7915%" y="1285" width="0.1511%" height="15" fill="rgb(235,36,11)" fg:x="323" fg:w="1"/><text x="49.0415%" y="1295.50"></text></g><g><title>`0x7FFE2F1A38B4 (1 samples, 0.15%)</title><rect x="48.7915%" y="1269" width="0.1511%" height="15" fill="rgb(213,189,28)" fg:x="323" fg:w="1"/><text x="49.0415%" y="1279.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::no_work_found (2 samples, 0.30%)</title><rect x="48.7915%" y="1317" width="0.3021%" height="15" fill="rgb(227,203,42)" fg:x="323" fg:w="2"/><text x="49.0415%" y="1327.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::sleep&lt;rayon_core::registry::impl$10::wait_until_cold::closure_env$0&gt; (1 samples, 0.15%)</title><rect x="48.9426%" y="1301" width="0.1511%" height="15" fill="rgb(244,72,36)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1311.50"></text></g><g><title>fuzzit.exe`std::sync::poison::condvar::Condvar::wait(std::sync::poison::mutex::MutexGuard (1 samples, 0.15%)</title><rect x="48.9426%" y="1285" width="0.1511%" height="15" fill="rgb(213,53,17)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1295.50"></text></g><g><title>fuzzit.exe`std::sync::poison::Flag::get (1 samples, 0.15%)</title><rect x="48.9426%" y="1269" width="0.1511%" height="15" fill="rgb(207,167,3)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1279.50"></text></g><g><title>fuzzit.exe`core::sync::atomic::AtomicBool::load (1 samples, 0.15%)</title><rect x="48.9426%" y="1253" width="0.1511%" height="15" fill="rgb(216,98,30)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1263.50"></text></g><g><title>fuzzit.exe`core::sync::atomic::atomic_load (1 samples, 0.15%)</title><rect x="48.9426%" y="1237" width="0.1511%" height="15" fill="rgb(236,123,15)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1247.50"></text></g><g><title>fuzzit.exe`std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.15%)</title><rect x="48.9426%" y="1221" width="0.1511%" height="15" fill="rgb(248,81,50)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1231.50"></text></g><g><title>fuzzit.exe`std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (1 samples, 0.15%)</title><rect x="48.9426%" y="1205" width="0.1511%" height="15" fill="rgb(214,120,4)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1215.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::futex_wait (1 samples, 0.15%)</title><rect x="48.9426%" y="1189" width="0.1511%" height="15" fill="rgb(208,179,34)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1199.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::wait_on_address (1 samples, 0.15%)</title><rect x="48.9426%" y="1173" width="0.1511%" height="15" fill="rgb(227,140,7)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1183.50"></text></g><g><title>`0x7FFE2C8C2638 (1 samples, 0.15%)</title><rect x="48.9426%" y="1157" width="0.1511%" height="15" fill="rgb(214,22,6)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1167.50"></text></g><g><title>`0x7FFE2F046D63 (1 samples, 0.15%)</title><rect x="48.9426%" y="1141" width="0.1511%" height="15" fill="rgb(207,137,27)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1151.50"></text></g><g><title>`0x7FFE2F1A6E84 (1 samples, 0.15%)</title><rect x="48.9426%" y="1125" width="0.1511%" height="15" fill="rgb(210,8,46)" fg:x="324" fg:w="1"/><text x="49.1926%" y="1135.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (70 samples, 10.57%)</title><rect x="38.6707%" y="1349" width="10.5740%" height="15" fill="rgb(240,16,54)" fg:x="256" fg:w="70"/><text x="38.9207%" y="1359.50">fuzzit.exe`rayo..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (70 samples, 10.57%)</title><rect x="38.6707%" y="1333" width="10.5740%" height="15" fill="rgb(211,209,29)" fg:x="256" fg:w="70"/><text x="38.9207%" y="1343.50">fuzzit.exe`rayo..</text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.15%)</title><rect x="49.0937%" y="1317" width="0.1511%" height="15" fill="rgb(226,228,24)" fg:x="325" fg:w="1"/><text x="49.3437%" y="1327.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.15%)</title><rect x="49.0937%" y="1301" width="0.1511%" height="15" fill="rgb(222,84,9)" fg:x="325" fg:w="1"/><text x="49.3437%" y="1311.50"></text></g><g><title>fuzzit.exe`std::sync::poison::mutex::Mutex&lt;bool&gt;::lock (1 samples, 0.15%)</title><rect x="49.0937%" y="1285" width="0.1511%" height="15" fill="rgb(234,203,30)" fg:x="325" fg:w="1"/><text x="49.3437%" y="1295.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.15%)</title><rect x="49.0937%" y="1269" width="0.1511%" height="15" fill="rgb(238,109,14)" fg:x="325" fg:w="1"/><text x="49.3437%" y="1279.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.15%)</title><rect x="49.0937%" y="1253" width="0.1511%" height="15" fill="rgb(233,206,34)" fg:x="325" fg:w="1"/><text x="49.3437%" y="1263.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::futex_wait (1 samples, 0.15%)</title><rect x="49.0937%" y="1237" width="0.1511%" height="15" fill="rgb(220,167,47)" fg:x="325" fg:w="1"/><text x="49.3437%" y="1247.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::wait_on_address (1 samples, 0.15%)</title><rect x="49.0937%" y="1221" width="0.1511%" height="15" fill="rgb(238,105,10)" fg:x="325" fg:w="1"/><text x="49.3437%" y="1231.50"></text></g><g><title>`0x7FFE2C8C2638 (1 samples, 0.15%)</title><rect x="49.0937%" y="1205" width="0.1511%" height="15" fill="rgb(213,227,17)" fg:x="325" fg:w="1"/><text x="49.3437%" y="1215.50"></text></g><g><title>`0x7FFE2F046C77 (1 samples, 0.15%)</title><rect x="49.0937%" y="1189" width="0.1511%" height="15" fill="rgb(217,132,38)" fg:x="325" fg:w="1"/><text x="49.3437%" y="1199.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="49.2447%" y="1045" width="0.1511%" height="15" fill="rgb(242,146,4)" fg:x="326" fg:w="1"/><text x="49.4947%" y="1055.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.15%)</title><rect x="49.2447%" y="1029" width="0.1511%" height="15" fill="rgb(212,61,9)" fg:x="326" fg:w="1"/><text x="49.4947%" y="1039.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="49.2447%" y="1013" width="0.1511%" height="15" fill="rgb(247,126,22)" fg:x="326" fg:w="1"/><text x="49.4947%" y="1023.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.15%)</title><rect x="49.3958%" y="997" width="0.1511%" height="15" fill="rgb(220,196,2)" fg:x="327" fg:w="1"/><text x="49.6458%" y="1007.50"></text></g><g><title>`0x7FFE2C7FF233 (1 samples, 0.15%)</title><rect x="49.3958%" y="981" width="0.1511%" height="15" fill="rgb(208,46,4)" fg:x="327" fg:w="1"/><text x="49.6458%" y="991.50"></text></g><g><title>`0x7FFE2F1A3D84 (1 samples, 0.15%)</title><rect x="49.3958%" y="965" width="0.1511%" height="15" fill="rgb(252,104,46)" fg:x="327" fg:w="1"/><text x="49.6458%" y="975.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (3 samples, 0.45%)</title><rect x="49.3958%" y="1029" width="0.4532%" height="15" fill="rgb(237,152,48)" fg:x="327" fg:w="3"/><text x="49.6458%" y="1039.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (3 samples, 0.45%)</title><rect x="49.3958%" y="1013" width="0.4532%" height="15" fill="rgb(221,59,37)" fg:x="327" fg:w="3"/><text x="49.6458%" y="1023.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (2 samples, 0.30%)</title><rect x="49.5468%" y="997" width="0.3021%" height="15" fill="rgb(209,202,51)" fg:x="328" fg:w="2"/><text x="49.7968%" y="1007.50"></text></g><g><title>`0x7FFE2C8031A9 (2 samples, 0.30%)</title><rect x="49.5468%" y="981" width="0.3021%" height="15" fill="rgb(228,81,30)" fg:x="328" fg:w="2"/><text x="49.7968%" y="991.50"></text></g><g><title>`0x7FFE2F1A3414 (2 samples, 0.30%)</title><rect x="49.5468%" y="965" width="0.3021%" height="15" fill="rgb(227,42,39)" fg:x="328" fg:w="2"/><text x="49.7968%" y="975.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.15%)</title><rect x="49.8489%" y="821" width="0.1511%" height="15" fill="rgb(221,26,2)" fg:x="330" fg:w="1"/><text x="50.0989%" y="831.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.15%)</title><rect x="49.8489%" y="805" width="0.1511%" height="15" fill="rgb(254,61,31)" fg:x="330" fg:w="1"/><text x="50.0989%" y="815.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="49.8489%" y="789" width="0.1511%" height="15" fill="rgb(222,173,38)" fg:x="330" fg:w="1"/><text x="50.0989%" y="799.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (2 samples, 0.30%)</title><rect x="49.8489%" y="965" width="0.3021%" height="15" fill="rgb(218,50,12)" fg:x="330" fg:w="2"/><text x="50.0989%" y="975.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="49.8489%" y="949" width="0.3021%" height="15" fill="rgb(223,88,40)" fg:x="330" fg:w="2"/><text x="50.0989%" y="959.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="49.8489%" y="933" width="0.3021%" height="15" fill="rgb(237,54,19)" fg:x="330" fg:w="2"/><text x="50.0989%" y="943.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (2 samples, 0.30%)</title><rect x="49.8489%" y="917" width="0.3021%" height="15" fill="rgb(251,129,25)" fg:x="330" fg:w="2"/><text x="50.0989%" y="927.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (2 samples, 0.30%)</title><rect x="49.8489%" y="901" width="0.3021%" height="15" fill="rgb(238,97,19)" fg:x="330" fg:w="2"/><text x="50.0989%" y="911.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (2 samples, 0.30%)</title><rect x="49.8489%" y="885" width="0.3021%" height="15" fill="rgb(240,169,18)" fg:x="330" fg:w="2"/><text x="50.0989%" y="895.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (2 samples, 0.30%)</title><rect x="49.8489%" y="869" width="0.3021%" height="15" fill="rgb(230,187,49)" fg:x="330" fg:w="2"/><text x="50.0989%" y="879.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (2 samples, 0.30%)</title><rect x="49.8489%" y="853" width="0.3021%" height="15" fill="rgb(209,44,26)" fg:x="330" fg:w="2"/><text x="50.0989%" y="863.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (2 samples, 0.30%)</title><rect x="49.8489%" y="837" width="0.3021%" height="15" fill="rgb(244,0,6)" fg:x="330" fg:w="2"/><text x="50.0989%" y="847.50"></text></g><g><title>`0x7FFE2DD67250 (1 samples, 0.15%)</title><rect x="50.0000%" y="821" width="0.1511%" height="15" fill="rgb(248,18,21)" fg:x="331" fg:w="1"/><text x="50.2500%" y="831.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (4 samples, 0.60%)</title><rect x="49.8489%" y="997" width="0.6042%" height="15" fill="rgb(245,180,19)" fg:x="330" fg:w="4"/><text x="50.0989%" y="1007.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (4 samples, 0.60%)</title><rect x="49.8489%" y="981" width="0.6042%" height="15" fill="rgb(252,118,36)" fg:x="330" fg:w="4"/><text x="50.0989%" y="991.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (2 samples, 0.30%)</title><rect x="50.1511%" y="965" width="0.3021%" height="15" fill="rgb(210,224,19)" fg:x="332" fg:w="2"/><text x="50.4011%" y="975.50"></text></g><g><title>`0x7FFE2C8CFEE5 (2 samples, 0.30%)</title><rect x="50.1511%" y="949" width="0.3021%" height="15" fill="rgb(218,30,24)" fg:x="332" fg:w="2"/><text x="50.4011%" y="959.50"></text></g><g><title>`0x7FFE2F1A4984 (2 samples, 0.30%)</title><rect x="50.1511%" y="933" width="0.3021%" height="15" fill="rgb(219,75,50)" fg:x="332" fg:w="2"/><text x="50.4011%" y="943.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.15%)</title><rect x="50.4532%" y="933" width="0.1511%" height="15" fill="rgb(234,72,50)" fg:x="334" fg:w="1"/><text x="50.7032%" y="943.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.15%)</title><rect x="50.4532%" y="917" width="0.1511%" height="15" fill="rgb(219,100,48)" fg:x="334" fg:w="1"/><text x="50.7032%" y="927.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.15%)</title><rect x="50.4532%" y="901" width="0.1511%" height="15" fill="rgb(253,5,41)" fg:x="334" fg:w="1"/><text x="50.7032%" y="911.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="50.4532%" y="885" width="0.1511%" height="15" fill="rgb(247,181,11)" fg:x="334" fg:w="1"/><text x="50.7032%" y="895.50"></text></g><g><title>`0x7FFE2C8776C5 (19 samples, 2.87%)</title><rect x="50.6042%" y="933" width="2.8701%" height="15" fill="rgb(222,223,25)" fg:x="335" fg:w="19"/><text x="50.8542%" y="943.50">`0..</text></g><g><title>`0x7FFE2F1A4C44 (19 samples, 2.87%)</title><rect x="50.6042%" y="917" width="2.8701%" height="15" fill="rgb(214,198,28)" fg:x="335" fg:w="19"/><text x="50.8542%" y="927.50">`0..</text></g><g><title>`0x7FFE2DD2D5CA (1 samples, 0.15%)</title><rect x="53.4743%" y="901" width="0.1511%" height="15" fill="rgb(230,46,43)" fg:x="354" fg:w="1"/><text x="53.7243%" y="911.50"></text></g><g><title>`0x7FFE2DD2DE5C (1 samples, 0.15%)</title><rect x="53.4743%" y="885" width="0.1511%" height="15" fill="rgb(233,65,53)" fg:x="354" fg:w="1"/><text x="53.7243%" y="895.50"></text></g><g><title>`0x7FFE2DD2E744 (1 samples, 0.15%)</title><rect x="53.4743%" y="869" width="0.1511%" height="15" fill="rgb(221,121,27)" fg:x="354" fg:w="1"/><text x="53.7243%" y="879.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="53.4743%" y="853" width="0.1511%" height="15" fill="rgb(247,70,47)" fg:x="354" fg:w="1"/><text x="53.7243%" y="863.50"></text></g><g><title>`0x7FFE2DD2D5FB (1 samples, 0.15%)</title><rect x="53.6254%" y="901" width="0.1511%" height="15" fill="rgb(228,85,35)" fg:x="355" fg:w="1"/><text x="53.8754%" y="911.50"></text></g><g><title>`0x7FFE2DD2E523 (1 samples, 0.15%)</title><rect x="53.6254%" y="885" width="0.1511%" height="15" fill="rgb(209,50,18)" fg:x="355" fg:w="1"/><text x="53.8754%" y="895.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.15%)</title><rect x="53.6254%" y="869" width="0.1511%" height="15" fill="rgb(250,19,35)" fg:x="355" fg:w="1"/><text x="53.8754%" y="879.50"></text></g><g><title>`0x7FFE2C8787CB (22 samples, 3.32%)</title><rect x="53.4743%" y="933" width="3.3233%" height="15" fill="rgb(253,107,29)" fg:x="354" fg:w="22"/><text x="53.7243%" y="943.50">`0x..</text></g><g><title>`0x7FFE2DD2D052 (22 samples, 3.32%)</title><rect x="53.4743%" y="917" width="3.3233%" height="15" fill="rgb(252,179,29)" fg:x="354" fg:w="22"/><text x="53.7243%" y="927.50">`0x..</text></g><g><title>`0x7FFE2DD2D646 (20 samples, 3.02%)</title><rect x="53.7764%" y="901" width="3.0211%" height="15" fill="rgb(238,194,6)" fg:x="356" fg:w="20"/><text x="54.0264%" y="911.50">`0x..</text></g><g><title>`0x7FFE2F1A3BB4 (20 samples, 3.02%)</title><rect x="53.7764%" y="885" width="3.0211%" height="15" fill="rgb(238,164,29)" fg:x="356" fg:w="20"/><text x="54.0264%" y="895.50">`0x..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (43 samples, 6.50%)</title><rect x="50.4532%" y="997" width="6.4955%" height="15" fill="rgb(224,25,9)" fg:x="334" fg:w="43"/><text x="50.7032%" y="1007.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (43 samples, 6.50%)</title><rect x="50.4532%" y="981" width="6.4955%" height="15" fill="rgb(244,153,23)" fg:x="334" fg:w="43"/><text x="50.7032%" y="991.50">fuzzit.ex..</text></g><g><title>`0x7FFE2DD4C6D4 (43 samples, 6.50%)</title><rect x="50.4532%" y="965" width="6.4955%" height="15" fill="rgb(212,203,14)" fg:x="334" fg:w="43"/><text x="50.7032%" y="975.50">`0x7FFE2D..</text></g><g><title>`0x7FFE2C874E26 (43 samples, 6.50%)</title><rect x="50.4532%" y="949" width="6.4955%" height="15" fill="rgb(220,164,20)" fg:x="334" fg:w="43"/><text x="50.7032%" y="959.50">`0x7FFE2C..</text></g><g><title>`0x7FFE2C87A57A (1 samples, 0.15%)</title><rect x="56.7976%" y="933" width="0.1511%" height="15" fill="rgb(222,203,48)" fg:x="376" fg:w="1"/><text x="57.0476%" y="943.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="56.7976%" y="917" width="0.1511%" height="15" fill="rgb(215,159,22)" fg:x="376" fg:w="1"/><text x="57.0476%" y="927.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="56.9486%" y="997" width="0.1511%" height="15" fill="rgb(216,183,47)" fg:x="377" fg:w="1"/><text x="57.1986%" y="1007.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="56.9486%" y="981" width="0.1511%" height="15" fill="rgb(229,195,25)" fg:x="377" fg:w="1"/><text x="57.1986%" y="991.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.15%)</title><rect x="56.9486%" y="965" width="0.1511%" height="15" fill="rgb(224,132,51)" fg:x="377" fg:w="1"/><text x="57.1986%" y="975.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.15%)</title><rect x="56.9486%" y="949" width="0.1511%" height="15" fill="rgb(240,63,7)" fg:x="377" fg:w="1"/><text x="57.1986%" y="959.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.15%)</title><rect x="57.0997%" y="965" width="0.1511%" height="15" fill="rgb(249,182,41)" fg:x="378" fg:w="1"/><text x="57.3497%" y="975.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.15%)</title><rect x="57.0997%" y="949" width="0.1511%" height="15" fill="rgb(243,47,26)" fg:x="378" fg:w="1"/><text x="57.3497%" y="959.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.15%)</title><rect x="57.0997%" y="933" width="0.1511%" height="15" fill="rgb(233,48,2)" fg:x="378" fg:w="1"/><text x="57.3497%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (1 samples, 0.15%)</title><rect x="57.0997%" y="917" width="0.1511%" height="15" fill="rgb(244,165,34)" fg:x="378" fg:w="1"/><text x="57.3497%" y="927.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.15%)</title><rect x="57.0997%" y="901" width="0.1511%" height="15" fill="rgb(207,89,7)" fg:x="378" fg:w="1"/><text x="57.3497%" y="911.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.15%)</title><rect x="57.0997%" y="885" width="0.1511%" height="15" fill="rgb(244,117,36)" fg:x="378" fg:w="1"/><text x="57.3497%" y="895.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.15%)</title><rect x="57.0997%" y="869" width="0.1511%" height="15" fill="rgb(226,144,34)" fg:x="378" fg:w="1"/><text x="57.3497%" y="879.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.15%)</title><rect x="57.0997%" y="853" width="0.1511%" height="15" fill="rgb(213,23,19)" fg:x="378" fg:w="1"/><text x="57.3497%" y="863.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.15%)</title><rect x="57.0997%" y="837" width="0.1511%" height="15" fill="rgb(217,75,12)" fg:x="378" fg:w="1"/><text x="57.3497%" y="847.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="57.0997%" y="821" width="0.1511%" height="15" fill="rgb(224,159,17)" fg:x="378" fg:w="1"/><text x="57.3497%" y="831.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.15%)</title><rect x="57.0997%" y="805" width="0.1511%" height="15" fill="rgb(217,118,1)" fg:x="378" fg:w="1"/><text x="57.3497%" y="815.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="57.0997%" y="789" width="0.1511%" height="15" fill="rgb(232,180,48)" fg:x="378" fg:w="1"/><text x="57.3497%" y="799.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="57.0997%" y="773" width="0.1511%" height="15" fill="rgb(230,27,33)" fg:x="378" fg:w="1"/><text x="57.3497%" y="783.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="57.0997%" y="757" width="0.1511%" height="15" fill="rgb(205,31,21)" fg:x="378" fg:w="1"/><text x="57.3497%" y="767.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.15%)</title><rect x="57.0997%" y="741" width="0.1511%" height="15" fill="rgb(253,59,4)" fg:x="378" fg:w="1"/><text x="57.3497%" y="751.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="57.0997%" y="725" width="0.1511%" height="15" fill="rgb(224,201,9)" fg:x="378" fg:w="1"/><text x="57.3497%" y="735.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="57.0997%" y="709" width="0.1511%" height="15" fill="rgb(229,206,30)" fg:x="378" fg:w="1"/><text x="57.3497%" y="719.50"></text></g><g><title>`0x7FFE2F069E2D (1 samples, 0.15%)</title><rect x="57.0997%" y="693" width="0.1511%" height="15" fill="rgb(212,67,47)" fg:x="378" fg:w="1"/><text x="57.3497%" y="703.50"></text></g><g><title>`0x7FFE2F06A0D5 (1 samples, 0.15%)</title><rect x="57.0997%" y="677" width="0.1511%" height="15" fill="rgb(211,96,50)" fg:x="378" fg:w="1"/><text x="57.3497%" y="687.50"></text></g><g><title>`0x7FFE2F06A9FB (1 samples, 0.15%)</title><rect x="57.0997%" y="661" width="0.1511%" height="15" fill="rgb(252,114,18)" fg:x="378" fg:w="1"/><text x="57.3497%" y="671.50"></text></g><g><title>fuzzit.exe`std::env::current_exe (1 samples, 0.15%)</title><rect x="57.2508%" y="965" width="0.1511%" height="15" fill="rgb(223,58,37)" fg:x="379" fg:w="1"/><text x="57.5008%" y="975.50"></text></g><g><title>`0x7FFE2C8D9EEA (1 samples, 0.15%)</title><rect x="57.4018%" y="949" width="0.1511%" height="15" fill="rgb(237,70,4)" fg:x="380" fg:w="1"/><text x="57.6518%" y="959.50"></text></g><g><title>`0x7FFE2F1A89A9 (1 samples, 0.15%)</title><rect x="57.4018%" y="933" width="0.1511%" height="15" fill="rgb(244,85,46)" fg:x="380" fg:w="1"/><text x="57.6518%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (2 samples, 0.30%)</title><rect x="57.4018%" y="965" width="0.3021%" height="15" fill="rgb(223,39,52)" fg:x="380" fg:w="2"/><text x="57.6518%" y="975.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.15%)</title><rect x="57.5529%" y="949" width="0.1511%" height="15" fill="rgb(218,200,14)" fg:x="381" fg:w="1"/><text x="57.8029%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="57.5529%" y="933" width="0.1511%" height="15" fill="rgb(208,171,16)" fg:x="381" fg:w="1"/><text x="57.8029%" y="943.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="57.5529%" y="917" width="0.1511%" height="15" fill="rgb(234,200,18)" fg:x="381" fg:w="1"/><text x="57.8029%" y="927.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="57.5529%" y="901" width="0.1511%" height="15" fill="rgb(228,45,11)" fg:x="381" fg:w="1"/><text x="57.8029%" y="911.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="57.5529%" y="885" width="0.1511%" height="15" fill="rgb(237,182,11)" fg:x="381" fg:w="1"/><text x="57.8029%" y="895.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="57.5529%" y="869" width="0.1511%" height="15" fill="rgb(241,175,49)" fg:x="381" fg:w="1"/><text x="57.8029%" y="879.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="57.5529%" y="853" width="0.1511%" height="15" fill="rgb(247,38,35)" fg:x="381" fg:w="1"/><text x="57.8029%" y="863.50"></text></g><g><title>`0x7FFE2C81DF4E (1 samples, 0.15%)</title><rect x="57.7039%" y="901" width="0.1511%" height="15" fill="rgb(228,39,49)" fg:x="382" fg:w="1"/><text x="57.9539%" y="911.50"></text></g><g><title>`0x7FFE2F11D2A3 (1 samples, 0.15%)</title><rect x="57.7039%" y="885" width="0.1511%" height="15" fill="rgb(226,101,26)" fg:x="382" fg:w="1"/><text x="57.9539%" y="895.50"></text></g><g><title>`0x7FFE2F1692EF (1 samples, 0.15%)</title><rect x="57.7039%" y="869" width="0.1511%" height="15" fill="rgb(206,141,19)" fg:x="382" fg:w="1"/><text x="57.9539%" y="879.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (70 samples, 10.57%)</title><rect x="49.2447%" y="1173" width="10.5740%" height="15" fill="rgb(211,200,13)" fg:x="326" fg:w="70"/><text x="49.4947%" y="1183.50">fuzzit.exe`rayo..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (70 samples, 10.57%)</title><rect x="49.2447%" y="1157" width="10.5740%" height="15" fill="rgb(241,121,6)" fg:x="326" fg:w="70"/><text x="49.4947%" y="1167.50">fuzzit.exe`rayo..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (70 samples, 10.57%)</title><rect x="49.2447%" y="1141" width="10.5740%" height="15" fill="rgb(234,221,29)" fg:x="326" fg:w="70"/><text x="49.4947%" y="1151.50">fuzzit.exe`rayo..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (70 samples, 10.57%)</title><rect x="49.2447%" y="1125" width="10.5740%" height="15" fill="rgb(229,136,5)" fg:x="326" fg:w="70"/><text x="49.4947%" y="1135.50">fuzzit.exe`fuzz..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (70 samples, 10.57%)</title><rect x="49.2447%" y="1109" width="10.5740%" height="15" fill="rgb(238,36,11)" fg:x="326" fg:w="70"/><text x="49.4947%" y="1119.50">fuzzit.exe`enum..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (70 samples, 10.57%)</title><rect x="49.2447%" y="1093" width="10.5740%" height="15" fill="rgb(251,55,41)" fg:x="326" fg:w="70"/><text x="49.4947%" y="1103.50">fuzzit.exe`fuzz..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (70 samples, 10.57%)</title><rect x="49.2447%" y="1077" width="10.5740%" height="15" fill="rgb(242,34,40)" fg:x="326" fg:w="70"/><text x="49.4947%" y="1087.50">fuzzit.exe`enum..</text></g><g><title>fuzzit.exe`std::process::Command::output (70 samples, 10.57%)</title><rect x="49.2447%" y="1061" width="10.5740%" height="15" fill="rgb(215,42,17)" fg:x="326" fg:w="70"/><text x="49.4947%" y="1071.50">fuzzit.exe`std:..</text></g><g><title>fuzzit.exe`std::sys::process::output (69 samples, 10.42%)</title><rect x="49.3958%" y="1045" width="10.4230%" height="15" fill="rgb(207,44,46)" fg:x="327" fg:w="69"/><text x="49.6458%" y="1055.50">fuzzit.exe`std:..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (66 samples, 9.97%)</title><rect x="49.8489%" y="1029" width="9.9698%" height="15" fill="rgb(211,206,28)" fg:x="330" fg:w="66"/><text x="50.0989%" y="1039.50">fuzzit.exe`std..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (66 samples, 9.97%)</title><rect x="49.8489%" y="1013" width="9.9698%" height="15" fill="rgb(237,167,16)" fg:x="330" fg:w="66"/><text x="50.0989%" y="1023.50">fuzzit.exe`std..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (18 samples, 2.72%)</title><rect x="57.0997%" y="997" width="2.7190%" height="15" fill="rgb(233,66,6)" fg:x="378" fg:w="18"/><text x="57.3497%" y="1007.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (18 samples, 2.72%)</title><rect x="57.0997%" y="981" width="2.7190%" height="15" fill="rgb(246,123,29)" fg:x="378" fg:w="18"/><text x="57.3497%" y="991.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (14 samples, 2.11%)</title><rect x="57.7039%" y="965" width="2.1148%" height="15" fill="rgb(209,62,40)" fg:x="382" fg:w="14"/><text x="57.9539%" y="975.50">f..</text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (14 samples, 2.11%)</title><rect x="57.7039%" y="949" width="2.1148%" height="15" fill="rgb(218,4,25)" fg:x="382" fg:w="14"/><text x="57.9539%" y="959.50">f..</text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (14 samples, 2.11%)</title><rect x="57.7039%" y="933" width="2.1148%" height="15" fill="rgb(253,91,49)" fg:x="382" fg:w="14"/><text x="57.9539%" y="943.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (14 samples, 2.11%)</title><rect x="57.7039%" y="917" width="2.1148%" height="15" fill="rgb(228,155,29)" fg:x="382" fg:w="14"/><text x="57.9539%" y="927.50">f..</text></g><g><title>`0x7FFE2C81DF99 (13 samples, 1.96%)</title><rect x="57.8550%" y="901" width="1.9637%" height="15" fill="rgb(243,57,37)" fg:x="383" fg:w="13"/><text x="58.1050%" y="911.50">`..</text></g><g><title>`0x7FFE2F1A39D4 (12 samples, 1.81%)</title><rect x="58.0060%" y="885" width="1.8127%" height="15" fill="rgb(244,167,17)" fg:x="384" fg:w="12"/><text x="58.2560%" y="895.50">`..</text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.15%)</title><rect x="59.8187%" y="933" width="0.1511%" height="15" fill="rgb(207,181,38)" fg:x="396" fg:w="1"/><text x="60.0687%" y="943.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.15%)</title><rect x="59.8187%" y="917" width="0.1511%" height="15" fill="rgb(211,8,23)" fg:x="396" fg:w="1"/><text x="60.0687%" y="927.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="59.8187%" y="901" width="0.1511%" height="15" fill="rgb(235,11,44)" fg:x="396" fg:w="1"/><text x="60.0687%" y="911.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (2 samples, 0.30%)</title><rect x="59.8187%" y="965" width="0.3021%" height="15" fill="rgb(248,18,52)" fg:x="396" fg:w="2"/><text x="60.0687%" y="975.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (2 samples, 0.30%)</title><rect x="59.8187%" y="949" width="0.3021%" height="15" fill="rgb(208,4,7)" fg:x="396" fg:w="2"/><text x="60.0687%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (1 samples, 0.15%)</title><rect x="59.9698%" y="933" width="0.1511%" height="15" fill="rgb(240,17,39)" fg:x="397" fg:w="1"/><text x="60.2198%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::read_overlapped (1 samples, 0.15%)</title><rect x="59.9698%" y="917" width="0.1511%" height="15" fill="rgb(207,170,3)" fg:x="397" fg:w="1"/><text x="60.2198%" y="927.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.15%)</title><rect x="59.9698%" y="901" width="0.1511%" height="15" fill="rgb(236,100,52)" fg:x="397" fg:w="1"/><text x="60.2198%" y="911.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.15%)</title><rect x="59.9698%" y="885" width="0.1511%" height="15" fill="rgb(246,78,51)" fg:x="397" fg:w="1"/><text x="60.2198%" y="895.50"></text></g><g><title>`0x7FFE2C7FF67A (1 samples, 0.15%)</title><rect x="59.9698%" y="869" width="0.1511%" height="15" fill="rgb(211,17,15)" fg:x="397" fg:w="1"/><text x="60.2198%" y="879.50"></text></g><g><title>`0x7FFE2F1A32F4 (1 samples, 0.15%)</title><rect x="59.9698%" y="853" width="0.1511%" height="15" fill="rgb(209,59,46)" fg:x="397" fg:w="1"/><text x="60.2198%" y="863.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="60.1208%" y="933" width="0.1511%" height="15" fill="rgb(210,92,25)" fg:x="398" fg:w="1"/><text x="60.3708%" y="943.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="60.1208%" y="917" width="0.1511%" height="15" fill="rgb(238,174,52)" fg:x="398" fg:w="1"/><text x="60.3708%" y="927.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$25::drop (1 samples, 0.15%)</title><rect x="60.1208%" y="901" width="0.1511%" height="15" fill="rgb(230,73,7)" fg:x="398" fg:w="1"/><text x="60.3708%" y="911.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.15%)</title><rect x="60.1208%" y="885" width="0.1511%" height="15" fill="rgb(243,124,40)" fg:x="398" fg:w="1"/><text x="60.3708%" y="895.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="60.1208%" y="869" width="0.1511%" height="15" fill="rgb(244,170,11)" fg:x="398" fg:w="1"/><text x="60.3708%" y="879.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="60.2719%" y="933" width="0.1511%" height="15" fill="rgb(207,114,54)" fg:x="399" fg:w="1"/><text x="60.5219%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="60.2719%" y="917" width="0.1511%" height="15" fill="rgb(205,42,20)" fg:x="399" fg:w="1"/><text x="60.5219%" y="927.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="60.2719%" y="901" width="0.1511%" height="15" fill="rgb(230,30,28)" fg:x="399" fg:w="1"/><text x="60.5219%" y="911.50"></text></g><g><title>`0x7FFE2C8CFD81 (1 samples, 0.15%)</title><rect x="60.2719%" y="885" width="0.1511%" height="15" fill="rgb(205,73,54)" fg:x="399" fg:w="1"/><text x="60.5219%" y="895.50"></text></g><g><title>`0x7FFE2F0A5C87 (1 samples, 0.15%)</title><rect x="60.2719%" y="869" width="0.1511%" height="15" fill="rgb(254,227,23)" fg:x="399" fg:w="1"/><text x="60.5219%" y="879.50"></text></g><g><title>`0x7FFE2C876D00 (4 samples, 0.60%)</title><rect x="60.4230%" y="869" width="0.6042%" height="15" fill="rgb(228,202,34)" fg:x="400" fg:w="4"/><text x="60.6730%" y="879.50"></text></g><g><title>`0x7FFE2C81DF99 (4 samples, 0.60%)</title><rect x="60.4230%" y="853" width="0.6042%" height="15" fill="rgb(222,225,37)" fg:x="400" fg:w="4"/><text x="60.6730%" y="863.50"></text></g><g><title>`0x7FFE2F1A39D4 (4 samples, 0.60%)</title><rect x="60.4230%" y="837" width="0.6042%" height="15" fill="rgb(221,14,54)" fg:x="400" fg:w="4"/><text x="60.6730%" y="847.50"></text></g><g><title>`0x7FFE2C8776C5 (14 samples, 2.11%)</title><rect x="61.0272%" y="869" width="2.1148%" height="15" fill="rgb(254,102,2)" fg:x="404" fg:w="14"/><text x="61.2772%" y="879.50">`..</text></g><g><title>`0x7FFE2F1A4C44 (14 samples, 2.11%)</title><rect x="61.0272%" y="853" width="2.1148%" height="15" fill="rgb(232,104,17)" fg:x="404" fg:w="14"/><text x="61.2772%" y="863.50">`..</text></g><g><title>`0x7FFE2C8787CB (17 samples, 2.57%)</title><rect x="63.1420%" y="869" width="2.5680%" height="15" fill="rgb(250,220,14)" fg:x="418" fg:w="17"/><text x="63.3920%" y="879.50">`0..</text></g><g><title>`0x7FFE2DD2D052 (17 samples, 2.57%)</title><rect x="63.1420%" y="853" width="2.5680%" height="15" fill="rgb(241,158,9)" fg:x="418" fg:w="17"/><text x="63.3920%" y="863.50">`0..</text></g><g><title>`0x7FFE2DD2D646 (17 samples, 2.57%)</title><rect x="63.1420%" y="837" width="2.5680%" height="15" fill="rgb(246,9,43)" fg:x="418" fg:w="17"/><text x="63.3920%" y="847.50">`0..</text></g><g><title>`0x7FFE2F1A3BB4 (17 samples, 2.57%)</title><rect x="63.1420%" y="821" width="2.5680%" height="15" fill="rgb(206,73,33)" fg:x="418" fg:w="17"/><text x="63.3920%" y="831.50">`0..</text></g><g><title>`0x7FFE2DD37CE6 (1 samples, 0.15%)</title><rect x="65.7100%" y="853" width="0.1511%" height="15" fill="rgb(222,79,8)" fg:x="435" fg:w="1"/><text x="65.9600%" y="863.50"></text></g><g><title>`0x7FFE2F1A3540 (1 samples, 0.15%)</title><rect x="65.7100%" y="837" width="0.1511%" height="15" fill="rgb(234,8,54)" fg:x="435" fg:w="1"/><text x="65.9600%" y="847.50"></text></g><g><title>`0x7FFE2C87892F (2 samples, 0.30%)</title><rect x="65.7100%" y="869" width="0.3021%" height="15" fill="rgb(209,134,38)" fg:x="435" fg:w="2"/><text x="65.9600%" y="879.50"></text></g><g><title>`0x7FFE2DD37F15 (1 samples, 0.15%)</title><rect x="65.8610%" y="853" width="0.1511%" height="15" fill="rgb(230,127,29)" fg:x="436" fg:w="1"/><text x="66.1110%" y="863.50"></text></g><g><title>`0x7FFE2DD3776B (1 samples, 0.15%)</title><rect x="65.8610%" y="837" width="0.1511%" height="15" fill="rgb(242,44,41)" fg:x="436" fg:w="1"/><text x="66.1110%" y="847.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="65.8610%" y="821" width="0.1511%" height="15" fill="rgb(222,56,43)" fg:x="436" fg:w="1"/><text x="66.1110%" y="831.50"></text></g><g><title>`0x7FFE2C878B3F (1 samples, 0.15%)</title><rect x="66.0121%" y="869" width="0.1511%" height="15" fill="rgb(238,39,47)" fg:x="437" fg:w="1"/><text x="66.2621%" y="879.50"></text></g><g><title>`0x7FFE2F075D02 (1 samples, 0.15%)</title><rect x="66.0121%" y="853" width="0.1511%" height="15" fill="rgb(226,79,43)" fg:x="437" fg:w="1"/><text x="66.2621%" y="863.50"></text></g><g><title>`0x7FFE2F1A43E4 (1 samples, 0.15%)</title><rect x="66.0121%" y="837" width="0.1511%" height="15" fill="rgb(242,105,53)" fg:x="437" fg:w="1"/><text x="66.2621%" y="847.50"></text></g><g><title>`0x7FFE2C879763 (1 samples, 0.15%)</title><rect x="66.1631%" y="869" width="0.1511%" height="15" fill="rgb(251,132,46)" fg:x="438" fg:w="1"/><text x="66.4131%" y="879.50"></text></g><g><title>`0x7FFE2F1A3974 (1 samples, 0.15%)</title><rect x="66.1631%" y="853" width="0.1511%" height="15" fill="rgb(231,77,14)" fg:x="438" fg:w="1"/><text x="66.4131%" y="863.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (40 samples, 6.04%)</title><rect x="60.4230%" y="933" width="6.0423%" height="15" fill="rgb(240,135,9)" fg:x="400" fg:w="40"/><text x="60.6730%" y="943.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (40 samples, 6.04%)</title><rect x="60.4230%" y="917" width="6.0423%" height="15" fill="rgb(248,109,14)" fg:x="400" fg:w="40"/><text x="60.6730%" y="927.50">fuzzit.e..</text></g><g><title>`0x7FFE2DD4C6D4 (40 samples, 6.04%)</title><rect x="60.4230%" y="901" width="6.0423%" height="15" fill="rgb(227,146,52)" fg:x="400" fg:w="40"/><text x="60.6730%" y="911.50">`0x7FFE2..</text></g><g><title>`0x7FFE2C874E26 (40 samples, 6.04%)</title><rect x="60.4230%" y="885" width="6.0423%" height="15" fill="rgb(232,54,3)" fg:x="400" fg:w="40"/><text x="60.6730%" y="895.50">`0x7FFE2..</text></g><g><title>`0x7FFE2C87A6A8 (1 samples, 0.15%)</title><rect x="66.3142%" y="869" width="0.1511%" height="15" fill="rgb(229,201,43)" fg:x="439" fg:w="1"/><text x="66.5642%" y="879.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.15%)</title><rect x="66.4653%" y="901" width="0.1511%" height="15" fill="rgb(252,161,33)" fg:x="440" fg:w="1"/><text x="66.7153%" y="911.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.15%)</title><rect x="66.4653%" y="885" width="0.1511%" height="15" fill="rgb(226,146,40)" fg:x="440" fg:w="1"/><text x="66.7153%" y="895.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.15%)</title><rect x="66.4653%" y="869" width="0.1511%" height="15" fill="rgb(219,47,25)" fg:x="440" fg:w="1"/><text x="66.7153%" y="879.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (1 samples, 0.15%)</title><rect x="66.4653%" y="853" width="0.1511%" height="15" fill="rgb(250,135,13)" fg:x="440" fg:w="1"/><text x="66.7153%" y="863.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.15%)</title><rect x="66.4653%" y="837" width="0.1511%" height="15" fill="rgb(219,229,18)" fg:x="440" fg:w="1"/><text x="66.7153%" y="847.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.15%)</title><rect x="66.4653%" y="821" width="0.1511%" height="15" fill="rgb(217,152,27)" fg:x="440" fg:w="1"/><text x="66.7153%" y="831.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.15%)</title><rect x="66.4653%" y="805" width="0.1511%" height="15" fill="rgb(225,71,47)" fg:x="440" fg:w="1"/><text x="66.7153%" y="815.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.15%)</title><rect x="66.4653%" y="789" width="0.1511%" height="15" fill="rgb(220,139,14)" fg:x="440" fg:w="1"/><text x="66.7153%" y="799.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.15%)</title><rect x="66.4653%" y="773" width="0.1511%" height="15" fill="rgb(247,54,32)" fg:x="440" fg:w="1"/><text x="66.7153%" y="783.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="66.4653%" y="757" width="0.1511%" height="15" fill="rgb(252,131,39)" fg:x="440" fg:w="1"/><text x="66.7153%" y="767.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.15%)</title><rect x="66.4653%" y="741" width="0.1511%" height="15" fill="rgb(210,108,39)" fg:x="440" fg:w="1"/><text x="66.7153%" y="751.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="66.4653%" y="725" width="0.1511%" height="15" fill="rgb(205,23,29)" fg:x="440" fg:w="1"/><text x="66.7153%" y="735.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="66.4653%" y="709" width="0.1511%" height="15" fill="rgb(246,139,46)" fg:x="440" fg:w="1"/><text x="66.7153%" y="719.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="66.4653%" y="693" width="0.1511%" height="15" fill="rgb(250,81,26)" fg:x="440" fg:w="1"/><text x="66.7153%" y="703.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.15%)</title><rect x="66.4653%" y="677" width="0.1511%" height="15" fill="rgb(214,104,7)" fg:x="440" fg:w="1"/><text x="66.7153%" y="687.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="66.4653%" y="661" width="0.1511%" height="15" fill="rgb(233,189,8)" fg:x="440" fg:w="1"/><text x="66.7153%" y="671.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="66.4653%" y="645" width="0.1511%" height="15" fill="rgb(228,141,17)" fg:x="440" fg:w="1"/><text x="66.7153%" y="655.50"></text></g><g><title>`0x7FFE2F069E2D (1 samples, 0.15%)</title><rect x="66.4653%" y="629" width="0.1511%" height="15" fill="rgb(247,157,1)" fg:x="440" fg:w="1"/><text x="66.7153%" y="639.50"></text></g><g><title>`0x7FFE2F06A0D5 (1 samples, 0.15%)</title><rect x="66.4653%" y="613" width="0.1511%" height="15" fill="rgb(249,225,5)" fg:x="440" fg:w="1"/><text x="66.7153%" y="623.50"></text></g><g><title>`0x7FFE2F06A98A (1 samples, 0.15%)</title><rect x="66.4653%" y="597" width="0.1511%" height="15" fill="rgb(242,55,13)" fg:x="440" fg:w="1"/><text x="66.7153%" y="607.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="66.4653%" y="581" width="0.1511%" height="15" fill="rgb(230,49,50)" fg:x="440" fg:w="1"/><text x="66.7153%" y="591.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.15%)</title><rect x="66.4653%" y="565" width="0.1511%" height="15" fill="rgb(241,111,38)" fg:x="440" fg:w="1"/><text x="66.7153%" y="575.50"></text></g><g><title>`0x7FFE2F0917C1 (1 samples, 0.15%)</title><rect x="66.4653%" y="549" width="0.1511%" height="15" fill="rgb(252,155,4)" fg:x="440" fg:w="1"/><text x="66.7153%" y="559.50"></text></g><g><title>`0x7FFE2C81DF99 (9 samples, 1.36%)</title><rect x="66.6163%" y="837" width="1.3595%" height="15" fill="rgb(212,69,32)" fg:x="441" fg:w="9"/><text x="66.8663%" y="847.50"></text></g><g><title>`0x7FFE2F1A39D4 (9 samples, 1.36%)</title><rect x="66.6163%" y="821" width="1.3595%" height="15" fill="rgb(243,107,47)" fg:x="441" fg:w="9"/><text x="66.8663%" y="831.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (10 samples, 1.51%)</title><rect x="66.6163%" y="885" width="1.5106%" height="15" fill="rgb(247,130,12)" fg:x="441" fg:w="10"/><text x="66.8663%" y="895.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (10 samples, 1.51%)</title><rect x="66.6163%" y="869" width="1.5106%" height="15" fill="rgb(233,74,16)" fg:x="441" fg:w="10"/><text x="66.8663%" y="879.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (10 samples, 1.51%)</title><rect x="66.6163%" y="853" width="1.5106%" height="15" fill="rgb(208,58,18)" fg:x="441" fg:w="10"/><text x="66.8663%" y="863.50"></text></g><g><title>`0x7FFE2C81E000 (1 samples, 0.15%)</title><rect x="67.9758%" y="837" width="0.1511%" height="15" fill="rgb(242,225,1)" fg:x="450" fg:w="1"/><text x="68.2258%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (54 samples, 8.16%)</title><rect x="60.1208%" y="965" width="8.1571%" height="15" fill="rgb(249,39,40)" fg:x="398" fg:w="54"/><text x="60.3708%" y="975.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (54 samples, 8.16%)</title><rect x="60.1208%" y="949" width="8.1571%" height="15" fill="rgb(207,72,44)" fg:x="398" fg:w="54"/><text x="60.3708%" y="959.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (12 samples, 1.81%)</title><rect x="66.4653%" y="933" width="1.8127%" height="15" fill="rgb(215,193,12)" fg:x="440" fg:w="12"/><text x="66.7153%" y="943.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (12 samples, 1.81%)</title><rect x="66.4653%" y="917" width="1.8127%" height="15" fill="rgb(248,41,39)" fg:x="440" fg:w="12"/><text x="66.7153%" y="927.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (11 samples, 1.66%)</title><rect x="66.6163%" y="901" width="1.6616%" height="15" fill="rgb(253,85,4)" fg:x="441" fg:w="11"/><text x="66.8663%" y="911.50"></text></g><g><title>fuzzit.exe`std::path::PathBuf::_push (1 samples, 0.15%)</title><rect x="68.1269%" y="885" width="0.1511%" height="15" fill="rgb(243,70,31)" fg:x="451" fg:w="1"/><text x="68.3769%" y="895.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::OsString::push (1 samples, 0.15%)</title><rect x="68.1269%" y="869" width="0.1511%" height="15" fill="rgb(253,195,26)" fg:x="451" fg:w="1"/><text x="68.3769%" y="879.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$2::push::impl$0::spec_push_to (1 samples, 0.15%)</title><rect x="68.1269%" y="853" width="0.1511%" height="15" fill="rgb(243,42,11)" fg:x="451" fg:w="1"/><text x="68.3769%" y="863.50"></text></g><g><title>fuzzit.exe`std::sys::os_str::wtf8::Buf::push_slice (1 samples, 0.15%)</title><rect x="68.1269%" y="837" width="0.1511%" height="15" fill="rgb(239,66,17)" fg:x="451" fg:w="1"/><text x="68.3769%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_wtf8 (1 samples, 0.15%)</title><rect x="68.1269%" y="821" width="0.1511%" height="15" fill="rgb(217,132,21)" fg:x="451" fg:w="1"/><text x="68.3769%" y="831.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.15%)</title><rect x="68.1269%" y="805" width="0.1511%" height="15" fill="rgb(252,202,21)" fg:x="451" fg:w="1"/><text x="68.3769%" y="815.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.15%)</title><rect x="68.1269%" y="789" width="0.1511%" height="15" fill="rgb(233,98,36)" fg:x="451" fg:w="1"/><text x="68.3769%" y="799.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::append_elements (1 samples, 0.15%)</title><rect x="68.1269%" y="773" width="0.1511%" height="15" fill="rgb(216,153,54)" fg:x="451" fg:w="1"/><text x="68.3769%" y="783.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::reserve (1 samples, 0.15%)</title><rect x="68.1269%" y="757" width="0.1511%" height="15" fill="rgb(250,99,7)" fg:x="451" fg:w="1"/><text x="68.3769%" y="767.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::reserve (1 samples, 0.15%)</title><rect x="68.1269%" y="741" width="0.1511%" height="15" fill="rgb(207,56,50)" fg:x="451" fg:w="1"/><text x="68.3769%" y="751.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::reserve (1 samples, 0.15%)</title><rect x="68.1269%" y="725" width="0.1511%" height="15" fill="rgb(244,61,34)" fg:x="451" fg:w="1"/><text x="68.3769%" y="735.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="68.1269%" y="709" width="0.1511%" height="15" fill="rgb(241,50,38)" fg:x="451" fg:w="1"/><text x="68.3769%" y="719.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="68.1269%" y="693" width="0.1511%" height="15" fill="rgb(212,166,30)" fg:x="451" fg:w="1"/><text x="68.3769%" y="703.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="68.1269%" y="677" width="0.1511%" height="15" fill="rgb(249,127,32)" fg:x="451" fg:w="1"/><text x="68.3769%" y="687.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="68.1269%" y="661" width="0.1511%" height="15" fill="rgb(209,103,0)" fg:x="451" fg:w="1"/><text x="68.3769%" y="671.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.15%)</title><rect x="68.1269%" y="645" width="0.1511%" height="15" fill="rgb(238,209,51)" fg:x="451" fg:w="1"/><text x="68.3769%" y="655.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="68.1269%" y="629" width="0.1511%" height="15" fill="rgb(237,56,23)" fg:x="451" fg:w="1"/><text x="68.3769%" y="639.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="68.1269%" y="613" width="0.1511%" height="15" fill="rgb(215,153,46)" fg:x="451" fg:w="1"/><text x="68.3769%" y="623.50"></text></g><g><title>`0x7FFE2F069E2D (1 samples, 0.15%)</title><rect x="68.1269%" y="597" width="0.1511%" height="15" fill="rgb(224,49,31)" fg:x="451" fg:w="1"/><text x="68.3769%" y="607.50"></text></g><g><title>`0x7FFE2F06A0D5 (1 samples, 0.15%)</title><rect x="68.1269%" y="581" width="0.1511%" height="15" fill="rgb(250,18,42)" fg:x="451" fg:w="1"/><text x="68.3769%" y="591.50"></text></g><g><title>`0x7FFE2F06A98A (1 samples, 0.15%)</title><rect x="68.1269%" y="565" width="0.1511%" height="15" fill="rgb(215,176,39)" fg:x="451" fg:w="1"/><text x="68.3769%" y="575.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="68.1269%" y="549" width="0.1511%" height="15" fill="rgb(223,77,29)" fg:x="451" fg:w="1"/><text x="68.3769%" y="559.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.15%)</title><rect x="68.1269%" y="533" width="0.1511%" height="15" fill="rgb(234,94,52)" fg:x="451" fg:w="1"/><text x="68.3769%" y="543.50"></text></g><g><title>`0x7FFE2F0923C9 (1 samples, 0.15%)</title><rect x="68.1269%" y="517" width="0.1511%" height="15" fill="rgb(220,154,50)" fg:x="451" fg:w="1"/><text x="68.3769%" y="527.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="68.1269%" y="501" width="0.1511%" height="15" fill="rgb(212,11,10)" fg:x="451" fg:w="1"/><text x="68.3769%" y="511.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.15%)</title><rect x="68.1269%" y="485" width="0.1511%" height="15" fill="rgb(205,166,19)" fg:x="451" fg:w="1"/><text x="68.3769%" y="495.50"></text></g><g><title>`0x7FFE2F066315 (1 samples, 0.15%)</title><rect x="68.1269%" y="469" width="0.1511%" height="15" fill="rgb(244,198,16)" fg:x="451" fg:w="1"/><text x="68.3769%" y="479.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (128 samples, 19.34%)</title><rect x="49.2447%" y="1269" width="19.3353%" height="15" fill="rgb(219,69,12)" fg:x="326" fg:w="128"/><text x="49.4947%" y="1279.50">fuzzit.exe`rayon::iter::map::i..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (128 samples, 19.34%)</title><rect x="49.2447%" y="1253" width="19.3353%" height="15" fill="rgb(245,30,7)" fg:x="326" fg:w="128"/><text x="49.4947%" y="1263.50">fuzzit.exe`rayon::iter::plumbi..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (128 samples, 19.34%)</title><rect x="49.2447%" y="1237" width="19.3353%" height="15" fill="rgb(218,221,48)" fg:x="326" fg:w="128"/><text x="49.4947%" y="1247.50">fuzzit.exe`core::ops::function..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (128 samples, 19.34%)</title><rect x="49.2447%" y="1221" width="19.3353%" height="15" fill="rgb(216,66,15)" fg:x="326" fg:w="128"/><text x="49.4947%" y="1231.50">fuzzit.exe`fuzzit::git_data::c..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (128 samples, 19.34%)</title><rect x="49.2447%" y="1205" width="19.3353%" height="15" fill="rgb(226,122,50)" fg:x="326" fg:w="128"/><text x="49.4947%" y="1215.50">fuzzit.exe`rayon_core::registr..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (128 samples, 19.34%)</title><rect x="49.2447%" y="1189" width="19.3353%" height="15" fill="rgb(239,156,16)" fg:x="326" fg:w="128"/><text x="49.4947%" y="1199.50">fuzzit.exe`rayon_core::join::j..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (58 samples, 8.76%)</title><rect x="59.8187%" y="1173" width="8.7613%" height="15" fill="rgb(224,27,38)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1183.50">fuzzit.exe`r..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (58 samples, 8.76%)</title><rect x="59.8187%" y="1157" width="8.7613%" height="15" fill="rgb(224,39,27)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1167.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (58 samples, 8.76%)</title><rect x="59.8187%" y="1141" width="8.7613%" height="15" fill="rgb(215,92,29)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1151.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (58 samples, 8.76%)</title><rect x="59.8187%" y="1125" width="8.7613%" height="15" fill="rgb(207,159,16)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1135.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (58 samples, 8.76%)</title><rect x="59.8187%" y="1109" width="8.7613%" height="15" fill="rgb(238,163,47)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1119.50">fuzzit.exe`c..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (58 samples, 8.76%)</title><rect x="59.8187%" y="1093" width="8.7613%" height="15" fill="rgb(219,91,49)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1103.50">fuzzit.exe`r..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (58 samples, 8.76%)</title><rect x="59.8187%" y="1077" width="8.7613%" height="15" fill="rgb(227,167,31)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1087.50">fuzzit.exe`r..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (58 samples, 8.76%)</title><rect x="59.8187%" y="1061" width="8.7613%" height="15" fill="rgb(234,80,54)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1071.50">fuzzit.exe`f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (58 samples, 8.76%)</title><rect x="59.8187%" y="1045" width="8.7613%" height="15" fill="rgb(212,114,2)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1055.50">fuzzit.exe`e..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (58 samples, 8.76%)</title><rect x="59.8187%" y="1029" width="8.7613%" height="15" fill="rgb(234,50,24)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1039.50">fuzzit.exe`f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (58 samples, 8.76%)</title><rect x="59.8187%" y="1013" width="8.7613%" height="15" fill="rgb(221,68,8)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1023.50">fuzzit.exe`e..</text></g><g><title>fuzzit.exe`std::process::Command::output (58 samples, 8.76%)</title><rect x="59.8187%" y="997" width="8.7613%" height="15" fill="rgb(254,180,31)" fg:x="396" fg:w="58"/><text x="60.0687%" y="1007.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`std::sys::process::output (58 samples, 8.76%)</title><rect x="59.8187%" y="981" width="8.7613%" height="15" fill="rgb(247,130,50)" fg:x="396" fg:w="58"/><text x="60.0687%" y="991.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Process::wait (2 samples, 0.30%)</title><rect x="68.2779%" y="965" width="0.3021%" height="15" fill="rgb(211,109,4)" fg:x="452" fg:w="2"/><text x="68.5279%" y="975.50"></text></g><g><title>`0x7FFE2C7F895F (2 samples, 0.30%)</title><rect x="68.2779%" y="949" width="0.3021%" height="15" fill="rgb(238,50,21)" fg:x="452" fg:w="2"/><text x="68.5279%" y="959.50"></text></g><g><title>`0x7FFE2F1A32B4 (2 samples, 0.30%)</title><rect x="68.2779%" y="933" width="0.3021%" height="15" fill="rgb(225,57,45)" fg:x="452" fg:w="2"/><text x="68.5279%" y="943.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="68.5801%" y="773" width="0.4532%" height="15" fill="rgb(209,196,50)" fg:x="454" fg:w="3"/><text x="68.8301%" y="783.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="68.5801%" y="757" width="0.4532%" height="15" fill="rgb(242,140,13)" fg:x="454" fg:w="3"/><text x="68.8301%" y="767.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (6 samples, 0.91%)</title><rect x="68.5801%" y="837" width="0.9063%" height="15" fill="rgb(217,111,7)" fg:x="454" fg:w="6"/><text x="68.8301%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (6 samples, 0.91%)</title><rect x="68.5801%" y="821" width="0.9063%" height="15" fill="rgb(253,193,51)" fg:x="454" fg:w="6"/><text x="68.8301%" y="831.50"></text></g><g><title>`0x7FFE2DD4C6D4 (6 samples, 0.91%)</title><rect x="68.5801%" y="805" width="0.9063%" height="15" fill="rgb(252,70,29)" fg:x="454" fg:w="6"/><text x="68.8301%" y="815.50"></text></g><g><title>`0x7FFE2C874E26 (6 samples, 0.91%)</title><rect x="68.5801%" y="789" width="0.9063%" height="15" fill="rgb(232,127,12)" fg:x="454" fg:w="6"/><text x="68.8301%" y="799.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.45%)</title><rect x="69.0332%" y="773" width="0.4532%" height="15" fill="rgb(211,180,21)" fg:x="457" fg:w="3"/><text x="69.2832%" y="783.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.45%)</title><rect x="69.0332%" y="757" width="0.4532%" height="15" fill="rgb(229,72,13)" fg:x="457" fg:w="3"/><text x="69.2832%" y="767.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="69.0332%" y="741" width="0.4532%" height="15" fill="rgb(240,211,49)" fg:x="457" fg:w="3"/><text x="69.2832%" y="751.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="69.0332%" y="725" width="0.4532%" height="15" fill="rgb(219,149,40)" fg:x="457" fg:w="3"/><text x="69.2832%" y="735.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::make_dirp (1 samples, 0.15%)</title><rect x="69.4864%" y="837" width="0.1511%" height="15" fill="rgb(210,127,46)" fg:x="460" fg:w="1"/><text x="69.7364%" y="847.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::collect (1 samples, 0.15%)</title><rect x="69.4864%" y="821" width="0.1511%" height="15" fill="rgb(220,106,7)" fg:x="460" fg:w="1"/><text x="69.7364%" y="831.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$15::from_iter (1 samples, 0.15%)</title><rect x="69.4864%" y="805" width="0.1511%" height="15" fill="rgb(249,31,22)" fg:x="460" fg:w="1"/><text x="69.7364%" y="815.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter::impl$0::from_iter (1 samples, 0.15%)</title><rect x="69.4864%" y="789" width="0.1511%" height="15" fill="rgb(253,1,49)" fg:x="460" fg:w="1"/><text x="69.7364%" y="799.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter (1 samples, 0.15%)</title><rect x="69.4864%" y="773" width="0.1511%" height="15" fill="rgb(227,144,33)" fg:x="460" fg:w="1"/><text x="69.7364%" y="783.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_extend::impl$0::spec_extend (1 samples, 0.15%)</title><rect x="69.4864%" y="757" width="0.1511%" height="15" fill="rgb(249,163,44)" fg:x="460" fg:w="1"/><text x="69.7364%" y="767.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_desugared (1 samples, 0.15%)</title><rect x="69.4864%" y="741" width="0.1511%" height="15" fill="rgb(234,15,39)" fg:x="460" fg:w="1"/><text x="69.7364%" y="751.50"></text></g><g><title>fuzzit.exe`core::ptr::write (1 samples, 0.15%)</title><rect x="69.4864%" y="725" width="0.1511%" height="15" fill="rgb(207,66,16)" fg:x="460" fg:w="1"/><text x="69.7364%" y="735.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.15%)</title><rect x="69.4864%" y="709" width="0.1511%" height="15" fill="rgb(233,112,24)" fg:x="460" fg:w="1"/><text x="69.7364%" y="719.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.15%)</title><rect x="69.4864%" y="693" width="0.1511%" height="15" fill="rgb(230,90,22)" fg:x="460" fg:w="1"/><text x="69.7364%" y="703.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.15%)</title><rect x="69.4864%" y="677" width="0.1511%" height="15" fill="rgb(229,61,13)" fg:x="460" fg:w="1"/><text x="69.7364%" y="687.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="69.4864%" y="661" width="0.1511%" height="15" fill="rgb(225,57,24)" fg:x="460" fg:w="1"/><text x="69.7364%" y="671.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="69.4864%" y="645" width="0.1511%" height="15" fill="rgb(208,169,48)" fg:x="460" fg:w="1"/><text x="69.7364%" y="655.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="69.4864%" y="629" width="0.1511%" height="15" fill="rgb(244,218,51)" fg:x="460" fg:w="1"/><text x="69.7364%" y="639.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="69.4864%" y="613" width="0.1511%" height="15" fill="rgb(214,148,10)" fg:x="460" fg:w="1"/><text x="69.7364%" y="623.50"></text></g><g><title>fuzzit.exe`core::result::Result::map_err (1 samples, 0.15%)</title><rect x="69.4864%" y="597" width="0.1511%" height="15" fill="rgb(225,174,27)" fg:x="460" fg:w="1"/><text x="69.7364%" y="607.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.51%)</title><rect x="68.5801%" y="1237" width="1.5106%" height="15" fill="rgb(230,96,26)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1247.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.51%)</title><rect x="68.5801%" y="1221" width="1.5106%" height="15" fill="rgb(232,10,30)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1231.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.51%)</title><rect x="68.5801%" y="1205" width="1.5106%" height="15" fill="rgb(222,8,50)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1215.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (10 samples, 1.51%)</title><rect x="68.5801%" y="1189" width="1.5106%" height="15" fill="rgb(213,81,27)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1199.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.51%)</title><rect x="68.5801%" y="1173" width="1.5106%" height="15" fill="rgb(245,50,10)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1183.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (10 samples, 1.51%)</title><rect x="68.5801%" y="1157" width="1.5106%" height="15" fill="rgb(216,100,18)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1167.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (10 samples, 1.51%)</title><rect x="68.5801%" y="1141" width="1.5106%" height="15" fill="rgb(236,147,54)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1151.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="1125" width="1.5106%" height="15" fill="rgb(205,143,26)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1135.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="1109" width="1.5106%" height="15" fill="rgb(236,26,9)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1119.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="1093" width="1.5106%" height="15" fill="rgb(221,165,53)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1103.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="1077" width="1.5106%" height="15" fill="rgb(214,110,17)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1087.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="1061" width="1.5106%" height="15" fill="rgb(237,197,12)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1071.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="1045" width="1.5106%" height="15" fill="rgb(205,84,17)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1055.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (10 samples, 1.51%)</title><rect x="68.5801%" y="1029" width="1.5106%" height="15" fill="rgb(237,18,45)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1039.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="1013" width="1.5106%" height="15" fill="rgb(221,87,14)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1023.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="997" width="1.5106%" height="15" fill="rgb(238,186,15)" fg:x="454" fg:w="10"/><text x="68.8301%" y="1007.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="981" width="1.5106%" height="15" fill="rgb(208,115,11)" fg:x="454" fg:w="10"/><text x="68.8301%" y="991.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (10 samples, 1.51%)</title><rect x="68.5801%" y="965" width="1.5106%" height="15" fill="rgb(254,175,0)" fg:x="454" fg:w="10"/><text x="68.8301%" y="975.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (10 samples, 1.51%)</title><rect x="68.5801%" y="949" width="1.5106%" height="15" fill="rgb(227,24,42)" fg:x="454" fg:w="10"/><text x="68.8301%" y="959.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (10 samples, 1.51%)</title><rect x="68.5801%" y="933" width="1.5106%" height="15" fill="rgb(223,211,37)" fg:x="454" fg:w="10"/><text x="68.8301%" y="943.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (10 samples, 1.51%)</title><rect x="68.5801%" y="917" width="1.5106%" height="15" fill="rgb(235,49,27)" fg:x="454" fg:w="10"/><text x="68.8301%" y="927.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (10 samples, 1.51%)</title><rect x="68.5801%" y="901" width="1.5106%" height="15" fill="rgb(254,97,51)" fg:x="454" fg:w="10"/><text x="68.8301%" y="911.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (10 samples, 1.51%)</title><rect x="68.5801%" y="885" width="1.5106%" height="15" fill="rgb(249,51,40)" fg:x="454" fg:w="10"/><text x="68.8301%" y="895.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (10 samples, 1.51%)</title><rect x="68.5801%" y="869" width="1.5106%" height="15" fill="rgb(210,128,45)" fg:x="454" fg:w="10"/><text x="68.8301%" y="879.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (10 samples, 1.51%)</title><rect x="68.5801%" y="853" width="1.5106%" height="15" fill="rgb(224,137,50)" fg:x="454" fg:w="10"/><text x="68.8301%" y="863.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="69.6375%" y="837" width="0.4532%" height="15" fill="rgb(242,15,9)" fg:x="461" fg:w="3"/><text x="69.8875%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="69.6375%" y="821" width="0.4532%" height="15" fill="rgb(233,187,41)" fg:x="461" fg:w="3"/><text x="69.8875%" y="831.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (3 samples, 0.45%)</title><rect x="69.6375%" y="805" width="0.4532%" height="15" fill="rgb(227,2,29)" fg:x="461" fg:w="3"/><text x="69.8875%" y="815.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="69.6375%" y="789" width="0.4532%" height="15" fill="rgb(222,70,3)" fg:x="461" fg:w="3"/><text x="69.8875%" y="799.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="69.6375%" y="773" width="0.4532%" height="15" fill="rgb(213,11,42)" fg:x="461" fg:w="3"/><text x="69.8875%" y="783.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (3 samples, 0.45%)</title><rect x="69.6375%" y="757" width="0.4532%" height="15" fill="rgb(225,150,9)" fg:x="461" fg:w="3"/><text x="69.8875%" y="767.50"></text></g><g><title>`0x7FFE2C81DF99 (3 samples, 0.45%)</title><rect x="69.6375%" y="741" width="0.4532%" height="15" fill="rgb(230,162,45)" fg:x="461" fg:w="3"/><text x="69.8875%" y="751.50"></text></g><g><title>`0x7FFE2F1A39D4 (3 samples, 0.45%)</title><rect x="69.6375%" y="725" width="0.4532%" height="15" fill="rgb(222,14,52)" fg:x="461" fg:w="3"/><text x="69.8875%" y="735.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.15%)</title><rect x="70.0906%" y="917" width="0.1511%" height="15" fill="rgb(254,198,14)" fg:x="464" fg:w="1"/><text x="70.3406%" y="927.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.15%)</title><rect x="70.0906%" y="901" width="0.1511%" height="15" fill="rgb(220,217,30)" fg:x="464" fg:w="1"/><text x="70.3406%" y="911.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.15%)</title><rect x="70.0906%" y="885" width="0.1511%" height="15" fill="rgb(215,146,41)" fg:x="464" fg:w="1"/><text x="70.3406%" y="895.50"></text></g><g><title>`0x7FFE2C7FF233 (1 samples, 0.15%)</title><rect x="70.0906%" y="869" width="0.1511%" height="15" fill="rgb(217,27,36)" fg:x="464" fg:w="1"/><text x="70.3406%" y="879.50"></text></g><g><title>`0x7FFE2F1A3D84 (1 samples, 0.15%)</title><rect x="70.0906%" y="853" width="0.1511%" height="15" fill="rgb(219,218,39)" fg:x="464" fg:w="1"/><text x="70.3406%" y="863.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.15%)</title><rect x="70.2417%" y="821" width="0.1511%" height="15" fill="rgb(219,4,42)" fg:x="465" fg:w="1"/><text x="70.4917%" y="831.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.15%)</title><rect x="70.2417%" y="805" width="0.1511%" height="15" fill="rgb(249,119,36)" fg:x="465" fg:w="1"/><text x="70.4917%" y="815.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.15%)</title><rect x="70.2417%" y="789" width="0.1511%" height="15" fill="rgb(209,23,33)" fg:x="465" fg:w="1"/><text x="70.4917%" y="799.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="70.2417%" y="773" width="0.1511%" height="15" fill="rgb(211,10,0)" fg:x="465" fg:w="1"/><text x="70.4917%" y="783.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="70.3927%" y="821" width="0.4532%" height="15" fill="rgb(208,99,37)" fg:x="466" fg:w="3"/><text x="70.6427%" y="831.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="70.3927%" y="805" width="0.4532%" height="15" fill="rgb(213,132,31)" fg:x="466" fg:w="3"/><text x="70.6427%" y="815.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="70.8459%" y="789" width="0.4532%" height="15" fill="rgb(243,129,40)" fg:x="469" fg:w="3"/><text x="71.0959%" y="799.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="70.8459%" y="773" width="0.4532%" height="15" fill="rgb(210,66,33)" fg:x="469" fg:w="3"/><text x="71.0959%" y="783.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.21%)</title><rect x="70.2417%" y="885" width="1.2085%" height="15" fill="rgb(209,189,4)" fg:x="465" fg:w="8"/><text x="70.4917%" y="895.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.21%)</title><rect x="70.2417%" y="869" width="1.2085%" height="15" fill="rgb(214,107,37)" fg:x="465" fg:w="8"/><text x="70.4917%" y="879.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.21%)</title><rect x="70.2417%" y="853" width="1.2085%" height="15" fill="rgb(245,88,54)" fg:x="465" fg:w="8"/><text x="70.4917%" y="863.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.21%)</title><rect x="70.2417%" y="837" width="1.2085%" height="15" fill="rgb(205,146,20)" fg:x="465" fg:w="8"/><text x="70.4917%" y="847.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.60%)</title><rect x="70.8459%" y="821" width="0.6042%" height="15" fill="rgb(220,161,25)" fg:x="469" fg:w="4"/><text x="71.0959%" y="831.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.60%)</title><rect x="70.8459%" y="805" width="0.6042%" height="15" fill="rgb(215,152,15)" fg:x="469" fg:w="4"/><text x="71.0959%" y="815.50"></text></g><g><title>`0x7FFE2DD2D775 (1 samples, 0.15%)</title><rect x="71.2991%" y="789" width="0.1511%" height="15" fill="rgb(233,192,44)" fg:x="472" fg:w="1"/><text x="71.5491%" y="799.50"></text></g><g><title>`0x7FFE2F0EB389 (1 samples, 0.15%)</title><rect x="71.2991%" y="773" width="0.1511%" height="15" fill="rgb(240,170,46)" fg:x="472" fg:w="1"/><text x="71.5491%" y="783.50"></text></g><g><title>`0x7FFE2F0C13F0 (1 samples, 0.15%)</title><rect x="71.2991%" y="757" width="0.1511%" height="15" fill="rgb(207,104,33)" fg:x="472" fg:w="1"/><text x="71.5491%" y="767.50"></text></g><g><title>`0x7FFE2F09642D (1 samples, 0.15%)</title><rect x="71.2991%" y="741" width="0.1511%" height="15" fill="rgb(219,21,39)" fg:x="472" fg:w="1"/><text x="71.5491%" y="751.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (11 samples, 1.66%)</title><rect x="70.0906%" y="1173" width="1.6616%" height="15" fill="rgb(214,133,29)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1183.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="70.0906%" y="1157" width="1.6616%" height="15" fill="rgb(226,93,6)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1167.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="70.0906%" y="1141" width="1.6616%" height="15" fill="rgb(252,222,34)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1151.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="70.0906%" y="1125" width="1.6616%" height="15" fill="rgb(252,92,48)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1135.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="70.0906%" y="1109" width="1.6616%" height="15" fill="rgb(245,223,24)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1119.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (11 samples, 1.66%)</title><rect x="70.0906%" y="1093" width="1.6616%" height="15" fill="rgb(205,176,3)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1103.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="70.0906%" y="1077" width="1.6616%" height="15" fill="rgb(235,151,15)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1087.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="70.0906%" y="1061" width="1.6616%" height="15" fill="rgb(237,209,11)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1071.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="70.0906%" y="1045" width="1.6616%" height="15" fill="rgb(243,227,24)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1055.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="70.0906%" y="1029" width="1.6616%" height="15" fill="rgb(239,193,16)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1039.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (11 samples, 1.66%)</title><rect x="70.0906%" y="1013" width="1.6616%" height="15" fill="rgb(231,27,9)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1023.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="70.0906%" y="997" width="1.6616%" height="15" fill="rgb(219,169,10)" fg:x="464" fg:w="11"/><text x="70.3406%" y="1007.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (11 samples, 1.66%)</title><rect x="70.0906%" y="981" width="1.6616%" height="15" fill="rgb(244,229,43)" fg:x="464" fg:w="11"/><text x="70.3406%" y="991.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="70.0906%" y="965" width="1.6616%" height="15" fill="rgb(254,38,20)" fg:x="464" fg:w="11"/><text x="70.3406%" y="975.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (11 samples, 1.66%)</title><rect x="70.0906%" y="949" width="1.6616%" height="15" fill="rgb(250,47,30)" fg:x="464" fg:w="11"/><text x="70.3406%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (11 samples, 1.66%)</title><rect x="70.0906%" y="933" width="1.6616%" height="15" fill="rgb(224,124,36)" fg:x="464" fg:w="11"/><text x="70.3406%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (10 samples, 1.51%)</title><rect x="70.2417%" y="917" width="1.5106%" height="15" fill="rgb(246,68,51)" fg:x="465" fg:w="10"/><text x="70.4917%" y="927.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (10 samples, 1.51%)</title><rect x="70.2417%" y="901" width="1.5106%" height="15" fill="rgb(253,43,49)" fg:x="465" fg:w="10"/><text x="70.4917%" y="911.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (2 samples, 0.30%)</title><rect x="71.4502%" y="885" width="0.3021%" height="15" fill="rgb(219,54,36)" fg:x="473" fg:w="2"/><text x="71.7002%" y="895.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (2 samples, 0.30%)</title><rect x="71.4502%" y="869" width="0.3021%" height="15" fill="rgb(227,133,34)" fg:x="473" fg:w="2"/><text x="71.7002%" y="879.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="71.4502%" y="853" width="0.3021%" height="15" fill="rgb(247,227,15)" fg:x="473" fg:w="2"/><text x="71.7002%" y="863.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="71.4502%" y="837" width="0.3021%" height="15" fill="rgb(229,96,14)" fg:x="473" fg:w="2"/><text x="71.7002%" y="847.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="71.4502%" y="821" width="0.3021%" height="15" fill="rgb(220,79,17)" fg:x="473" fg:w="2"/><text x="71.7002%" y="831.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="71.4502%" y="805" width="0.3021%" height="15" fill="rgb(205,131,53)" fg:x="473" fg:w="2"/><text x="71.7002%" y="815.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.30%)</title><rect x="71.4502%" y="789" width="0.3021%" height="15" fill="rgb(209,50,29)" fg:x="473" fg:w="2"/><text x="71.7002%" y="799.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.30%)</title><rect x="71.4502%" y="773" width="0.3021%" height="15" fill="rgb(245,86,46)" fg:x="473" fg:w="2"/><text x="71.7002%" y="783.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.15%)</title><rect x="71.7523%" y="533" width="0.1511%" height="15" fill="rgb(235,66,46)" fg:x="475" fg:w="1"/><text x="72.0023%" y="543.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.15%)</title><rect x="71.7523%" y="517" width="0.1511%" height="15" fill="rgb(232,148,31)" fg:x="475" fg:w="1"/><text x="72.0023%" y="527.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.15%)</title><rect x="71.7523%" y="501" width="0.1511%" height="15" fill="rgb(217,149,8)" fg:x="475" fg:w="1"/><text x="72.0023%" y="511.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.15%)</title><rect x="71.7523%" y="485" width="0.1511%" height="15" fill="rgb(209,183,11)" fg:x="475" fg:w="1"/><text x="72.0023%" y="495.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="71.7523%" y="469" width="0.1511%" height="15" fill="rgb(208,55,20)" fg:x="475" fg:w="1"/><text x="72.0023%" y="479.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.15%)</title><rect x="71.9033%" y="437" width="0.1511%" height="15" fill="rgb(218,39,14)" fg:x="476" fg:w="1"/><text x="72.1533%" y="447.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.15%)</title><rect x="71.9033%" y="421" width="0.1511%" height="15" fill="rgb(216,169,33)" fg:x="476" fg:w="1"/><text x="72.1533%" y="431.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.15%)</title><rect x="71.9033%" y="405" width="0.1511%" height="15" fill="rgb(233,80,24)" fg:x="476" fg:w="1"/><text x="72.1533%" y="415.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="71.9033%" y="389" width="0.1511%" height="15" fill="rgb(213,179,31)" fg:x="476" fg:w="1"/><text x="72.1533%" y="399.50"></text></g><g><title>`0x7FFE2C8776C5 (4 samples, 0.60%)</title><rect x="72.0544%" y="437" width="0.6042%" height="15" fill="rgb(209,19,5)" fg:x="477" fg:w="4"/><text x="72.3044%" y="447.50"></text></g><g><title>`0x7FFE2F1A4C44 (4 samples, 0.60%)</title><rect x="72.0544%" y="421" width="0.6042%" height="15" fill="rgb(219,18,35)" fg:x="477" fg:w="4"/><text x="72.3044%" y="431.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (9 samples, 1.36%)</title><rect x="71.9033%" y="501" width="1.3595%" height="15" fill="rgb(209,169,16)" fg:x="476" fg:w="9"/><text x="72.1533%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (9 samples, 1.36%)</title><rect x="71.9033%" y="485" width="1.3595%" height="15" fill="rgb(245,90,51)" fg:x="476" fg:w="9"/><text x="72.1533%" y="495.50"></text></g><g><title>`0x7FFE2DD4C6D4 (9 samples, 1.36%)</title><rect x="71.9033%" y="469" width="1.3595%" height="15" fill="rgb(220,99,45)" fg:x="476" fg:w="9"/><text x="72.1533%" y="479.50"></text></g><g><title>`0x7FFE2C874E26 (9 samples, 1.36%)</title><rect x="71.9033%" y="453" width="1.3595%" height="15" fill="rgb(249,89,25)" fg:x="476" fg:w="9"/><text x="72.1533%" y="463.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.60%)</title><rect x="72.6586%" y="437" width="0.6042%" height="15" fill="rgb(239,193,0)" fg:x="481" fg:w="4"/><text x="72.9086%" y="447.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.60%)</title><rect x="72.6586%" y="421" width="0.6042%" height="15" fill="rgb(231,126,1)" fg:x="481" fg:w="4"/><text x="72.9086%" y="431.50"></text></g><g><title>`0x7FFE2DD2D646 (4 samples, 0.60%)</title><rect x="72.6586%" y="405" width="0.6042%" height="15" fill="rgb(243,166,3)" fg:x="481" fg:w="4"/><text x="72.9086%" y="415.50"></text></g><g><title>`0x7FFE2F1A3BB4 (4 samples, 0.60%)</title><rect x="72.6586%" y="389" width="0.6042%" height="15" fill="rgb(223,22,34)" fg:x="481" fg:w="4"/><text x="72.9086%" y="399.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="73.2628%" y="469" width="0.1511%" height="15" fill="rgb(251,52,51)" fg:x="485" fg:w="1"/><text x="73.5128%" y="479.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (1 samples, 0.15%)</title><rect x="73.2628%" y="453" width="0.1511%" height="15" fill="rgb(221,165,28)" fg:x="485" fg:w="1"/><text x="73.5128%" y="463.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="73.2628%" y="437" width="0.1511%" height="15" fill="rgb(218,121,47)" fg:x="485" fg:w="1"/><text x="73.5128%" y="447.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="73.2628%" y="421" width="0.1511%" height="15" fill="rgb(209,120,9)" fg:x="485" fg:w="1"/><text x="73.5128%" y="431.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="73.2628%" y="405" width="0.1511%" height="15" fill="rgb(236,68,12)" fg:x="485" fg:w="1"/><text x="73.5128%" y="415.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="73.2628%" y="389" width="0.1511%" height="15" fill="rgb(225,194,26)" fg:x="485" fg:w="1"/><text x="73.5128%" y="399.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="73.2628%" y="373" width="0.1511%" height="15" fill="rgb(231,84,39)" fg:x="485" fg:w="1"/><text x="73.5128%" y="383.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="73.2628%" y="357" width="0.1511%" height="15" fill="rgb(210,11,45)" fg:x="485" fg:w="1"/><text x="73.5128%" y="367.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (14 samples, 2.11%)</title><rect x="71.7523%" y="853" width="2.1148%" height="15" fill="rgb(224,54,52)" fg:x="475" fg:w="14"/><text x="72.0023%" y="863.50">f..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 2.11%)</title><rect x="71.7523%" y="837" width="2.1148%" height="15" fill="rgb(238,102,14)" fg:x="475" fg:w="14"/><text x="72.0023%" y="847.50">f..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (14 samples, 2.11%)</title><rect x="71.7523%" y="821" width="2.1148%" height="15" fill="rgb(243,160,52)" fg:x="475" fg:w="14"/><text x="72.0023%" y="831.50">f..</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (14 samples, 2.11%)</title><rect x="71.7523%" y="805" width="2.1148%" height="15" fill="rgb(216,114,19)" fg:x="475" fg:w="14"/><text x="72.0023%" y="815.50">f..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (14 samples, 2.11%)</title><rect x="71.7523%" y="789" width="2.1148%" height="15" fill="rgb(244,166,37)" fg:x="475" fg:w="14"/><text x="72.0023%" y="799.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (14 samples, 2.11%)</title><rect x="71.7523%" y="773" width="2.1148%" height="15" fill="rgb(246,29,44)" fg:x="475" fg:w="14"/><text x="72.0023%" y="783.50">f..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (14 samples, 2.11%)</title><rect x="71.7523%" y="757" width="2.1148%" height="15" fill="rgb(215,56,53)" fg:x="475" fg:w="14"/><text x="72.0023%" y="767.50">f..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (14 samples, 2.11%)</title><rect x="71.7523%" y="741" width="2.1148%" height="15" fill="rgb(217,60,2)" fg:x="475" fg:w="14"/><text x="72.0023%" y="751.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (14 samples, 2.11%)</title><rect x="71.7523%" y="725" width="2.1148%" height="15" fill="rgb(207,26,24)" fg:x="475" fg:w="14"/><text x="72.0023%" y="735.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (14 samples, 2.11%)</title><rect x="71.7523%" y="709" width="2.1148%" height="15" fill="rgb(252,210,15)" fg:x="475" fg:w="14"/><text x="72.0023%" y="719.50">f..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (14 samples, 2.11%)</title><rect x="71.7523%" y="693" width="2.1148%" height="15" fill="rgb(253,209,26)" fg:x="475" fg:w="14"/><text x="72.0023%" y="703.50">f..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (14 samples, 2.11%)</title><rect x="71.7523%" y="677" width="2.1148%" height="15" fill="rgb(238,170,14)" fg:x="475" fg:w="14"/><text x="72.0023%" y="687.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (14 samples, 2.11%)</title><rect x="71.7523%" y="661" width="2.1148%" height="15" fill="rgb(216,178,15)" fg:x="475" fg:w="14"/><text x="72.0023%" y="671.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (14 samples, 2.11%)</title><rect x="71.7523%" y="645" width="2.1148%" height="15" fill="rgb(250,197,2)" fg:x="475" fg:w="14"/><text x="72.0023%" y="655.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (14 samples, 2.11%)</title><rect x="71.7523%" y="629" width="2.1148%" height="15" fill="rgb(212,70,42)" fg:x="475" fg:w="14"/><text x="72.0023%" y="639.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (14 samples, 2.11%)</title><rect x="71.7523%" y="613" width="2.1148%" height="15" fill="rgb(227,213,9)" fg:x="475" fg:w="14"/><text x="72.0023%" y="623.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (14 samples, 2.11%)</title><rect x="71.7523%" y="597" width="2.1148%" height="15" fill="rgb(245,99,25)" fg:x="475" fg:w="14"/><text x="72.0023%" y="607.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (14 samples, 2.11%)</title><rect x="71.7523%" y="581" width="2.1148%" height="15" fill="rgb(250,82,29)" fg:x="475" fg:w="14"/><text x="72.0023%" y="591.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (14 samples, 2.11%)</title><rect x="71.7523%" y="565" width="2.1148%" height="15" fill="rgb(241,226,54)" fg:x="475" fg:w="14"/><text x="72.0023%" y="575.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (14 samples, 2.11%)</title><rect x="71.7523%" y="549" width="2.1148%" height="15" fill="rgb(221,99,41)" fg:x="475" fg:w="14"/><text x="72.0023%" y="559.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (13 samples, 1.96%)</title><rect x="71.9033%" y="533" width="1.9637%" height="15" fill="rgb(213,90,21)" fg:x="476" fg:w="13"/><text x="72.1533%" y="543.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (13 samples, 1.96%)</title><rect x="71.9033%" y="517" width="1.9637%" height="15" fill="rgb(205,208,24)" fg:x="476" fg:w="13"/><text x="72.1533%" y="527.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (4 samples, 0.60%)</title><rect x="73.2628%" y="501" width="0.6042%" height="15" fill="rgb(246,31,12)" fg:x="485" fg:w="4"/><text x="73.5128%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (4 samples, 0.60%)</title><rect x="73.2628%" y="485" width="0.6042%" height="15" fill="rgb(213,154,6)" fg:x="485" fg:w="4"/><text x="73.5128%" y="495.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (3 samples, 0.45%)</title><rect x="73.4139%" y="469" width="0.4532%" height="15" fill="rgb(222,163,29)" fg:x="486" fg:w="3"/><text x="73.6639%" y="479.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="73.4139%" y="453" width="0.4532%" height="15" fill="rgb(227,201,8)" fg:x="486" fg:w="3"/><text x="73.6639%" y="463.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="73.4139%" y="437" width="0.4532%" height="15" fill="rgb(233,9,32)" fg:x="486" fg:w="3"/><text x="73.6639%" y="447.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (3 samples, 0.45%)</title><rect x="73.4139%" y="421" width="0.4532%" height="15" fill="rgb(217,54,24)" fg:x="486" fg:w="3"/><text x="73.6639%" y="431.50"></text></g><g><title>`0x7FFE2C81DF99 (3 samples, 0.45%)</title><rect x="73.4139%" y="405" width="0.4532%" height="15" fill="rgb(235,192,0)" fg:x="486" fg:w="3"/><text x="73.6639%" y="415.50"></text></g><g><title>`0x7FFE2F1A39D4 (3 samples, 0.45%)</title><rect x="73.4139%" y="389" width="0.4532%" height="15" fill="rgb(235,45,9)" fg:x="486" fg:w="3"/><text x="73.6639%" y="399.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="73.8671%" y="661" width="0.1511%" height="15" fill="rgb(246,42,40)" fg:x="489" fg:w="1"/><text x="74.1171%" y="671.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.15%)</title><rect x="73.8671%" y="645" width="0.1511%" height="15" fill="rgb(248,111,24)" fg:x="489" fg:w="1"/><text x="74.1171%" y="655.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="73.8671%" y="629" width="0.1511%" height="15" fill="rgb(249,65,22)" fg:x="489" fg:w="1"/><text x="74.1171%" y="639.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.15%)</title><rect x="74.0181%" y="549" width="0.1511%" height="15" fill="rgb(238,111,51)" fg:x="490" fg:w="1"/><text x="74.2681%" y="559.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="74.0181%" y="533" width="0.1511%" height="15" fill="rgb(250,118,22)" fg:x="490" fg:w="1"/><text x="74.2681%" y="543.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="74.0181%" y="517" width="0.1511%" height="15" fill="rgb(234,84,26)" fg:x="490" fg:w="1"/><text x="74.2681%" y="527.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="74.1692%" y="549" width="0.4532%" height="15" fill="rgb(243,172,12)" fg:x="491" fg:w="3"/><text x="74.4192%" y="559.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="74.1692%" y="533" width="0.4532%" height="15" fill="rgb(236,150,49)" fg:x="491" fg:w="3"/><text x="74.4192%" y="543.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.45%)</title><rect x="74.6224%" y="549" width="0.4532%" height="15" fill="rgb(225,197,26)" fg:x="494" fg:w="3"/><text x="74.8724%" y="559.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.45%)</title><rect x="74.6224%" y="533" width="0.4532%" height="15" fill="rgb(214,17,42)" fg:x="494" fg:w="3"/><text x="74.8724%" y="543.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="74.6224%" y="517" width="0.4532%" height="15" fill="rgb(224,165,40)" fg:x="494" fg:w="3"/><text x="74.8724%" y="527.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="74.6224%" y="501" width="0.4532%" height="15" fill="rgb(246,100,4)" fg:x="494" fg:w="3"/><text x="74.8724%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.21%)</title><rect x="74.0181%" y="613" width="1.2085%" height="15" fill="rgb(222,103,0)" fg:x="490" fg:w="8"/><text x="74.2681%" y="623.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.21%)</title><rect x="74.0181%" y="597" width="1.2085%" height="15" fill="rgb(227,189,26)" fg:x="490" fg:w="8"/><text x="74.2681%" y="607.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.21%)</title><rect x="74.0181%" y="581" width="1.2085%" height="15" fill="rgb(214,202,17)" fg:x="490" fg:w="8"/><text x="74.2681%" y="591.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.21%)</title><rect x="74.0181%" y="565" width="1.2085%" height="15" fill="rgb(229,111,3)" fg:x="490" fg:w="8"/><text x="74.2681%" y="575.50"></text></g><g><title>`0x7FFE2C879763 (1 samples, 0.15%)</title><rect x="75.0755%" y="549" width="0.1511%" height="15" fill="rgb(229,172,15)" fg:x="497" fg:w="1"/><text x="75.3255%" y="559.50"></text></g><g><title>`0x7FFE2F1A3974 (1 samples, 0.15%)</title><rect x="75.0755%" y="533" width="0.1511%" height="15" fill="rgb(230,224,35)" fg:x="497" fg:w="1"/><text x="75.3255%" y="543.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (38 samples, 5.74%)</title><rect x="70.0906%" y="1237" width="5.7402%" height="15" fill="rgb(251,141,6)" fg:x="464" fg:w="38"/><text x="70.3406%" y="1247.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (38 samples, 5.74%)</title><rect x="70.0906%" y="1221" width="5.7402%" height="15" fill="rgb(225,208,6)" fg:x="464" fg:w="38"/><text x="70.3406%" y="1231.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (38 samples, 5.74%)</title><rect x="70.0906%" y="1205" width="5.7402%" height="15" fill="rgb(246,181,16)" fg:x="464" fg:w="38"/><text x="70.3406%" y="1215.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (38 samples, 5.74%)</title><rect x="70.0906%" y="1189" width="5.7402%" height="15" fill="rgb(227,129,36)" fg:x="464" fg:w="38"/><text x="70.3406%" y="1199.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1173" width="4.0785%" height="15" fill="rgb(248,117,24)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1183.50">fuzz..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1157" width="4.0785%" height="15" fill="rgb(214,185,35)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1167.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1141" width="4.0785%" height="15" fill="rgb(236,150,34)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1151.50">fuzz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1125" width="4.0785%" height="15" fill="rgb(243,228,27)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1135.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1109" width="4.0785%" height="15" fill="rgb(245,77,44)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1119.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (27 samples, 4.08%)</title><rect x="71.7523%" y="1093" width="4.0785%" height="15" fill="rgb(235,214,42)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1103.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1077" width="4.0785%" height="15" fill="rgb(221,74,3)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1087.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1061" width="4.0785%" height="15" fill="rgb(206,121,29)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1071.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1045" width="4.0785%" height="15" fill="rgb(249,131,53)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1055.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1029" width="4.0785%" height="15" fill="rgb(236,170,29)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1039.50">fuzz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="1013" width="4.0785%" height="15" fill="rgb(247,96,15)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1023.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="997" width="4.0785%" height="15" fill="rgb(211,210,7)" fg:x="475" fg:w="27"/><text x="72.0023%" y="1007.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (27 samples, 4.08%)</title><rect x="71.7523%" y="981" width="4.0785%" height="15" fill="rgb(240,88,50)" fg:x="475" fg:w="27"/><text x="72.0023%" y="991.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="965" width="4.0785%" height="15" fill="rgb(209,229,26)" fg:x="475" fg:w="27"/><text x="72.0023%" y="975.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (27 samples, 4.08%)</title><rect x="71.7523%" y="949" width="4.0785%" height="15" fill="rgb(210,68,23)" fg:x="475" fg:w="27"/><text x="72.0023%" y="959.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (27 samples, 4.08%)</title><rect x="71.7523%" y="933" width="4.0785%" height="15" fill="rgb(229,180,13)" fg:x="475" fg:w="27"/><text x="72.0023%" y="943.50">fuzz..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (27 samples, 4.08%)</title><rect x="71.7523%" y="917" width="4.0785%" height="15" fill="rgb(236,53,44)" fg:x="475" fg:w="27"/><text x="72.0023%" y="927.50">fuzz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (27 samples, 4.08%)</title><rect x="71.7523%" y="901" width="4.0785%" height="15" fill="rgb(244,214,29)" fg:x="475" fg:w="27"/><text x="72.0023%" y="911.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (27 samples, 4.08%)</title><rect x="71.7523%" y="885" width="4.0785%" height="15" fill="rgb(220,75,29)" fg:x="475" fg:w="27"/><text x="72.0023%" y="895.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (27 samples, 4.08%)</title><rect x="71.7523%" y="869" width="4.0785%" height="15" fill="rgb(214,183,37)" fg:x="475" fg:w="27"/><text x="72.0023%" y="879.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.96%)</title><rect x="73.8671%" y="853" width="1.9637%" height="15" fill="rgb(239,117,29)" fg:x="489" fg:w="13"/><text x="74.1171%" y="863.50">f..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.96%)</title><rect x="73.8671%" y="837" width="1.9637%" height="15" fill="rgb(237,171,35)" fg:x="489" fg:w="13"/><text x="74.1171%" y="847.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.96%)</title><rect x="73.8671%" y="821" width="1.9637%" height="15" fill="rgb(229,178,53)" fg:x="489" fg:w="13"/><text x="74.1171%" y="831.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (13 samples, 1.96%)</title><rect x="73.8671%" y="805" width="1.9637%" height="15" fill="rgb(210,102,19)" fg:x="489" fg:w="13"/><text x="74.1171%" y="815.50">f..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.96%)</title><rect x="73.8671%" y="789" width="1.9637%" height="15" fill="rgb(235,127,22)" fg:x="489" fg:w="13"/><text x="74.1171%" y="799.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.96%)</title><rect x="73.8671%" y="773" width="1.9637%" height="15" fill="rgb(244,31,31)" fg:x="489" fg:w="13"/><text x="74.1171%" y="783.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (13 samples, 1.96%)</title><rect x="73.8671%" y="757" width="1.9637%" height="15" fill="rgb(231,43,21)" fg:x="489" fg:w="13"/><text x="74.1171%" y="767.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (13 samples, 1.96%)</title><rect x="73.8671%" y="741" width="1.9637%" height="15" fill="rgb(217,131,35)" fg:x="489" fg:w="13"/><text x="74.1171%" y="751.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (13 samples, 1.96%)</title><rect x="73.8671%" y="725" width="1.9637%" height="15" fill="rgb(221,149,4)" fg:x="489" fg:w="13"/><text x="74.1171%" y="735.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (13 samples, 1.96%)</title><rect x="73.8671%" y="709" width="1.9637%" height="15" fill="rgb(232,170,28)" fg:x="489" fg:w="13"/><text x="74.1171%" y="719.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (13 samples, 1.96%)</title><rect x="73.8671%" y="693" width="1.9637%" height="15" fill="rgb(238,56,10)" fg:x="489" fg:w="13"/><text x="74.1171%" y="703.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (13 samples, 1.96%)</title><rect x="73.8671%" y="677" width="1.9637%" height="15" fill="rgb(235,196,14)" fg:x="489" fg:w="13"/><text x="74.1171%" y="687.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.81%)</title><rect x="74.0181%" y="661" width="1.8127%" height="15" fill="rgb(216,45,48)" fg:x="490" fg:w="12"/><text x="74.2681%" y="671.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (12 samples, 1.81%)</title><rect x="74.0181%" y="645" width="1.8127%" height="15" fill="rgb(238,213,17)" fg:x="490" fg:w="12"/><text x="74.2681%" y="655.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (12 samples, 1.81%)</title><rect x="74.0181%" y="629" width="1.8127%" height="15" fill="rgb(212,13,2)" fg:x="490" fg:w="12"/><text x="74.2681%" y="639.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (4 samples, 0.60%)</title><rect x="75.2266%" y="613" width="0.6042%" height="15" fill="rgb(240,114,20)" fg:x="498" fg:w="4"/><text x="75.4766%" y="623.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (4 samples, 0.60%)</title><rect x="75.2266%" y="597" width="0.6042%" height="15" fill="rgb(228,41,40)" fg:x="498" fg:w="4"/><text x="75.4766%" y="607.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (4 samples, 0.60%)</title><rect x="75.2266%" y="581" width="0.6042%" height="15" fill="rgb(244,132,35)" fg:x="498" fg:w="4"/><text x="75.4766%" y="591.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.60%)</title><rect x="75.2266%" y="565" width="0.6042%" height="15" fill="rgb(253,189,4)" fg:x="498" fg:w="4"/><text x="75.4766%" y="575.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.60%)</title><rect x="75.2266%" y="549" width="0.6042%" height="15" fill="rgb(224,37,19)" fg:x="498" fg:w="4"/><text x="75.4766%" y="559.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (4 samples, 0.60%)</title><rect x="75.2266%" y="533" width="0.6042%" height="15" fill="rgb(235,223,18)" fg:x="498" fg:w="4"/><text x="75.4766%" y="543.50"></text></g><g><title>`0x7FFE2C81DF99 (4 samples, 0.60%)</title><rect x="75.2266%" y="517" width="0.6042%" height="15" fill="rgb(235,163,25)" fg:x="498" fg:w="4"/><text x="75.4766%" y="527.50"></text></g><g><title>`0x7FFE2F1A39D4 (4 samples, 0.60%)</title><rect x="75.2266%" y="501" width="0.6042%" height="15" fill="rgb(217,145,28)" fg:x="498" fg:w="4"/><text x="75.4766%" y="511.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="75.8308%" y="885" width="0.1511%" height="15" fill="rgb(223,223,32)" fg:x="502" fg:w="1"/><text x="76.0808%" y="895.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="75.8308%" y="869" width="0.1511%" height="15" fill="rgb(227,189,39)" fg:x="502" fg:w="1"/><text x="76.0808%" y="879.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="75.8308%" y="853" width="0.1511%" height="15" fill="rgb(248,10,22)" fg:x="502" fg:w="1"/><text x="76.0808%" y="863.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="75.8308%" y="837" width="0.1511%" height="15" fill="rgb(248,46,39)" fg:x="502" fg:w="1"/><text x="76.0808%" y="847.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="75.8308%" y="821" width="0.1511%" height="15" fill="rgb(248,113,48)" fg:x="502" fg:w="1"/><text x="76.0808%" y="831.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.15%)</title><rect x="75.8308%" y="805" width="0.1511%" height="15" fill="rgb(245,16,25)" fg:x="502" fg:w="1"/><text x="76.0808%" y="815.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.15%)</title><rect x="75.8308%" y="789" width="0.1511%" height="15" fill="rgb(249,152,16)" fg:x="502" fg:w="1"/><text x="76.0808%" y="799.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.15%)</title><rect x="75.8308%" y="773" width="0.1511%" height="15" fill="rgb(250,16,1)" fg:x="502" fg:w="1"/><text x="76.0808%" y="783.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.15%)</title><rect x="75.8308%" y="757" width="0.1511%" height="15" fill="rgb(249,138,3)" fg:x="502" fg:w="1"/><text x="76.0808%" y="767.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.15%)</title><rect x="75.8308%" y="741" width="0.1511%" height="15" fill="rgb(227,71,41)" fg:x="502" fg:w="1"/><text x="76.0808%" y="751.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.15%)</title><rect x="75.8308%" y="725" width="0.1511%" height="15" fill="rgb(209,184,23)" fg:x="502" fg:w="1"/><text x="76.0808%" y="735.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.15%)</title><rect x="75.8308%" y="709" width="0.1511%" height="15" fill="rgb(223,215,31)" fg:x="502" fg:w="1"/><text x="76.0808%" y="719.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.15%)</title><rect x="75.8308%" y="693" width="0.1511%" height="15" fill="rgb(210,146,28)" fg:x="502" fg:w="1"/><text x="76.0808%" y="703.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="75.8308%" y="677" width="0.1511%" height="15" fill="rgb(209,183,41)" fg:x="502" fg:w="1"/><text x="76.0808%" y="687.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.15%)</title><rect x="75.9819%" y="805" width="0.1511%" height="15" fill="rgb(209,224,45)" fg:x="503" fg:w="1"/><text x="76.2319%" y="815.50"></text></g><g><title>`0x7FFE2C90B06A (1 samples, 0.15%)</title><rect x="75.9819%" y="789" width="0.1511%" height="15" fill="rgb(224,209,51)" fg:x="503" fg:w="1"/><text x="76.2319%" y="799.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.15%)</title><rect x="75.9819%" y="773" width="0.1511%" height="15" fill="rgb(223,17,39)" fg:x="503" fg:w="1"/><text x="76.2319%" y="783.50"></text></g><g><title>`0x7FFE2C8774BC (2 samples, 0.30%)</title><rect x="75.9819%" y="821" width="0.3021%" height="15" fill="rgb(234,204,37)" fg:x="503" fg:w="2"/><text x="76.2319%" y="831.50"></text></g><g><title>`0x7FFE2C9024D1 (1 samples, 0.15%)</title><rect x="76.1329%" y="805" width="0.1511%" height="15" fill="rgb(236,120,5)" fg:x="504" fg:w="1"/><text x="76.3829%" y="815.50"></text></g><g><title>`0x7FFE2C8E3F0A (1 samples, 0.15%)</title><rect x="76.1329%" y="789" width="0.1511%" height="15" fill="rgb(248,97,27)" fg:x="504" fg:w="1"/><text x="76.3829%" y="799.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="76.1329%" y="773" width="0.1511%" height="15" fill="rgb(240,66,17)" fg:x="504" fg:w="1"/><text x="76.3829%" y="783.50"></text></g><g><title>`0x7FFE2C8776C5 (9 samples, 1.36%)</title><rect x="76.2840%" y="821" width="1.3595%" height="15" fill="rgb(210,79,3)" fg:x="505" fg:w="9"/><text x="76.5340%" y="831.50"></text></g><g><title>`0x7FFE2F1A4C44 (9 samples, 1.36%)</title><rect x="76.2840%" y="805" width="1.3595%" height="15" fill="rgb(214,176,27)" fg:x="505" fg:w="9"/><text x="76.5340%" y="815.50"></text></g><g><title>`0x7FFE2C8787CB (11 samples, 1.66%)</title><rect x="77.6435%" y="821" width="1.6616%" height="15" fill="rgb(235,185,3)" fg:x="514" fg:w="11"/><text x="77.8935%" y="831.50"></text></g><g><title>`0x7FFE2DD2D052 (11 samples, 1.66%)</title><rect x="77.6435%" y="805" width="1.6616%" height="15" fill="rgb(227,24,12)" fg:x="514" fg:w="11"/><text x="77.8935%" y="815.50"></text></g><g><title>`0x7FFE2DD2D646 (11 samples, 1.66%)</title><rect x="77.6435%" y="789" width="1.6616%" height="15" fill="rgb(252,169,48)" fg:x="514" fg:w="11"/><text x="77.8935%" y="799.50"></text></g><g><title>`0x7FFE2F1A3BB4 (11 samples, 1.66%)</title><rect x="77.6435%" y="773" width="1.6616%" height="15" fill="rgb(212,65,1)" fg:x="514" fg:w="11"/><text x="77.8935%" y="783.50"></text></g><g><title>`0x7FFE2C8796C7 (1 samples, 0.15%)</title><rect x="79.3051%" y="821" width="0.1511%" height="15" fill="rgb(242,39,24)" fg:x="525" fg:w="1"/><text x="79.5551%" y="831.50"></text></g><g><title>`0x7FFE2DD40D96 (1 samples, 0.15%)</title><rect x="79.3051%" y="805" width="0.1511%" height="15" fill="rgb(249,32,23)" fg:x="525" fg:w="1"/><text x="79.5551%" y="815.50"></text></g><g><title>`0x7FFE2DD410BE (1 samples, 0.15%)</title><rect x="79.3051%" y="789" width="0.1511%" height="15" fill="rgb(251,195,23)" fg:x="525" fg:w="1"/><text x="79.5551%" y="799.50"></text></g><g><title>`0x7FFE2F079D50 (1 samples, 0.15%)</title><rect x="79.3051%" y="773" width="0.1511%" height="15" fill="rgb(236,174,8)" fg:x="525" fg:w="1"/><text x="79.5551%" y="783.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (24 samples, 3.63%)</title><rect x="75.9819%" y="885" width="3.6254%" height="15" fill="rgb(220,197,8)" fg:x="503" fg:w="24"/><text x="76.2319%" y="895.50">fuzz..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (24 samples, 3.63%)</title><rect x="75.9819%" y="869" width="3.6254%" height="15" fill="rgb(240,108,37)" fg:x="503" fg:w="24"/><text x="76.2319%" y="879.50">fuzz..</text></g><g><title>`0x7FFE2DD4C6D4 (24 samples, 3.63%)</title><rect x="75.9819%" y="853" width="3.6254%" height="15" fill="rgb(232,176,24)" fg:x="503" fg:w="24"/><text x="76.2319%" y="863.50">`0x7..</text></g><g><title>`0x7FFE2C874E26 (24 samples, 3.63%)</title><rect x="75.9819%" y="837" width="3.6254%" height="15" fill="rgb(243,35,29)" fg:x="503" fg:w="24"/><text x="76.2319%" y="847.50">`0x7..</text></g><g><title>`0x7FFE2C87A57A (1 samples, 0.15%)</title><rect x="79.4562%" y="821" width="0.1511%" height="15" fill="rgb(210,37,18)" fg:x="526" fg:w="1"/><text x="79.7062%" y="831.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.15%)</title><rect x="79.4562%" y="805" width="0.1511%" height="15" fill="rgb(224,184,40)" fg:x="526" fg:w="1"/><text x="79.7062%" y="815.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (34 samples, 5.14%)</title><rect x="75.8308%" y="1061" width="5.1360%" height="15" fill="rgb(236,39,29)" fg:x="502" fg:w="34"/><text x="76.0808%" y="1071.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (34 samples, 5.14%)</title><rect x="75.8308%" y="1045" width="5.1360%" height="15" fill="rgb(232,48,39)" fg:x="502" fg:w="34"/><text x="76.0808%" y="1055.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (34 samples, 5.14%)</title><rect x="75.8308%" y="1029" width="5.1360%" height="15" fill="rgb(236,34,42)" fg:x="502" fg:w="34"/><text x="76.0808%" y="1039.50">fuzzit..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (34 samples, 5.14%)</title><rect x="75.8308%" y="1013" width="5.1360%" height="15" fill="rgb(243,106,37)" fg:x="502" fg:w="34"/><text x="76.0808%" y="1023.50">fuzzit..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (34 samples, 5.14%)</title><rect x="75.8308%" y="997" width="5.1360%" height="15" fill="rgb(218,96,6)" fg:x="502" fg:w="34"/><text x="76.0808%" y="1007.50">fuzzit..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (34 samples, 5.14%)</title><rect x="75.8308%" y="981" width="5.1360%" height="15" fill="rgb(235,130,12)" fg:x="502" fg:w="34"/><text x="76.0808%" y="991.50">fuzzit..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (34 samples, 5.14%)</title><rect x="75.8308%" y="965" width="5.1360%" height="15" fill="rgb(231,95,0)" fg:x="502" fg:w="34"/><text x="76.0808%" y="975.50">fuzzit..</text></g><g><title>fuzzit.exe`std::process::Command::output (34 samples, 5.14%)</title><rect x="75.8308%" y="949" width="5.1360%" height="15" fill="rgb(228,12,23)" fg:x="502" fg:w="34"/><text x="76.0808%" y="959.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::process::output (34 samples, 5.14%)</title><rect x="75.8308%" y="933" width="5.1360%" height="15" fill="rgb(216,12,1)" fg:x="502" fg:w="34"/><text x="76.0808%" y="943.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (34 samples, 5.14%)</title><rect x="75.8308%" y="917" width="5.1360%" height="15" fill="rgb(219,59,3)" fg:x="502" fg:w="34"/><text x="76.0808%" y="927.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (34 samples, 5.14%)</title><rect x="75.8308%" y="901" width="5.1360%" height="15" fill="rgb(215,208,46)" fg:x="502" fg:w="34"/><text x="76.0808%" y="911.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (9 samples, 1.36%)</title><rect x="79.6073%" y="885" width="1.3595%" height="15" fill="rgb(254,224,29)" fg:x="527" fg:w="9"/><text x="79.8573%" y="895.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (9 samples, 1.36%)</title><rect x="79.6073%" y="869" width="1.3595%" height="15" fill="rgb(232,14,29)" fg:x="527" fg:w="9"/><text x="79.8573%" y="879.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (9 samples, 1.36%)</title><rect x="79.6073%" y="853" width="1.3595%" height="15" fill="rgb(208,45,52)" fg:x="527" fg:w="9"/><text x="79.8573%" y="863.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (9 samples, 1.36%)</title><rect x="79.6073%" y="837" width="1.3595%" height="15" fill="rgb(234,191,28)" fg:x="527" fg:w="9"/><text x="79.8573%" y="847.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (9 samples, 1.36%)</title><rect x="79.6073%" y="821" width="1.3595%" height="15" fill="rgb(244,67,43)" fg:x="527" fg:w="9"/><text x="79.8573%" y="831.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (9 samples, 1.36%)</title><rect x="79.6073%" y="805" width="1.3595%" height="15" fill="rgb(236,189,24)" fg:x="527" fg:w="9"/><text x="79.8573%" y="815.50"></text></g><g><title>`0x7FFE2C81DF99 (9 samples, 1.36%)</title><rect x="79.6073%" y="789" width="1.3595%" height="15" fill="rgb(239,214,33)" fg:x="527" fg:w="9"/><text x="79.8573%" y="799.50"></text></g><g><title>`0x7FFE2F1A39D4 (9 samples, 1.36%)</title><rect x="79.6073%" y="773" width="1.3595%" height="15" fill="rgb(226,176,41)" fg:x="527" fg:w="9"/><text x="79.8573%" y="783.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.15%)</title><rect x="80.9668%" y="533" width="0.1511%" height="15" fill="rgb(248,47,8)" fg:x="536" fg:w="1"/><text x="81.2168%" y="543.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.15%)</title><rect x="80.9668%" y="517" width="0.1511%" height="15" fill="rgb(218,81,44)" fg:x="536" fg:w="1"/><text x="81.2168%" y="527.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="80.9668%" y="501" width="0.1511%" height="15" fill="rgb(213,98,6)" fg:x="536" fg:w="1"/><text x="81.2168%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::new (1 samples, 0.15%)</title><rect x="80.9668%" y="485" width="0.1511%" height="15" fill="rgb(222,85,22)" fg:x="536" fg:w="1"/><text x="81.2168%" y="495.50"></text></g><g><title>fuzzit.exe`alloc::boxed::impl$0::new (1 samples, 0.15%)</title><rect x="80.9668%" y="469" width="0.1511%" height="15" fill="rgb(239,46,39)" fg:x="536" fg:w="1"/><text x="81.2168%" y="479.50"></text></g><g><title>fuzzit.exe`alloc::alloc::exchange_malloc (1 samples, 0.15%)</title><rect x="80.9668%" y="453" width="0.1511%" height="15" fill="rgb(237,12,29)" fg:x="536" fg:w="1"/><text x="81.2168%" y="463.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="80.9668%" y="437" width="0.1511%" height="15" fill="rgb(214,77,8)" fg:x="536" fg:w="1"/><text x="81.2168%" y="447.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.15%)</title><rect x="80.9668%" y="421" width="0.1511%" height="15" fill="rgb(217,168,37)" fg:x="536" fg:w="1"/><text x="81.2168%" y="431.50"></text></g><g><title>`0x7FFE2F0916E1 (1 samples, 0.15%)</title><rect x="80.9668%" y="405" width="0.1511%" height="15" fill="rgb(221,217,23)" fg:x="536" fg:w="1"/><text x="81.2168%" y="415.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="81.1178%" y="501" width="0.1511%" height="15" fill="rgb(243,229,36)" fg:x="537" fg:w="1"/><text x="81.3678%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="81.1178%" y="485" width="0.1511%" height="15" fill="rgb(251,163,40)" fg:x="537" fg:w="1"/><text x="81.3678%" y="495.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="81.1178%" y="469" width="0.1511%" height="15" fill="rgb(237,222,12)" fg:x="537" fg:w="1"/><text x="81.3678%" y="479.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="81.1178%" y="453" width="0.1511%" height="15" fill="rgb(248,132,6)" fg:x="537" fg:w="1"/><text x="81.3678%" y="463.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="81.1178%" y="437" width="0.1511%" height="15" fill="rgb(227,167,50)" fg:x="537" fg:w="1"/><text x="81.3678%" y="447.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.15%)</title><rect x="81.1178%" y="421" width="0.1511%" height="15" fill="rgb(242,84,37)" fg:x="537" fg:w="1"/><text x="81.3678%" y="431.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.15%)</title><rect x="81.1178%" y="405" width="0.1511%" height="15" fill="rgb(212,4,50)" fg:x="537" fg:w="1"/><text x="81.3678%" y="415.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.15%)</title><rect x="81.1178%" y="389" width="0.1511%" height="15" fill="rgb(230,228,32)" fg:x="537" fg:w="1"/><text x="81.3678%" y="399.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.15%)</title><rect x="81.1178%" y="373" width="0.1511%" height="15" fill="rgb(248,217,23)" fg:x="537" fg:w="1"/><text x="81.3678%" y="383.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.15%)</title><rect x="81.1178%" y="357" width="0.1511%" height="15" fill="rgb(238,197,32)" fg:x="537" fg:w="1"/><text x="81.3678%" y="367.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.15%)</title><rect x="81.1178%" y="341" width="0.1511%" height="15" fill="rgb(236,106,1)" fg:x="537" fg:w="1"/><text x="81.3678%" y="351.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.15%)</title><rect x="81.1178%" y="325" width="0.1511%" height="15" fill="rgb(219,228,13)" fg:x="537" fg:w="1"/><text x="81.3678%" y="335.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.15%)</title><rect x="81.1178%" y="309" width="0.1511%" height="15" fill="rgb(238,30,35)" fg:x="537" fg:w="1"/><text x="81.3678%" y="319.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="81.1178%" y="293" width="0.1511%" height="15" fill="rgb(236,70,23)" fg:x="537" fg:w="1"/><text x="81.3678%" y="303.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="81.2689%" y="437" width="0.4532%" height="15" fill="rgb(249,104,48)" fg:x="538" fg:w="3"/><text x="81.5189%" y="447.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="81.2689%" y="421" width="0.4532%" height="15" fill="rgb(254,117,50)" fg:x="538" fg:w="3"/><text x="81.5189%" y="431.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (6 samples, 0.91%)</title><rect x="81.2689%" y="501" width="0.9063%" height="15" fill="rgb(223,152,4)" fg:x="538" fg:w="6"/><text x="81.5189%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (6 samples, 0.91%)</title><rect x="81.2689%" y="485" width="0.9063%" height="15" fill="rgb(245,6,2)" fg:x="538" fg:w="6"/><text x="81.5189%" y="495.50"></text></g><g><title>`0x7FFE2DD4C6D4 (6 samples, 0.91%)</title><rect x="81.2689%" y="469" width="0.9063%" height="15" fill="rgb(249,150,24)" fg:x="538" fg:w="6"/><text x="81.5189%" y="479.50"></text></g><g><title>`0x7FFE2C874E26 (6 samples, 0.91%)</title><rect x="81.2689%" y="453" width="0.9063%" height="15" fill="rgb(228,185,42)" fg:x="538" fg:w="6"/><text x="81.5189%" y="463.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.45%)</title><rect x="81.7221%" y="437" width="0.4532%" height="15" fill="rgb(226,39,33)" fg:x="541" fg:w="3"/><text x="81.9721%" y="447.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.45%)</title><rect x="81.7221%" y="421" width="0.4532%" height="15" fill="rgb(221,166,19)" fg:x="541" fg:w="3"/><text x="81.9721%" y="431.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="81.7221%" y="405" width="0.4532%" height="15" fill="rgb(209,109,2)" fg:x="541" fg:w="3"/><text x="81.9721%" y="415.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="81.7221%" y="389" width="0.4532%" height="15" fill="rgb(252,216,26)" fg:x="541" fg:w="3"/><text x="81.9721%" y="399.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.15%)</title><rect x="82.1752%" y="469" width="0.1511%" height="15" fill="rgb(227,173,36)" fg:x="544" fg:w="1"/><text x="82.4252%" y="479.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.15%)</title><rect x="82.1752%" y="453" width="0.1511%" height="15" fill="rgb(209,90,7)" fg:x="544" fg:w="1"/><text x="82.4252%" y="463.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.15%)</title><rect x="82.1752%" y="437" width="0.1511%" height="15" fill="rgb(250,194,11)" fg:x="544" fg:w="1"/><text x="82.4252%" y="447.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (1 samples, 0.15%)</title><rect x="82.1752%" y="421" width="0.1511%" height="15" fill="rgb(220,72,50)" fg:x="544" fg:w="1"/><text x="82.4252%" y="431.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.15%)</title><rect x="82.1752%" y="405" width="0.1511%" height="15" fill="rgb(222,106,48)" fg:x="544" fg:w="1"/><text x="82.4252%" y="415.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.15%)</title><rect x="82.1752%" y="389" width="0.1511%" height="15" fill="rgb(216,220,45)" fg:x="544" fg:w="1"/><text x="82.4252%" y="399.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.15%)</title><rect x="82.1752%" y="373" width="0.1511%" height="15" fill="rgb(234,112,18)" fg:x="544" fg:w="1"/><text x="82.4252%" y="383.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.15%)</title><rect x="82.1752%" y="357" width="0.1511%" height="15" fill="rgb(206,179,9)" fg:x="544" fg:w="1"/><text x="82.4252%" y="367.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.15%)</title><rect x="82.1752%" y="341" width="0.1511%" height="15" fill="rgb(215,115,40)" fg:x="544" fg:w="1"/><text x="82.4252%" y="351.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="82.1752%" y="325" width="0.1511%" height="15" fill="rgb(222,69,34)" fg:x="544" fg:w="1"/><text x="82.4252%" y="335.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.15%)</title><rect x="82.1752%" y="309" width="0.1511%" height="15" fill="rgb(209,161,10)" fg:x="544" fg:w="1"/><text x="82.4252%" y="319.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="82.1752%" y="293" width="0.1511%" height="15" fill="rgb(217,6,38)" fg:x="544" fg:w="1"/><text x="82.4252%" y="303.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="82.1752%" y="277" width="0.1511%" height="15" fill="rgb(229,229,48)" fg:x="544" fg:w="1"/><text x="82.4252%" y="287.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="82.3263%" y="469" width="0.1511%" height="15" fill="rgb(225,21,28)" fg:x="545" fg:w="1"/><text x="82.5763%" y="479.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.15%)</title><rect x="82.3263%" y="453" width="0.1511%" height="15" fill="rgb(206,33,13)" fg:x="545" fg:w="1"/><text x="82.5763%" y="463.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="82.3263%" y="437" width="0.1511%" height="15" fill="rgb(242,178,17)" fg:x="545" fg:w="1"/><text x="82.5763%" y="447.50"></text></g><g><title>fuzzit.exe`std::path::PathBuf::push (1 samples, 0.15%)</title><rect x="82.3263%" y="421" width="0.1511%" height="15" fill="rgb(220,162,5)" fg:x="545" fg:w="1"/><text x="82.5763%" y="431.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.15%)</title><rect x="82.3263%" y="405" width="0.1511%" height="15" fill="rgb(210,33,43)" fg:x="545" fg:w="1"/><text x="82.5763%" y="415.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.15%)</title><rect x="82.3263%" y="389" width="0.1511%" height="15" fill="rgb(216,116,54)" fg:x="545" fg:w="1"/><text x="82.5763%" y="399.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.15%)</title><rect x="82.3263%" y="373" width="0.1511%" height="15" fill="rgb(249,92,24)" fg:x="545" fg:w="1"/><text x="82.5763%" y="383.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.15%)</title><rect x="82.3263%" y="357" width="0.1511%" height="15" fill="rgb(231,189,14)" fg:x="545" fg:w="1"/><text x="82.5763%" y="367.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.15%)</title><rect x="82.3263%" y="341" width="0.1511%" height="15" fill="rgb(230,8,41)" fg:x="545" fg:w="1"/><text x="82.5763%" y="351.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.15%)</title><rect x="82.3263%" y="325" width="0.1511%" height="15" fill="rgb(249,7,27)" fg:x="545" fg:w="1"/><text x="82.5763%" y="335.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::append_elements (1 samples, 0.15%)</title><rect x="82.3263%" y="309" width="0.1511%" height="15" fill="rgb(232,86,5)" fg:x="545" fg:w="1"/><text x="82.5763%" y="319.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::reserve (1 samples, 0.15%)</title><rect x="82.3263%" y="293" width="0.1511%" height="15" fill="rgb(224,175,18)" fg:x="545" fg:w="1"/><text x="82.5763%" y="303.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::reserve (1 samples, 0.15%)</title><rect x="82.3263%" y="277" width="0.1511%" height="15" fill="rgb(220,129,12)" fg:x="545" fg:w="1"/><text x="82.5763%" y="287.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::reserve (1 samples, 0.15%)</title><rect x="82.3263%" y="261" width="0.1511%" height="15" fill="rgb(210,19,36)" fg:x="545" fg:w="1"/><text x="82.5763%" y="271.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::needs_to_grow (1 samples, 0.15%)</title><rect x="82.3263%" y="245" width="0.1511%" height="15" fill="rgb(219,96,14)" fg:x="545" fg:w="1"/><text x="82.5763%" y="255.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::capacity (1 samples, 0.15%)</title><rect x="82.3263%" y="229" width="0.1511%" height="15" fill="rgb(249,106,1)" fg:x="545" fg:w="1"/><text x="82.5763%" y="239.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (11 samples, 1.66%)</title><rect x="80.9668%" y="853" width="1.6616%" height="15" fill="rgb(249,155,20)" fg:x="536" fg:w="11"/><text x="81.2168%" y="863.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 1.66%)</title><rect x="80.9668%" y="837" width="1.6616%" height="15" fill="rgb(244,168,9)" fg:x="536" fg:w="11"/><text x="81.2168%" y="847.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (11 samples, 1.66%)</title><rect x="80.9668%" y="821" width="1.6616%" height="15" fill="rgb(216,23,50)" fg:x="536" fg:w="11"/><text x="81.2168%" y="831.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (11 samples, 1.66%)</title><rect x="80.9668%" y="805" width="1.6616%" height="15" fill="rgb(224,219,20)" fg:x="536" fg:w="11"/><text x="81.2168%" y="815.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (11 samples, 1.66%)</title><rect x="80.9668%" y="789" width="1.6616%" height="15" fill="rgb(222,156,15)" fg:x="536" fg:w="11"/><text x="81.2168%" y="799.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="80.9668%" y="773" width="1.6616%" height="15" fill="rgb(231,97,17)" fg:x="536" fg:w="11"/><text x="81.2168%" y="783.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="80.9668%" y="757" width="1.6616%" height="15" fill="rgb(218,70,48)" fg:x="536" fg:w="11"/><text x="81.2168%" y="767.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="80.9668%" y="741" width="1.6616%" height="15" fill="rgb(212,196,52)" fg:x="536" fg:w="11"/><text x="81.2168%" y="751.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="80.9668%" y="725" width="1.6616%" height="15" fill="rgb(243,203,18)" fg:x="536" fg:w="11"/><text x="81.2168%" y="735.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (11 samples, 1.66%)</title><rect x="80.9668%" y="709" width="1.6616%" height="15" fill="rgb(252,125,41)" fg:x="536" fg:w="11"/><text x="81.2168%" y="719.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="80.9668%" y="693" width="1.6616%" height="15" fill="rgb(223,180,33)" fg:x="536" fg:w="11"/><text x="81.2168%" y="703.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="80.9668%" y="677" width="1.6616%" height="15" fill="rgb(254,159,46)" fg:x="536" fg:w="11"/><text x="81.2168%" y="687.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="80.9668%" y="661" width="1.6616%" height="15" fill="rgb(254,38,10)" fg:x="536" fg:w="11"/><text x="81.2168%" y="671.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="80.9668%" y="645" width="1.6616%" height="15" fill="rgb(208,217,32)" fg:x="536" fg:w="11"/><text x="81.2168%" y="655.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (11 samples, 1.66%)</title><rect x="80.9668%" y="629" width="1.6616%" height="15" fill="rgb(221,120,13)" fg:x="536" fg:w="11"/><text x="81.2168%" y="639.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="80.9668%" y="613" width="1.6616%" height="15" fill="rgb(246,54,52)" fg:x="536" fg:w="11"/><text x="81.2168%" y="623.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (11 samples, 1.66%)</title><rect x="80.9668%" y="597" width="1.6616%" height="15" fill="rgb(242,34,25)" fg:x="536" fg:w="11"/><text x="81.2168%" y="607.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="80.9668%" y="581" width="1.6616%" height="15" fill="rgb(247,209,9)" fg:x="536" fg:w="11"/><text x="81.2168%" y="591.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (11 samples, 1.66%)</title><rect x="80.9668%" y="565" width="1.6616%" height="15" fill="rgb(228,71,26)" fg:x="536" fg:w="11"/><text x="81.2168%" y="575.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (11 samples, 1.66%)</title><rect x="80.9668%" y="549" width="1.6616%" height="15" fill="rgb(222,145,49)" fg:x="536" fg:w="11"/><text x="81.2168%" y="559.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (10 samples, 1.51%)</title><rect x="81.1178%" y="533" width="1.5106%" height="15" fill="rgb(218,121,17)" fg:x="537" fg:w="10"/><text x="81.3678%" y="543.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (10 samples, 1.51%)</title><rect x="81.1178%" y="517" width="1.5106%" height="15" fill="rgb(244,50,7)" fg:x="537" fg:w="10"/><text x="81.3678%" y="527.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="82.1752%" y="501" width="0.4532%" height="15" fill="rgb(246,229,37)" fg:x="544" fg:w="3"/><text x="82.4252%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="82.1752%" y="485" width="0.4532%" height="15" fill="rgb(225,18,5)" fg:x="544" fg:w="3"/><text x="82.4252%" y="495.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="82.4773%" y="469" width="0.1511%" height="15" fill="rgb(213,204,8)" fg:x="546" fg:w="1"/><text x="82.7273%" y="479.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="82.4773%" y="453" width="0.1511%" height="15" fill="rgb(238,103,6)" fg:x="546" fg:w="1"/><text x="82.7273%" y="463.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="82.4773%" y="437" width="0.1511%" height="15" fill="rgb(222,25,35)" fg:x="546" fg:w="1"/><text x="82.7273%" y="447.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="82.4773%" y="421" width="0.1511%" height="15" fill="rgb(213,203,35)" fg:x="546" fg:w="1"/><text x="82.7273%" y="431.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="82.4773%" y="405" width="0.1511%" height="15" fill="rgb(221,79,53)" fg:x="546" fg:w="1"/><text x="82.7273%" y="415.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="82.4773%" y="389" width="0.1511%" height="15" fill="rgb(243,200,35)" fg:x="546" fg:w="1"/><text x="82.7273%" y="399.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.15%)</title><rect x="82.6284%" y="501" width="0.1511%" height="15" fill="rgb(248,60,25)" fg:x="547" fg:w="1"/><text x="82.8784%" y="511.50"></text></g><g><title>`0x7FFE2C7FF233 (1 samples, 0.15%)</title><rect x="82.6284%" y="485" width="0.1511%" height="15" fill="rgb(227,53,46)" fg:x="547" fg:w="1"/><text x="82.8784%" y="495.50"></text></g><g><title>`0x7FFE2F1A3D84 (1 samples, 0.15%)</title><rect x="82.6284%" y="469" width="0.1511%" height="15" fill="rgb(216,120,32)" fg:x="547" fg:w="1"/><text x="82.8784%" y="479.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (2 samples, 0.30%)</title><rect x="82.6284%" y="533" width="0.3021%" height="15" fill="rgb(220,134,1)" fg:x="547" fg:w="2"/><text x="82.8784%" y="543.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (2 samples, 0.30%)</title><rect x="82.6284%" y="517" width="0.3021%" height="15" fill="rgb(237,168,5)" fg:x="547" fg:w="2"/><text x="82.8784%" y="527.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (1 samples, 0.15%)</title><rect x="82.7795%" y="501" width="0.1511%" height="15" fill="rgb(231,100,33)" fg:x="548" fg:w="1"/><text x="83.0295%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::read_overlapped (1 samples, 0.15%)</title><rect x="82.7795%" y="485" width="0.1511%" height="15" fill="rgb(236,177,47)" fg:x="548" fg:w="1"/><text x="83.0295%" y="495.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.15%)</title><rect x="82.7795%" y="469" width="0.1511%" height="15" fill="rgb(235,7,49)" fg:x="548" fg:w="1"/><text x="83.0295%" y="479.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.15%)</title><rect x="82.7795%" y="453" width="0.1511%" height="15" fill="rgb(232,119,22)" fg:x="548" fg:w="1"/><text x="83.0295%" y="463.50"></text></g><g><title>`0x7FFE2C7FF67A (1 samples, 0.15%)</title><rect x="82.7795%" y="437" width="0.1511%" height="15" fill="rgb(254,73,53)" fg:x="548" fg:w="1"/><text x="83.0295%" y="447.50"></text></g><g><title>`0x7FFE2F1A32F4 (1 samples, 0.15%)</title><rect x="82.7795%" y="421" width="0.1511%" height="15" fill="rgb(251,35,20)" fg:x="548" fg:w="1"/><text x="83.0295%" y="431.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="82.9305%" y="501" width="0.1511%" height="15" fill="rgb(241,119,20)" fg:x="549" fg:w="1"/><text x="83.1805%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="82.9305%" y="485" width="0.1511%" height="15" fill="rgb(207,102,14)" fg:x="549" fg:w="1"/><text x="83.1805%" y="495.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="82.9305%" y="469" width="0.1511%" height="15" fill="rgb(248,201,50)" fg:x="549" fg:w="1"/><text x="83.1805%" y="479.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="82.9305%" y="453" width="0.1511%" height="15" fill="rgb(222,185,44)" fg:x="549" fg:w="1"/><text x="83.1805%" y="463.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::maybe_verbatim (1 samples, 0.15%)</title><rect x="82.9305%" y="437" width="0.1511%" height="15" fill="rgb(218,107,18)" fg:x="549" fg:w="1"/><text x="83.1805%" y="447.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="82.9305%" y="421" width="0.1511%" height="15" fill="rgb(237,177,39)" fg:x="549" fg:w="1"/><text x="83.1805%" y="431.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::to_u16s::inner (1 samples, 0.15%)</title><rect x="82.9305%" y="405" width="0.1511%" height="15" fill="rgb(246,69,6)" fg:x="549" fg:w="1"/><text x="83.1805%" y="415.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$8::deref (1 samples, 0.15%)</title><rect x="82.9305%" y="389" width="0.1511%" height="15" fill="rgb(234,208,37)" fg:x="549" fg:w="1"/><text x="83.1805%" y="399.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_slice (1 samples, 0.15%)</title><rect x="82.9305%" y="373" width="0.1511%" height="15" fill="rgb(225,4,6)" fg:x="549" fg:w="1"/><text x="83.1805%" y="383.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_ptr (1 samples, 0.15%)</title><rect x="82.9305%" y="357" width="0.1511%" height="15" fill="rgb(233,45,0)" fg:x="549" fg:w="1"/><text x="83.1805%" y="367.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.15%)</title><rect x="82.9305%" y="341" width="0.1511%" height="15" fill="rgb(226,136,5)" fg:x="549" fg:w="1"/><text x="83.1805%" y="351.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.15%)</title><rect x="82.9305%" y="325" width="0.1511%" height="15" fill="rgb(211,91,47)" fg:x="549" fg:w="1"/><text x="83.1805%" y="335.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.15%)</title><rect x="82.9305%" y="309" width="0.1511%" height="15" fill="rgb(242,88,51)" fg:x="549" fg:w="1"/><text x="83.1805%" y="319.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_desugared&lt;u16,alloc::alloc::Global,std::sys_common::wtf8::EncodeWide&gt; (1 samples, 0.15%)</title><rect x="82.9305%" y="293" width="0.1511%" height="15" fill="rgb(230,91,28)" fg:x="549" fg:w="1"/><text x="83.1805%" y="303.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::set_len (1 samples, 0.15%)</title><rect x="82.9305%" y="277" width="0.1511%" height="15" fill="rgb(254,186,29)" fg:x="549" fg:w="1"/><text x="83.1805%" y="287.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="83.0816%" y="437" width="0.4532%" height="15" fill="rgb(238,6,4)" fg:x="550" fg:w="3"/><text x="83.3316%" y="447.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="83.0816%" y="421" width="0.4532%" height="15" fill="rgb(221,151,16)" fg:x="550" fg:w="3"/><text x="83.3316%" y="431.50"></text></g><g><title>`0x7FFE2DD2D5B5 (1 samples, 0.15%)</title><rect x="83.5347%" y="405" width="0.1511%" height="15" fill="rgb(251,143,52)" fg:x="553" fg:w="1"/><text x="83.7847%" y="415.50"></text></g><g><title>`0x7FFE2DD2E31C (1 samples, 0.15%)</title><rect x="83.5347%" y="389" width="0.1511%" height="15" fill="rgb(206,90,15)" fg:x="553" fg:w="1"/><text x="83.7847%" y="399.50"></text></g><g><title>`0x7FFE2C8107F2 (1 samples, 0.15%)</title><rect x="83.5347%" y="373" width="0.1511%" height="15" fill="rgb(218,35,8)" fg:x="553" fg:w="1"/><text x="83.7847%" y="383.50"></text></g><g><title>`0x7FFE2F047BE2 (1 samples, 0.15%)</title><rect x="83.5347%" y="357" width="0.1511%" height="15" fill="rgb(239,215,6)" fg:x="553" fg:w="1"/><text x="83.7847%" y="367.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.45%)</title><rect x="83.5347%" y="437" width="0.4532%" height="15" fill="rgb(245,116,39)" fg:x="553" fg:w="3"/><text x="83.7847%" y="447.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.45%)</title><rect x="83.5347%" y="421" width="0.4532%" height="15" fill="rgb(242,65,28)" fg:x="553" fg:w="3"/><text x="83.7847%" y="431.50"></text></g><g><title>`0x7FFE2DD2D646 (2 samples, 0.30%)</title><rect x="83.6858%" y="405" width="0.3021%" height="15" fill="rgb(252,132,53)" fg:x="554" fg:w="2"/><text x="83.9358%" y="415.50"></text></g><g><title>`0x7FFE2F1A3BB4 (2 samples, 0.30%)</title><rect x="83.6858%" y="389" width="0.3021%" height="15" fill="rgb(224,159,50)" fg:x="554" fg:w="2"/><text x="83.9358%" y="399.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 1.06%)</title><rect x="83.0816%" y="501" width="1.0574%" height="15" fill="rgb(224,93,4)" fg:x="550" fg:w="7"/><text x="83.3316%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 1.06%)</title><rect x="83.0816%" y="485" width="1.0574%" height="15" fill="rgb(208,81,34)" fg:x="550" fg:w="7"/><text x="83.3316%" y="495.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 1.06%)</title><rect x="83.0816%" y="469" width="1.0574%" height="15" fill="rgb(233,92,54)" fg:x="550" fg:w="7"/><text x="83.3316%" y="479.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 1.06%)</title><rect x="83.0816%" y="453" width="1.0574%" height="15" fill="rgb(237,21,14)" fg:x="550" fg:w="7"/><text x="83.3316%" y="463.50"></text></g><g><title>`0x7FFE2C8796C7 (1 samples, 0.15%)</title><rect x="83.9879%" y="437" width="0.1511%" height="15" fill="rgb(249,128,51)" fg:x="556" fg:w="1"/><text x="84.2379%" y="447.50"></text></g><g><title>`0x7FFE2DD40D96 (1 samples, 0.15%)</title><rect x="83.9879%" y="421" width="0.1511%" height="15" fill="rgb(223,129,24)" fg:x="556" fg:w="1"/><text x="84.2379%" y="431.50"></text></g><g><title>`0x7FFE2DD410BE (1 samples, 0.15%)</title><rect x="83.9879%" y="405" width="0.1511%" height="15" fill="rgb(231,168,25)" fg:x="556" fg:w="1"/><text x="84.2379%" y="415.50"></text></g><g><title>`0x7FFE2F079E0F (1 samples, 0.15%)</title><rect x="83.9879%" y="389" width="0.1511%" height="15" fill="rgb(224,39,20)" fg:x="556" fg:w="1"/><text x="84.2379%" y="399.50"></text></g><g><title>`0x7FFE2F1A5E24 (1 samples, 0.15%)</title><rect x="83.9879%" y="373" width="0.1511%" height="15" fill="rgb(225,152,53)" fg:x="556" fg:w="1"/><text x="84.2379%" y="383.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.15%)</title><rect x="84.1390%" y="469" width="0.1511%" height="15" fill="rgb(252,17,24)" fg:x="557" fg:w="1"/><text x="84.3890%" y="479.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.15%)</title><rect x="84.1390%" y="453" width="0.1511%" height="15" fill="rgb(250,114,30)" fg:x="557" fg:w="1"/><text x="84.3890%" y="463.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.15%)</title><rect x="84.1390%" y="437" width="0.1511%" height="15" fill="rgb(229,5,4)" fg:x="557" fg:w="1"/><text x="84.3890%" y="447.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (1 samples, 0.15%)</title><rect x="84.1390%" y="421" width="0.1511%" height="15" fill="rgb(225,176,49)" fg:x="557" fg:w="1"/><text x="84.3890%" y="431.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.15%)</title><rect x="84.1390%" y="405" width="0.1511%" height="15" fill="rgb(224,221,49)" fg:x="557" fg:w="1"/><text x="84.3890%" y="415.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.15%)</title><rect x="84.1390%" y="389" width="0.1511%" height="15" fill="rgb(253,169,27)" fg:x="557" fg:w="1"/><text x="84.3890%" y="399.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.15%)</title><rect x="84.1390%" y="373" width="0.1511%" height="15" fill="rgb(211,206,16)" fg:x="557" fg:w="1"/><text x="84.3890%" y="383.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.15%)</title><rect x="84.1390%" y="357" width="0.1511%" height="15" fill="rgb(244,87,35)" fg:x="557" fg:w="1"/><text x="84.3890%" y="367.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.15%)</title><rect x="84.1390%" y="341" width="0.1511%" height="15" fill="rgb(246,28,10)" fg:x="557" fg:w="1"/><text x="84.3890%" y="351.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="84.1390%" y="325" width="0.1511%" height="15" fill="rgb(229,12,44)" fg:x="557" fg:w="1"/><text x="84.3890%" y="335.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.15%)</title><rect x="84.1390%" y="309" width="0.1511%" height="15" fill="rgb(210,145,37)" fg:x="557" fg:w="1"/><text x="84.3890%" y="319.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="84.1390%" y="293" width="0.1511%" height="15" fill="rgb(227,112,52)" fg:x="557" fg:w="1"/><text x="84.3890%" y="303.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="84.1390%" y="277" width="0.1511%" height="15" fill="rgb(238,155,34)" fg:x="557" fg:w="1"/><text x="84.3890%" y="287.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="84.1390%" y="261" width="0.1511%" height="15" fill="rgb(239,226,36)" fg:x="557" fg:w="1"/><text x="84.3890%" y="271.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.15%)</title><rect x="84.1390%" y="245" width="0.1511%" height="15" fill="rgb(230,16,23)" fg:x="557" fg:w="1"/><text x="84.3890%" y="255.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="84.1390%" y="229" width="0.1511%" height="15" fill="rgb(236,171,36)" fg:x="557" fg:w="1"/><text x="84.3890%" y="239.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="84.1390%" y="213" width="0.1511%" height="15" fill="rgb(221,22,14)" fg:x="557" fg:w="1"/><text x="84.3890%" y="223.50"></text></g><g><title>`0x7FFE2F069E2D (1 samples, 0.15%)</title><rect x="84.1390%" y="197" width="0.1511%" height="15" fill="rgb(242,43,11)" fg:x="557" fg:w="1"/><text x="84.3890%" y="207.50"></text></g><g><title>`0x7FFE2F06A0D5 (1 samples, 0.15%)</title><rect x="84.1390%" y="181" width="0.1511%" height="15" fill="rgb(232,69,23)" fg:x="557" fg:w="1"/><text x="84.3890%" y="191.50"></text></g><g><title>`0x7FFE2F06A9EB (1 samples, 0.15%)</title><rect x="84.1390%" y="165" width="0.1511%" height="15" fill="rgb(216,180,54)" fg:x="557" fg:w="1"/><text x="84.3890%" y="175.50"></text></g><g><title>`0x7FFE2F0C1174 (1 samples, 0.15%)</title><rect x="84.1390%" y="149" width="0.1511%" height="15" fill="rgb(216,5,24)" fg:x="557" fg:w="1"/><text x="84.3890%" y="159.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.96%)</title><rect x="82.6284%" y="677" width="1.9637%" height="15" fill="rgb(225,89,9)" fg:x="547" fg:w="13"/><text x="82.8784%" y="687.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.96%)</title><rect x="82.6284%" y="661" width="1.9637%" height="15" fill="rgb(243,75,33)" fg:x="547" fg:w="13"/><text x="82.8784%" y="671.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (13 samples, 1.96%)</title><rect x="82.6284%" y="645" width="1.9637%" height="15" fill="rgb(247,141,45)" fg:x="547" fg:w="13"/><text x="82.8784%" y="655.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (13 samples, 1.96%)</title><rect x="82.6284%" y="629" width="1.9637%" height="15" fill="rgb(232,177,36)" fg:x="547" fg:w="13"/><text x="82.8784%" y="639.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (13 samples, 1.96%)</title><rect x="82.6284%" y="613" width="1.9637%" height="15" fill="rgb(219,125,36)" fg:x="547" fg:w="13"/><text x="82.8784%" y="623.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (13 samples, 1.96%)</title><rect x="82.6284%" y="597" width="1.9637%" height="15" fill="rgb(227,94,9)" fg:x="547" fg:w="13"/><text x="82.8784%" y="607.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (13 samples, 1.96%)</title><rect x="82.6284%" y="581" width="1.9637%" height="15" fill="rgb(240,34,52)" fg:x="547" fg:w="13"/><text x="82.8784%" y="591.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (13 samples, 1.96%)</title><rect x="82.6284%" y="565" width="1.9637%" height="15" fill="rgb(216,45,12)" fg:x="547" fg:w="13"/><text x="82.8784%" y="575.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (13 samples, 1.96%)</title><rect x="82.6284%" y="549" width="1.9637%" height="15" fill="rgb(246,21,19)" fg:x="547" fg:w="13"/><text x="82.8784%" y="559.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.66%)</title><rect x="82.9305%" y="533" width="1.6616%" height="15" fill="rgb(213,98,42)" fg:x="549" fg:w="11"/><text x="83.1805%" y="543.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.66%)</title><rect x="82.9305%" y="517" width="1.6616%" height="15" fill="rgb(250,136,47)" fg:x="549" fg:w="11"/><text x="83.1805%" y="527.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="84.1390%" y="501" width="0.4532%" height="15" fill="rgb(251,124,27)" fg:x="557" fg:w="3"/><text x="84.3890%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="84.1390%" y="485" width="0.4532%" height="15" fill="rgb(229,180,14)" fg:x="557" fg:w="3"/><text x="84.3890%" y="495.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="84.2900%" y="469" width="0.3021%" height="15" fill="rgb(245,216,25)" fg:x="558" fg:w="2"/><text x="84.5400%" y="479.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="84.2900%" y="453" width="0.3021%" height="15" fill="rgb(251,43,5)" fg:x="558" fg:w="2"/><text x="84.5400%" y="463.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="84.2900%" y="437" width="0.3021%" height="15" fill="rgb(250,128,24)" fg:x="558" fg:w="2"/><text x="84.5400%" y="447.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="84.2900%" y="421" width="0.3021%" height="15" fill="rgb(217,117,27)" fg:x="558" fg:w="2"/><text x="84.5400%" y="431.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.30%)</title><rect x="84.2900%" y="405" width="0.3021%" height="15" fill="rgb(245,147,4)" fg:x="558" fg:w="2"/><text x="84.5400%" y="415.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.30%)</title><rect x="84.2900%" y="389" width="0.3021%" height="15" fill="rgb(242,201,35)" fg:x="558" fg:w="2"/><text x="84.5400%" y="399.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.15%)</title><rect x="84.5921%" y="469" width="0.1511%" height="15" fill="rgb(218,181,1)" fg:x="560" fg:w="1"/><text x="84.8421%" y="479.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.15%)</title><rect x="84.5921%" y="453" width="0.1511%" height="15" fill="rgb(222,6,29)" fg:x="560" fg:w="1"/><text x="84.8421%" y="463.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.15%)</title><rect x="84.5921%" y="437" width="0.1511%" height="15" fill="rgb(208,186,3)" fg:x="560" fg:w="1"/><text x="84.8421%" y="447.50"></text></g><g><title>`0x7FFE2C7FF233 (1 samples, 0.15%)</title><rect x="84.5921%" y="421" width="0.1511%" height="15" fill="rgb(216,36,26)" fg:x="560" fg:w="1"/><text x="84.8421%" y="431.50"></text></g><g><title>`0x7FFE2F1A3D84 (1 samples, 0.15%)</title><rect x="84.5921%" y="405" width="0.1511%" height="15" fill="rgb(248,201,23)" fg:x="560" fg:w="1"/><text x="84.8421%" y="415.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="84.7432%" y="373" width="0.4532%" height="15" fill="rgb(251,170,31)" fg:x="561" fg:w="3"/><text x="84.9932%" y="383.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="84.7432%" y="357" width="0.4532%" height="15" fill="rgb(207,110,25)" fg:x="561" fg:w="3"/><text x="84.9932%" y="367.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 1.06%)</title><rect x="84.7432%" y="437" width="1.0574%" height="15" fill="rgb(250,54,15)" fg:x="561" fg:w="7"/><text x="84.9932%" y="447.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 1.06%)</title><rect x="84.7432%" y="421" width="1.0574%" height="15" fill="rgb(227,68,33)" fg:x="561" fg:w="7"/><text x="84.9932%" y="431.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 1.06%)</title><rect x="84.7432%" y="405" width="1.0574%" height="15" fill="rgb(238,34,41)" fg:x="561" fg:w="7"/><text x="84.9932%" y="415.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 1.06%)</title><rect x="84.7432%" y="389" width="1.0574%" height="15" fill="rgb(220,11,15)" fg:x="561" fg:w="7"/><text x="84.9932%" y="399.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.60%)</title><rect x="85.1964%" y="373" width="0.6042%" height="15" fill="rgb(246,111,35)" fg:x="564" fg:w="4"/><text x="85.4464%" y="383.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.60%)</title><rect x="85.1964%" y="357" width="0.6042%" height="15" fill="rgb(209,88,53)" fg:x="564" fg:w="4"/><text x="85.4464%" y="367.50"></text></g><g><title>`0x7FFE2DD2D646 (4 samples, 0.60%)</title><rect x="85.1964%" y="341" width="0.6042%" height="15" fill="rgb(231,185,47)" fg:x="564" fg:w="4"/><text x="85.4464%" y="351.50"></text></g><g><title>`0x7FFE2F1A3BB4 (4 samples, 0.60%)</title><rect x="85.1964%" y="325" width="0.6042%" height="15" fill="rgb(233,154,1)" fg:x="564" fg:w="4"/><text x="85.4464%" y="335.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="85.8006%" y="437" width="0.1511%" height="15" fill="rgb(225,15,46)" fg:x="568" fg:w="1"/><text x="86.0506%" y="447.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="85.8006%" y="421" width="0.1511%" height="15" fill="rgb(211,135,41)" fg:x="568" fg:w="1"/><text x="86.0506%" y="431.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="85.8006%" y="405" width="0.1511%" height="15" fill="rgb(208,54,0)" fg:x="568" fg:w="1"/><text x="86.0506%" y="415.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.15%)</title><rect x="85.8006%" y="389" width="0.1511%" height="15" fill="rgb(244,136,14)" fg:x="568" fg:w="1"/><text x="86.0506%" y="399.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.15%)</title><rect x="85.8006%" y="373" width="0.1511%" height="15" fill="rgb(241,56,14)" fg:x="568" fg:w="1"/><text x="86.0506%" y="383.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.15%)</title><rect x="85.8006%" y="357" width="0.1511%" height="15" fill="rgb(205,80,24)" fg:x="568" fg:w="1"/><text x="86.0506%" y="367.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.15%)</title><rect x="85.8006%" y="341" width="0.1511%" height="15" fill="rgb(220,57,4)" fg:x="568" fg:w="1"/><text x="86.0506%" y="351.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.15%)</title><rect x="85.8006%" y="325" width="0.1511%" height="15" fill="rgb(226,193,50)" fg:x="568" fg:w="1"/><text x="86.0506%" y="335.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="85.8006%" y="309" width="0.1511%" height="15" fill="rgb(231,168,22)" fg:x="568" fg:w="1"/><text x="86.0506%" y="319.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="85.9517%" y="405" width="0.1511%" height="15" fill="rgb(254,215,14)" fg:x="569" fg:w="1"/><text x="86.2017%" y="415.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.15%)</title><rect x="85.9517%" y="389" width="0.1511%" height="15" fill="rgb(211,115,16)" fg:x="569" fg:w="1"/><text x="86.2017%" y="399.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="85.9517%" y="373" width="0.1511%" height="15" fill="rgb(236,210,16)" fg:x="569" fg:w="1"/><text x="86.2017%" y="383.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="85.9517%" y="357" width="0.1511%" height="15" fill="rgb(221,94,12)" fg:x="569" fg:w="1"/><text x="86.2017%" y="367.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="85.9517%" y="341" width="0.1511%" height="15" fill="rgb(235,218,49)" fg:x="569" fg:w="1"/><text x="86.2017%" y="351.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="85.9517%" y="325" width="0.1511%" height="15" fill="rgb(217,114,14)" fg:x="569" fg:w="1"/><text x="86.2017%" y="335.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="85.9517%" y="309" width="0.1511%" height="15" fill="rgb(216,145,22)" fg:x="569" fg:w="1"/><text x="86.2017%" y="319.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="85.9517%" y="293" width="0.1511%" height="15" fill="rgb(217,112,39)" fg:x="569" fg:w="1"/><text x="86.2017%" y="303.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (36 samples, 5.44%)</title><rect x="80.9668%" y="1061" width="5.4381%" height="15" fill="rgb(225,85,32)" fg:x="536" fg:w="36"/><text x="81.2168%" y="1071.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (36 samples, 5.44%)</title><rect x="80.9668%" y="1045" width="5.4381%" height="15" fill="rgb(245,209,47)" fg:x="536" fg:w="36"/><text x="81.2168%" y="1055.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (36 samples, 5.44%)</title><rect x="80.9668%" y="1029" width="5.4381%" height="15" fill="rgb(218,220,15)" fg:x="536" fg:w="36"/><text x="81.2168%" y="1039.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (36 samples, 5.44%)</title><rect x="80.9668%" y="1013" width="5.4381%" height="15" fill="rgb(222,202,31)" fg:x="536" fg:w="36"/><text x="81.2168%" y="1023.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (36 samples, 5.44%)</title><rect x="80.9668%" y="997" width="5.4381%" height="15" fill="rgb(243,203,4)" fg:x="536" fg:w="36"/><text x="81.2168%" y="1007.50">fuzzit...</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="80.9668%" y="981" width="5.4381%" height="15" fill="rgb(237,92,17)" fg:x="536" fg:w="36"/><text x="81.2168%" y="991.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="80.9668%" y="965" width="5.4381%" height="15" fill="rgb(231,119,7)" fg:x="536" fg:w="36"/><text x="81.2168%" y="975.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="80.9668%" y="949" width="5.4381%" height="15" fill="rgb(237,82,41)" fg:x="536" fg:w="36"/><text x="81.2168%" y="959.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="80.9668%" y="933" width="5.4381%" height="15" fill="rgb(226,81,48)" fg:x="536" fg:w="36"/><text x="81.2168%" y="943.50">fuzzit...</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (36 samples, 5.44%)</title><rect x="80.9668%" y="917" width="5.4381%" height="15" fill="rgb(234,70,51)" fg:x="536" fg:w="36"/><text x="81.2168%" y="927.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (36 samples, 5.44%)</title><rect x="80.9668%" y="901" width="5.4381%" height="15" fill="rgb(251,86,4)" fg:x="536" fg:w="36"/><text x="81.2168%" y="911.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (36 samples, 5.44%)</title><rect x="80.9668%" y="885" width="5.4381%" height="15" fill="rgb(244,144,28)" fg:x="536" fg:w="36"/><text x="81.2168%" y="895.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (36 samples, 5.44%)</title><rect x="80.9668%" y="869" width="5.4381%" height="15" fill="rgb(232,161,39)" fg:x="536" fg:w="36"/><text x="81.2168%" y="879.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.78%)</title><rect x="82.6284%" y="853" width="3.7764%" height="15" fill="rgb(247,34,51)" fg:x="547" fg:w="25"/><text x="82.8784%" y="863.50">fuzz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.78%)</title><rect x="82.6284%" y="837" width="3.7764%" height="15" fill="rgb(225,132,2)" fg:x="547" fg:w="25"/><text x="82.8784%" y="847.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.78%)</title><rect x="82.6284%" y="821" width="3.7764%" height="15" fill="rgb(209,159,44)" fg:x="547" fg:w="25"/><text x="82.8784%" y="831.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (25 samples, 3.78%)</title><rect x="82.6284%" y="805" width="3.7764%" height="15" fill="rgb(251,214,1)" fg:x="547" fg:w="25"/><text x="82.8784%" y="815.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.78%)</title><rect x="82.6284%" y="789" width="3.7764%" height="15" fill="rgb(247,84,47)" fg:x="547" fg:w="25"/><text x="82.8784%" y="799.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (25 samples, 3.78%)</title><rect x="82.6284%" y="773" width="3.7764%" height="15" fill="rgb(240,111,43)" fg:x="547" fg:w="25"/><text x="82.8784%" y="783.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (25 samples, 3.78%)</title><rect x="82.6284%" y="757" width="3.7764%" height="15" fill="rgb(215,214,35)" fg:x="547" fg:w="25"/><text x="82.8784%" y="767.50">fuzz..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (25 samples, 3.78%)</title><rect x="82.6284%" y="741" width="3.7764%" height="15" fill="rgb(248,207,23)" fg:x="547" fg:w="25"/><text x="82.8784%" y="751.50">fuzz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (25 samples, 3.78%)</title><rect x="82.6284%" y="725" width="3.7764%" height="15" fill="rgb(214,186,4)" fg:x="547" fg:w="25"/><text x="82.8784%" y="735.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (25 samples, 3.78%)</title><rect x="82.6284%" y="709" width="3.7764%" height="15" fill="rgb(220,133,22)" fg:x="547" fg:w="25"/><text x="82.8784%" y="719.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (25 samples, 3.78%)</title><rect x="82.6284%" y="693" width="3.7764%" height="15" fill="rgb(239,134,19)" fg:x="547" fg:w="25"/><text x="82.8784%" y="703.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="84.5921%" y="677" width="1.8127%" height="15" fill="rgb(250,140,9)" fg:x="560" fg:w="12"/><text x="84.8421%" y="687.50">f..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="84.5921%" y="661" width="1.8127%" height="15" fill="rgb(225,59,14)" fg:x="560" fg:w="12"/><text x="84.8421%" y="671.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="84.5921%" y="645" width="1.8127%" height="15" fill="rgb(214,152,51)" fg:x="560" fg:w="12"/><text x="84.8421%" y="655.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.81%)</title><rect x="84.5921%" y="629" width="1.8127%" height="15" fill="rgb(251,227,43)" fg:x="560" fg:w="12"/><text x="84.8421%" y="639.50">f..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="84.5921%" y="613" width="1.8127%" height="15" fill="rgb(241,96,17)" fg:x="560" fg:w="12"/><text x="84.8421%" y="623.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="84.5921%" y="597" width="1.8127%" height="15" fill="rgb(234,198,43)" fg:x="560" fg:w="12"/><text x="84.8421%" y="607.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="84.5921%" y="581" width="1.8127%" height="15" fill="rgb(220,108,29)" fg:x="560" fg:w="12"/><text x="84.8421%" y="591.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (12 samples, 1.81%)</title><rect x="84.5921%" y="565" width="1.8127%" height="15" fill="rgb(226,163,33)" fg:x="560" fg:w="12"/><text x="84.8421%" y="575.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="84.5921%" y="549" width="1.8127%" height="15" fill="rgb(205,194,45)" fg:x="560" fg:w="12"/><text x="84.8421%" y="559.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.81%)</title><rect x="84.5921%" y="533" width="1.8127%" height="15" fill="rgb(206,143,44)" fg:x="560" fg:w="12"/><text x="84.8421%" y="543.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="84.5921%" y="517" width="1.8127%" height="15" fill="rgb(236,136,36)" fg:x="560" fg:w="12"/><text x="84.8421%" y="527.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.81%)</title><rect x="84.5921%" y="501" width="1.8127%" height="15" fill="rgb(249,172,42)" fg:x="560" fg:w="12"/><text x="84.8421%" y="511.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.81%)</title><rect x="84.5921%" y="485" width="1.8127%" height="15" fill="rgb(216,139,23)" fg:x="560" fg:w="12"/><text x="84.8421%" y="495.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.66%)</title><rect x="84.7432%" y="469" width="1.6616%" height="15" fill="rgb(207,166,20)" fg:x="561" fg:w="11"/><text x="84.9932%" y="479.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.66%)</title><rect x="84.7432%" y="453" width="1.6616%" height="15" fill="rgb(210,209,22)" fg:x="561" fg:w="11"/><text x="84.9932%" y="463.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="85.9517%" y="437" width="0.4532%" height="15" fill="rgb(232,118,20)" fg:x="569" fg:w="3"/><text x="86.2017%" y="447.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="85.9517%" y="421" width="0.4532%" height="15" fill="rgb(238,113,42)" fg:x="569" fg:w="3"/><text x="86.2017%" y="431.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="86.1027%" y="405" width="0.3021%" height="15" fill="rgb(231,42,5)" fg:x="570" fg:w="2"/><text x="86.3527%" y="415.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="86.1027%" y="389" width="0.3021%" height="15" fill="rgb(243,166,24)" fg:x="570" fg:w="2"/><text x="86.3527%" y="399.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="86.1027%" y="373" width="0.3021%" height="15" fill="rgb(237,226,12)" fg:x="570" fg:w="2"/><text x="86.3527%" y="383.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="86.1027%" y="357" width="0.3021%" height="15" fill="rgb(229,133,24)" fg:x="570" fg:w="2"/><text x="86.3527%" y="367.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.30%)</title><rect x="86.1027%" y="341" width="0.3021%" height="15" fill="rgb(238,33,43)" fg:x="570" fg:w="2"/><text x="86.3527%" y="351.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.30%)</title><rect x="86.1027%" y="325" width="0.3021%" height="15" fill="rgb(227,59,38)" fg:x="570" fg:w="2"/><text x="86.3527%" y="335.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.15%)</title><rect x="86.4048%" y="853" width="0.1511%" height="15" fill="rgb(230,97,0)" fg:x="572" fg:w="1"/><text x="86.6548%" y="863.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.15%)</title><rect x="86.4048%" y="837" width="0.1511%" height="15" fill="rgb(250,173,50)" fg:x="572" fg:w="1"/><text x="86.6548%" y="847.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (1 samples, 0.15%)</title><rect x="86.4048%" y="821" width="0.1511%" height="15" fill="rgb(240,15,50)" fg:x="572" fg:w="1"/><text x="86.6548%" y="831.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::read_overlapped (1 samples, 0.15%)</title><rect x="86.4048%" y="805" width="0.1511%" height="15" fill="rgb(221,93,22)" fg:x="572" fg:w="1"/><text x="86.6548%" y="815.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.15%)</title><rect x="86.4048%" y="789" width="0.1511%" height="15" fill="rgb(245,180,53)" fg:x="572" fg:w="1"/><text x="86.6548%" y="799.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.15%)</title><rect x="86.4048%" y="773" width="0.1511%" height="15" fill="rgb(231,88,51)" fg:x="572" fg:w="1"/><text x="86.6548%" y="783.50"></text></g><g><title>`0x7FFE2C7FF67A (1 samples, 0.15%)</title><rect x="86.4048%" y="757" width="0.1511%" height="15" fill="rgb(240,58,21)" fg:x="572" fg:w="1"/><text x="86.6548%" y="767.50"></text></g><g><title>`0x7FFE2F1A32F4 (1 samples, 0.15%)</title><rect x="86.4048%" y="741" width="0.1511%" height="15" fill="rgb(237,21,10)" fg:x="572" fg:w="1"/><text x="86.6548%" y="751.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="86.5559%" y="821" width="0.3021%" height="15" fill="rgb(218,43,11)" fg:x="573" fg:w="2"/><text x="86.8059%" y="831.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="86.5559%" y="805" width="0.3021%" height="15" fill="rgb(218,221,29)" fg:x="573" fg:w="2"/><text x="86.8059%" y="815.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$25::drop (2 samples, 0.30%)</title><rect x="86.5559%" y="789" width="0.3021%" height="15" fill="rgb(214,118,42)" fg:x="573" fg:w="2"/><text x="86.8059%" y="799.50"></text></g><g><title>`0x7FFE2C8031A9 (2 samples, 0.30%)</title><rect x="86.5559%" y="773" width="0.3021%" height="15" fill="rgb(251,200,26)" fg:x="573" fg:w="2"/><text x="86.8059%" y="783.50"></text></g><g><title>`0x7FFE2F1A3414 (2 samples, 0.30%)</title><rect x="86.5559%" y="757" width="0.3021%" height="15" fill="rgb(237,101,39)" fg:x="573" fg:w="2"/><text x="86.8059%" y="767.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.15%)</title><rect x="86.8580%" y="789" width="0.1511%" height="15" fill="rgb(251,117,11)" fg:x="575" fg:w="1"/><text x="87.1080%" y="799.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="86.8580%" y="773" width="0.1511%" height="15" fill="rgb(216,223,23)" fg:x="575" fg:w="1"/><text x="87.1080%" y="783.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="86.8580%" y="757" width="0.1511%" height="15" fill="rgb(251,54,12)" fg:x="575" fg:w="1"/><text x="87.1080%" y="767.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.15%)</title><rect x="86.8580%" y="741" width="0.1511%" height="15" fill="rgb(254,176,54)" fg:x="575" fg:w="1"/><text x="87.1080%" y="751.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.15%)</title><rect x="86.8580%" y="725" width="0.1511%" height="15" fill="rgb(210,32,8)" fg:x="575" fg:w="1"/><text x="87.1080%" y="735.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.15%)</title><rect x="86.8580%" y="709" width="0.1511%" height="15" fill="rgb(235,52,38)" fg:x="575" fg:w="1"/><text x="87.1080%" y="719.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.15%)</title><rect x="86.8580%" y="693" width="0.1511%" height="15" fill="rgb(231,4,44)" fg:x="575" fg:w="1"/><text x="87.1080%" y="703.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.15%)</title><rect x="86.8580%" y="677" width="0.1511%" height="15" fill="rgb(249,2,32)" fg:x="575" fg:w="1"/><text x="87.1080%" y="687.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.15%)</title><rect x="86.8580%" y="661" width="0.1511%" height="15" fill="rgb(224,65,26)" fg:x="575" fg:w="1"/><text x="87.1080%" y="671.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.15%)</title><rect x="86.8580%" y="645" width="0.1511%" height="15" fill="rgb(250,73,40)" fg:x="575" fg:w="1"/><text x="87.1080%" y="655.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.15%)</title><rect x="86.8580%" y="629" width="0.1511%" height="15" fill="rgb(253,177,16)" fg:x="575" fg:w="1"/><text x="87.1080%" y="639.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.15%)</title><rect x="86.8580%" y="613" width="0.1511%" height="15" fill="rgb(217,32,34)" fg:x="575" fg:w="1"/><text x="87.1080%" y="623.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (2 samples, 0.30%)</title><rect x="86.8580%" y="821" width="0.3021%" height="15" fill="rgb(212,7,10)" fg:x="575" fg:w="2"/><text x="87.1080%" y="831.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (2 samples, 0.30%)</title><rect x="86.8580%" y="805" width="0.3021%" height="15" fill="rgb(245,89,8)" fg:x="575" fg:w="2"/><text x="87.1080%" y="815.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="87.0091%" y="789" width="0.1511%" height="15" fill="rgb(237,16,53)" fg:x="576" fg:w="1"/><text x="87.2591%" y="799.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.15%)</title><rect x="87.0091%" y="773" width="0.1511%" height="15" fill="rgb(250,204,30)" fg:x="576" fg:w="1"/><text x="87.2591%" y="783.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.15%)</title><rect x="87.0091%" y="757" width="0.1511%" height="15" fill="rgb(208,77,27)" fg:x="576" fg:w="1"/><text x="87.2591%" y="767.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.15%)</title><rect x="87.1601%" y="757" width="0.1511%" height="15" fill="rgb(250,204,28)" fg:x="577" fg:w="1"/><text x="87.4101%" y="767.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="87.1601%" y="741" width="0.1511%" height="15" fill="rgb(244,63,21)" fg:x="577" fg:w="1"/><text x="87.4101%" y="751.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="87.1601%" y="725" width="0.1511%" height="15" fill="rgb(236,85,44)" fg:x="577" fg:w="1"/><text x="87.4101%" y="735.50"></text></g><g><title>`0x7FFE2C877649 (1 samples, 0.15%)</title><rect x="87.3112%" y="757" width="0.1511%" height="15" fill="rgb(215,98,4)" fg:x="578" fg:w="1"/><text x="87.5612%" y="767.50"></text></g><g><title>`0x7FFE2C8776C5 (11 samples, 1.66%)</title><rect x="87.4622%" y="757" width="1.6616%" height="15" fill="rgb(235,38,11)" fg:x="579" fg:w="11"/><text x="87.7122%" y="767.50"></text></g><g><title>`0x7FFE2F1A4C44 (11 samples, 1.66%)</title><rect x="87.4622%" y="741" width="1.6616%" height="15" fill="rgb(254,186,25)" fg:x="579" fg:w="11"/><text x="87.7122%" y="751.50"></text></g><g><title>`0x7FFE2DD2D5B5 (1 samples, 0.15%)</title><rect x="89.1239%" y="725" width="0.1511%" height="15" fill="rgb(225,55,31)" fg:x="590" fg:w="1"/><text x="89.3739%" y="735.50"></text></g><g><title>`0x7FFE2DD2E2FE (1 samples, 0.15%)</title><rect x="89.1239%" y="709" width="0.1511%" height="15" fill="rgb(211,15,21)" fg:x="590" fg:w="1"/><text x="89.3739%" y="719.50"></text></g><g><title>`0x7FFE2C7FDD0F (1 samples, 0.15%)</title><rect x="89.1239%" y="693" width="0.1511%" height="15" fill="rgb(215,187,41)" fg:x="590" fg:w="1"/><text x="89.3739%" y="703.50"></text></g><g><title>`0x7FFE2F054FB0 (1 samples, 0.15%)</title><rect x="89.1239%" y="677" width="0.1511%" height="15" fill="rgb(248,69,32)" fg:x="590" fg:w="1"/><text x="89.3739%" y="687.50"></text></g><g><title>`0x7FFE2F08A190 (1 samples, 0.15%)</title><rect x="89.1239%" y="661" width="0.1511%" height="15" fill="rgb(252,102,52)" fg:x="590" fg:w="1"/><text x="89.3739%" y="671.50"></text></g><g><title>`0x7FFE2F08A384 (1 samples, 0.15%)</title><rect x="89.1239%" y="645" width="0.1511%" height="15" fill="rgb(253,140,32)" fg:x="590" fg:w="1"/><text x="89.3739%" y="655.50"></text></g><g><title>`0x7FFE2F0BB438 (1 samples, 0.15%)</title><rect x="89.1239%" y="629" width="0.1511%" height="15" fill="rgb(216,56,42)" fg:x="590" fg:w="1"/><text x="89.3739%" y="639.50"></text></g><g><title>`0x7FFE2F1A9810 (1 samples, 0.15%)</title><rect x="89.1239%" y="613" width="0.1511%" height="15" fill="rgb(216,184,14)" fg:x="590" fg:w="1"/><text x="89.3739%" y="623.50"></text></g><g><title>`0x7FFE2DD2D5CA (1 samples, 0.15%)</title><rect x="89.2749%" y="725" width="0.1511%" height="15" fill="rgb(237,187,27)" fg:x="591" fg:w="1"/><text x="89.5249%" y="735.50"></text></g><g><title>`0x7FFE2DD2DE5C (1 samples, 0.15%)</title><rect x="89.2749%" y="709" width="0.1511%" height="15" fill="rgb(219,65,3)" fg:x="591" fg:w="1"/><text x="89.5249%" y="719.50"></text></g><g><title>`0x7FFE2DD2E6BD (1 samples, 0.15%)</title><rect x="89.2749%" y="693" width="0.1511%" height="15" fill="rgb(245,83,25)" fg:x="591" fg:w="1"/><text x="89.5249%" y="703.50"></text></g><g><title>`0x7FFE2F09F4BD (1 samples, 0.15%)</title><rect x="89.2749%" y="677" width="0.1511%" height="15" fill="rgb(214,205,45)" fg:x="591" fg:w="1"/><text x="89.5249%" y="687.50"></text></g><g><title>`0x7FFE2F1A3654 (1 samples, 0.15%)</title><rect x="89.2749%" y="661" width="0.1511%" height="15" fill="rgb(241,20,18)" fg:x="591" fg:w="1"/><text x="89.5249%" y="671.50"></text></g><g><title>`0x7FFE2C8787CB (11 samples, 1.66%)</title><rect x="89.1239%" y="757" width="1.6616%" height="15" fill="rgb(232,163,23)" fg:x="590" fg:w="11"/><text x="89.3739%" y="767.50"></text></g><g><title>`0x7FFE2DD2D052 (11 samples, 1.66%)</title><rect x="89.1239%" y="741" width="1.6616%" height="15" fill="rgb(214,5,46)" fg:x="590" fg:w="11"/><text x="89.3739%" y="751.50"></text></g><g><title>`0x7FFE2DD2D646 (9 samples, 1.36%)</title><rect x="89.4260%" y="725" width="1.3595%" height="15" fill="rgb(229,78,17)" fg:x="592" fg:w="9"/><text x="89.6760%" y="735.50"></text></g><g><title>`0x7FFE2F1A3BB4 (9 samples, 1.36%)</title><rect x="89.4260%" y="709" width="1.3595%" height="15" fill="rgb(248,89,10)" fg:x="592" fg:w="9"/><text x="89.6760%" y="719.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (25 samples, 3.78%)</title><rect x="87.1601%" y="821" width="3.7764%" height="15" fill="rgb(248,54,15)" fg:x="577" fg:w="25"/><text x="87.4101%" y="831.50">fuzz..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (25 samples, 3.78%)</title><rect x="87.1601%" y="805" width="3.7764%" height="15" fill="rgb(223,116,6)" fg:x="577" fg:w="25"/><text x="87.4101%" y="815.50">fuzz..</text></g><g><title>`0x7FFE2DD4C6D4 (25 samples, 3.78%)</title><rect x="87.1601%" y="789" width="3.7764%" height="15" fill="rgb(205,125,38)" fg:x="577" fg:w="25"/><text x="87.4101%" y="799.50">`0x7..</text></g><g><title>`0x7FFE2C874E26 (25 samples, 3.78%)</title><rect x="87.1601%" y="773" width="3.7764%" height="15" fill="rgb(251,78,38)" fg:x="577" fg:w="25"/><text x="87.4101%" y="783.50">`0x7..</text></g><g><title>`0x7FFE2C87892F (1 samples, 0.15%)</title><rect x="90.7855%" y="757" width="0.1511%" height="15" fill="rgb(253,78,28)" fg:x="601" fg:w="1"/><text x="91.0355%" y="767.50"></text></g><g><title>`0x7FFE2DD37F15 (1 samples, 0.15%)</title><rect x="90.7855%" y="741" width="0.1511%" height="15" fill="rgb(209,120,3)" fg:x="601" fg:w="1"/><text x="91.0355%" y="751.50"></text></g><g><title>`0x7FFE2DD376F3 (1 samples, 0.15%)</title><rect x="90.7855%" y="725" width="0.1511%" height="15" fill="rgb(238,229,9)" fg:x="601" fg:w="1"/><text x="91.0355%" y="735.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="90.7855%" y="709" width="0.1511%" height="15" fill="rgb(253,159,18)" fg:x="601" fg:w="1"/><text x="91.0355%" y="719.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (1 samples, 0.15%)</title><rect x="90.9366%" y="789" width="0.1511%" height="15" fill="rgb(244,42,34)" fg:x="602" fg:w="1"/><text x="91.1866%" y="799.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (1 samples, 0.15%)</title><rect x="90.9366%" y="773" width="0.1511%" height="15" fill="rgb(224,8,7)" fg:x="602" fg:w="1"/><text x="91.1866%" y="783.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="90.9366%" y="757" width="0.1511%" height="15" fill="rgb(210,201,45)" fg:x="602" fg:w="1"/><text x="91.1866%" y="767.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.15%)</title><rect x="90.9366%" y="741" width="0.1511%" height="15" fill="rgb(252,185,21)" fg:x="602" fg:w="1"/><text x="91.1866%" y="751.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.15%)</title><rect x="90.9366%" y="725" width="0.1511%" height="15" fill="rgb(223,131,1)" fg:x="602" fg:w="1"/><text x="91.1866%" y="735.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.15%)</title><rect x="90.9366%" y="709" width="0.1511%" height="15" fill="rgb(245,141,16)" fg:x="602" fg:w="1"/><text x="91.1866%" y="719.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.15%)</title><rect x="90.9366%" y="693" width="0.1511%" height="15" fill="rgb(229,55,45)" fg:x="602" fg:w="1"/><text x="91.1866%" y="703.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.15%)</title><rect x="90.9366%" y="677" width="0.1511%" height="15" fill="rgb(208,92,15)" fg:x="602" fg:w="1"/><text x="91.1866%" y="687.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.15%)</title><rect x="90.9366%" y="661" width="0.1511%" height="15" fill="rgb(234,185,47)" fg:x="602" fg:w="1"/><text x="91.1866%" y="671.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::append_elements (1 samples, 0.15%)</title><rect x="90.9366%" y="645" width="0.1511%" height="15" fill="rgb(253,104,50)" fg:x="602" fg:w="1"/><text x="91.1866%" y="655.50"></text></g><g><title>`0x7FFE11AF0A57 (1 samples, 0.15%)</title><rect x="90.9366%" y="629" width="0.1511%" height="15" fill="rgb(205,70,7)" fg:x="602" fg:w="1"/><text x="91.1866%" y="639.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (111 samples, 16.77%)</title><rect x="75.8308%" y="1157" width="16.7674%" height="15" fill="rgb(240,178,43)" fg:x="502" fg:w="111"/><text x="76.0808%" y="1167.50">fuzzit.exe`rayon::iter::ma..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (111 samples, 16.77%)</title><rect x="75.8308%" y="1141" width="16.7674%" height="15" fill="rgb(214,112,2)" fg:x="502" fg:w="111"/><text x="76.0808%" y="1151.50">fuzzit.exe`rayon::iter::pl..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (111 samples, 16.77%)</title><rect x="75.8308%" y="1125" width="16.7674%" height="15" fill="rgb(206,46,17)" fg:x="502" fg:w="111"/><text x="76.0808%" y="1135.50">fuzzit.exe`core::ops::func..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (111 samples, 16.77%)</title><rect x="75.8308%" y="1109" width="16.7674%" height="15" fill="rgb(225,220,16)" fg:x="502" fg:w="111"/><text x="76.0808%" y="1119.50">fuzzit.exe`fuzzit::git_dat..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (111 samples, 16.77%)</title><rect x="75.8308%" y="1093" width="16.7674%" height="15" fill="rgb(238,65,40)" fg:x="502" fg:w="111"/><text x="76.0808%" y="1103.50">fuzzit.exe`rayon_core::reg..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (111 samples, 16.77%)</title><rect x="75.8308%" y="1077" width="16.7674%" height="15" fill="rgb(230,151,21)" fg:x="502" fg:w="111"/><text x="76.0808%" y="1087.50">fuzzit.exe`rayon_core::joi..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="86.4048%" y="1061" width="6.1934%" height="15" fill="rgb(218,58,49)" fg:x="572" fg:w="41"/><text x="86.6548%" y="1071.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="86.4048%" y="1045" width="6.1934%" height="15" fill="rgb(219,179,14)" fg:x="572" fg:w="41"/><text x="86.6548%" y="1055.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="86.4048%" y="1029" width="6.1934%" height="15" fill="rgb(223,72,1)" fg:x="572" fg:w="41"/><text x="86.6548%" y="1039.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (41 samples, 6.19%)</title><rect x="86.4048%" y="1013" width="6.1934%" height="15" fill="rgb(238,126,10)" fg:x="572" fg:w="41"/><text x="86.6548%" y="1023.50">fuzzit.e..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="86.4048%" y="997" width="6.1934%" height="15" fill="rgb(224,206,38)" fg:x="572" fg:w="41"/><text x="86.6548%" y="1007.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="86.4048%" y="981" width="6.1934%" height="15" fill="rgb(212,201,54)" fg:x="572" fg:w="41"/><text x="86.6548%" y="991.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (41 samples, 6.19%)</title><rect x="86.4048%" y="965" width="6.1934%" height="15" fill="rgb(218,154,48)" fg:x="572" fg:w="41"/><text x="86.6548%" y="975.50">fuzzit.e..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (41 samples, 6.19%)</title><rect x="86.4048%" y="949" width="6.1934%" height="15" fill="rgb(232,93,24)" fg:x="572" fg:w="41"/><text x="86.6548%" y="959.50">fuzzit.e..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (41 samples, 6.19%)</title><rect x="86.4048%" y="933" width="6.1934%" height="15" fill="rgb(245,30,21)" fg:x="572" fg:w="41"/><text x="86.6548%" y="943.50">fuzzit.e..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (41 samples, 6.19%)</title><rect x="86.4048%" y="917" width="6.1934%" height="15" fill="rgb(242,148,29)" fg:x="572" fg:w="41"/><text x="86.6548%" y="927.50">fuzzit.e..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (41 samples, 6.19%)</title><rect x="86.4048%" y="901" width="6.1934%" height="15" fill="rgb(244,153,54)" fg:x="572" fg:w="41"/><text x="86.6548%" y="911.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::process::Command::output (41 samples, 6.19%)</title><rect x="86.4048%" y="885" width="6.1934%" height="15" fill="rgb(252,87,22)" fg:x="572" fg:w="41"/><text x="86.6548%" y="895.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::output (41 samples, 6.19%)</title><rect x="86.4048%" y="869" width="6.1934%" height="15" fill="rgb(210,51,29)" fg:x="572" fg:w="41"/><text x="86.6548%" y="879.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (40 samples, 6.04%)</title><rect x="86.5559%" y="853" width="6.0423%" height="15" fill="rgb(242,136,47)" fg:x="573" fg:w="40"/><text x="86.8059%" y="863.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (40 samples, 6.04%)</title><rect x="86.5559%" y="837" width="6.0423%" height="15" fill="rgb(238,68,4)" fg:x="573" fg:w="40"/><text x="86.8059%" y="847.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (11 samples, 1.66%)</title><rect x="90.9366%" y="821" width="1.6616%" height="15" fill="rgb(242,161,30)" fg:x="602" fg:w="11"/><text x="91.1866%" y="831.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (11 samples, 1.66%)</title><rect x="90.9366%" y="805" width="1.6616%" height="15" fill="rgb(218,58,44)" fg:x="602" fg:w="11"/><text x="91.1866%" y="815.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (10 samples, 1.51%)</title><rect x="91.0876%" y="789" width="1.5106%" height="15" fill="rgb(252,125,32)" fg:x="603" fg:w="10"/><text x="91.3376%" y="799.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (10 samples, 1.51%)</title><rect x="91.0876%" y="773" width="1.5106%" height="15" fill="rgb(219,178,0)" fg:x="603" fg:w="10"/><text x="91.3376%" y="783.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (10 samples, 1.51%)</title><rect x="91.0876%" y="757" width="1.5106%" height="15" fill="rgb(213,152,7)" fg:x="603" fg:w="10"/><text x="91.3376%" y="767.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (10 samples, 1.51%)</title><rect x="91.0876%" y="741" width="1.5106%" height="15" fill="rgb(249,109,34)" fg:x="603" fg:w="10"/><text x="91.3376%" y="751.50"></text></g><g><title>`0x7FFE2C81DF99 (10 samples, 1.51%)</title><rect x="91.0876%" y="725" width="1.5106%" height="15" fill="rgb(232,96,21)" fg:x="603" fg:w="10"/><text x="91.3376%" y="735.50"></text></g><g><title>`0x7FFE2F1A39D4 (10 samples, 1.51%)</title><rect x="91.0876%" y="709" width="1.5106%" height="15" fill="rgb(228,27,39)" fg:x="603" fg:w="10"/><text x="91.3376%" y="719.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.15%)</title><rect x="92.5982%" y="373" width="0.1511%" height="15" fill="rgb(211,182,52)" fg:x="613" fg:w="1"/><text x="92.8482%" y="383.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.15%)</title><rect x="92.5982%" y="357" width="0.1511%" height="15" fill="rgb(234,178,38)" fg:x="613" fg:w="1"/><text x="92.8482%" y="367.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.15%)</title><rect x="92.5982%" y="341" width="0.1511%" height="15" fill="rgb(221,111,3)" fg:x="613" fg:w="1"/><text x="92.8482%" y="351.50"></text></g><g><title>`0x7FFE2C7FF233 (1 samples, 0.15%)</title><rect x="92.5982%" y="325" width="0.1511%" height="15" fill="rgb(228,175,21)" fg:x="613" fg:w="1"/><text x="92.8482%" y="335.50"></text></g><g><title>`0x7FFE2F1A3D84 (1 samples, 0.15%)</title><rect x="92.5982%" y="309" width="0.1511%" height="15" fill="rgb(228,174,43)" fg:x="613" fg:w="1"/><text x="92.8482%" y="319.50"></text></g><g><title>`0x7FFE2DD4C683 (1 samples, 0.15%)</title><rect x="92.7492%" y="309" width="0.1511%" height="15" fill="rgb(211,191,0)" fg:x="614" fg:w="1"/><text x="92.9992%" y="319.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="92.9003%" y="277" width="0.4532%" height="15" fill="rgb(253,117,3)" fg:x="615" fg:w="3"/><text x="93.1503%" y="287.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="92.9003%" y="261" width="0.4532%" height="15" fill="rgb(241,127,19)" fg:x="615" fg:w="3"/><text x="93.1503%" y="271.50"></text></g><g><title>`0x7FFE2DD2D5FB (1 samples, 0.15%)</title><rect x="93.3535%" y="245" width="0.1511%" height="15" fill="rgb(218,103,12)" fg:x="618" fg:w="1"/><text x="93.6035%" y="255.50"></text></g><g><title>`0x7FFE2DD2E4E1 (1 samples, 0.15%)</title><rect x="93.3535%" y="229" width="0.1511%" height="15" fill="rgb(236,214,43)" fg:x="618" fg:w="1"/><text x="93.6035%" y="239.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="93.3535%" y="213" width="0.1511%" height="15" fill="rgb(244,144,19)" fg:x="618" fg:w="1"/><text x="93.6035%" y="223.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.21%)</title><rect x="92.7492%" y="341" width="1.2085%" height="15" fill="rgb(246,188,10)" fg:x="614" fg:w="8"/><text x="92.9992%" y="351.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.21%)</title><rect x="92.7492%" y="325" width="1.2085%" height="15" fill="rgb(212,193,33)" fg:x="614" fg:w="8"/><text x="92.9992%" y="335.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 1.06%)</title><rect x="92.9003%" y="309" width="1.0574%" height="15" fill="rgb(241,51,29)" fg:x="615" fg:w="7"/><text x="93.1503%" y="319.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 1.06%)</title><rect x="92.9003%" y="293" width="1.0574%" height="15" fill="rgb(211,58,19)" fg:x="615" fg:w="7"/><text x="93.1503%" y="303.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.60%)</title><rect x="93.3535%" y="277" width="0.6042%" height="15" fill="rgb(229,111,26)" fg:x="618" fg:w="4"/><text x="93.6035%" y="287.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.60%)</title><rect x="93.3535%" y="261" width="0.6042%" height="15" fill="rgb(213,115,40)" fg:x="618" fg:w="4"/><text x="93.6035%" y="271.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="93.5045%" y="245" width="0.4532%" height="15" fill="rgb(209,56,44)" fg:x="619" fg:w="3"/><text x="93.7545%" y="255.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="93.5045%" y="229" width="0.4532%" height="15" fill="rgb(230,108,32)" fg:x="619" fg:w="3"/><text x="93.7545%" y="239.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.81%)</title><rect x="92.5982%" y="741" width="1.8127%" height="15" fill="rgb(216,165,31)" fg:x="613" fg:w="12"/><text x="92.8482%" y="751.50">f..</text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.81%)</title><rect x="92.5982%" y="725" width="1.8127%" height="15" fill="rgb(218,122,21)" fg:x="613" fg:w="12"/><text x="92.8482%" y="735.50">f..</text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.81%)</title><rect x="92.5982%" y="709" width="1.8127%" height="15" fill="rgb(223,224,47)" fg:x="613" fg:w="12"/><text x="92.8482%" y="719.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.81%)</title><rect x="92.5982%" y="693" width="1.8127%" height="15" fill="rgb(238,102,44)" fg:x="613" fg:w="12"/><text x="92.8482%" y="703.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.81%)</title><rect x="92.5982%" y="677" width="1.8127%" height="15" fill="rgb(236,46,40)" fg:x="613" fg:w="12"/><text x="92.8482%" y="687.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (12 samples, 1.81%)</title><rect x="92.5982%" y="661" width="1.8127%" height="15" fill="rgb(247,202,50)" fg:x="613" fg:w="12"/><text x="92.8482%" y="671.50">f..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (12 samples, 1.81%)</title><rect x="92.5982%" y="645" width="1.8127%" height="15" fill="rgb(209,99,20)" fg:x="613" fg:w="12"/><text x="92.8482%" y="655.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="629" width="1.8127%" height="15" fill="rgb(252,27,34)" fg:x="613" fg:w="12"/><text x="92.8482%" y="639.50">f..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="613" width="1.8127%" height="15" fill="rgb(215,206,23)" fg:x="613" fg:w="12"/><text x="92.8482%" y="623.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="597" width="1.8127%" height="15" fill="rgb(212,135,36)" fg:x="613" fg:w="12"/><text x="92.8482%" y="607.50">f..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="581" width="1.8127%" height="15" fill="rgb(240,189,1)" fg:x="613" fg:w="12"/><text x="92.8482%" y="591.50">f..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="565" width="1.8127%" height="15" fill="rgb(242,56,20)" fg:x="613" fg:w="12"/><text x="92.8482%" y="575.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="549" width="1.8127%" height="15" fill="rgb(247,132,33)" fg:x="613" fg:w="12"/><text x="92.8482%" y="559.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.81%)</title><rect x="92.5982%" y="533" width="1.8127%" height="15" fill="rgb(208,149,11)" fg:x="613" fg:w="12"/><text x="92.8482%" y="543.50">f..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="517" width="1.8127%" height="15" fill="rgb(211,33,11)" fg:x="613" fg:w="12"/><text x="92.8482%" y="527.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="501" width="1.8127%" height="15" fill="rgb(221,29,38)" fg:x="613" fg:w="12"/><text x="92.8482%" y="511.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="485" width="1.8127%" height="15" fill="rgb(206,182,49)" fg:x="613" fg:w="12"/><text x="92.8482%" y="495.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (12 samples, 1.81%)</title><rect x="92.5982%" y="469" width="1.8127%" height="15" fill="rgb(216,140,1)" fg:x="613" fg:w="12"/><text x="92.8482%" y="479.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="92.5982%" y="453" width="1.8127%" height="15" fill="rgb(232,57,40)" fg:x="613" fg:w="12"/><text x="92.8482%" y="463.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.81%)</title><rect x="92.5982%" y="437" width="1.8127%" height="15" fill="rgb(224,186,18)" fg:x="613" fg:w="12"/><text x="92.8482%" y="447.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="92.5982%" y="421" width="1.8127%" height="15" fill="rgb(215,121,11)" fg:x="613" fg:w="12"/><text x="92.8482%" y="431.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.81%)</title><rect x="92.5982%" y="405" width="1.8127%" height="15" fill="rgb(245,147,10)" fg:x="613" fg:w="12"/><text x="92.8482%" y="415.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.81%)</title><rect x="92.5982%" y="389" width="1.8127%" height="15" fill="rgb(238,153,13)" fg:x="613" fg:w="12"/><text x="92.8482%" y="399.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.66%)</title><rect x="92.7492%" y="373" width="1.6616%" height="15" fill="rgb(233,108,0)" fg:x="614" fg:w="11"/><text x="92.9992%" y="383.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.66%)</title><rect x="92.7492%" y="357" width="1.6616%" height="15" fill="rgb(212,157,17)" fg:x="614" fg:w="11"/><text x="92.9992%" y="367.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="93.9577%" y="341" width="0.4532%" height="15" fill="rgb(225,213,38)" fg:x="622" fg:w="3"/><text x="94.2077%" y="351.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="93.9577%" y="325" width="0.4532%" height="15" fill="rgb(248,16,11)" fg:x="622" fg:w="3"/><text x="94.2077%" y="335.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (3 samples, 0.45%)</title><rect x="93.9577%" y="309" width="0.4532%" height="15" fill="rgb(241,33,4)" fg:x="622" fg:w="3"/><text x="94.2077%" y="319.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="93.9577%" y="293" width="0.4532%" height="15" fill="rgb(222,26,43)" fg:x="622" fg:w="3"/><text x="94.2077%" y="303.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.45%)</title><rect x="93.9577%" y="277" width="0.4532%" height="15" fill="rgb(243,29,36)" fg:x="622" fg:w="3"/><text x="94.2077%" y="287.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (3 samples, 0.45%)</title><rect x="93.9577%" y="261" width="0.4532%" height="15" fill="rgb(241,9,27)" fg:x="622" fg:w="3"/><text x="94.2077%" y="271.50"></text></g><g><title>`0x7FFE2C81DF99 (3 samples, 0.45%)</title><rect x="93.9577%" y="245" width="0.4532%" height="15" fill="rgb(205,117,26)" fg:x="622" fg:w="3"/><text x="94.2077%" y="255.50"></text></g><g><title>`0x7FFE2F1A39D4 (3 samples, 0.45%)</title><rect x="93.9577%" y="229" width="0.4532%" height="15" fill="rgb(209,80,39)" fg:x="622" fg:w="3"/><text x="94.2077%" y="239.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="94.4109%" y="389" width="0.1511%" height="15" fill="rgb(239,155,6)" fg:x="625" fg:w="1"/><text x="94.6609%" y="399.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="94.4109%" y="373" width="0.1511%" height="15" fill="rgb(212,104,12)" fg:x="625" fg:w="1"/><text x="94.6609%" y="383.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="94.4109%" y="357" width="0.1511%" height="15" fill="rgb(234,204,3)" fg:x="625" fg:w="1"/><text x="94.6609%" y="367.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.15%)</title><rect x="94.4109%" y="341" width="0.1511%" height="15" fill="rgb(251,218,7)" fg:x="625" fg:w="1"/><text x="94.6609%" y="351.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.15%)</title><rect x="94.4109%" y="325" width="0.1511%" height="15" fill="rgb(221,81,32)" fg:x="625" fg:w="1"/><text x="94.6609%" y="335.50"></text></g><g><title>`0x7FFE2C8776C5 (4 samples, 0.60%)</title><rect x="94.5619%" y="325" width="0.6042%" height="15" fill="rgb(214,152,26)" fg:x="626" fg:w="4"/><text x="94.8119%" y="335.50"></text></g><g><title>`0x7FFE2F1A4C44 (4 samples, 0.60%)</title><rect x="94.5619%" y="309" width="0.6042%" height="15" fill="rgb(223,22,3)" fg:x="626" fg:w="4"/><text x="94.8119%" y="319.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 1.06%)</title><rect x="94.5619%" y="389" width="1.0574%" height="15" fill="rgb(207,174,7)" fg:x="626" fg:w="7"/><text x="94.8119%" y="399.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 1.06%)</title><rect x="94.5619%" y="373" width="1.0574%" height="15" fill="rgb(224,19,52)" fg:x="626" fg:w="7"/><text x="94.8119%" y="383.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 1.06%)</title><rect x="94.5619%" y="357" width="1.0574%" height="15" fill="rgb(228,24,14)" fg:x="626" fg:w="7"/><text x="94.8119%" y="367.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 1.06%)</title><rect x="94.5619%" y="341" width="1.0574%" height="15" fill="rgb(230,153,43)" fg:x="626" fg:w="7"/><text x="94.8119%" y="351.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.45%)</title><rect x="95.1662%" y="325" width="0.4532%" height="15" fill="rgb(231,106,12)" fg:x="630" fg:w="3"/><text x="95.4162%" y="335.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.45%)</title><rect x="95.1662%" y="309" width="0.4532%" height="15" fill="rgb(215,92,2)" fg:x="630" fg:w="3"/><text x="95.4162%" y="319.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="95.1662%" y="293" width="0.4532%" height="15" fill="rgb(249,143,25)" fg:x="630" fg:w="3"/><text x="95.4162%" y="303.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="95.1662%" y="277" width="0.4532%" height="15" fill="rgb(252,7,35)" fg:x="630" fg:w="3"/><text x="95.4162%" y="287.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.15%)</title><rect x="95.6193%" y="357" width="0.1511%" height="15" fill="rgb(216,69,40)" fg:x="633" fg:w="1"/><text x="95.8693%" y="367.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.15%)</title><rect x="95.6193%" y="341" width="0.1511%" height="15" fill="rgb(240,36,33)" fg:x="633" fg:w="1"/><text x="95.8693%" y="351.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.15%)</title><rect x="95.6193%" y="325" width="0.1511%" height="15" fill="rgb(231,128,14)" fg:x="633" fg:w="1"/><text x="95.8693%" y="335.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (1 samples, 0.15%)</title><rect x="95.6193%" y="309" width="0.1511%" height="15" fill="rgb(245,143,14)" fg:x="633" fg:w="1"/><text x="95.8693%" y="319.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.15%)</title><rect x="95.6193%" y="293" width="0.1511%" height="15" fill="rgb(222,130,28)" fg:x="633" fg:w="1"/><text x="95.8693%" y="303.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.15%)</title><rect x="95.6193%" y="277" width="0.1511%" height="15" fill="rgb(212,10,48)" fg:x="633" fg:w="1"/><text x="95.8693%" y="287.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.15%)</title><rect x="95.6193%" y="261" width="0.1511%" height="15" fill="rgb(254,118,45)" fg:x="633" fg:w="1"/><text x="95.8693%" y="271.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.15%)</title><rect x="95.6193%" y="245" width="0.1511%" height="15" fill="rgb(228,6,45)" fg:x="633" fg:w="1"/><text x="95.8693%" y="255.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.15%)</title><rect x="95.6193%" y="229" width="0.1511%" height="15" fill="rgb(241,18,35)" fg:x="633" fg:w="1"/><text x="95.8693%" y="239.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="95.6193%" y="213" width="0.1511%" height="15" fill="rgb(227,214,53)" fg:x="633" fg:w="1"/><text x="95.8693%" y="223.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.15%)</title><rect x="95.6193%" y="197" width="0.1511%" height="15" fill="rgb(224,107,51)" fg:x="633" fg:w="1"/><text x="95.8693%" y="207.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="95.6193%" y="181" width="0.1511%" height="15" fill="rgb(248,60,28)" fg:x="633" fg:w="1"/><text x="95.8693%" y="191.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="95.6193%" y="165" width="0.1511%" height="15" fill="rgb(249,101,23)" fg:x="633" fg:w="1"/><text x="95.8693%" y="175.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="95.6193%" y="149" width="0.1511%" height="15" fill="rgb(228,51,19)" fg:x="633" fg:w="1"/><text x="95.8693%" y="159.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.15%)</title><rect x="95.6193%" y="133" width="0.1511%" height="15" fill="rgb(213,20,6)" fg:x="633" fg:w="1"/><text x="95.8693%" y="143.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.15%)</title><rect x="95.6193%" y="117" width="0.1511%" height="15" fill="rgb(212,124,10)" fg:x="633" fg:w="1"/><text x="95.8693%" y="127.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="95.6193%" y="101" width="0.1511%" height="15" fill="rgb(248,3,40)" fg:x="633" fg:w="1"/><text x="95.8693%" y="111.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="95.6193%" y="85" width="0.1511%" height="15" fill="rgb(223,178,23)" fg:x="633" fg:w="1"/><text x="95.8693%" y="95.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.15%)</title><rect x="95.6193%" y="69" width="0.1511%" height="15" fill="rgb(240,132,45)" fg:x="633" fg:w="1"/><text x="95.8693%" y="79.50"></text></g><g><title>`0x7FFE2F091870 (1 samples, 0.15%)</title><rect x="95.6193%" y="53" width="0.1511%" height="15" fill="rgb(245,164,36)" fg:x="633" fg:w="1"/><text x="95.8693%" y="63.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="95.7704%" y="357" width="0.1511%" height="15" fill="rgb(231,188,53)" fg:x="634" fg:w="1"/><text x="96.0204%" y="367.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.15%)</title><rect x="95.7704%" y="341" width="0.1511%" height="15" fill="rgb(237,198,39)" fg:x="634" fg:w="1"/><text x="96.0204%" y="351.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="95.7704%" y="325" width="0.1511%" height="15" fill="rgb(223,120,35)" fg:x="634" fg:w="1"/><text x="96.0204%" y="335.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="95.7704%" y="309" width="0.1511%" height="15" fill="rgb(253,107,49)" fg:x="634" fg:w="1"/><text x="96.0204%" y="319.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="95.7704%" y="293" width="0.1511%" height="15" fill="rgb(216,44,31)" fg:x="634" fg:w="1"/><text x="96.0204%" y="303.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="95.7704%" y="277" width="0.1511%" height="15" fill="rgb(253,87,21)" fg:x="634" fg:w="1"/><text x="96.0204%" y="287.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="95.7704%" y="261" width="0.1511%" height="15" fill="rgb(226,18,2)" fg:x="634" fg:w="1"/><text x="96.0204%" y="271.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="95.7704%" y="245" width="0.1511%" height="15" fill="rgb(216,8,46)" fg:x="634" fg:w="1"/><text x="96.0204%" y="255.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="94.4109%" y="565" width="1.6616%" height="15" fill="rgb(226,140,39)" fg:x="625" fg:w="11"/><text x="94.6609%" y="575.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="94.4109%" y="549" width="1.6616%" height="15" fill="rgb(221,194,54)" fg:x="625" fg:w="11"/><text x="94.6609%" y="559.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (11 samples, 1.66%)</title><rect x="94.4109%" y="533" width="1.6616%" height="15" fill="rgb(213,92,11)" fg:x="625" fg:w="11"/><text x="94.6609%" y="543.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (11 samples, 1.66%)</title><rect x="94.4109%" y="517" width="1.6616%" height="15" fill="rgb(229,162,46)" fg:x="625" fg:w="11"/><text x="94.6609%" y="527.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="94.4109%" y="501" width="1.6616%" height="15" fill="rgb(214,111,36)" fg:x="625" fg:w="11"/><text x="94.6609%" y="511.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (11 samples, 1.66%)</title><rect x="94.4109%" y="485" width="1.6616%" height="15" fill="rgb(207,6,21)" fg:x="625" fg:w="11"/><text x="94.6609%" y="495.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (11 samples, 1.66%)</title><rect x="94.4109%" y="469" width="1.6616%" height="15" fill="rgb(213,127,38)" fg:x="625" fg:w="11"/><text x="94.6609%" y="479.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (11 samples, 1.66%)</title><rect x="94.4109%" y="453" width="1.6616%" height="15" fill="rgb(238,118,32)" fg:x="625" fg:w="11"/><text x="94.6609%" y="463.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (11 samples, 1.66%)</title><rect x="94.4109%" y="437" width="1.6616%" height="15" fill="rgb(240,139,39)" fg:x="625" fg:w="11"/><text x="94.6609%" y="447.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.66%)</title><rect x="94.4109%" y="421" width="1.6616%" height="15" fill="rgb(235,10,37)" fg:x="625" fg:w="11"/><text x="94.6609%" y="431.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.66%)</title><rect x="94.4109%" y="405" width="1.6616%" height="15" fill="rgb(249,171,38)" fg:x="625" fg:w="11"/><text x="94.6609%" y="415.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="95.6193%" y="389" width="0.4532%" height="15" fill="rgb(242,144,32)" fg:x="633" fg:w="3"/><text x="95.8693%" y="399.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="95.6193%" y="373" width="0.4532%" height="15" fill="rgb(217,117,21)" fg:x="633" fg:w="3"/><text x="95.8693%" y="383.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.15%)</title><rect x="95.9215%" y="357" width="0.1511%" height="15" fill="rgb(249,87,1)" fg:x="635" fg:w="1"/><text x="96.1715%" y="367.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="95.9215%" y="341" width="0.1511%" height="15" fill="rgb(248,196,48)" fg:x="635" fg:w="1"/><text x="96.1715%" y="351.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="95.9215%" y="325" width="0.1511%" height="15" fill="rgb(251,206,33)" fg:x="635" fg:w="1"/><text x="96.1715%" y="335.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="95.9215%" y="309" width="0.1511%" height="15" fill="rgb(232,141,28)" fg:x="635" fg:w="1"/><text x="96.1715%" y="319.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="95.9215%" y="293" width="0.1511%" height="15" fill="rgb(209,167,14)" fg:x="635" fg:w="1"/><text x="96.1715%" y="303.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="95.9215%" y="277" width="0.1511%" height="15" fill="rgb(225,11,50)" fg:x="635" fg:w="1"/><text x="96.1715%" y="287.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.15%)</title><rect x="96.0725%" y="261" width="0.1511%" height="15" fill="rgb(209,50,20)" fg:x="636" fg:w="1"/><text x="96.3225%" y="271.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="96.0725%" y="245" width="0.1511%" height="15" fill="rgb(212,17,46)" fg:x="636" fg:w="1"/><text x="96.3225%" y="255.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="96.0725%" y="229" width="0.1511%" height="15" fill="rgb(216,101,39)" fg:x="636" fg:w="1"/><text x="96.3225%" y="239.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.45%)</title><rect x="96.2236%" y="261" width="0.4532%" height="15" fill="rgb(212,228,48)" fg:x="637" fg:w="3"/><text x="96.4736%" y="271.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.45%)</title><rect x="96.2236%" y="245" width="0.4532%" height="15" fill="rgb(250,6,50)" fg:x="637" fg:w="3"/><text x="96.4736%" y="255.50"></text></g><g><title>`0x7FFE2DD2D5B5 (1 samples, 0.15%)</title><rect x="96.6767%" y="229" width="0.1511%" height="15" fill="rgb(250,160,48)" fg:x="640" fg:w="1"/><text x="96.9267%" y="239.50"></text></g><g><title>`0x7FFE2DD2E2FE (1 samples, 0.15%)</title><rect x="96.6767%" y="213" width="0.1511%" height="15" fill="rgb(244,216,33)" fg:x="640" fg:w="1"/><text x="96.9267%" y="223.50"></text></g><g><title>`0x7FFE2C7FDD0F (1 samples, 0.15%)</title><rect x="96.6767%" y="197" width="0.1511%" height="15" fill="rgb(207,157,5)" fg:x="640" fg:w="1"/><text x="96.9267%" y="207.50"></text></g><g><title>`0x7FFE2F054FB0 (1 samples, 0.15%)</title><rect x="96.6767%" y="181" width="0.1511%" height="15" fill="rgb(228,199,8)" fg:x="640" fg:w="1"/><text x="96.9267%" y="191.50"></text></g><g><title>`0x7FFE2F08A190 (1 samples, 0.15%)</title><rect x="96.6767%" y="165" width="0.1511%" height="15" fill="rgb(227,80,20)" fg:x="640" fg:w="1"/><text x="96.9267%" y="175.50"></text></g><g><title>`0x7FFE2F08A384 (1 samples, 0.15%)</title><rect x="96.6767%" y="149" width="0.1511%" height="15" fill="rgb(222,9,33)" fg:x="640" fg:w="1"/><text x="96.9267%" y="159.50"></text></g><g><title>`0x7FFE2F0BB4D6 (1 samples, 0.15%)</title><rect x="96.6767%" y="133" width="0.1511%" height="15" fill="rgb(239,44,28)" fg:x="640" fg:w="1"/><text x="96.9267%" y="143.50"></text></g><g><title>`0x7FFE2F0BB939 (1 samples, 0.15%)</title><rect x="96.6767%" y="117" width="0.1511%" height="15" fill="rgb(249,187,43)" fg:x="640" fg:w="1"/><text x="96.9267%" y="127.50"></text></g><g><title>`0x7FFE2F164651 (1 samples, 0.15%)</title><rect x="96.6767%" y="101" width="0.1511%" height="15" fill="rgb(216,141,28)" fg:x="640" fg:w="1"/><text x="96.9267%" y="111.50"></text></g><g><title>`0x7FFE2F1646D8 (1 samples, 0.15%)</title><rect x="96.6767%" y="85" width="0.1511%" height="15" fill="rgb(230,154,53)" fg:x="640" fg:w="1"/><text x="96.9267%" y="95.50"></text></g><g><title>`0x7FFE2F16B10F (1 samples, 0.15%)</title><rect x="96.6767%" y="69" width="0.1511%" height="15" fill="rgb(227,82,4)" fg:x="640" fg:w="1"/><text x="96.9267%" y="79.50"></text></g><g><title>`0x7FFE2F16DF19 (1 samples, 0.15%)</title><rect x="96.6767%" y="53" width="0.1511%" height="15" fill="rgb(220,107,16)" fg:x="640" fg:w="1"/><text x="96.9267%" y="63.50"></text></g><g><title>`0x7FFE2F10A8F6 (1 samples, 0.15%)</title><rect x="96.6767%" y="37" width="0.1511%" height="15" fill="rgb(207,187,2)" fg:x="640" fg:w="1"/><text x="96.9267%" y="47.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.60%)</title><rect x="96.6767%" y="261" width="0.6042%" height="15" fill="rgb(210,162,52)" fg:x="640" fg:w="4"/><text x="96.9267%" y="271.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.60%)</title><rect x="96.6767%" y="245" width="0.6042%" height="15" fill="rgb(217,216,49)" fg:x="640" fg:w="4"/><text x="96.9267%" y="255.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.45%)</title><rect x="96.8278%" y="229" width="0.4532%" height="15" fill="rgb(218,146,49)" fg:x="641" fg:w="3"/><text x="97.0778%" y="239.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.45%)</title><rect x="96.8278%" y="213" width="0.4532%" height="15" fill="rgb(216,55,40)" fg:x="641" fg:w="3"/><text x="97.0778%" y="223.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (9 samples, 1.36%)</title><rect x="96.0725%" y="325" width="1.3595%" height="15" fill="rgb(208,196,21)" fg:x="636" fg:w="9"/><text x="96.3225%" y="335.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (9 samples, 1.36%)</title><rect x="96.0725%" y="309" width="1.3595%" height="15" fill="rgb(242,117,42)" fg:x="636" fg:w="9"/><text x="96.3225%" y="319.50"></text></g><g><title>`0x7FFE2DD4C6D4 (9 samples, 1.36%)</title><rect x="96.0725%" y="293" width="1.3595%" height="15" fill="rgb(210,11,23)" fg:x="636" fg:w="9"/><text x="96.3225%" y="303.50"></text></g><g><title>`0x7FFE2C874E26 (9 samples, 1.36%)</title><rect x="96.0725%" y="277" width="1.3595%" height="15" fill="rgb(217,110,2)" fg:x="636" fg:w="9"/><text x="96.3225%" y="287.50"></text></g><g><title>`0x7FFE2C8796C7 (1 samples, 0.15%)</title><rect x="97.2810%" y="261" width="0.1511%" height="15" fill="rgb(229,77,54)" fg:x="644" fg:w="1"/><text x="97.5310%" y="271.50"></text></g><g><title>`0x7FFE2DD40D96 (1 samples, 0.15%)</title><rect x="97.2810%" y="245" width="0.1511%" height="15" fill="rgb(218,53,16)" fg:x="644" fg:w="1"/><text x="97.5310%" y="255.50"></text></g><g><title>`0x7FFE2DD410BE (1 samples, 0.15%)</title><rect x="97.2810%" y="229" width="0.1511%" height="15" fill="rgb(215,38,13)" fg:x="644" fg:w="1"/><text x="97.5310%" y="239.50"></text></g><g><title>`0x7FFE2F079E0F (1 samples, 0.15%)</title><rect x="97.2810%" y="213" width="0.1511%" height="15" fill="rgb(235,42,18)" fg:x="644" fg:w="1"/><text x="97.5310%" y="223.50"></text></g><g><title>`0x7FFE2F1A5E24 (1 samples, 0.15%)</title><rect x="97.2810%" y="197" width="0.1511%" height="15" fill="rgb(219,66,54)" fg:x="644" fg:w="1"/><text x="97.5310%" y="207.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (1 samples, 0.15%)</title><rect x="97.4320%" y="293" width="0.1511%" height="15" fill="rgb(222,205,4)" fg:x="645" fg:w="1"/><text x="97.6820%" y="303.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (1 samples, 0.15%)</title><rect x="97.4320%" y="277" width="0.1511%" height="15" fill="rgb(227,213,46)" fg:x="645" fg:w="1"/><text x="97.6820%" y="287.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="97.4320%" y="261" width="0.1511%" height="15" fill="rgb(250,145,42)" fg:x="645" fg:w="1"/><text x="97.6820%" y="271.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.15%)</title><rect x="97.4320%" y="245" width="0.1511%" height="15" fill="rgb(219,15,2)" fg:x="645" fg:w="1"/><text x="97.6820%" y="255.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.15%)</title><rect x="97.4320%" y="229" width="0.1511%" height="15" fill="rgb(231,181,52)" fg:x="645" fg:w="1"/><text x="97.6820%" y="239.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.15%)</title><rect x="97.4320%" y="213" width="0.1511%" height="15" fill="rgb(235,1,42)" fg:x="645" fg:w="1"/><text x="97.6820%" y="223.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.15%)</title><rect x="97.4320%" y="197" width="0.1511%" height="15" fill="rgb(249,88,27)" fg:x="645" fg:w="1"/><text x="97.6820%" y="207.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.15%)</title><rect x="97.4320%" y="181" width="0.1511%" height="15" fill="rgb(235,145,16)" fg:x="645" fg:w="1"/><text x="97.6820%" y="191.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.15%)</title><rect x="97.4320%" y="165" width="0.1511%" height="15" fill="rgb(237,114,19)" fg:x="645" fg:w="1"/><text x="97.6820%" y="175.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::append_elements (1 samples, 0.15%)</title><rect x="97.4320%" y="149" width="0.1511%" height="15" fill="rgb(238,51,50)" fg:x="645" fg:w="1"/><text x="97.6820%" y="159.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::reserve (1 samples, 0.15%)</title><rect x="97.4320%" y="133" width="0.1511%" height="15" fill="rgb(205,194,25)" fg:x="645" fg:w="1"/><text x="97.6820%" y="143.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::reserve (1 samples, 0.15%)</title><rect x="97.4320%" y="117" width="0.1511%" height="15" fill="rgb(215,203,17)" fg:x="645" fg:w="1"/><text x="97.6820%" y="127.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::reserve (1 samples, 0.15%)</title><rect x="97.4320%" y="101" width="0.1511%" height="15" fill="rgb(233,112,49)" fg:x="645" fg:w="1"/><text x="97.6820%" y="111.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::needs_to_grow (1 samples, 0.15%)</title><rect x="97.4320%" y="85" width="0.1511%" height="15" fill="rgb(241,130,26)" fg:x="645" fg:w="1"/><text x="97.6820%" y="95.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="97.5831%" y="277" width="0.1511%" height="15" fill="rgb(252,223,19)" fg:x="646" fg:w="1"/><text x="97.8331%" y="287.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.15%)</title><rect x="97.5831%" y="261" width="0.1511%" height="15" fill="rgb(211,95,25)" fg:x="646" fg:w="1"/><text x="97.8331%" y="271.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.15%)</title><rect x="97.5831%" y="245" width="0.1511%" height="15" fill="rgb(251,182,27)" fg:x="646" fg:w="1"/><text x="97.8331%" y="255.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.15%)</title><rect x="97.5831%" y="229" width="0.1511%" height="15" fill="rgb(238,24,4)" fg:x="646" fg:w="1"/><text x="97.8331%" y="239.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.15%)</title><rect x="97.5831%" y="213" width="0.1511%" height="15" fill="rgb(224,220,25)" fg:x="646" fg:w="1"/><text x="97.8331%" y="223.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (35 samples, 5.29%)</title><rect x="92.5982%" y="949" width="5.2870%" height="15" fill="rgb(239,133,26)" fg:x="613" fg:w="35"/><text x="92.8482%" y="959.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (35 samples, 5.29%)</title><rect x="92.5982%" y="933" width="5.2870%" height="15" fill="rgb(211,94,48)" fg:x="613" fg:w="35"/><text x="92.8482%" y="943.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (35 samples, 5.29%)</title><rect x="92.5982%" y="917" width="5.2870%" height="15" fill="rgb(239,87,6)" fg:x="613" fg:w="35"/><text x="92.8482%" y="927.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (35 samples, 5.29%)</title><rect x="92.5982%" y="901" width="5.2870%" height="15" fill="rgb(227,62,0)" fg:x="613" fg:w="35"/><text x="92.8482%" y="911.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (35 samples, 5.29%)</title><rect x="92.5982%" y="885" width="5.2870%" height="15" fill="rgb(211,226,4)" fg:x="613" fg:w="35"/><text x="92.8482%" y="895.50">fuzzit..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (35 samples, 5.29%)</title><rect x="92.5982%" y="869" width="5.2870%" height="15" fill="rgb(253,38,52)" fg:x="613" fg:w="35"/><text x="92.8482%" y="879.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (35 samples, 5.29%)</title><rect x="92.5982%" y="853" width="5.2870%" height="15" fill="rgb(229,126,40)" fg:x="613" fg:w="35"/><text x="92.8482%" y="863.50">fuzzit..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (35 samples, 5.29%)</title><rect x="92.5982%" y="837" width="5.2870%" height="15" fill="rgb(229,165,44)" fg:x="613" fg:w="35"/><text x="92.8482%" y="847.50">fuzzit..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (35 samples, 5.29%)</title><rect x="92.5982%" y="821" width="5.2870%" height="15" fill="rgb(247,95,47)" fg:x="613" fg:w="35"/><text x="92.8482%" y="831.50">fuzzit..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (35 samples, 5.29%)</title><rect x="92.5982%" y="805" width="5.2870%" height="15" fill="rgb(216,140,30)" fg:x="613" fg:w="35"/><text x="92.8482%" y="815.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (35 samples, 5.29%)</title><rect x="92.5982%" y="789" width="5.2870%" height="15" fill="rgb(246,214,8)" fg:x="613" fg:w="35"/><text x="92.8482%" y="799.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (35 samples, 5.29%)</title><rect x="92.5982%" y="773" width="5.2870%" height="15" fill="rgb(227,224,15)" fg:x="613" fg:w="35"/><text x="92.8482%" y="783.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (35 samples, 5.29%)</title><rect x="92.5982%" y="757" width="5.2870%" height="15" fill="rgb(233,175,4)" fg:x="613" fg:w="35"/><text x="92.8482%" y="767.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (23 samples, 3.47%)</title><rect x="94.4109%" y="741" width="3.4743%" height="15" fill="rgb(221,66,45)" fg:x="625" fg:w="23"/><text x="94.6609%" y="751.50">fuz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (23 samples, 3.47%)</title><rect x="94.4109%" y="725" width="3.4743%" height="15" fill="rgb(221,178,18)" fg:x="625" fg:w="23"/><text x="94.6609%" y="735.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (23 samples, 3.47%)</title><rect x="94.4109%" y="709" width="3.4743%" height="15" fill="rgb(213,81,29)" fg:x="625" fg:w="23"/><text x="94.6609%" y="719.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (23 samples, 3.47%)</title><rect x="94.4109%" y="693" width="3.4743%" height="15" fill="rgb(220,89,49)" fg:x="625" fg:w="23"/><text x="94.6609%" y="703.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (23 samples, 3.47%)</title><rect x="94.4109%" y="677" width="3.4743%" height="15" fill="rgb(227,60,33)" fg:x="625" fg:w="23"/><text x="94.6609%" y="687.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (23 samples, 3.47%)</title><rect x="94.4109%" y="661" width="3.4743%" height="15" fill="rgb(205,113,12)" fg:x="625" fg:w="23"/><text x="94.6609%" y="671.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (23 samples, 3.47%)</title><rect x="94.4109%" y="645" width="3.4743%" height="15" fill="rgb(211,32,1)" fg:x="625" fg:w="23"/><text x="94.6609%" y="655.50">fuz..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (23 samples, 3.47%)</title><rect x="94.4109%" y="629" width="3.4743%" height="15" fill="rgb(246,2,12)" fg:x="625" fg:w="23"/><text x="94.6609%" y="639.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (23 samples, 3.47%)</title><rect x="94.4109%" y="613" width="3.4743%" height="15" fill="rgb(243,37,27)" fg:x="625" fg:w="23"/><text x="94.6609%" y="623.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (23 samples, 3.47%)</title><rect x="94.4109%" y="597" width="3.4743%" height="15" fill="rgb(248,211,31)" fg:x="625" fg:w="23"/><text x="94.6609%" y="607.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (23 samples, 3.47%)</title><rect x="94.4109%" y="581" width="3.4743%" height="15" fill="rgb(242,146,47)" fg:x="625" fg:w="23"/><text x="94.6609%" y="591.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="96.0725%" y="565" width="1.8127%" height="15" fill="rgb(206,70,20)" fg:x="636" fg:w="12"/><text x="96.3225%" y="575.50">f..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="96.0725%" y="549" width="1.8127%" height="15" fill="rgb(215,10,51)" fg:x="636" fg:w="12"/><text x="96.3225%" y="559.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="96.0725%" y="533" width="1.8127%" height="15" fill="rgb(243,178,53)" fg:x="636" fg:w="12"/><text x="96.3225%" y="543.50">f..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.81%)</title><rect x="96.0725%" y="517" width="1.8127%" height="15" fill="rgb(233,221,20)" fg:x="636" fg:w="12"/><text x="96.3225%" y="527.50">f..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="96.0725%" y="501" width="1.8127%" height="15" fill="rgb(218,95,35)" fg:x="636" fg:w="12"/><text x="96.3225%" y="511.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="96.0725%" y="485" width="1.8127%" height="15" fill="rgb(229,13,5)" fg:x="636" fg:w="12"/><text x="96.3225%" y="495.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.81%)</title><rect x="96.0725%" y="469" width="1.8127%" height="15" fill="rgb(252,164,30)" fg:x="636" fg:w="12"/><text x="96.3225%" y="479.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (12 samples, 1.81%)</title><rect x="96.0725%" y="453" width="1.8127%" height="15" fill="rgb(232,68,36)" fg:x="636" fg:w="12"/><text x="96.3225%" y="463.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="96.0725%" y="437" width="1.8127%" height="15" fill="rgb(219,59,54)" fg:x="636" fg:w="12"/><text x="96.3225%" y="447.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.81%)</title><rect x="96.0725%" y="421" width="1.8127%" height="15" fill="rgb(250,92,33)" fg:x="636" fg:w="12"/><text x="96.3225%" y="431.50">f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.81%)</title><rect x="96.0725%" y="405" width="1.8127%" height="15" fill="rgb(229,162,54)" fg:x="636" fg:w="12"/><text x="96.3225%" y="415.50">f..</text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.81%)</title><rect x="96.0725%" y="389" width="1.8127%" height="15" fill="rgb(244,114,52)" fg:x="636" fg:w="12"/><text x="96.3225%" y="399.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.81%)</title><rect x="96.0725%" y="373" width="1.8127%" height="15" fill="rgb(212,211,43)" fg:x="636" fg:w="12"/><text x="96.3225%" y="383.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (12 samples, 1.81%)</title><rect x="96.0725%" y="357" width="1.8127%" height="15" fill="rgb(226,147,8)" fg:x="636" fg:w="12"/><text x="96.3225%" y="367.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (12 samples, 1.81%)</title><rect x="96.0725%" y="341" width="1.8127%" height="15" fill="rgb(226,23,13)" fg:x="636" fg:w="12"/><text x="96.3225%" y="351.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="97.4320%" y="325" width="0.4532%" height="15" fill="rgb(240,63,4)" fg:x="645" fg:w="3"/><text x="97.6820%" y="335.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="97.4320%" y="309" width="0.4532%" height="15" fill="rgb(221,1,32)" fg:x="645" fg:w="3"/><text x="97.6820%" y="319.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="97.5831%" y="293" width="0.3021%" height="15" fill="rgb(242,117,10)" fg:x="646" fg:w="2"/><text x="97.8331%" y="303.50"></text></g><g><title>fuzzit.exe`std::path::PathBuf::_push (1 samples, 0.15%)</title><rect x="97.7341%" y="277" width="0.1511%" height="15" fill="rgb(249,172,44)" fg:x="647" fg:w="1"/><text x="97.9841%" y="287.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::OsString::push (1 samples, 0.15%)</title><rect x="97.7341%" y="261" width="0.1511%" height="15" fill="rgb(244,46,45)" fg:x="647" fg:w="1"/><text x="97.9841%" y="271.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$2::push::impl$0::spec_push_to (1 samples, 0.15%)</title><rect x="97.7341%" y="245" width="0.1511%" height="15" fill="rgb(206,43,17)" fg:x="647" fg:w="1"/><text x="97.9841%" y="255.50"></text></g><g><title>fuzzit.exe`std::sys::os_str::wtf8::Buf::push_slice (1 samples, 0.15%)</title><rect x="97.7341%" y="229" width="0.1511%" height="15" fill="rgb(239,218,39)" fg:x="647" fg:w="1"/><text x="97.9841%" y="239.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_wtf8 (1 samples, 0.15%)</title><rect x="97.7341%" y="213" width="0.1511%" height="15" fill="rgb(208,169,54)" fg:x="647" fg:w="1"/><text x="97.9841%" y="223.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.15%)</title><rect x="97.7341%" y="197" width="0.1511%" height="15" fill="rgb(247,25,42)" fg:x="647" fg:w="1"/><text x="97.9841%" y="207.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.15%)</title><rect x="97.7341%" y="181" width="0.1511%" height="15" fill="rgb(226,23,31)" fg:x="647" fg:w="1"/><text x="97.9841%" y="191.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::append_elements (1 samples, 0.15%)</title><rect x="97.7341%" y="165" width="0.1511%" height="15" fill="rgb(247,16,28)" fg:x="647" fg:w="1"/><text x="97.9841%" y="175.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::reserve (1 samples, 0.15%)</title><rect x="97.7341%" y="149" width="0.1511%" height="15" fill="rgb(231,147,38)" fg:x="647" fg:w="1"/><text x="97.9841%" y="159.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::reserve (1 samples, 0.15%)</title><rect x="97.7341%" y="133" width="0.1511%" height="15" fill="rgb(253,81,48)" fg:x="647" fg:w="1"/><text x="97.9841%" y="143.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::reserve (1 samples, 0.15%)</title><rect x="97.7341%" y="117" width="0.1511%" height="15" fill="rgb(249,222,43)" fg:x="647" fg:w="1"/><text x="97.9841%" y="127.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (1 samples, 0.15%)</title><rect x="97.7341%" y="101" width="0.1511%" height="15" fill="rgb(221,3,27)" fg:x="647" fg:w="1"/><text x="97.9841%" y="111.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.15%)</title><rect x="97.7341%" y="85" width="0.1511%" height="15" fill="rgb(228,180,5)" fg:x="647" fg:w="1"/><text x="97.9841%" y="95.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="97.7341%" y="69" width="0.1511%" height="15" fill="rgb(227,131,42)" fg:x="647" fg:w="1"/><text x="97.9841%" y="79.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.15%)</title><rect x="97.8852%" y="709" width="0.1511%" height="15" fill="rgb(212,3,39)" fg:x="648" fg:w="1"/><text x="98.1352%" y="719.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.15%)</title><rect x="97.8852%" y="693" width="0.1511%" height="15" fill="rgb(226,45,5)" fg:x="648" fg:w="1"/><text x="98.1352%" y="703.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.15%)</title><rect x="97.8852%" y="677" width="0.1511%" height="15" fill="rgb(215,167,45)" fg:x="648" fg:w="1"/><text x="98.1352%" y="687.50"></text></g><g><title>fuzzit.exe`alloc::fmt::format::format_inner (1 samples, 0.15%)</title><rect x="97.8852%" y="661" width="0.1511%" height="15" fill="rgb(250,218,53)" fg:x="648" fg:w="1"/><text x="98.1352%" y="671.50"></text></g><g><title>fuzzit.exe`alloc::string::String::with_capacity (1 samples, 0.15%)</title><rect x="97.8852%" y="645" width="0.1511%" height="15" fill="rgb(207,140,0)" fg:x="648" fg:w="1"/><text x="98.1352%" y="655.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::with_capacity (1 samples, 0.15%)</title><rect x="97.8852%" y="629" width="0.1511%" height="15" fill="rgb(238,133,51)" fg:x="648" fg:w="1"/><text x="98.1352%" y="639.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.15%)</title><rect x="97.8852%" y="613" width="0.1511%" height="15" fill="rgb(218,203,53)" fg:x="648" fg:w="1"/><text x="98.1352%" y="623.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.15%)</title><rect x="97.8852%" y="597" width="0.1511%" height="15" fill="rgb(226,184,25)" fg:x="648" fg:w="1"/><text x="98.1352%" y="607.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.15%)</title><rect x="97.8852%" y="581" width="0.1511%" height="15" fill="rgb(231,121,21)" fg:x="648" fg:w="1"/><text x="98.1352%" y="591.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.15%)</title><rect x="97.8852%" y="565" width="0.1511%" height="15" fill="rgb(251,14,34)" fg:x="648" fg:w="1"/><text x="98.1352%" y="575.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="97.8852%" y="549" width="0.1511%" height="15" fill="rgb(249,193,11)" fg:x="648" fg:w="1"/><text x="98.1352%" y="559.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.15%)</title><rect x="97.8852%" y="533" width="0.1511%" height="15" fill="rgb(220,172,37)" fg:x="648" fg:w="1"/><text x="98.1352%" y="543.50"></text></g><g><title>`0x7FFE2F0915A5 (1 samples, 0.15%)</title><rect x="97.8852%" y="517" width="0.1511%" height="15" fill="rgb(231,229,43)" fg:x="648" fg:w="1"/><text x="98.1352%" y="527.50"></text></g><g><title>`0x7FFE2C8773BA (1 samples, 0.15%)</title><rect x="98.0363%" y="645" width="0.1511%" height="15" fill="rgb(250,161,5)" fg:x="649" fg:w="1"/><text x="98.2863%" y="655.50"></text></g><g><title>`0x7FFE2C8D5DEC (1 samples, 0.15%)</title><rect x="98.0363%" y="629" width="0.1511%" height="15" fill="rgb(218,225,18)" fg:x="649" fg:w="1"/><text x="98.2863%" y="639.50"></text></g><g><title>`0x7FFE2F125AD7 (1 samples, 0.15%)</title><rect x="98.0363%" y="613" width="0.1511%" height="15" fill="rgb(245,45,42)" fg:x="649" fg:w="1"/><text x="98.2863%" y="623.50"></text></g><g><title>`0x7FFE2F125D17 (1 samples, 0.15%)</title><rect x="98.0363%" y="597" width="0.1511%" height="15" fill="rgb(211,115,1)" fg:x="649" fg:w="1"/><text x="98.2863%" y="607.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="98.0363%" y="581" width="0.1511%" height="15" fill="rgb(248,133,52)" fg:x="649" fg:w="1"/><text x="98.2863%" y="591.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.15%)</title><rect x="98.0363%" y="565" width="0.1511%" height="15" fill="rgb(238,100,21)" fg:x="649" fg:w="1"/><text x="98.2863%" y="575.50"></text></g><g><title>`0x7FFE2F067842 (1 samples, 0.15%)</title><rect x="98.0363%" y="549" width="0.1511%" height="15" fill="rgb(247,144,11)" fg:x="649" fg:w="1"/><text x="98.2863%" y="559.50"></text></g><g><title>`0x7FFE2F068C1F (1 samples, 0.15%)</title><rect x="98.0363%" y="533" width="0.1511%" height="15" fill="rgb(206,164,16)" fg:x="649" fg:w="1"/><text x="98.2863%" y="543.50"></text></g><g><title>`0x7FFE2F0694B3 (1 samples, 0.15%)</title><rect x="98.0363%" y="517" width="0.1511%" height="15" fill="rgb(222,34,3)" fg:x="649" fg:w="1"/><text x="98.2863%" y="527.50"></text></g><g><title>`0x7FFE2F1A3534 (1 samples, 0.15%)</title><rect x="98.0363%" y="501" width="0.1511%" height="15" fill="rgb(248,82,4)" fg:x="649" fg:w="1"/><text x="98.2863%" y="511.50"></text></g><g><title>`0x7FFE2C8776C5 (2 samples, 0.30%)</title><rect x="98.1873%" y="645" width="0.3021%" height="15" fill="rgb(228,81,46)" fg:x="650" fg:w="2"/><text x="98.4373%" y="655.50"></text></g><g><title>`0x7FFE2F1A4C44 (2 samples, 0.30%)</title><rect x="98.1873%" y="629" width="0.3021%" height="15" fill="rgb(227,67,47)" fg:x="650" fg:w="2"/><text x="98.4373%" y="639.50"></text></g><g><title>`0x7FFE2C8787CB (2 samples, 0.30%)</title><rect x="98.4894%" y="645" width="0.3021%" height="15" fill="rgb(215,93,53)" fg:x="652" fg:w="2"/><text x="98.7394%" y="655.50"></text></g><g><title>`0x7FFE2DD2D052 (2 samples, 0.30%)</title><rect x="98.4894%" y="629" width="0.3021%" height="15" fill="rgb(248,194,39)" fg:x="652" fg:w="2"/><text x="98.7394%" y="639.50"></text></g><g><title>`0x7FFE2DD2D646 (2 samples, 0.30%)</title><rect x="98.4894%" y="613" width="0.3021%" height="15" fill="rgb(215,5,19)" fg:x="652" fg:w="2"/><text x="98.7394%" y="623.50"></text></g><g><title>`0x7FFE2F1A3BB4 (2 samples, 0.30%)</title><rect x="98.4894%" y="597" width="0.3021%" height="15" fill="rgb(226,215,51)" fg:x="652" fg:w="2"/><text x="98.7394%" y="607.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (6 samples, 0.91%)</title><rect x="98.0363%" y="709" width="0.9063%" height="15" fill="rgb(225,56,26)" fg:x="649" fg:w="6"/><text x="98.2863%" y="719.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (6 samples, 0.91%)</title><rect x="98.0363%" y="693" width="0.9063%" height="15" fill="rgb(222,75,29)" fg:x="649" fg:w="6"/><text x="98.2863%" y="703.50"></text></g><g><title>`0x7FFE2DD4C6D4 (6 samples, 0.91%)</title><rect x="98.0363%" y="677" width="0.9063%" height="15" fill="rgb(236,139,6)" fg:x="649" fg:w="6"/><text x="98.2863%" y="687.50"></text></g><g><title>`0x7FFE2C874E26 (6 samples, 0.91%)</title><rect x="98.0363%" y="661" width="0.9063%" height="15" fill="rgb(223,137,36)" fg:x="649" fg:w="6"/><text x="98.2863%" y="671.50"></text></g><g><title>`0x7FFE2C87892F (1 samples, 0.15%)</title><rect x="98.7915%" y="645" width="0.1511%" height="15" fill="rgb(226,99,2)" fg:x="654" fg:w="1"/><text x="99.0415%" y="655.50"></text></g><g><title>`0x7FFE2DD3820E (1 samples, 0.15%)</title><rect x="98.7915%" y="629" width="0.1511%" height="15" fill="rgb(206,133,23)" fg:x="654" fg:w="1"/><text x="99.0415%" y="639.50"></text></g><g><title>`0x7FFE2DD37133 (1 samples, 0.15%)</title><rect x="98.7915%" y="613" width="0.1511%" height="15" fill="rgb(243,173,15)" fg:x="654" fg:w="1"/><text x="99.0415%" y="623.50"></text></g><g><title>`0x7FFE2DD371FD (1 samples, 0.15%)</title><rect x="98.7915%" y="597" width="0.1511%" height="15" fill="rgb(228,69,28)" fg:x="654" fg:w="1"/><text x="99.0415%" y="607.50"></text></g><g><title>`0x7FFE2F09DAD7 (1 samples, 0.15%)</title><rect x="98.7915%" y="581" width="0.1511%" height="15" fill="rgb(212,51,22)" fg:x="654" fg:w="1"/><text x="99.0415%" y="591.50"></text></g><g><title>`0x7FFE2F0CBEA4 (1 samples, 0.15%)</title><rect x="98.7915%" y="565" width="0.1511%" height="15" fill="rgb(227,113,0)" fg:x="654" fg:w="1"/><text x="99.0415%" y="575.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.15%)</title><rect x="98.7915%" y="549" width="0.1511%" height="15" fill="rgb(252,84,27)" fg:x="654" fg:w="1"/><text x="99.0415%" y="559.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (1 samples, 0.15%)</title><rect x="98.9426%" y="677" width="0.1511%" height="15" fill="rgb(223,145,39)" fg:x="655" fg:w="1"/><text x="99.1926%" y="687.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (1 samples, 0.15%)</title><rect x="98.9426%" y="661" width="0.1511%" height="15" fill="rgb(239,219,30)" fg:x="655" fg:w="1"/><text x="99.1926%" y="671.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.15%)</title><rect x="98.9426%" y="645" width="0.1511%" height="15" fill="rgb(224,196,39)" fg:x="655" fg:w="1"/><text x="99.1926%" y="655.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.15%)</title><rect x="98.9426%" y="629" width="0.1511%" height="15" fill="rgb(205,35,43)" fg:x="655" fg:w="1"/><text x="99.1926%" y="639.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.15%)</title><rect x="98.9426%" y="613" width="0.1511%" height="15" fill="rgb(228,201,21)" fg:x="655" fg:w="1"/><text x="99.1926%" y="623.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::with_capacity (1 samples, 0.15%)</title><rect x="98.9426%" y="597" width="0.1511%" height="15" fill="rgb(237,118,16)" fg:x="655" fg:w="1"/><text x="99.1926%" y="607.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::with_capacity (1 samples, 0.15%)</title><rect x="98.9426%" y="581" width="0.1511%" height="15" fill="rgb(241,17,19)" fg:x="655" fg:w="1"/><text x="99.1926%" y="591.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.15%)</title><rect x="98.9426%" y="565" width="0.1511%" height="15" fill="rgb(214,10,25)" fg:x="655" fg:w="1"/><text x="99.1926%" y="575.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.15%)</title><rect x="98.9426%" y="549" width="0.1511%" height="15" fill="rgb(238,37,29)" fg:x="655" fg:w="1"/><text x="99.1926%" y="559.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.15%)</title><rect x="98.9426%" y="533" width="0.1511%" height="15" fill="rgb(253,83,25)" fg:x="655" fg:w="1"/><text x="99.1926%" y="543.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.15%)</title><rect x="98.9426%" y="517" width="0.1511%" height="15" fill="rgb(234,192,12)" fg:x="655" fg:w="1"/><text x="99.1926%" y="527.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="98.9426%" y="501" width="0.1511%" height="15" fill="rgb(241,216,45)" fg:x="655" fg:w="1"/><text x="99.1926%" y="511.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.15%)</title><rect x="98.9426%" y="485" width="0.1511%" height="15" fill="rgb(242,22,33)" fg:x="655" fg:w="1"/><text x="99.1926%" y="495.50"></text></g><g><title>`0x7FFE2F0923C9 (1 samples, 0.15%)</title><rect x="98.9426%" y="469" width="0.1511%" height="15" fill="rgb(231,105,49)" fg:x="655" fg:w="1"/><text x="99.1926%" y="479.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.15%)</title><rect x="98.9426%" y="453" width="0.1511%" height="15" fill="rgb(218,204,15)" fg:x="655" fg:w="1"/><text x="99.1926%" y="463.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.15%)</title><rect x="98.9426%" y="437" width="0.1511%" height="15" fill="rgb(235,138,41)" fg:x="655" fg:w="1"/><text x="99.1926%" y="447.50"></text></g><g><title>`0x7FFE2F066E1F (1 samples, 0.15%)</title><rect x="98.9426%" y="421" width="0.1511%" height="15" fill="rgb(246,0,9)" fg:x="655" fg:w="1"/><text x="99.1926%" y="431.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (576 samples, 87.01%)</title><rect x="12.3867%" y="1525" width="87.0091%" height="15" fill="rgb(210,74,4)" fg:x="82" fg:w="576"/><text x="12.6367%" y="1535.50">fuzzit.exe`rayon_core::registry::WorkerThread::execute</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (576 samples, 87.01%)</title><rect x="12.3867%" y="1509" width="87.0091%" height="15" fill="rgb(250,60,41)" fg:x="82" fg:w="576"/><text x="12.6367%" y="1519.50">fuzzit.exe`rayon_core::job::JobRef::execute</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (486 samples, 73.41%)</title><rect x="25.9819%" y="1493" width="73.4139%" height="15" fill="rgb(220,115,12)" fg:x="172" fg:w="486"/><text x="26.2319%" y="1503.50">fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_e..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (486 samples, 73.41%)</title><rect x="25.9819%" y="1477" width="73.4139%" height="15" fill="rgb(237,100,13)" fg:x="172" fg:w="486"/><text x="26.2319%" y="1487.50">fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fu..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (486 samples, 73.41%)</title><rect x="25.9819%" y="1461" width="73.4139%" height="15" fill="rgb(213,55,26)" fg:x="172" fg:w="486"/><text x="26.2319%" y="1471.50">fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer:..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (486 samples, 73.41%)</title><rect x="25.9819%" y="1445" width="73.4139%" height="15" fill="rgb(216,17,4)" fg:x="172" fg:w="486"/><text x="26.2319%" y="1455.50">fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (486 samples, 73.41%)</title><rect x="25.9819%" y="1429" width="73.4139%" height="15" fill="rgb(220,153,47)" fg:x="172" fg:w="486"/><text x="26.2319%" y="1439.50">fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;ray..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (486 samples, 73.41%)</title><rect x="25.9819%" y="1413" width="73.4139%" height="15" fill="rgb(215,131,9)" fg:x="172" fg:w="486"/><text x="26.2319%" y="1423.50">fuzzit.exe`std::panicking::try::do_call</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (486 samples, 73.41%)</title><rect x="25.9819%" y="1397" width="73.4139%" height="15" fill="rgb(233,46,42)" fg:x="172" fg:w="486"/><text x="26.2319%" y="1407.50">fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::i..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (414 samples, 62.54%)</title><rect x="36.8580%" y="1381" width="62.5378%" height="15" fill="rgb(226,86,7)" fg:x="244" fg:w="414"/><text x="37.1080%" y="1391.50">fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::p..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (414 samples, 62.54%)</title><rect x="36.8580%" y="1365" width="62.5378%" height="15" fill="rgb(239,226,21)" fg:x="244" fg:w="414"/><text x="37.1080%" y="1375.50">fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::h..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (332 samples, 50.15%)</title><rect x="49.2447%" y="1349" width="50.1511%" height="15" fill="rgb(244,137,22)" fg:x="326" fg:w="332"/><text x="49.4947%" y="1359.50">fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (332 samples, 50.15%)</title><rect x="49.2447%" y="1333" width="50.1511%" height="15" fill="rgb(211,139,35)" fg:x="326" fg:w="332"/><text x="49.4947%" y="1343.50">fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayo..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (332 samples, 50.15%)</title><rect x="49.2447%" y="1317" width="50.1511%" height="15" fill="rgb(214,62,50)" fg:x="326" fg:w="332"/><text x="49.4947%" y="1327.50">fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_cor..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (332 samples, 50.15%)</title><rect x="49.2447%" y="1301" width="50.1511%" height="15" fill="rgb(212,113,44)" fg:x="326" fg:w="332"/><text x="49.4947%" y="1311.50">fuzzit.exe`std::panicking::try::do_call</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (332 samples, 50.15%)</title><rect x="49.2447%" y="1285" width="50.1511%" height="15" fill="rgb(226,150,43)" fg:x="326" fg:w="332"/><text x="49.4947%" y="1295.50">fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::It..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (204 samples, 30.82%)</title><rect x="68.5801%" y="1269" width="30.8157%" height="15" fill="rgb(250,71,37)" fg:x="454" fg:w="204"/><text x="68.8301%" y="1279.50">fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_c..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (204 samples, 30.82%)</title><rect x="68.5801%" y="1253" width="30.8157%" height="15" fill="rgb(219,76,19)" fg:x="454" fg:w="204"/><text x="68.8301%" y="1263.50">fuzzit.exe`rayon_core::join::join_context::closure..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (156 samples, 23.56%)</title><rect x="75.8308%" y="1237" width="23.5650%" height="15" fill="rgb(250,39,11)" fg:x="502" fg:w="156"/><text x="76.0808%" y="1247.50">fuzzit.exe`rayon_core::unwind::halt_u..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (156 samples, 23.56%)</title><rect x="75.8308%" y="1221" width="23.5650%" height="15" fill="rgb(230,64,31)" fg:x="502" fg:w="156"/><text x="76.0808%" y="1231.50">fuzzit.exe`std::panic::catch_unwind(c..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (156 samples, 23.56%)</title><rect x="75.8308%" y="1205" width="23.5650%" height="15" fill="rgb(208,222,23)" fg:x="502" fg:w="156"/><text x="76.0808%" y="1215.50">fuzzit.exe`std::panicking::try(core::..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (156 samples, 23.56%)</title><rect x="75.8308%" y="1189" width="23.5650%" height="15" fill="rgb(227,125,18)" fg:x="502" fg:w="156"/><text x="76.0808%" y="1199.50">fuzzit.exe`std::panicking::try::do_ca..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (156 samples, 23.56%)</title><rect x="75.8308%" y="1173" width="23.5650%" height="15" fill="rgb(234,210,9)" fg:x="502" fg:w="156"/><text x="76.0808%" y="1183.50">fuzzit.exe`rayon::iter::plumbing::bri..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (45 samples, 6.80%)</title><rect x="92.5982%" y="1157" width="6.7976%" height="15" fill="rgb(217,127,24)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1167.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (45 samples, 6.80%)</title><rect x="92.5982%" y="1141" width="6.7976%" height="15" fill="rgb(239,141,48)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1151.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (45 samples, 6.80%)</title><rect x="92.5982%" y="1125" width="6.7976%" height="15" fill="rgb(227,109,8)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1135.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (45 samples, 6.80%)</title><rect x="92.5982%" y="1109" width="6.7976%" height="15" fill="rgb(235,184,23)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1119.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (45 samples, 6.80%)</title><rect x="92.5982%" y="1093" width="6.7976%" height="15" fill="rgb(227,226,48)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1103.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (45 samples, 6.80%)</title><rect x="92.5982%" y="1077" width="6.7976%" height="15" fill="rgb(206,150,11)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1087.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (45 samples, 6.80%)</title><rect x="92.5982%" y="1061" width="6.7976%" height="15" fill="rgb(254,2,33)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1071.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (45 samples, 6.80%)</title><rect x="92.5982%" y="1045" width="6.7976%" height="15" fill="rgb(243,160,20)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1055.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (45 samples, 6.80%)</title><rect x="92.5982%" y="1029" width="6.7976%" height="15" fill="rgb(218,208,30)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1039.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (45 samples, 6.80%)</title><rect x="92.5982%" y="1013" width="6.7976%" height="15" fill="rgb(224,120,49)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1023.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (45 samples, 6.80%)</title><rect x="92.5982%" y="997" width="6.7976%" height="15" fill="rgb(246,12,2)" fg:x="613" fg:w="45"/><text x="92.8482%" y="1007.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (45 samples, 6.80%)</title><rect x="92.5982%" y="981" width="6.7976%" height="15" fill="rgb(236,117,3)" fg:x="613" fg:w="45"/><text x="92.8482%" y="991.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (45 samples, 6.80%)</title><rect x="92.5982%" y="965" width="6.7976%" height="15" fill="rgb(216,128,52)" fg:x="613" fg:w="45"/><text x="92.8482%" y="975.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="97.8852%" y="949" width="1.5106%" height="15" fill="rgb(246,145,19)" fg:x="648" fg:w="10"/><text x="98.1352%" y="959.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="97.8852%" y="933" width="1.5106%" height="15" fill="rgb(222,11,46)" fg:x="648" fg:w="10"/><text x="98.1352%" y="943.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="97.8852%" y="917" width="1.5106%" height="15" fill="rgb(245,82,36)" fg:x="648" fg:w="10"/><text x="98.1352%" y="927.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (10 samples, 1.51%)</title><rect x="97.8852%" y="901" width="1.5106%" height="15" fill="rgb(250,73,51)" fg:x="648" fg:w="10"/><text x="98.1352%" y="911.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="97.8852%" y="885" width="1.5106%" height="15" fill="rgb(221,189,23)" fg:x="648" fg:w="10"/><text x="98.1352%" y="895.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="97.8852%" y="869" width="1.5106%" height="15" fill="rgb(210,33,7)" fg:x="648" fg:w="10"/><text x="98.1352%" y="879.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (10 samples, 1.51%)</title><rect x="97.8852%" y="853" width="1.5106%" height="15" fill="rgb(210,107,22)" fg:x="648" fg:w="10"/><text x="98.1352%" y="863.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (10 samples, 1.51%)</title><rect x="97.8852%" y="837" width="1.5106%" height="15" fill="rgb(222,116,37)" fg:x="648" fg:w="10"/><text x="98.1352%" y="847.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (10 samples, 1.51%)</title><rect x="97.8852%" y="821" width="1.5106%" height="15" fill="rgb(254,17,48)" fg:x="648" fg:w="10"/><text x="98.1352%" y="831.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (10 samples, 1.51%)</title><rect x="97.8852%" y="805" width="1.5106%" height="15" fill="rgb(224,36,32)" fg:x="648" fg:w="10"/><text x="98.1352%" y="815.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (10 samples, 1.51%)</title><rect x="97.8852%" y="789" width="1.5106%" height="15" fill="rgb(232,90,46)" fg:x="648" fg:w="10"/><text x="98.1352%" y="799.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (10 samples, 1.51%)</title><rect x="97.8852%" y="773" width="1.5106%" height="15" fill="rgb(241,66,40)" fg:x="648" fg:w="10"/><text x="98.1352%" y="783.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (10 samples, 1.51%)</title><rect x="97.8852%" y="757" width="1.5106%" height="15" fill="rgb(249,184,29)" fg:x="648" fg:w="10"/><text x="98.1352%" y="767.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (10 samples, 1.51%)</title><rect x="97.8852%" y="741" width="1.5106%" height="15" fill="rgb(231,181,1)" fg:x="648" fg:w="10"/><text x="98.1352%" y="751.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (10 samples, 1.51%)</title><rect x="97.8852%" y="725" width="1.5106%" height="15" fill="rgb(224,94,2)" fg:x="648" fg:w="10"/><text x="98.1352%" y="735.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.45%)</title><rect x="98.9426%" y="709" width="0.4532%" height="15" fill="rgb(229,170,15)" fg:x="655" fg:w="3"/><text x="99.1926%" y="719.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.45%)</title><rect x="98.9426%" y="693" width="0.4532%" height="15" fill="rgb(240,127,35)" fg:x="655" fg:w="3"/><text x="99.1926%" y="703.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.30%)</title><rect x="99.0937%" y="677" width="0.3021%" height="15" fill="rgb(248,196,34)" fg:x="656" fg:w="2"/><text x="99.3437%" y="687.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="99.0937%" y="661" width="0.3021%" height="15" fill="rgb(236,137,7)" fg:x="656" fg:w="2"/><text x="99.3437%" y="671.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.30%)</title><rect x="99.0937%" y="645" width="0.3021%" height="15" fill="rgb(235,127,16)" fg:x="656" fg:w="2"/><text x="99.3437%" y="655.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.30%)</title><rect x="99.0937%" y="629" width="0.3021%" height="15" fill="rgb(250,192,54)" fg:x="656" fg:w="2"/><text x="99.3437%" y="639.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.30%)</title><rect x="99.0937%" y="613" width="0.3021%" height="15" fill="rgb(218,98,20)" fg:x="656" fg:w="2"/><text x="99.3437%" y="623.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.30%)</title><rect x="99.0937%" y="597" width="0.3021%" height="15" fill="rgb(230,176,47)" fg:x="656" fg:w="2"/><text x="99.3437%" y="607.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (581 samples, 87.76%)</title><rect x="12.0846%" y="1701" width="87.7644%" height="15" fill="rgb(244,2,33)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1711.50">fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;ray..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (581 samples, 87.76%)</title><rect x="12.0846%" y="1685" width="87.7644%" height="15" fill="rgb(231,100,17)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1695.50">fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_co..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (581 samples, 87.76%)</title><rect x="12.0846%" y="1669" width="87.7644%" height="15" fill="rgb(245,23,12)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1679.50">fuzzit.exe`std::panicking::try::do_call</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (581 samples, 87.76%)</title><rect x="12.0846%" y="1653" width="87.7644%" height="15" fill="rgb(249,55,22)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1663.50">fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$..</text></g><g><title>fuzzit.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (581 samples, 87.76%)</title><rect x="12.0846%" y="1637" width="87.7644%" height="15" fill="rgb(207,134,9)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1647.50">fuzzit.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core:..</text></g><g><title>fuzzit.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (581 samples, 87.76%)</title><rect x="12.0846%" y="1621" width="87.7644%" height="15" fill="rgb(218,134,0)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1631.50">fuzzit.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>fuzzit.exe`rayon_core::registry::ThreadBuilder::run (581 samples, 87.76%)</title><rect x="12.0846%" y="1605" width="87.7644%" height="15" fill="rgb(213,212,33)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1615.50">fuzzit.exe`rayon_core::registry::ThreadBuilder::run</text></g><g><title>fuzzit.exe`rayon_core::registry::main_loop (581 samples, 87.76%)</title><rect x="12.0846%" y="1589" width="87.7644%" height="15" fill="rgb(252,106,18)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1599.50">fuzzit.exe`rayon_core::registry::main_loop</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work (581 samples, 87.76%)</title><rect x="12.0846%" y="1573" width="87.7644%" height="15" fill="rgb(208,126,42)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1583.50">fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (581 samples, 87.76%)</title><rect x="12.0846%" y="1557" width="87.7644%" height="15" fill="rgb(246,175,29)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1567.50">fuzzit.exe`rayon_core::registry::WorkerThread::wait_until</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (581 samples, 87.76%)</title><rect x="12.0846%" y="1541" width="87.7644%" height="15" fill="rgb(215,13,50)" fg:x="80" fg:w="581"/><text x="12.3346%" y="1551.50">fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::no_work_found (3 samples, 0.45%)</title><rect x="99.3958%" y="1525" width="0.4532%" height="15" fill="rgb(216,172,15)" fg:x="658" fg:w="3"/><text x="99.6458%" y="1535.50"></text></g><g><title>`0x7FFE2C89696B (3 samples, 0.45%)</title><rect x="99.3958%" y="1509" width="0.4532%" height="15" fill="rgb(212,103,13)" fg:x="658" fg:w="3"/><text x="99.6458%" y="1519.50"></text></g><g><title>`0x7FFE2F10E134 (3 samples, 0.45%)</title><rect x="99.3958%" y="1493" width="0.4532%" height="15" fill="rgb(231,171,36)" fg:x="658" fg:w="3"/><text x="99.6458%" y="1503.50"></text></g><g><title>`0x7FFE2F1A38B4 (3 samples, 0.45%)</title><rect x="99.3958%" y="1477" width="0.4532%" height="15" fill="rgb(250,123,20)" fg:x="658" fg:w="3"/><text x="99.6458%" y="1487.50"></text></g><g><title>all (662 samples, 100%)</title><rect x="0.0000%" y="1877" width="100.0000%" height="15" fill="rgb(212,53,50)" fg:x="0" fg:w="662"/><text x="0.2500%" y="1887.50"></text></g><g><title>`0x7FFE2F048D9C (617 samples, 93.20%)</title><rect x="6.7976%" y="1861" width="93.2024%" height="15" fill="rgb(243,54,12)" fg:x="45" fg:w="617"/><text x="7.0476%" y="1871.50">`0x7FFE2F048D9C</text></g><g><title>`0x7FFE2DD3E8D7 (617 samples, 93.20%)</title><rect x="6.7976%" y="1845" width="93.2024%" height="15" fill="rgb(234,101,34)" fg:x="45" fg:w="617"/><text x="7.0476%" y="1855.50">`0x7FFE2DD3E8D7</text></g><g><title>fuzzit.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (582 samples, 87.92%)</title><rect x="12.0846%" y="1829" width="87.9154%" height="15" fill="rgb(254,67,22)" fg:x="80" fg:w="582"/><text x="12.3346%" y="1839.50">fuzzit.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>fuzzit.exe`alloc::boxed::impl$28::call_once (582 samples, 87.92%)</title><rect x="12.0846%" y="1813" width="87.9154%" height="15" fill="rgb(250,35,47)" fg:x="80" fg:w="582"/><text x="12.3346%" y="1823.50">fuzzit.exe`alloc::boxed::impl$28::call_once</text></g><g><title>fuzzit.exe`alloc::boxed::impl$28::call_once (582 samples, 87.92%)</title><rect x="12.0846%" y="1797" width="87.9154%" height="15" fill="rgb(226,126,38)" fg:x="80" fg:w="582"/><text x="12.3346%" y="1807.50">fuzzit.exe`alloc::boxed::impl$28::call_once</text></g><g><title>fuzzit.exe`alloc::boxed::impl$8::drop (582 samples, 87.92%)</title><rect x="12.0846%" y="1781" width="87.9154%" height="15" fill="rgb(216,138,53)" fg:x="80" fg:w="582"/><text x="12.3346%" y="1791.50">fuzzit.exe`alloc::boxed::impl$8::drop</text></g><g><title>fuzzit.exe`core::alloc::layout::Layout::for_value_raw (582 samples, 87.92%)</title><rect x="12.0846%" y="1765" width="87.9154%" height="15" fill="rgb(246,199,43)" fg:x="80" fg:w="582"/><text x="12.3346%" y="1775.50">fuzzit.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>fuzzit.exe`core::mem::size_of_val_raw (582 samples, 87.92%)</title><rect x="12.0846%" y="1749" width="87.9154%" height="15" fill="rgb(232,125,11)" fg:x="80" fg:w="582"/><text x="12.3346%" y="1759.50">fuzzit.exe`core::mem::size_of_val_raw</text></g><g><title>fuzzit.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (582 samples, 87.92%)</title><rect x="12.0846%" y="1733" width="87.9154%" height="15" fill="rgb(218,219,45)" fg:x="80" fg:w="582"/><text x="12.3346%" y="1743.50">fuzzit.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure..</text></g><g><title>fuzzit.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (582 samples, 87.92%)</title><rect x="12.0846%" y="1717" width="87.9154%" height="15" fill="rgb(216,102,54)" fg:x="80" fg:w="582"/><text x="12.3346%" y="1727.50">fuzzit.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spaw..</text></g><g><title>fuzzit.exe`std::thread::current::set_current (1 samples, 0.15%)</title><rect x="99.8489%" y="1701" width="0.1511%" height="15" fill="rgb(250,228,7)" fg:x="661" fg:w="1"/><text x="100.0989%" y="1711.50"></text></g></svg></svg>