<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2934" onload="init(evt)" viewBox="0 0 1200 2934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2934" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2917.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2917.00"> </text><svg id="frames" x="10" width="1180" total_samples="744"><g><title>`0x7FFE2C8C3FFD (1 samples, 0.13%)</title><rect x="0.0000%" y="2773" width="0.1344%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="2783.50"></text></g><g><title>`0x7FFE2C7F4653 (1 samples, 0.13%)</title><rect x="0.0000%" y="2757" width="0.1344%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="2767.50"></text></g><g><title>`0x7FFE2C7F4DC4 (1 samples, 0.13%)</title><rect x="0.0000%" y="2741" width="0.1344%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="2751.50"></text></g><g><title>`0x7FFE2F1A3314 (1 samples, 0.13%)</title><rect x="0.0000%" y="2725" width="0.1344%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="2735.50"></text></g><g><title>`0x7FFE2F11262B (2 samples, 0.27%)</title><rect x="0.0000%" y="2837" width="0.2688%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2847.50"></text></g><g><title>`0x7FFE2F0B4147 (2 samples, 0.27%)</title><rect x="0.0000%" y="2821" width="0.2688%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2831.50"></text></g><g><title>`0x7FFE2F0B483E (2 samples, 0.27%)</title><rect x="0.0000%" y="2805" width="0.2688%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2815.50"></text></g><g><title>`0x7FFE2F1A0EDE (2 samples, 0.27%)</title><rect x="0.0000%" y="2789" width="0.2688%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2799.50"></text></g><g><title>`0x7FFE2ECF7B3B (1 samples, 0.13%)</title><rect x="0.1344%" y="2773" width="0.1344%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.3844%" y="2783.50"></text></g><g><title>`0x7FFE2ED0D826 (1 samples, 0.13%)</title><rect x="0.1344%" y="2757" width="0.1344%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.3844%" y="2767.50"></text></g><g><title>`0x7FFE2ED0DA69 (1 samples, 0.13%)</title><rect x="0.1344%" y="2741" width="0.1344%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.3844%" y="2751.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="0.1344%" y="2725" width="0.1344%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.3844%" y="2735.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.13%)</title><rect x="0.1344%" y="2709" width="0.1344%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.3844%" y="2719.50"></text></g><g><title>`0x7FFE2F067842 (1 samples, 0.13%)</title><rect x="0.1344%" y="2693" width="0.1344%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.3844%" y="2703.50"></text></g><g><title>`0x7FFE2F068C1F (1 samples, 0.13%)</title><rect x="0.1344%" y="2677" width="0.1344%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.3844%" y="2687.50"></text></g><g><title>`0x7FFE2F069594 (1 samples, 0.13%)</title><rect x="0.1344%" y="2661" width="0.1344%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.3844%" y="2671.50"></text></g><g><title>`0x7FFE2F0690CA (1 samples, 0.13%)</title><rect x="0.1344%" y="2645" width="0.1344%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="0.3844%" y="2655.50"></text></g><g><title>`0x7FFE2F112BC1 (1 samples, 0.13%)</title><rect x="0.2688%" y="2821" width="0.1344%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.5188%" y="2831.50"></text></g><g><title>`0x7FFE2F0EFCD5 (1 samples, 0.13%)</title><rect x="0.2688%" y="2805" width="0.1344%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="0.5188%" y="2815.50"></text></g><g><title>`0x7FFE2F0EFD57 (1 samples, 0.13%)</title><rect x="0.2688%" y="2789" width="0.1344%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="0.5188%" y="2799.50"></text></g><g><title>`0x7FFE2F1A5264 (1 samples, 0.13%)</title><rect x="0.2688%" y="2773" width="0.1344%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="0.5188%" y="2783.50"></text></g><g><title>`0x7FFE2F113441 (1 samples, 0.13%)</title><rect x="0.4032%" y="2821" width="0.1344%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2831.50"></text></g><g><title>`0x7FFE2F0DF1CB (1 samples, 0.13%)</title><rect x="0.4032%" y="2805" width="0.1344%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2815.50"></text></g><g><title>`0x7FFE2F0DF271 (1 samples, 0.13%)</title><rect x="0.4032%" y="2789" width="0.1344%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2799.50"></text></g><g><title>`0x7FFE2F0DF39A (1 samples, 0.13%)</title><rect x="0.4032%" y="2773" width="0.1344%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2783.50"></text></g><g><title>`0x7FFE2F0DF4D3 (1 samples, 0.13%)</title><rect x="0.4032%" y="2757" width="0.1344%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2767.50"></text></g><g><title>`0x7FFE2F0DF5B2 (1 samples, 0.13%)</title><rect x="0.4032%" y="2741" width="0.1344%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2751.50"></text></g><g><title>`0x7FFE2F15E0E1 (1 samples, 0.13%)</title><rect x="0.4032%" y="2725" width="0.1344%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2735.50"></text></g><g><title>`0x7FFE2F1B37CC (1 samples, 0.13%)</title><rect x="0.4032%" y="2709" width="0.1344%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2719.50"></text></g><g><title>`0x7FFE2F1B383D (1 samples, 0.13%)</title><rect x="0.4032%" y="2693" width="0.1344%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2703.50"></text></g><g><title>`0x7FFE2F1B3435 (1 samples, 0.13%)</title><rect x="0.4032%" y="2677" width="0.1344%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2687.50"></text></g><g><title>`0x7FFE2F1B3446 (1 samples, 0.13%)</title><rect x="0.4032%" y="2661" width="0.1344%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="1"/><text x="0.6532%" y="2671.50"></text></g><g><title>`0x7FFE2F1135B9 (1 samples, 0.13%)</title><rect x="0.5376%" y="2821" width="0.1344%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="1"/><text x="0.7876%" y="2831.50"></text></g><g><title>`0x7FFE2F085613 (1 samples, 0.13%)</title><rect x="0.5376%" y="2805" width="0.1344%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="1"/><text x="0.7876%" y="2815.50"></text></g><g><title>`0x7FFE2F0857A1 (1 samples, 0.13%)</title><rect x="0.5376%" y="2789" width="0.1344%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="1"/><text x="0.7876%" y="2799.50"></text></g><g><title>`0x7FFE2F085482 (1 samples, 0.13%)</title><rect x="0.5376%" y="2773" width="0.1344%" height="15" fill="rgb(233,36,39)" fg:x="4" fg:w="1"/><text x="0.7876%" y="2783.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.13%)</title><rect x="0.5376%" y="2757" width="0.1344%" height="15" fill="rgb(226,3,54)" fg:x="4" fg:w="1"/><text x="0.7876%" y="2767.50"></text></g><g><title>`0x7FFE2F1141D7 (1 samples, 0.13%)</title><rect x="0.6720%" y="2821" width="0.1344%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="0.9220%" y="2831.50"></text></g><g><title>`0x7FFE2F13B821 (1 samples, 0.13%)</title><rect x="0.6720%" y="2805" width="0.1344%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="1"/><text x="0.9220%" y="2815.50"></text></g><g><title>`0x7FFE2F1A35B4 (1 samples, 0.13%)</title><rect x="0.6720%" y="2789" width="0.1344%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="0.9220%" y="2799.50"></text></g><g><title>`0x7FFE2F08BABE (1 samples, 0.13%)</title><rect x="0.8065%" y="2693" width="0.1344%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="1"/><text x="1.0565%" y="2703.50"></text></g><g><title>`0x7FFE2F08D8EE (1 samples, 0.13%)</title><rect x="0.8065%" y="2677" width="0.1344%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="1"/><text x="1.0565%" y="2687.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.13%)</title><rect x="0.8065%" y="2661" width="0.1344%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="1"/><text x="1.0565%" y="2671.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.13%)</title><rect x="0.8065%" y="2645" width="0.1344%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="1"/><text x="1.0565%" y="2655.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.13%)</title><rect x="0.8065%" y="2629" width="0.1344%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="1"/><text x="1.0565%" y="2639.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.13%)</title><rect x="0.8065%" y="2613" width="0.1344%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="1"/><text x="1.0565%" y="2623.50"></text></g><g><title>`0x7FFE2F08A4F2 (2 samples, 0.27%)</title><rect x="0.8065%" y="2757" width="0.2688%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="2"/><text x="1.0565%" y="2767.50"></text></g><g><title>`0x7FFE2F08EF05 (2 samples, 0.27%)</title><rect x="0.8065%" y="2741" width="0.2688%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="2"/><text x="1.0565%" y="2751.50"></text></g><g><title>`0x7FFE2F0AD001 (2 samples, 0.27%)</title><rect x="0.8065%" y="2725" width="0.2688%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="2"/><text x="1.0565%" y="2735.50"></text></g><g><title>`0x7FFE2F0AD5A8 (2 samples, 0.27%)</title><rect x="0.8065%" y="2709" width="0.2688%" height="15" fill="rgb(206,27,48)" fg:x="6" fg:w="2"/><text x="1.0565%" y="2719.50"></text></g><g><title>`0x7FFE2F08BC32 (1 samples, 0.13%)</title><rect x="0.9409%" y="2693" width="0.1344%" height="15" fill="rgb(225,35,8)" fg:x="7" fg:w="1"/><text x="1.1909%" y="2703.50"></text></g><g><title>`0x7FFE2F052F14 (1 samples, 0.13%)</title><rect x="0.9409%" y="2677" width="0.1344%" height="15" fill="rgb(250,213,24)" fg:x="7" fg:w="1"/><text x="1.1909%" y="2687.50"></text></g><g><title>`0x7FFE2F08A51A (1 samples, 0.13%)</title><rect x="1.0753%" y="2757" width="0.1344%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="1"/><text x="1.3253%" y="2767.50"></text></g><g><title>`0x7FFE2F0AFC27 (1 samples, 0.13%)</title><rect x="1.0753%" y="2741" width="0.1344%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="1"/><text x="1.3253%" y="2751.50"></text></g><g><title>`0x7FFE2F0AFDA1 (1 samples, 0.13%)</title><rect x="1.0753%" y="2725" width="0.1344%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="1"/><text x="1.3253%" y="2735.50"></text></g><g><title>`0x7FFE2F052EE9 (1 samples, 0.13%)</title><rect x="1.0753%" y="2709" width="0.1344%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="1"/><text x="1.3253%" y="2719.50"></text></g><g><title>`0x7FFE2C8C3FFD (1 samples, 0.13%)</title><rect x="1.2097%" y="2645" width="0.1344%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="1"/><text x="1.4597%" y="2655.50"></text></g><g><title>`0x7FFE2C7F4AA3 (1 samples, 0.13%)</title><rect x="1.2097%" y="2629" width="0.1344%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="1"/><text x="1.4597%" y="2639.50"></text></g><g><title>`0x7FFE2C7F347F (1 samples, 0.13%)</title><rect x="1.2097%" y="2613" width="0.1344%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="1.4597%" y="2623.50"></text></g><g><title>`0x7FFE2C7F29E7 (1 samples, 0.13%)</title><rect x="1.2097%" y="2597" width="0.1344%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="1.4597%" y="2607.50"></text></g><g><title>`0x7FFE2C7F444B (1 samples, 0.13%)</title><rect x="1.2097%" y="2581" width="0.1344%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="1.4597%" y="2591.50"></text></g><g><title>`0x7FFE2C7F4DC4 (1 samples, 0.13%)</title><rect x="1.2097%" y="2565" width="0.1344%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="1.4597%" y="2575.50"></text></g><g><title>`0x7FFE2F1A3314 (1 samples, 0.13%)</title><rect x="1.2097%" y="2549" width="0.1344%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="1.4597%" y="2559.50"></text></g><g><title>`0x7FFE2C8C40AF (1 samples, 0.13%)</title><rect x="1.3441%" y="2645" width="0.1344%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2655.50"></text></g><g><title>`0x7FFE2C86E871 (1 samples, 0.13%)</title><rect x="1.3441%" y="2629" width="0.1344%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2639.50"></text></g><g><title>`0x7FFE2C86E5F3 (1 samples, 0.13%)</title><rect x="1.3441%" y="2613" width="0.1344%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2623.50"></text></g><g><title>`0x7FFE2C83D629 (1 samples, 0.13%)</title><rect x="1.3441%" y="2597" width="0.1344%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2607.50"></text></g><g><title>`0x7FFE2C83CAE8 (1 samples, 0.13%)</title><rect x="1.3441%" y="2581" width="0.1344%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2591.50"></text></g><g><title>`0x7FFE2C810726 (1 samples, 0.13%)</title><rect x="1.3441%" y="2565" width="0.1344%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2575.50"></text></g><g><title>`0x7FFE2F0896F7 (1 samples, 0.13%)</title><rect x="1.3441%" y="2549" width="0.1344%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2559.50"></text></g><g><title>`0x7FFE2F0893F8 (1 samples, 0.13%)</title><rect x="1.3441%" y="2533" width="0.1344%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2543.50"></text></g><g><title>`0x7FFE2F0BB507 (1 samples, 0.13%)</title><rect x="1.3441%" y="2517" width="0.1344%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2527.50"></text></g><g><title>`0x7FFE2F164571 (1 samples, 0.13%)</title><rect x="1.3441%" y="2501" width="0.1344%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2511.50"></text></g><g><title>`0x7FFE2F1645E8 (1 samples, 0.13%)</title><rect x="1.3441%" y="2485" width="0.1344%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2495.50"></text></g><g><title>`0x7FFE2F16A221 (1 samples, 0.13%)</title><rect x="1.3441%" y="2469" width="0.1344%" height="15" fill="rgb(233,84,52)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2479.50"></text></g><g><title>`0x7FFE2F1A9810 (1 samples, 0.13%)</title><rect x="1.3441%" y="2453" width="0.1344%" height="15" fill="rgb(207,117,47)" fg:x="10" fg:w="1"/><text x="1.5941%" y="2463.50"></text></g><g><title>`0x7FFE2F10B934 (6 samples, 0.81%)</title><rect x="0.8065%" y="2805" width="0.8065%" height="15" fill="rgb(249,43,39)" fg:x="6" fg:w="6"/><text x="1.0565%" y="2815.50"></text></g><g><title>`0x7FFE2F054FB0 (6 samples, 0.81%)</title><rect x="0.8065%" y="2789" width="0.8065%" height="15" fill="rgb(209,38,44)" fg:x="6" fg:w="6"/><text x="1.0565%" y="2799.50"></text></g><g><title>`0x7FFE2F08A190 (6 samples, 0.81%)</title><rect x="0.8065%" y="2773" width="0.8065%" height="15" fill="rgb(236,212,23)" fg:x="6" fg:w="6"/><text x="1.0565%" y="2783.50"></text></g><g><title>`0x7FFE2F08A584 (3 samples, 0.40%)</title><rect x="1.2097%" y="2757" width="0.4032%" height="15" fill="rgb(242,79,21)" fg:x="9" fg:w="3"/><text x="1.4597%" y="2767.50"></text></g><g><title>`0x7FFE2F047883 (3 samples, 0.40%)</title><rect x="1.2097%" y="2741" width="0.4032%" height="15" fill="rgb(211,96,35)" fg:x="9" fg:w="3"/><text x="1.4597%" y="2751.50"></text></g><g><title>`0x7FFE2F048726 (3 samples, 0.40%)</title><rect x="1.2097%" y="2725" width="0.4032%" height="15" fill="rgb(253,215,40)" fg:x="9" fg:w="3"/><text x="1.4597%" y="2735.50"></text></g><g><title>`0x7FFE2F0486FA (3 samples, 0.40%)</title><rect x="1.2097%" y="2709" width="0.4032%" height="15" fill="rgb(211,81,21)" fg:x="9" fg:w="3"/><text x="1.4597%" y="2719.50"></text></g><g><title>`0x7FFE2F0B37AC (3 samples, 0.40%)</title><rect x="1.2097%" y="2693" width="0.4032%" height="15" fill="rgb(208,190,38)" fg:x="9" fg:w="3"/><text x="1.4597%" y="2703.50"></text></g><g><title>`0x7FFE2F0B483E (3 samples, 0.40%)</title><rect x="1.2097%" y="2677" width="0.4032%" height="15" fill="rgb(235,213,38)" fg:x="9" fg:w="3"/><text x="1.4597%" y="2687.50"></text></g><g><title>`0x7FFE2F1A0EDE (3 samples, 0.40%)</title><rect x="1.2097%" y="2661" width="0.4032%" height="15" fill="rgb(237,122,38)" fg:x="9" fg:w="3"/><text x="1.4597%" y="2671.50"></text></g><g><title>`0x7FFE2C8C40B9 (1 samples, 0.13%)</title><rect x="1.4785%" y="2645" width="0.1344%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2655.50"></text></g><g><title>`0x7FFE2C8C4318 (1 samples, 0.13%)</title><rect x="1.4785%" y="2629" width="0.1344%" height="15" fill="rgb(240,68,47)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2639.50"></text></g><g><title>`0x7FFE2C8C43EA (1 samples, 0.13%)</title><rect x="1.4785%" y="2613" width="0.1344%" height="15" fill="rgb(210,16,53)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2623.50"></text></g><g><title>`0x7FFE2C8C472B (1 samples, 0.13%)</title><rect x="1.4785%" y="2597" width="0.1344%" height="15" fill="rgb(235,124,12)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2607.50"></text></g><g><title>`0x7FFE2C83FDEA (1 samples, 0.13%)</title><rect x="1.4785%" y="2581" width="0.1344%" height="15" fill="rgb(224,169,11)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2591.50"></text></g><g><title>`0x7FFE2C840D33 (1 samples, 0.13%)</title><rect x="1.4785%" y="2565" width="0.1344%" height="15" fill="rgb(250,166,2)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2575.50"></text></g><g><title>`0x7FFE2C8AB670 (1 samples, 0.13%)</title><rect x="1.4785%" y="2549" width="0.1344%" height="15" fill="rgb(242,216,29)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2559.50"></text></g><g><title>`0x7FFE2C8AB74E (1 samples, 0.13%)</title><rect x="1.4785%" y="2533" width="0.1344%" height="15" fill="rgb(230,116,27)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2543.50"></text></g><g><title>`0x7FFE2C8AB983 (1 samples, 0.13%)</title><rect x="1.4785%" y="2517" width="0.1344%" height="15" fill="rgb(228,99,48)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2527.50"></text></g><g><title>`0x7FFE2C8ABC91 (1 samples, 0.13%)</title><rect x="1.4785%" y="2501" width="0.1344%" height="15" fill="rgb(253,11,6)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2511.50"></text></g><g><title>`0x7FFE2C8ABD71 (1 samples, 0.13%)</title><rect x="1.4785%" y="2485" width="0.1344%" height="15" fill="rgb(247,143,39)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2495.50"></text></g><g><title>`0x7FFE2C810726 (1 samples, 0.13%)</title><rect x="1.4785%" y="2469" width="0.1344%" height="15" fill="rgb(236,97,10)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2479.50"></text></g><g><title>`0x7FFE2F0896F7 (1 samples, 0.13%)</title><rect x="1.4785%" y="2453" width="0.1344%" height="15" fill="rgb(233,208,19)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2463.50"></text></g><g><title>`0x7FFE2F0893F8 (1 samples, 0.13%)</title><rect x="1.4785%" y="2437" width="0.1344%" height="15" fill="rgb(216,164,2)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2447.50"></text></g><g><title>`0x7FFE2F0BB56F (1 samples, 0.13%)</title><rect x="1.4785%" y="2421" width="0.1344%" height="15" fill="rgb(220,129,5)" fg:x="11" fg:w="1"/><text x="1.7285%" y="2431.50"></text></g><g><title>`0x7FFE2F10B9A9 (1 samples, 0.13%)</title><rect x="1.6129%" y="2805" width="0.1344%" height="15" fill="rgb(242,17,10)" fg:x="12" fg:w="1"/><text x="1.8629%" y="2815.50"></text></g><g><title>`0x7FFE2F0B170D (1 samples, 0.13%)</title><rect x="1.6129%" y="2789" width="0.1344%" height="15" fill="rgb(242,107,0)" fg:x="12" fg:w="1"/><text x="1.8629%" y="2799.50"></text></g><g><title>`0x7FFE2F0B31AB (1 samples, 0.13%)</title><rect x="1.6129%" y="2773" width="0.1344%" height="15" fill="rgb(251,28,31)" fg:x="12" fg:w="1"/><text x="1.8629%" y="2783.50"></text></g><g><title>`0x7FFE2F114345 (8 samples, 1.08%)</title><rect x="0.8065%" y="2821" width="1.0753%" height="15" fill="rgb(233,223,10)" fg:x="6" fg:w="8"/><text x="1.0565%" y="2831.50"></text></g><g><title>`0x7FFE2F10B9D9 (1 samples, 0.13%)</title><rect x="1.7473%" y="2805" width="0.1344%" height="15" fill="rgb(215,21,27)" fg:x="13" fg:w="1"/><text x="1.9973%" y="2815.50"></text></g><g><title>`0x7FFE2F054385 (1 samples, 0.13%)</title><rect x="1.7473%" y="2789" width="0.1344%" height="15" fill="rgb(232,23,21)" fg:x="13" fg:w="1"/><text x="1.9973%" y="2799.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="1.7473%" y="2773" width="0.1344%" height="15" fill="rgb(244,5,23)" fg:x="13" fg:w="1"/><text x="1.9973%" y="2783.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.13%)</title><rect x="1.8817%" y="2757" width="0.1344%" height="15" fill="rgb(226,81,46)" fg:x="14" fg:w="1"/><text x="2.1317%" y="2767.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.13%)</title><rect x="1.8817%" y="2741" width="0.1344%" height="15" fill="rgb(247,70,30)" fg:x="14" fg:w="1"/><text x="2.1317%" y="2751.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.13%)</title><rect x="1.8817%" y="2725" width="0.1344%" height="15" fill="rgb(212,68,19)" fg:x="14" fg:w="1"/><text x="2.1317%" y="2735.50"></text></g><g><title>`0x7FFE2F08D70B (1 samples, 0.13%)</title><rect x="2.0161%" y="2661" width="0.1344%" height="15" fill="rgb(240,187,13)" fg:x="15" fg:w="1"/><text x="2.2661%" y="2671.50"></text></g><g><title>`0x7FFE2F0BB3CA (1 samples, 0.13%)</title><rect x="2.0161%" y="2645" width="0.1344%" height="15" fill="rgb(223,113,26)" fg:x="15" fg:w="1"/><text x="2.2661%" y="2655.50"></text></g><g><title>`0x7FFE2F0AD840 (1 samples, 0.13%)</title><rect x="2.1505%" y="2613" width="0.1344%" height="15" fill="rgb(206,192,2)" fg:x="16" fg:w="1"/><text x="2.4005%" y="2623.50"></text></g><g><title>`0x7FFE2F0BB507 (1 samples, 0.13%)</title><rect x="2.1505%" y="2597" width="0.1344%" height="15" fill="rgb(241,108,4)" fg:x="16" fg:w="1"/><text x="2.4005%" y="2607.50"></text></g><g><title>`0x7FFE2F164571 (1 samples, 0.13%)</title><rect x="2.1505%" y="2581" width="0.1344%" height="15" fill="rgb(247,173,49)" fg:x="16" fg:w="1"/><text x="2.4005%" y="2591.50"></text></g><g><title>`0x7FFE2F1645E8 (1 samples, 0.13%)</title><rect x="2.1505%" y="2565" width="0.1344%" height="15" fill="rgb(224,114,35)" fg:x="16" fg:w="1"/><text x="2.4005%" y="2575.50"></text></g><g><title>`0x7FFE2F16A731 (1 samples, 0.13%)</title><rect x="2.1505%" y="2549" width="0.1344%" height="15" fill="rgb(245,159,27)" fg:x="16" fg:w="1"/><text x="2.4005%" y="2559.50"></text></g><g><title>`0x7FFE2F16DE83 (1 samples, 0.13%)</title><rect x="2.1505%" y="2533" width="0.1344%" height="15" fill="rgb(245,172,44)" fg:x="16" fg:w="1"/><text x="2.4005%" y="2543.50"></text></g><g><title>`0x7FFE2F16DE47 (1 samples, 0.13%)</title><rect x="2.1505%" y="2517" width="0.1344%" height="15" fill="rgb(236,23,11)" fg:x="16" fg:w="1"/><text x="2.4005%" y="2527.50"></text></g><g><title>`0x7FFE2F0ABE26 (1 samples, 0.13%)</title><rect x="2.1505%" y="2501" width="0.1344%" height="15" fill="rgb(205,117,38)" fg:x="16" fg:w="1"/><text x="2.4005%" y="2511.50"></text></g><g><title>`0x7FFE2F0AD42E (2 samples, 0.27%)</title><rect x="2.1505%" y="2629" width="0.2688%" height="15" fill="rgb(237,72,25)" fg:x="16" fg:w="2"/><text x="2.4005%" y="2639.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.13%)</title><rect x="2.2849%" y="2613" width="0.1344%" height="15" fill="rgb(244,70,9)" fg:x="17" fg:w="1"/><text x="2.5349%" y="2623.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.13%)</title><rect x="2.2849%" y="2597" width="0.1344%" height="15" fill="rgb(217,125,39)" fg:x="17" fg:w="1"/><text x="2.5349%" y="2607.50"></text></g><g><title>`0x7FFE2F0AD5A8 (1 samples, 0.13%)</title><rect x="2.4194%" y="2565" width="0.1344%" height="15" fill="rgb(235,36,10)" fg:x="18" fg:w="1"/><text x="2.6694%" y="2575.50"></text></g><g><title>`0x7FFE2F08BABE (1 samples, 0.13%)</title><rect x="2.4194%" y="2549" width="0.1344%" height="15" fill="rgb(251,123,47)" fg:x="18" fg:w="1"/><text x="2.6694%" y="2559.50"></text></g><g><title>`0x7FFE2F08CC84 (1 samples, 0.13%)</title><rect x="2.4194%" y="2533" width="0.1344%" height="15" fill="rgb(221,13,13)" fg:x="18" fg:w="1"/><text x="2.6694%" y="2543.50"></text></g><g><title>`0x7FFE2F08F0FF (1 samples, 0.13%)</title><rect x="2.4194%" y="2517" width="0.1344%" height="15" fill="rgb(238,131,9)" fg:x="18" fg:w="1"/><text x="2.6694%" y="2527.50"></text></g><g><title>`0x7FFE2F0AD5A8 (5 samples, 0.67%)</title><rect x="2.0161%" y="2693" width="0.6720%" height="15" fill="rgb(211,50,8)" fg:x="15" fg:w="5"/><text x="2.2661%" y="2703.50"></text></g><g><title>`0x7FFE2F08BABE (5 samples, 0.67%)</title><rect x="2.0161%" y="2677" width="0.6720%" height="15" fill="rgb(245,182,24)" fg:x="15" fg:w="5"/><text x="2.2661%" y="2687.50"></text></g><g><title>`0x7FFE2F08D8EE (4 samples, 0.54%)</title><rect x="2.1505%" y="2661" width="0.5376%" height="15" fill="rgb(242,14,37)" fg:x="16" fg:w="4"/><text x="2.4005%" y="2671.50"></text></g><g><title>`0x7FFE2F0AD001 (4 samples, 0.54%)</title><rect x="2.1505%" y="2645" width="0.5376%" height="15" fill="rgb(246,228,12)" fg:x="16" fg:w="4"/><text x="2.4005%" y="2655.50"></text></g><g><title>`0x7FFE2F0AD5A8 (2 samples, 0.27%)</title><rect x="2.4194%" y="2629" width="0.2688%" height="15" fill="rgb(213,55,15)" fg:x="18" fg:w="2"/><text x="2.6694%" y="2639.50"></text></g><g><title>`0x7FFE2F08BABE (2 samples, 0.27%)</title><rect x="2.4194%" y="2613" width="0.2688%" height="15" fill="rgb(209,9,3)" fg:x="18" fg:w="2"/><text x="2.6694%" y="2623.50"></text></g><g><title>`0x7FFE2F08D8EE (2 samples, 0.27%)</title><rect x="2.4194%" y="2597" width="0.2688%" height="15" fill="rgb(230,59,30)" fg:x="18" fg:w="2"/><text x="2.6694%" y="2607.50"></text></g><g><title>`0x7FFE2F0AD001 (2 samples, 0.27%)</title><rect x="2.4194%" y="2581" width="0.2688%" height="15" fill="rgb(209,121,21)" fg:x="18" fg:w="2"/><text x="2.6694%" y="2591.50"></text></g><g><title>`0x7FFE2F0AD64C (1 samples, 0.13%)</title><rect x="2.5538%" y="2565" width="0.1344%" height="15" fill="rgb(220,109,13)" fg:x="19" fg:w="1"/><text x="2.8038%" y="2575.50"></text></g><g><title>`0x7FFE2F0AE1BA (1 samples, 0.13%)</title><rect x="2.5538%" y="2549" width="0.1344%" height="15" fill="rgb(232,18,1)" fg:x="19" fg:w="1"/><text x="2.8038%" y="2559.50"></text></g><g><title>`0x7FFE2F064A29 (1 samples, 0.13%)</title><rect x="2.5538%" y="2533" width="0.1344%" height="15" fill="rgb(215,41,42)" fg:x="19" fg:w="1"/><text x="2.8038%" y="2543.50"></text></g><g><title>`0x7FFE2F064564 (1 samples, 0.13%)</title><rect x="2.5538%" y="2517" width="0.1344%" height="15" fill="rgb(224,123,36)" fg:x="19" fg:w="1"/><text x="2.8038%" y="2527.50"></text></g><g><title>`0x7FFE2F1A35B4 (1 samples, 0.13%)</title><rect x="2.5538%" y="2501" width="0.1344%" height="15" fill="rgb(240,125,3)" fg:x="19" fg:w="1"/><text x="2.8038%" y="2511.50"></text></g><g><title>`0x7FFE2F0AE13D (1 samples, 0.13%)</title><rect x="2.6882%" y="2677" width="0.1344%" height="15" fill="rgb(205,98,50)" fg:x="20" fg:w="1"/><text x="2.9382%" y="2687.50"></text></g><g><title>`0x7FFE2F06247B (1 samples, 0.13%)</title><rect x="2.6882%" y="2661" width="0.1344%" height="15" fill="rgb(205,185,37)" fg:x="20" fg:w="1"/><text x="2.9382%" y="2671.50"></text></g><g><title>`0x7FFE2F0AD5A8 (7 samples, 0.94%)</title><rect x="2.0161%" y="2757" width="0.9409%" height="15" fill="rgb(238,207,15)" fg:x="15" fg:w="7"/><text x="2.2661%" y="2767.50"></text></g><g><title>`0x7FFE2F08BABE (7 samples, 0.94%)</title><rect x="2.0161%" y="2741" width="0.9409%" height="15" fill="rgb(213,199,42)" fg:x="15" fg:w="7"/><text x="2.2661%" y="2751.50"></text></g><g><title>`0x7FFE2F08D8EE (7 samples, 0.94%)</title><rect x="2.0161%" y="2725" width="0.9409%" height="15" fill="rgb(235,201,11)" fg:x="15" fg:w="7"/><text x="2.2661%" y="2735.50"></text></g><g><title>`0x7FFE2F0AD001 (7 samples, 0.94%)</title><rect x="2.0161%" y="2709" width="0.9409%" height="15" fill="rgb(207,46,11)" fg:x="15" fg:w="7"/><text x="2.2661%" y="2719.50"></text></g><g><title>`0x7FFE2F0AD64C (2 samples, 0.27%)</title><rect x="2.6882%" y="2693" width="0.2688%" height="15" fill="rgb(241,35,35)" fg:x="20" fg:w="2"/><text x="2.9382%" y="2703.50"></text></g><g><title>`0x7FFE2F0AE175 (1 samples, 0.13%)</title><rect x="2.8226%" y="2677" width="0.1344%" height="15" fill="rgb(243,32,47)" fg:x="21" fg:w="1"/><text x="3.0726%" y="2687.50"></text></g><g><title>`0x7FFE2F0613E9 (1 samples, 0.13%)</title><rect x="2.8226%" y="2661" width="0.1344%" height="15" fill="rgb(247,202,23)" fg:x="21" fg:w="1"/><text x="3.0726%" y="2671.50"></text></g><g><title>`0x7FFE2F060A2F (1 samples, 0.13%)</title><rect x="2.8226%" y="2645" width="0.1344%" height="15" fill="rgb(219,102,11)" fg:x="21" fg:w="1"/><text x="3.0726%" y="2655.50"></text></g><g><title>`0x7FFE2F0AD001 (9 samples, 1.21%)</title><rect x="1.8817%" y="2773" width="1.2097%" height="15" fill="rgb(243,110,44)" fg:x="14" fg:w="9"/><text x="2.1317%" y="2783.50"></text></g><g><title>`0x7FFE2F0AD64C (1 samples, 0.13%)</title><rect x="2.9570%" y="2757" width="0.1344%" height="15" fill="rgb(222,74,54)" fg:x="22" fg:w="1"/><text x="3.2070%" y="2767.50"></text></g><g><title>`0x7FFE2F0AE13D (1 samples, 0.13%)</title><rect x="2.9570%" y="2741" width="0.1344%" height="15" fill="rgb(216,99,12)" fg:x="22" fg:w="1"/><text x="3.2070%" y="2751.50"></text></g><g><title>`0x7FFE2F06247B (1 samples, 0.13%)</title><rect x="2.9570%" y="2725" width="0.1344%" height="15" fill="rgb(226,22,26)" fg:x="22" fg:w="1"/><text x="3.2070%" y="2735.50"></text></g><g><title>`0x7FFE2F11444F (10 samples, 1.34%)</title><rect x="1.8817%" y="2821" width="1.3441%" height="15" fill="rgb(217,163,10)" fg:x="14" fg:w="10"/><text x="2.1317%" y="2831.50"></text></g><g><title>`0x7FFE2F08BABE (10 samples, 1.34%)</title><rect x="1.8817%" y="2805" width="1.3441%" height="15" fill="rgb(213,25,53)" fg:x="14" fg:w="10"/><text x="2.1317%" y="2815.50"></text></g><g><title>`0x7FFE2F08D8EE (10 samples, 1.34%)</title><rect x="1.8817%" y="2789" width="1.3441%" height="15" fill="rgb(252,105,26)" fg:x="14" fg:w="10"/><text x="2.1317%" y="2799.50"></text></g><g><title>`0x7FFE2F0AD00D (1 samples, 0.13%)</title><rect x="3.0914%" y="2773" width="0.1344%" height="15" fill="rgb(220,39,43)" fg:x="23" fg:w="1"/><text x="3.3414%" y="2783.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="3.0914%" y="2757" width="0.1344%" height="15" fill="rgb(229,68,48)" fg:x="23" fg:w="1"/><text x="3.3414%" y="2767.50"></text></g><g><title>`0x7FFE2F114457 (1 samples, 0.13%)</title><rect x="3.2258%" y="2821" width="0.1344%" height="15" fill="rgb(252,8,32)" fg:x="24" fg:w="1"/><text x="3.4758%" y="2831.50"></text></g><g><title>`0x7FFE2F0AFC27 (1 samples, 0.13%)</title><rect x="3.2258%" y="2805" width="0.1344%" height="15" fill="rgb(223,20,43)" fg:x="24" fg:w="1"/><text x="3.4758%" y="2815.50"></text></g><g><title>`0x7FFE2F0AFCDA (1 samples, 0.13%)</title><rect x="3.2258%" y="2789" width="0.1344%" height="15" fill="rgb(229,81,49)" fg:x="24" fg:w="1"/><text x="3.4758%" y="2799.50"></text></g><g><title>`0x7FFE2F0B00AC (1 samples, 0.13%)</title><rect x="3.2258%" y="2773" width="0.1344%" height="15" fill="rgb(236,28,36)" fg:x="24" fg:w="1"/><text x="3.4758%" y="2783.50"></text></g><g><title>`0x7FFE2F0B24CC (1 samples, 0.13%)</title><rect x="3.2258%" y="2757" width="0.1344%" height="15" fill="rgb(249,185,26)" fg:x="24" fg:w="1"/><text x="3.4758%" y="2767.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.13%)</title><rect x="3.2258%" y="2741" width="0.1344%" height="15" fill="rgb(249,174,33)" fg:x="24" fg:w="1"/><text x="3.4758%" y="2751.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.13%)</title><rect x="3.2258%" y="2725" width="0.1344%" height="15" fill="rgb(233,201,37)" fg:x="24" fg:w="1"/><text x="3.4758%" y="2735.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.13%)</title><rect x="3.2258%" y="2709" width="0.1344%" height="15" fill="rgb(221,78,26)" fg:x="24" fg:w="1"/><text x="3.4758%" y="2719.50"></text></g><g><title>`0x7FFE2C2003B2 (1 samples, 0.13%)</title><rect x="3.3602%" y="2725" width="0.1344%" height="15" fill="rgb(250,127,30)" fg:x="25" fg:w="1"/><text x="3.6102%" y="2735.50"></text></g><g><title>`0x7FFE2C20064D (1 samples, 0.13%)</title><rect x="3.3602%" y="2709" width="0.1344%" height="15" fill="rgb(230,49,44)" fg:x="25" fg:w="1"/><text x="3.6102%" y="2719.50"></text></g><g><title>`0x7FFE2C219554 (1 samples, 0.13%)</title><rect x="3.3602%" y="2693" width="0.1344%" height="15" fill="rgb(229,67,23)" fg:x="25" fg:w="1"/><text x="3.6102%" y="2703.50"></text></g><g><title>`0x7FFE2F085613 (1 samples, 0.13%)</title><rect x="3.3602%" y="2677" width="0.1344%" height="15" fill="rgb(249,83,47)" fg:x="25" fg:w="1"/><text x="3.6102%" y="2687.50"></text></g><g><title>`0x7FFE2F0857A1 (1 samples, 0.13%)</title><rect x="3.3602%" y="2661" width="0.1344%" height="15" fill="rgb(215,43,3)" fg:x="25" fg:w="1"/><text x="3.6102%" y="2671.50"></text></g><g><title>`0x7FFE2F085482 (1 samples, 0.13%)</title><rect x="3.3602%" y="2645" width="0.1344%" height="15" fill="rgb(238,154,13)" fg:x="25" fg:w="1"/><text x="3.6102%" y="2655.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.13%)</title><rect x="3.3602%" y="2629" width="0.1344%" height="15" fill="rgb(219,56,2)" fg:x="25" fg:w="1"/><text x="3.6102%" y="2639.50"></text></g><g><title>`0x7FFE2E415ADB (1 samples, 0.13%)</title><rect x="3.4946%" y="2725" width="0.1344%" height="15" fill="rgb(233,0,4)" fg:x="26" fg:w="1"/><text x="3.7446%" y="2735.50"></text></g><g><title>`0x7FFE2E415962 (1 samples, 0.13%)</title><rect x="3.4946%" y="2709" width="0.1344%" height="15" fill="rgb(235,30,7)" fg:x="26" fg:w="1"/><text x="3.7446%" y="2719.50"></text></g><g><title>`0x7FFE2C53E716 (1 samples, 0.13%)</title><rect x="3.4946%" y="2693" width="0.1344%" height="15" fill="rgb(250,79,13)" fg:x="26" fg:w="1"/><text x="3.7446%" y="2703.50"></text></g><g><title>`0x7FFE2E22A9A0 (1 samples, 0.13%)</title><rect x="3.4946%" y="2677" width="0.1344%" height="15" fill="rgb(211,146,34)" fg:x="26" fg:w="1"/><text x="3.7446%" y="2687.50"></text></g><g><title>`0x7FFE2E32CFFF (1 samples, 0.13%)</title><rect x="3.4946%" y="2661" width="0.1344%" height="15" fill="rgb(228,22,38)" fg:x="26" fg:w="1"/><text x="3.7446%" y="2671.50"></text></g><g><title>`0x7FFE2E415AF6 (1 samples, 0.13%)</title><rect x="3.6290%" y="2725" width="0.1344%" height="15" fill="rgb(235,168,5)" fg:x="27" fg:w="1"/><text x="3.8790%" y="2735.50"></text></g><g><title>`0x7FFE2E27ED46 (1 samples, 0.13%)</title><rect x="3.6290%" y="2709" width="0.1344%" height="15" fill="rgb(221,155,16)" fg:x="27" fg:w="1"/><text x="3.8790%" y="2719.50"></text></g><g><title>`0x7FFE2C8D2D20 (1 samples, 0.13%)</title><rect x="3.6290%" y="2693" width="0.1344%" height="15" fill="rgb(215,215,53)" fg:x="27" fg:w="1"/><text x="3.8790%" y="2703.50"></text></g><g><title>`0x7FFE2F0486FA (4 samples, 0.54%)</title><rect x="3.3602%" y="2789" width="0.5376%" height="15" fill="rgb(223,4,10)" fg:x="25" fg:w="4"/><text x="3.6102%" y="2799.50"></text></g><g><title>`0x7FFE2F0B37AC (4 samples, 0.54%)</title><rect x="3.3602%" y="2773" width="0.5376%" height="15" fill="rgb(234,103,6)" fg:x="25" fg:w="4"/><text x="3.6102%" y="2783.50"></text></g><g><title>`0x7FFE2F0B483E (4 samples, 0.54%)</title><rect x="3.3602%" y="2757" width="0.5376%" height="15" fill="rgb(227,97,0)" fg:x="25" fg:w="4"/><text x="3.6102%" y="2767.50"></text></g><g><title>`0x7FFE2F1A0EDE (4 samples, 0.54%)</title><rect x="3.3602%" y="2741" width="0.5376%" height="15" fill="rgb(234,150,53)" fg:x="25" fg:w="4"/><text x="3.6102%" y="2751.50"></text></g><g><title>`0x7FFE2EB96366 (1 samples, 0.13%)</title><rect x="3.7634%" y="2725" width="0.1344%" height="15" fill="rgb(228,201,54)" fg:x="28" fg:w="1"/><text x="4.0134%" y="2735.50"></text></g><g><title>`0x7FFE2EB9198D (1 samples, 0.13%)</title><rect x="3.7634%" y="2709" width="0.1344%" height="15" fill="rgb(222,22,37)" fg:x="28" fg:w="1"/><text x="4.0134%" y="2719.50"></text></g><g><title>`0x7FFE2C810726 (1 samples, 0.13%)</title><rect x="3.7634%" y="2693" width="0.1344%" height="15" fill="rgb(237,53,32)" fg:x="28" fg:w="1"/><text x="4.0134%" y="2703.50"></text></g><g><title>`0x7FFE2F0896F7 (1 samples, 0.13%)</title><rect x="3.7634%" y="2677" width="0.1344%" height="15" fill="rgb(233,25,53)" fg:x="28" fg:w="1"/><text x="4.0134%" y="2687.50"></text></g><g><title>`0x7FFE2F0894E2 (1 samples, 0.13%)</title><rect x="3.7634%" y="2661" width="0.1344%" height="15" fill="rgb(210,40,34)" fg:x="28" fg:w="1"/><text x="4.0134%" y="2671.50"></text></g><g><title>`0x7FFE2F0B0BB0 (1 samples, 0.13%)</title><rect x="3.7634%" y="2645" width="0.1344%" height="15" fill="rgb(241,220,44)" fg:x="28" fg:w="1"/><text x="4.0134%" y="2655.50"></text></g><g><title>`0x7FFE2F0B0EE3 (1 samples, 0.13%)</title><rect x="3.7634%" y="2629" width="0.1344%" height="15" fill="rgb(235,28,35)" fg:x="28" fg:w="1"/><text x="4.0134%" y="2639.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="3.7634%" y="2613" width="0.1344%" height="15" fill="rgb(210,56,17)" fg:x="28" fg:w="1"/><text x="4.0134%" y="2623.50"></text></g><g><title>`0x7FFE2C41839B (1 samples, 0.13%)</title><rect x="3.8978%" y="2709" width="0.1344%" height="15" fill="rgb(224,130,29)" fg:x="29" fg:w="1"/><text x="4.1478%" y="2719.50"></text></g><g><title>`0x7FFE2C418222 (1 samples, 0.13%)</title><rect x="3.8978%" y="2693" width="0.1344%" height="15" fill="rgb(235,212,8)" fg:x="29" fg:w="1"/><text x="4.1478%" y="2703.50"></text></g><g><title>`0x7FFE2C53E716 (1 samples, 0.13%)</title><rect x="3.8978%" y="2677" width="0.1344%" height="15" fill="rgb(223,33,50)" fg:x="29" fg:w="1"/><text x="4.1478%" y="2687.50"></text></g><g><title>`0x7FFE2C40DB30 (1 samples, 0.13%)</title><rect x="3.8978%" y="2661" width="0.1344%" height="15" fill="rgb(219,149,13)" fg:x="29" fg:w="1"/><text x="4.1478%" y="2671.50"></text></g><g><title>`0x7FFE2C3FA437 (1 samples, 0.13%)</title><rect x="3.8978%" y="2645" width="0.1344%" height="15" fill="rgb(250,156,29)" fg:x="29" fg:w="1"/><text x="4.1478%" y="2655.50"></text></g><g><title>`0x7FFE2C3FA6A5 (1 samples, 0.13%)</title><rect x="3.8978%" y="2629" width="0.1344%" height="15" fill="rgb(216,193,19)" fg:x="29" fg:w="1"/><text x="4.1478%" y="2639.50"></text></g><g><title>`0x7FFE2C50F966 (1 samples, 0.13%)</title><rect x="3.8978%" y="2613" width="0.1344%" height="15" fill="rgb(216,135,14)" fg:x="29" fg:w="1"/><text x="4.1478%" y="2623.50"></text></g><g><title>`0x7FFE2C4E42A5 (1 samples, 0.13%)</title><rect x="3.8978%" y="2597" width="0.1344%" height="15" fill="rgb(241,47,5)" fg:x="29" fg:w="1"/><text x="4.1478%" y="2607.50"></text></g><g><title>`0x7FFE2DE9DC26 (1 samples, 0.13%)</title><rect x="4.0323%" y="2709" width="0.1344%" height="15" fill="rgb(233,42,35)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2719.50"></text></g><g><title>`0x7FFE2DE6568C (1 samples, 0.13%)</title><rect x="4.0323%" y="2693" width="0.1344%" height="15" fill="rgb(231,13,6)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2703.50"></text></g><g><title>`0x7FFE2C7FDD0F (1 samples, 0.13%)</title><rect x="4.0323%" y="2677" width="0.1344%" height="15" fill="rgb(207,181,40)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2687.50"></text></g><g><title>`0x7FFE2F054FB0 (1 samples, 0.13%)</title><rect x="4.0323%" y="2661" width="0.1344%" height="15" fill="rgb(254,173,49)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2671.50"></text></g><g><title>`0x7FFE2F08A190 (1 samples, 0.13%)</title><rect x="4.0323%" y="2645" width="0.1344%" height="15" fill="rgb(221,1,38)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2655.50"></text></g><g><title>`0x7FFE2F08A4F2 (1 samples, 0.13%)</title><rect x="4.0323%" y="2629" width="0.1344%" height="15" fill="rgb(206,124,46)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2639.50"></text></g><g><title>`0x7FFE2F08EF05 (1 samples, 0.13%)</title><rect x="4.0323%" y="2613" width="0.1344%" height="15" fill="rgb(249,21,11)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2623.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.13%)</title><rect x="4.0323%" y="2597" width="0.1344%" height="15" fill="rgb(222,201,40)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2607.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.13%)</title><rect x="4.0323%" y="2581" width="0.1344%" height="15" fill="rgb(235,61,29)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2591.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.13%)</title><rect x="4.0323%" y="2565" width="0.1344%" height="15" fill="rgb(219,207,3)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2575.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.13%)</title><rect x="4.0323%" y="2549" width="0.1344%" height="15" fill="rgb(222,56,46)" fg:x="30" fg:w="1"/><text x="4.2823%" y="2559.50"></text></g><g><title>`0x7FFE2DE9DE8E (1 samples, 0.13%)</title><rect x="4.1667%" y="2709" width="0.1344%" height="15" fill="rgb(239,76,54)" fg:x="31" fg:w="1"/><text x="4.4167%" y="2719.50"></text></g><g><title>`0x7FFE2DE8180C (1 samples, 0.13%)</title><rect x="4.1667%" y="2693" width="0.1344%" height="15" fill="rgb(231,124,27)" fg:x="31" fg:w="1"/><text x="4.4167%" y="2703.50"></text></g><g><title>`0x7FFE2F129B7C (1 samples, 0.13%)</title><rect x="4.1667%" y="2677" width="0.1344%" height="15" fill="rgb(249,195,6)" fg:x="31" fg:w="1"/><text x="4.4167%" y="2687.50"></text></g><g><title>`0x7FFE2F129CB2 (1 samples, 0.13%)</title><rect x="4.1667%" y="2661" width="0.1344%" height="15" fill="rgb(237,174,47)" fg:x="31" fg:w="1"/><text x="4.4167%" y="2671.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.13%)</title><rect x="4.1667%" y="2645" width="0.1344%" height="15" fill="rgb(206,201,31)" fg:x="31" fg:w="1"/><text x="4.4167%" y="2655.50"></text></g><g><title>`0x7FFE2DE9E1E1 (2 samples, 0.27%)</title><rect x="4.3011%" y="2709" width="0.2688%" height="15" fill="rgb(231,57,52)" fg:x="32" fg:w="2"/><text x="4.5511%" y="2719.50"></text></g><g><title>`0x7FFE2C6A321D (2 samples, 0.27%)</title><rect x="4.3011%" y="2693" width="0.2688%" height="15" fill="rgb(248,177,22)" fg:x="32" fg:w="2"/><text x="4.5511%" y="2703.50"></text></g><g><title>`0x7FFE2C6A6ED6 (2 samples, 0.27%)</title><rect x="4.3011%" y="2677" width="0.2688%" height="15" fill="rgb(215,211,37)" fg:x="32" fg:w="2"/><text x="4.5511%" y="2687.50"></text></g><g><title>`0x7FFE2C6A9FAC (2 samples, 0.27%)</title><rect x="4.3011%" y="2661" width="0.2688%" height="15" fill="rgb(241,128,51)" fg:x="32" fg:w="2"/><text x="4.5511%" y="2671.50"></text></g><g><title>`0x7FFE2C4A6FA4 (2 samples, 0.27%)</title><rect x="4.3011%" y="2645" width="0.2688%" height="15" fill="rgb(227,165,31)" fg:x="32" fg:w="2"/><text x="4.5511%" y="2655.50"></text></g><g><title>`0x7FFE2F0486FA (6 samples, 0.81%)</title><rect x="3.8978%" y="2773" width="0.8065%" height="15" fill="rgb(228,167,24)" fg:x="29" fg:w="6"/><text x="4.1478%" y="2783.50"></text></g><g><title>`0x7FFE2F0B37AC (6 samples, 0.81%)</title><rect x="3.8978%" y="2757" width="0.8065%" height="15" fill="rgb(228,143,12)" fg:x="29" fg:w="6"/><text x="4.1478%" y="2767.50"></text></g><g><title>`0x7FFE2F0B483E (6 samples, 0.81%)</title><rect x="3.8978%" y="2741" width="0.8065%" height="15" fill="rgb(249,149,8)" fg:x="29" fg:w="6"/><text x="4.1478%" y="2751.50"></text></g><g><title>`0x7FFE2F1A0EDE (6 samples, 0.81%)</title><rect x="3.8978%" y="2725" width="0.8065%" height="15" fill="rgb(243,35,44)" fg:x="29" fg:w="6"/><text x="4.1478%" y="2735.50"></text></g><g><title>`0x7FFE2DE9E201 (1 samples, 0.13%)</title><rect x="4.5699%" y="2709" width="0.1344%" height="15" fill="rgb(246,89,9)" fg:x="34" fg:w="1"/><text x="4.8199%" y="2719.50"></text></g><g><title>`0x7FFE2DE41D74 (1 samples, 0.13%)</title><rect x="4.5699%" y="2693" width="0.1344%" height="15" fill="rgb(233,213,13)" fg:x="34" fg:w="1"/><text x="4.8199%" y="2703.50"></text></g><g><title>`0x7FFE2F0F2A29 (1 samples, 0.13%)</title><rect x="4.5699%" y="2677" width="0.1344%" height="15" fill="rgb(233,141,41)" fg:x="34" fg:w="1"/><text x="4.8199%" y="2687.50"></text></g><g><title>`0x7FFE2F0F2AD5 (1 samples, 0.13%)</title><rect x="4.5699%" y="2661" width="0.1344%" height="15" fill="rgb(239,167,4)" fg:x="34" fg:w="1"/><text x="4.8199%" y="2671.50"></text></g><g><title>`0x7FFE2F0F3004 (1 samples, 0.13%)</title><rect x="4.5699%" y="2645" width="0.1344%" height="15" fill="rgb(209,217,16)" fg:x="34" fg:w="1"/><text x="4.8199%" y="2655.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="4.5699%" y="2629" width="0.1344%" height="15" fill="rgb(219,88,35)" fg:x="34" fg:w="1"/><text x="4.8199%" y="2639.50"></text></g><g><title>`0x7FFE2C4E6E26 (1 samples, 0.13%)</title><rect x="4.7043%" y="2693" width="0.1344%" height="15" fill="rgb(220,193,23)" fg:x="35" fg:w="1"/><text x="4.9543%" y="2703.50"></text></g><g><title>`0x7FFE2C54AD56 (1 samples, 0.13%)</title><rect x="4.7043%" y="2677" width="0.1344%" height="15" fill="rgb(230,90,52)" fg:x="35" fg:w="1"/><text x="4.9543%" y="2687.50"></text></g><g><title>`0x7FFE2C566FE7 (1 samples, 0.13%)</title><rect x="4.7043%" y="2661" width="0.1344%" height="15" fill="rgb(252,106,19)" fg:x="35" fg:w="1"/><text x="4.9543%" y="2671.50"></text></g><g><title>`0x7FFE2C4E42C0 (1 samples, 0.13%)</title><rect x="4.7043%" y="2645" width="0.1344%" height="15" fill="rgb(206,74,20)" fg:x="35" fg:w="1"/><text x="4.9543%" y="2655.50"></text></g><g><title>`0x7FFE2C8A2E0B (1 samples, 0.13%)</title><rect x="4.7043%" y="2629" width="0.1344%" height="15" fill="rgb(230,138,44)" fg:x="35" fg:w="1"/><text x="4.9543%" y="2639.50"></text></g><g><title>`0x7FFE2F1A3C34 (1 samples, 0.13%)</title><rect x="4.7043%" y="2613" width="0.1344%" height="15" fill="rgb(235,182,43)" fg:x="35" fg:w="1"/><text x="4.9543%" y="2623.50"></text></g><g><title>`0x7FFE2D829671 (1 samples, 0.13%)</title><rect x="4.8387%" y="2677" width="0.1344%" height="15" fill="rgb(242,16,51)" fg:x="36" fg:w="1"/><text x="5.0887%" y="2687.50"></text></g><g><title>`0x7FFE2D79C36D (1 samples, 0.13%)</title><rect x="4.8387%" y="2661" width="0.1344%" height="15" fill="rgb(248,9,4)" fg:x="36" fg:w="1"/><text x="5.0887%" y="2671.50"></text></g><g><title>`0x7FFE2D7813E5 (1 samples, 0.13%)</title><rect x="4.8387%" y="2645" width="0.1344%" height="15" fill="rgb(210,31,22)" fg:x="36" fg:w="1"/><text x="5.0887%" y="2655.50"></text></g><g><title>`0x7FFE2D78258D (1 samples, 0.13%)</title><rect x="4.8387%" y="2629" width="0.1344%" height="15" fill="rgb(239,54,39)" fg:x="36" fg:w="1"/><text x="5.0887%" y="2639.50"></text></g><g><title>`0x7FFE2C7E93AC (1 samples, 0.13%)</title><rect x="4.8387%" y="2613" width="0.1344%" height="15" fill="rgb(230,99,41)" fg:x="36" fg:w="1"/><text x="5.0887%" y="2623.50"></text></g><g><title>`0x7FFE2C7E94B2 (1 samples, 0.13%)</title><rect x="4.8387%" y="2597" width="0.1344%" height="15" fill="rgb(253,106,12)" fg:x="36" fg:w="1"/><text x="5.0887%" y="2607.50"></text></g><g><title>`0x7FFE2F0ACD11 (1 samples, 0.13%)</title><rect x="4.8387%" y="2581" width="0.1344%" height="15" fill="rgb(213,46,41)" fg:x="36" fg:w="1"/><text x="5.0887%" y="2591.50"></text></g><g><title>`0x7FFE2F1692FE (1 samples, 0.13%)</title><rect x="4.8387%" y="2565" width="0.1344%" height="15" fill="rgb(215,133,35)" fg:x="36" fg:w="1"/><text x="5.0887%" y="2575.50"></text></g><g><title>`0x7FFE2F042A2E (38 samples, 5.11%)</title><rect x="0.0000%" y="2869" width="5.1075%" height="15" fill="rgb(213,28,5)" fg:x="0" fg:w="38"/><text x="0.2500%" y="2879.50">`0x7FF..</text></g><g><title>`0x7FFE2F1124DA (38 samples, 5.11%)</title><rect x="0.0000%" y="2853" width="5.1075%" height="15" fill="rgb(215,77,49)" fg:x="0" fg:w="38"/><text x="0.2500%" y="2863.50">`0x7FF..</text></g><g><title>`0x7FFE2F1126F0 (36 samples, 4.84%)</title><rect x="0.2688%" y="2837" width="4.8387%" height="15" fill="rgb(248,100,22)" fg:x="2" fg:w="36"/><text x="0.5188%" y="2847.50">`0x7FF..</text></g><g><title>`0x7FFE2F114566 (13 samples, 1.75%)</title><rect x="3.3602%" y="2821" width="1.7473%" height="15" fill="rgb(208,67,9)" fg:x="25" fg:w="13"/><text x="3.6102%" y="2831.50"></text></g><g><title>`0x7FFE2F048726 (13 samples, 1.75%)</title><rect x="3.3602%" y="2805" width="1.7473%" height="15" fill="rgb(219,133,21)" fg:x="25" fg:w="13"/><text x="3.6102%" y="2815.50"></text></g><g><title>`0x7FFE2F048726 (9 samples, 1.21%)</title><rect x="3.8978%" y="2789" width="1.2097%" height="15" fill="rgb(246,46,29)" fg:x="29" fg:w="9"/><text x="4.1478%" y="2799.50"></text></g><g><title>`0x7FFE2F048726 (3 samples, 0.40%)</title><rect x="4.7043%" y="2773" width="0.4032%" height="15" fill="rgb(246,185,52)" fg:x="35" fg:w="3"/><text x="4.9543%" y="2783.50"></text></g><g><title>`0x7FFE2F0486FA (3 samples, 0.40%)</title><rect x="4.7043%" y="2757" width="0.4032%" height="15" fill="rgb(252,136,11)" fg:x="35" fg:w="3"/><text x="4.9543%" y="2767.50"></text></g><g><title>`0x7FFE2F0B37AC (3 samples, 0.40%)</title><rect x="4.7043%" y="2741" width="0.4032%" height="15" fill="rgb(219,138,53)" fg:x="35" fg:w="3"/><text x="4.9543%" y="2751.50"></text></g><g><title>`0x7FFE2F0B483E (3 samples, 0.40%)</title><rect x="4.7043%" y="2725" width="0.4032%" height="15" fill="rgb(211,51,23)" fg:x="35" fg:w="3"/><text x="4.9543%" y="2735.50"></text></g><g><title>`0x7FFE2F1A0EDE (3 samples, 0.40%)</title><rect x="4.7043%" y="2709" width="0.4032%" height="15" fill="rgb(247,221,28)" fg:x="35" fg:w="3"/><text x="4.9543%" y="2719.50"></text></g><g><title>`0x7FFE2D8D39B6 (2 samples, 0.27%)</title><rect x="4.8387%" y="2693" width="0.2688%" height="15" fill="rgb(251,222,45)" fg:x="36" fg:w="2"/><text x="5.0887%" y="2703.50"></text></g><g><title>`0x7FFE2D8296ED (1 samples, 0.13%)</title><rect x="4.9731%" y="2677" width="0.1344%" height="15" fill="rgb(217,162,53)" fg:x="37" fg:w="1"/><text x="5.2231%" y="2687.50"></text></g><g><title>`0x7FFE2D829F1F (1 samples, 0.13%)</title><rect x="4.9731%" y="2661" width="0.1344%" height="15" fill="rgb(229,93,14)" fg:x="37" fg:w="1"/><text x="5.2231%" y="2671.50"></text></g><g><title>`0x7FFE2D82A104 (1 samples, 0.13%)</title><rect x="4.9731%" y="2645" width="0.1344%" height="15" fill="rgb(209,67,49)" fg:x="37" fg:w="1"/><text x="5.2231%" y="2655.50"></text></g><g><title>`0x7FFE2F129B7C (1 samples, 0.13%)</title><rect x="4.9731%" y="2629" width="0.1344%" height="15" fill="rgb(213,87,29)" fg:x="37" fg:w="1"/><text x="5.2231%" y="2639.50"></text></g><g><title>`0x7FFE2F129CB2 (1 samples, 0.13%)</title><rect x="4.9731%" y="2613" width="0.1344%" height="15" fill="rgb(205,151,52)" fg:x="37" fg:w="1"/><text x="5.2231%" y="2623.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.13%)</title><rect x="4.9731%" y="2597" width="0.1344%" height="15" fill="rgb(253,215,39)" fg:x="37" fg:w="1"/><text x="5.2231%" y="2607.50"></text></g><g><title>`0x7FFE2F048D70 (2 samples, 0.27%)</title><rect x="5.1075%" y="2869" width="0.2688%" height="15" fill="rgb(221,220,41)" fg:x="38" fg:w="2"/><text x="5.3575%" y="2879.50"></text></g><g><title>`0x7FFE2F052E8A (1 samples, 0.13%)</title><rect x="5.3763%" y="2789" width="0.1344%" height="15" fill="rgb(218,133,21)" fg:x="40" fg:w="1"/><text x="5.6263%" y="2799.50"></text></g><g><title>`0x7FFE2F052E94 (1 samples, 0.13%)</title><rect x="5.5108%" y="2789" width="0.1344%" height="15" fill="rgb(221,193,43)" fg:x="41" fg:w="1"/><text x="5.7608%" y="2799.50"></text></g><g><title>`0x7FFE2F052EBA (1 samples, 0.13%)</title><rect x="5.6452%" y="2789" width="0.1344%" height="15" fill="rgb(240,128,52)" fg:x="42" fg:w="1"/><text x="5.8952%" y="2799.50"></text></g><g><title>`0x7FFE2F052EBD (1 samples, 0.13%)</title><rect x="5.7796%" y="2789" width="0.1344%" height="15" fill="rgb(253,114,12)" fg:x="43" fg:w="1"/><text x="6.0296%" y="2799.50"></text></g><g><title>`0x7FFE2F052EC6 (2 samples, 0.27%)</title><rect x="5.9140%" y="2789" width="0.2688%" height="15" fill="rgb(215,223,47)" fg:x="44" fg:w="2"/><text x="6.1640%" y="2799.50"></text></g><g><title>`0x7FFE2F052EC9 (1 samples, 0.13%)</title><rect x="6.1828%" y="2789" width="0.1344%" height="15" fill="rgb(248,225,23)" fg:x="46" fg:w="1"/><text x="6.4328%" y="2799.50"></text></g><g><title>`0x7FFE2F0BE4B1 (8 samples, 1.08%)</title><rect x="5.3763%" y="2837" width="1.0753%" height="15" fill="rgb(250,108,0)" fg:x="40" fg:w="8"/><text x="5.6263%" y="2847.50"></text></g><g><title>`0x7FFE2F0BD270 (8 samples, 1.08%)</title><rect x="5.3763%" y="2821" width="1.0753%" height="15" fill="rgb(228,208,7)" fg:x="40" fg:w="8"/><text x="5.6263%" y="2831.50"></text></g><g><title>`0x7FFE2F0AFDA1 (8 samples, 1.08%)</title><rect x="5.3763%" y="2805" width="1.0753%" height="15" fill="rgb(244,45,10)" fg:x="40" fg:w="8"/><text x="5.6263%" y="2815.50"></text></g><g><title>`0x7FFE2F053226 (1 samples, 0.13%)</title><rect x="6.3172%" y="2789" width="0.1344%" height="15" fill="rgb(207,125,25)" fg:x="47" fg:w="1"/><text x="6.5672%" y="2799.50"></text></g><g><title>`0x7FFE2F054D89 (1 samples, 0.13%)</title><rect x="6.3172%" y="2773" width="0.1344%" height="15" fill="rgb(210,195,18)" fg:x="47" fg:w="1"/><text x="6.5672%" y="2783.50"></text></g><g><title>`0x7FFE2F0B2377 (1 samples, 0.13%)</title><rect x="6.4516%" y="2661" width="0.1344%" height="15" fill="rgb(249,80,12)" fg:x="48" fg:w="1"/><text x="6.7016%" y="2671.50"></text></g><g><title>`0x7FFE2F1A3894 (1 samples, 0.13%)</title><rect x="6.4516%" y="2645" width="0.1344%" height="15" fill="rgb(221,65,9)" fg:x="48" fg:w="1"/><text x="6.7016%" y="2655.50"></text></g><g><title>`0x7FFE2C570046 (2 samples, 0.27%)</title><rect x="6.4516%" y="2821" width="0.2688%" height="15" fill="rgb(235,49,36)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2831.50"></text></g><g><title>`0x7FFE2C55553D (2 samples, 0.27%)</title><rect x="6.4516%" y="2805" width="0.2688%" height="15" fill="rgb(225,32,20)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2815.50"></text></g><g><title>`0x7FFE2C4E423B (2 samples, 0.27%)</title><rect x="6.4516%" y="2789" width="0.2688%" height="15" fill="rgb(215,141,46)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2799.50"></text></g><g><title>`0x7FFE2C546225 (2 samples, 0.27%)</title><rect x="6.4516%" y="2773" width="0.2688%" height="15" fill="rgb(250,160,47)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2783.50"></text></g><g><title>`0x7FFE2C7FDD0F (2 samples, 0.27%)</title><rect x="6.4516%" y="2757" width="0.2688%" height="15" fill="rgb(216,222,40)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2767.50"></text></g><g><title>`0x7FFE2F054FB0 (2 samples, 0.27%)</title><rect x="6.4516%" y="2741" width="0.2688%" height="15" fill="rgb(234,217,39)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2751.50"></text></g><g><title>`0x7FFE2F08A190 (2 samples, 0.27%)</title><rect x="6.4516%" y="2725" width="0.2688%" height="15" fill="rgb(207,178,40)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2735.50"></text></g><g><title>`0x7FFE2F08A510 (2 samples, 0.27%)</title><rect x="6.4516%" y="2709" width="0.2688%" height="15" fill="rgb(221,136,13)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2719.50"></text></g><g><title>`0x7FFE2F0AFDB4 (2 samples, 0.27%)</title><rect x="6.4516%" y="2693" width="0.2688%" height="15" fill="rgb(249,199,10)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2703.50"></text></g><g><title>`0x7FFE2F0B039D (2 samples, 0.27%)</title><rect x="6.4516%" y="2677" width="0.2688%" height="15" fill="rgb(249,222,13)" fg:x="48" fg:w="2"/><text x="6.7016%" y="2687.50"></text></g><g><title>`0x7FFE2F0B24CC (1 samples, 0.13%)</title><rect x="6.5860%" y="2661" width="0.1344%" height="15" fill="rgb(244,185,38)" fg:x="49" fg:w="1"/><text x="6.8360%" y="2671.50"></text></g><g><title>`0x7FFE2F0AD5A8 (1 samples, 0.13%)</title><rect x="6.5860%" y="2645" width="0.1344%" height="15" fill="rgb(236,202,9)" fg:x="49" fg:w="1"/><text x="6.8360%" y="2655.50"></text></g><g><title>`0x7FFE2F08BC32 (1 samples, 0.13%)</title><rect x="6.5860%" y="2629" width="0.1344%" height="15" fill="rgb(250,229,37)" fg:x="49" fg:w="1"/><text x="6.8360%" y="2639.50"></text></g><g><title>`0x7FFE2F052EC9 (1 samples, 0.13%)</title><rect x="6.5860%" y="2613" width="0.1344%" height="15" fill="rgb(206,174,23)" fg:x="49" fg:w="1"/><text x="6.8360%" y="2623.50"></text></g><g><title>`0x7FFE2F048E87 (1 samples, 0.13%)</title><rect x="6.7204%" y="2789" width="0.1344%" height="15" fill="rgb(211,33,43)" fg:x="50" fg:w="1"/><text x="6.9704%" y="2799.50"></text></g><g><title>`0x7FFE2F1A37B4 (1 samples, 0.13%)</title><rect x="6.7204%" y="2773" width="0.1344%" height="15" fill="rgb(245,58,50)" fg:x="50" fg:w="1"/><text x="6.9704%" y="2783.50"></text></g><g><title>`0x7FFE2A13437E (1 samples, 0.13%)</title><rect x="6.8548%" y="2725" width="0.1344%" height="15" fill="rgb(244,68,36)" fg:x="51" fg:w="1"/><text x="7.1048%" y="2735.50"></text></g><g><title>`0x7FFE2A134255 (1 samples, 0.13%)</title><rect x="6.8548%" y="2709" width="0.1344%" height="15" fill="rgb(232,229,15)" fg:x="51" fg:w="1"/><text x="7.1048%" y="2719.50"></text></g><g><title>`0x7FFE2C542F0C (1 samples, 0.13%)</title><rect x="6.8548%" y="2693" width="0.1344%" height="15" fill="rgb(254,30,23)" fg:x="51" fg:w="1"/><text x="7.1048%" y="2703.50"></text></g><g><title>`0x7FFE2C51B84D (1 samples, 0.13%)</title><rect x="6.8548%" y="2677" width="0.1344%" height="15" fill="rgb(235,160,14)" fg:x="51" fg:w="1"/><text x="7.1048%" y="2687.50"></text></g><g><title>`0x7FFE2C51B897 (1 samples, 0.13%)</title><rect x="6.8548%" y="2661" width="0.1344%" height="15" fill="rgb(212,155,44)" fg:x="51" fg:w="1"/><text x="7.1048%" y="2671.50"></text></g><g><title>`0x7FFE2C51BC75 (1 samples, 0.13%)</title><rect x="6.8548%" y="2645" width="0.1344%" height="15" fill="rgb(226,2,50)" fg:x="51" fg:w="1"/><text x="7.1048%" y="2655.50"></text></g><g><title>`0x7FFE29E6F8B0 (1 samples, 0.13%)</title><rect x="6.8548%" y="2629" width="0.1344%" height="15" fill="rgb(234,177,6)" fg:x="51" fg:w="1"/><text x="7.1048%" y="2639.50"></text></g><g><title>`0x7FFE2C0FF33E (1 samples, 0.13%)</title><rect x="6.9892%" y="2725" width="0.1344%" height="15" fill="rgb(217,24,9)" fg:x="52" fg:w="1"/><text x="7.2392%" y="2735.50"></text></g><g><title>`0x7FFE2C0FF215 (1 samples, 0.13%)</title><rect x="6.9892%" y="2709" width="0.1344%" height="15" fill="rgb(220,13,46)" fg:x="52" fg:w="1"/><text x="7.2392%" y="2719.50"></text></g><g><title>`0x7FFE2C542F0C (1 samples, 0.13%)</title><rect x="6.9892%" y="2693" width="0.1344%" height="15" fill="rgb(239,221,27)" fg:x="52" fg:w="1"/><text x="7.2392%" y="2703.50"></text></g><g><title>`0x7FFE2C51B84D (1 samples, 0.13%)</title><rect x="6.9892%" y="2677" width="0.1344%" height="15" fill="rgb(222,198,25)" fg:x="52" fg:w="1"/><text x="7.2392%" y="2687.50"></text></g><g><title>`0x7FFE2C51B897 (1 samples, 0.13%)</title><rect x="6.9892%" y="2661" width="0.1344%" height="15" fill="rgb(211,99,13)" fg:x="52" fg:w="1"/><text x="7.2392%" y="2671.50"></text></g><g><title>`0x7FFE2C51BC75 (1 samples, 0.13%)</title><rect x="6.9892%" y="2645" width="0.1344%" height="15" fill="rgb(232,111,31)" fg:x="52" fg:w="1"/><text x="7.2392%" y="2655.50"></text></g><g><title>`0x7FFE2C108020 (1 samples, 0.13%)</title><rect x="6.9892%" y="2629" width="0.1344%" height="15" fill="rgb(245,82,37)" fg:x="52" fg:w="1"/><text x="7.2392%" y="2639.50"></text></g><g><title>`0x7FFE2C104D30 (1 samples, 0.13%)</title><rect x="6.9892%" y="2613" width="0.1344%" height="15" fill="rgb(227,149,46)" fg:x="52" fg:w="1"/><text x="7.2392%" y="2623.50"></text></g><g><title>`0x7FFE2D8D3A0E (1 samples, 0.13%)</title><rect x="7.1237%" y="2725" width="0.1344%" height="15" fill="rgb(218,36,50)" fg:x="53" fg:w="1"/><text x="7.3737%" y="2735.50"></text></g><g><title>`0x7FFE2D8D38E5 (1 samples, 0.13%)</title><rect x="7.1237%" y="2709" width="0.1344%" height="15" fill="rgb(226,80,48)" fg:x="53" fg:w="1"/><text x="7.3737%" y="2719.50"></text></g><g><title>`0x7FFE2C542F0C (1 samples, 0.13%)</title><rect x="7.1237%" y="2693" width="0.1344%" height="15" fill="rgb(238,224,15)" fg:x="53" fg:w="1"/><text x="7.3737%" y="2703.50"></text></g><g><title>`0x7FFE2C51B84D (1 samples, 0.13%)</title><rect x="7.1237%" y="2677" width="0.1344%" height="15" fill="rgb(241,136,10)" fg:x="53" fg:w="1"/><text x="7.3737%" y="2687.50"></text></g><g><title>`0x7FFE2C51B897 (1 samples, 0.13%)</title><rect x="7.1237%" y="2661" width="0.1344%" height="15" fill="rgb(208,32,45)" fg:x="53" fg:w="1"/><text x="7.3737%" y="2671.50"></text></g><g><title>`0x7FFE2C51BC75 (1 samples, 0.13%)</title><rect x="7.1237%" y="2645" width="0.1344%" height="15" fill="rgb(207,135,9)" fg:x="53" fg:w="1"/><text x="7.3737%" y="2655.50"></text></g><g><title>`0x7FFE2D998D29 (1 samples, 0.13%)</title><rect x="7.1237%" y="2629" width="0.1344%" height="15" fill="rgb(206,86,44)" fg:x="53" fg:w="1"/><text x="7.3737%" y="2639.50"></text></g><g><title>`0x7FFE2D836B44 (1 samples, 0.13%)</title><rect x="7.1237%" y="2613" width="0.1344%" height="15" fill="rgb(245,177,15)" fg:x="53" fg:w="1"/><text x="7.3737%" y="2623.50"></text></g><g><title>`0x7FFE2C570093 (5 samples, 0.67%)</title><rect x="6.7204%" y="2821" width="0.6720%" height="15" fill="rgb(206,64,50)" fg:x="50" fg:w="5"/><text x="6.9704%" y="2831.50"></text></g><g><title>`0x7FFE2DD518AB (5 samples, 0.67%)</title><rect x="6.7204%" y="2805" width="0.6720%" height="15" fill="rgb(234,36,40)" fg:x="50" fg:w="5"/><text x="6.9704%" y="2815.50"></text></g><g><title>`0x7FFE2F048EDE (4 samples, 0.54%)</title><rect x="6.8548%" y="2789" width="0.5376%" height="15" fill="rgb(213,64,8)" fg:x="51" fg:w="4"/><text x="7.1048%" y="2799.50"></text></g><g><title>`0x7FFE2F13DFFF (4 samples, 0.54%)</title><rect x="6.8548%" y="2773" width="0.5376%" height="15" fill="rgb(210,75,36)" fg:x="51" fg:w="4"/><text x="7.1048%" y="2783.50"></text></g><g><title>`0x7FFE2F0B483E (4 samples, 0.54%)</title><rect x="6.8548%" y="2757" width="0.5376%" height="15" fill="rgb(229,88,21)" fg:x="51" fg:w="4"/><text x="7.1048%" y="2767.50"></text></g><g><title>`0x7FFE2F1A0EDE (4 samples, 0.54%)</title><rect x="6.8548%" y="2741" width="0.5376%" height="15" fill="rgb(252,204,47)" fg:x="51" fg:w="4"/><text x="7.1048%" y="2751.50"></text></g><g><title>`0x7FFE2E415AF6 (1 samples, 0.13%)</title><rect x="7.2581%" y="2725" width="0.1344%" height="15" fill="rgb(208,77,27)" fg:x="54" fg:w="1"/><text x="7.5081%" y="2735.50"></text></g><g><title>`0x7FFE2E27ECBF (1 samples, 0.13%)</title><rect x="7.2581%" y="2709" width="0.1344%" height="15" fill="rgb(221,76,26)" fg:x="54" fg:w="1"/><text x="7.5081%" y="2719.50"></text></g><g><title>`0x7FFE2E3121F9 (1 samples, 0.13%)</title><rect x="7.2581%" y="2693" width="0.1344%" height="15" fill="rgb(225,139,18)" fg:x="54" fg:w="1"/><text x="7.5081%" y="2703.50"></text></g><g><title>`0x7FFE2E31228F (1 samples, 0.13%)</title><rect x="7.2581%" y="2677" width="0.1344%" height="15" fill="rgb(230,137,11)" fg:x="54" fg:w="1"/><text x="7.5081%" y="2687.50"></text></g><g><title>`0x7FFE2F085F45 (1 samples, 0.13%)</title><rect x="7.2581%" y="2661" width="0.1344%" height="15" fill="rgb(212,28,1)" fg:x="54" fg:w="1"/><text x="7.5081%" y="2671.50"></text></g><g><title>`0x7FFE2F086096 (1 samples, 0.13%)</title><rect x="7.2581%" y="2645" width="0.1344%" height="15" fill="rgb(248,164,17)" fg:x="54" fg:w="1"/><text x="7.5081%" y="2655.50"></text></g><g><title>fuzzit.exe`clap_builder::derive::Parser::parse (1 samples, 0.13%)</title><rect x="7.3925%" y="2645" width="0.1344%" height="15" fill="rgb(222,171,42)" fg:x="55" fg:w="1"/><text x="7.6425%" y="2655.50"></text></g><g><title>fuzzit.exe`fuzzit::impl$2::from_arg_matches_mut (1 samples, 0.13%)</title><rect x="7.3925%" y="2629" width="0.1344%" height="15" fill="rgb(243,84,45)" fg:x="55" fg:w="1"/><text x="7.6425%" y="2639.50"></text></g><g><title>fuzzit.exe`clap_builder::parser::matches::arg_matches::ArgMatches::remove_one(ref$ (1 samples, 0.13%)</title><rect x="7.3925%" y="2613" width="0.1344%" height="15" fill="rgb(252,49,23)" fg:x="55" fg:w="1"/><text x="7.6425%" y="2623.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::command::Command::get_matches_from&lt;std::env::ArgsOs,std::ffi::os_str::OsString&gt; (1 samples, 0.13%)</title><rect x="7.3925%" y="2597" width="0.1344%" height="15" fill="rgb(215,19,7)" fg:x="55" fg:w="1"/><text x="7.6425%" y="2607.50"></text></g><g><title>fuzzit.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.13%)</title><rect x="7.3925%" y="2581" width="0.1344%" height="15" fill="rgb(238,81,41)" fg:x="55" fg:w="1"/><text x="7.6425%" y="2591.50"></text></g><g><title>fuzzit.exe`std::path::Path::file_name (1 samples, 0.13%)</title><rect x="7.3925%" y="2565" width="0.1344%" height="15" fill="rgb(210,199,37)" fg:x="55" fg:w="1"/><text x="7.6425%" y="2575.50"></text></g><g><title>fuzzit.exe`std::path::Path::components (1 samples, 0.13%)</title><rect x="7.3925%" y="2549" width="0.1344%" height="15" fill="rgb(244,192,49)" fg:x="55" fg:w="1"/><text x="7.6425%" y="2559.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::parse_prefix (1 samples, 0.13%)</title><rect x="7.3925%" y="2533" width="0.1344%" height="15" fill="rgb(226,211,11)" fg:x="55" fg:w="1"/><text x="7.6425%" y="2543.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::layout_array (1 samples, 0.13%)</title><rect x="7.6613%" y="2277" width="0.1344%" height="15" fill="rgb(236,162,54)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2287.50"></text></g><g><title>fuzzit.exe`core::alloc::layout::Layout::repeat (1 samples, 0.13%)</title><rect x="7.6613%" y="2261" width="0.1344%" height="15" fill="rgb(220,229,9)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2271.50"></text></g><g><title>fuzzit.exe`core::alloc::layout::Layout::repeat_packed (1 samples, 0.13%)</title><rect x="7.6613%" y="2245" width="0.1344%" height="15" fill="rgb(250,87,22)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2255.50"></text></g><g><title>fuzzit.exe`core::num::impl$11::checked_mul (1 samples, 0.13%)</title><rect x="7.6613%" y="2229" width="0.1344%" height="15" fill="rgb(239,43,17)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2239.50"></text></g><g><title>fuzzit.exe`core::intrinsics::unlikely (1 samples, 0.13%)</title><rect x="7.6613%" y="2213" width="0.1344%" height="15" fill="rgb(231,177,25)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2223.50"></text></g><g><title>fuzzit.exe`rayon_core::current_num_threads (1 samples, 0.13%)</title><rect x="7.6613%" y="2197" width="0.1344%" height="15" fill="rgb(219,179,1)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2207.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::Registry::current_num_threads (1 samples, 0.13%)</title><rect x="7.6613%" y="2181" width="0.1344%" height="15" fill="rgb(238,219,53)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2191.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (1 samples, 0.13%)</title><rect x="7.6613%" y="2165" width="0.1344%" height="15" fill="rgb(232,167,36)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2175.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (1 samples, 0.13%)</title><rect x="7.6613%" y="2149" width="0.1344%" height="15" fill="rgb(244,19,51)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2159.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (1 samples, 0.13%)</title><rect x="7.6613%" y="2133" width="0.1344%" height="15" fill="rgb(224,6,22)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2143.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::global_registry (1 samples, 0.13%)</title><rect x="7.6613%" y="2117" width="0.1344%" height="15" fill="rgb(224,145,5)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2127.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::set_global_registry(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (1 samples, 0.13%)</title><rect x="7.6613%" y="2101" width="0.1344%" height="15" fill="rgb(234,130,49)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2111.50"></text></g><g><title>fuzzit.exe`std::sync::poison::once::Once::call_once(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (1 samples, 0.13%)</title><rect x="7.6613%" y="2085" width="0.1344%" height="15" fill="rgb(254,6,2)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2095.50"></text></g><g><title>fuzzit.exe`std::sys::sync::once::futex::Once::call (1 samples, 0.13%)</title><rect x="7.6613%" y="2069" width="0.1344%" height="15" fill="rgb(208,96,46)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2079.50"></text></g><g><title>fuzzit.exe`core::cell::Cell::get (1 samples, 0.13%)</title><rect x="7.6613%" y="2053" width="0.1344%" height="15" fill="rgb(239,3,39)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2063.50"></text></g><g><title>fuzzit.exe`std::sync::poison::once::impl$2::call_once::closure$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*)()&gt; &gt;(std::sync::poison::once::impl$2::call_once::closure_env$0&lt;rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (1 samples, 0.13%)</title><rect x="7.6613%" y="2037" width="0.1344%" height="15" fill="rgb(233,210,1)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2047.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::set_global_registry::closure$0(rayon_core::registry::set_global_registry::closure_env$0&lt;enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (1 samples, 0.13%)</title><rect x="7.6613%" y="2021" width="0.1344%" height="15" fill="rgb(244,137,37)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2031.50"></text></g><g><title>fuzzit.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;,rayon_core::ThreadPoolBuildError&gt; &gt; (*) (1 samples, 0.13%)</title><rect x="7.6613%" y="2005" width="0.1344%" height="15" fill="rgb(240,136,2)" fg:x="57" fg:w="1"/><text x="7.9113%" y="2015.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::default_global_registry (1 samples, 0.13%)</title><rect x="7.6613%" y="1989" width="0.1344%" height="15" fill="rgb(239,18,37)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1999.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::Registry::new&lt;rayon_core::registry::DefaultSpawn&gt;(rayon_core::ThreadPoolBuilder (1 samples, 0.13%)</title><rect x="7.6613%" y="1973" width="0.1344%" height="15" fill="rgb(218,185,22)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$2::spawn (1 samples, 0.13%)</title><rect x="7.6613%" y="1957" width="0.1344%" height="15" fill="rgb(225,218,4)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1967.50"></text></g><g><title>fuzzit.exe`std::thread::Builder::spawn (1 samples, 0.13%)</title><rect x="7.6613%" y="1941" width="0.1344%" height="15" fill="rgb(230,182,32)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1951.50"></text></g><g><title>fuzzit.exe`std::thread::Builder::spawn_unchecked&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (1 samples, 0.13%)</title><rect x="7.6613%" y="1925" width="0.1344%" height="15" fill="rgb(242,56,43)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1935.50"></text></g><g><title>fuzzit.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, rayon_core::registry::impl$2::spawn::closure_env$0, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (1 samples, 0.13%)</title><rect x="7.6613%" y="1909" width="0.1344%" height="15" fill="rgb(233,99,24)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1919.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::thread::Thread::new (1 samples, 0.13%)</title><rect x="7.6613%" y="1893" width="0.1344%" height="15" fill="rgb(234,209,42)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1903.50"></text></g><g><title>`0x7FFE2DD4313D (1 samples, 0.13%)</title><rect x="7.6613%" y="1877" width="0.1344%" height="15" fill="rgb(227,7,12)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1887.50"></text></g><g><title>`0x7FFE2C8B0ED9 (1 samples, 0.13%)</title><rect x="7.6613%" y="1861" width="0.1344%" height="15" fill="rgb(245,203,43)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1871.50"></text></g><g><title>`0x7FFE2F1A4B44 (1 samples, 0.13%)</title><rect x="7.6613%" y="1845" width="0.1344%" height="15" fill="rgb(238,205,33)" fg:x="57" fg:w="1"/><text x="7.9113%" y="1855.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$ (3 samples, 0.40%)</title><rect x="7.5269%" y="2613" width="0.4032%" height="15" fill="rgb(231,56,7)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2623.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search(std::path::PathBuf*, std::sync::mpsc::Sender (3 samples, 0.40%)</title><rect x="7.5269%" y="2597" width="0.4032%" height="15" fill="rgb(244,186,29)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2607.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="7.5269%" y="2581" width="0.4032%" height="15" fill="rgb(234,111,31)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2591.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="7.5269%" y="2565" width="0.4032%" height="15" fill="rgb(241,149,10)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2575.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="7.5269%" y="2549" width="0.4032%" height="15" fill="rgb(249,206,44)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2559.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="7.5269%" y="2533" width="0.4032%" height="15" fill="rgb(251,153,30)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2543.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 0.40%)</title><rect x="7.5269%" y="2517" width="0.4032%" height="15" fill="rgb(239,152,38)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2527.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.40%)</title><rect x="7.5269%" y="2501" width="0.4032%" height="15" fill="rgb(249,139,47)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2511.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (3 samples, 0.40%)</title><rect x="7.5269%" y="2485" width="0.4032%" height="15" fill="rgb(244,64,35)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2495.50"></text></g><g><title>fuzzit.exe`rayon::iter::extend::impl$33::par_extend&lt;tuple$&lt;&gt;,rayon::iter::map::Map&lt;rayon::iter::par_bridge::IterBridge&lt;std::fs::ReadDir&gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;*, rayon::iter::map::Map&lt;rayon::iter::par_bridge::IterBridge (3 samples, 0.40%)</title><rect x="7.5269%" y="2469" width="0.4032%" height="15" fill="rgb(216,46,15)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2479.50"></text></g><g><title>fuzzit.exe`alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::iter (3 samples, 0.40%)</title><rect x="7.5269%" y="2453" width="0.4032%" height="15" fill="rgb(250,74,19)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2463.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$1::drive_unindexed&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterBridge&lt;std::fs::ReadDir&gt;, rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="7.5269%" y="2437" width="0.4032%" height="15" fill="rgb(249,42,33)" fg:x="56" fg:w="3"/><text x="7.7769%" y="2447.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="7.6613%" y="2421" width="0.2688%" height="15" fill="rgb(242,149,17)" fg:x="57" fg:w="2"/><text x="7.9113%" y="2431.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="7.6613%" y="2405" width="0.2688%" height="15" fill="rgb(244,29,21)" fg:x="57" fg:w="2"/><text x="7.9113%" y="2415.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="7.6613%" y="2389" width="0.2688%" height="15" fill="rgb(220,130,37)" fg:x="57" fg:w="2"/><text x="7.9113%" y="2399.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="7.6613%" y="2373" width="0.2688%" height="15" fill="rgb(211,67,2)" fg:x="57" fg:w="2"/><text x="7.9113%" y="2383.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.27%)</title><rect x="7.6613%" y="2357" width="0.2688%" height="15" fill="rgb(235,68,52)" fg:x="57" fg:w="2"/><text x="7.9113%" y="2367.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.27%)</title><rect x="7.6613%" y="2341" width="0.2688%" height="15" fill="rgb(246,142,3)" fg:x="57" fg:w="2"/><text x="7.9113%" y="2351.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.27%)</title><rect x="7.6613%" y="2325" width="0.2688%" height="15" fill="rgb(241,25,7)" fg:x="57" fg:w="2"/><text x="7.9113%" y="2335.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.27%)</title><rect x="7.6613%" y="2309" width="0.2688%" height="15" fill="rgb(242,119,39)" fg:x="57" fg:w="2"/><text x="7.9113%" y="2319.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.27%)</title><rect x="7.6613%" y="2293" width="0.2688%" height="15" fill="rgb(241,98,45)" fg:x="57" fg:w="2"/><text x="7.9113%" y="2303.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="7.7957%" y="2277" width="0.1344%" height="15" fill="rgb(254,28,30)" fg:x="58" fg:w="1"/><text x="8.0457%" y="2287.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="7.7957%" y="2261" width="0.1344%" height="15" fill="rgb(241,142,54)" fg:x="58" fg:w="1"/><text x="8.0457%" y="2271.50"></text></g><g><title>`0x7FFE29DF3090 (1 samples, 0.13%)</title><rect x="7.9301%" y="2565" width="0.1344%" height="15" fill="rgb(222,85,15)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2575.50"></text></g><g><title>`0x7FFE29DF3383 (1 samples, 0.13%)</title><rect x="7.9301%" y="2549" width="0.1344%" height="15" fill="rgb(210,85,47)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2559.50"></text></g><g><title>`0x7FFE2A1D45B3 (1 samples, 0.13%)</title><rect x="7.9301%" y="2533" width="0.1344%" height="15" fill="rgb(224,206,25)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2543.50"></text></g><g><title>`0x7FFE2A1CFE08 (1 samples, 0.13%)</title><rect x="7.9301%" y="2517" width="0.1344%" height="15" fill="rgb(243,201,19)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2527.50"></text></g><g><title>`0x7FFE29F61A56 (1 samples, 0.13%)</title><rect x="7.9301%" y="2501" width="0.1344%" height="15" fill="rgb(236,59,4)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2511.50"></text></g><g><title>`0x7FFE2A039274 (1 samples, 0.13%)</title><rect x="7.9301%" y="2485" width="0.1344%" height="15" fill="rgb(254,179,45)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2495.50"></text></g><g><title>`0x7FFE2A03942C (1 samples, 0.13%)</title><rect x="7.9301%" y="2469" width="0.1344%" height="15" fill="rgb(226,14,10)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2479.50"></text></g><g><title>`0x7FFE29DFBA19 (1 samples, 0.13%)</title><rect x="7.9301%" y="2453" width="0.1344%" height="15" fill="rgb(244,27,41)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2463.50"></text></g><g><title>`0x7FFE29DFA5CC (1 samples, 0.13%)</title><rect x="7.9301%" y="2437" width="0.1344%" height="15" fill="rgb(235,35,32)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2447.50"></text></g><g><title>`0x7FFE2C810726 (1 samples, 0.13%)</title><rect x="7.9301%" y="2421" width="0.1344%" height="15" fill="rgb(218,68,31)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2431.50"></text></g><g><title>`0x7FFE2F089774 (1 samples, 0.13%)</title><rect x="7.9301%" y="2405" width="0.1344%" height="15" fill="rgb(207,120,37)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2415.50"></text></g><g><title>`0x7FFE2F0BB4D6 (1 samples, 0.13%)</title><rect x="7.9301%" y="2389" width="0.1344%" height="15" fill="rgb(227,98,0)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2399.50"></text></g><g><title>`0x7FFE2F0BB939 (1 samples, 0.13%)</title><rect x="7.9301%" y="2373" width="0.1344%" height="15" fill="rgb(207,7,3)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2383.50"></text></g><g><title>`0x7FFE2F164651 (1 samples, 0.13%)</title><rect x="7.9301%" y="2357" width="0.1344%" height="15" fill="rgb(206,98,19)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2367.50"></text></g><g><title>`0x7FFE2F1646D8 (1 samples, 0.13%)</title><rect x="7.9301%" y="2341" width="0.1344%" height="15" fill="rgb(217,5,26)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2351.50"></text></g><g><title>`0x7FFE2F16B10F (1 samples, 0.13%)</title><rect x="7.9301%" y="2325" width="0.1344%" height="15" fill="rgb(235,190,38)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2335.50"></text></g><g><title>`0x7FFE2F16DF19 (1 samples, 0.13%)</title><rect x="7.9301%" y="2309" width="0.1344%" height="15" fill="rgb(247,86,24)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2319.50"></text></g><g><title>`0x7FFE2F10A9AE (1 samples, 0.13%)</title><rect x="7.9301%" y="2293" width="0.1344%" height="15" fill="rgb(205,101,16)" fg:x="59" fg:w="1"/><text x="8.1801%" y="2303.50"></text></g><g><title>`0x7FFE2F08A4F2 (1 samples, 0.13%)</title><rect x="8.0645%" y="2437" width="0.1344%" height="15" fill="rgb(246,168,33)" fg:x="60" fg:w="1"/><text x="8.3145%" y="2447.50"></text></g><g><title>`0x7FFE2F08EF05 (1 samples, 0.13%)</title><rect x="8.0645%" y="2421" width="0.1344%" height="15" fill="rgb(231,114,1)" fg:x="60" fg:w="1"/><text x="8.3145%" y="2431.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.13%)</title><rect x="8.0645%" y="2405" width="0.1344%" height="15" fill="rgb(207,184,53)" fg:x="60" fg:w="1"/><text x="8.3145%" y="2415.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.13%)</title><rect x="8.0645%" y="2389" width="0.1344%" height="15" fill="rgb(224,95,51)" fg:x="60" fg:w="1"/><text x="8.3145%" y="2399.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.13%)</title><rect x="8.0645%" y="2373" width="0.1344%" height="15" fill="rgb(212,188,45)" fg:x="60" fg:w="1"/><text x="8.3145%" y="2383.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.13%)</title><rect x="8.0645%" y="2357" width="0.1344%" height="15" fill="rgb(223,154,38)" fg:x="60" fg:w="1"/><text x="8.3145%" y="2367.50"></text></g><g><title>`0x7FFE29DF2343 (2 samples, 0.27%)</title><rect x="8.0645%" y="2533" width="0.2688%" height="15" fill="rgb(251,22,52)" fg:x="60" fg:w="2"/><text x="8.3145%" y="2543.50"></text></g><g><title>`0x7FFE2A1357C1 (2 samples, 0.27%)</title><rect x="8.0645%" y="2517" width="0.2688%" height="15" fill="rgb(229,209,22)" fg:x="60" fg:w="2"/><text x="8.3145%" y="2527.50"></text></g><g><title>`0x7FFE2A0333F2 (2 samples, 0.27%)</title><rect x="8.0645%" y="2501" width="0.2688%" height="15" fill="rgb(234,138,34)" fg:x="60" fg:w="2"/><text x="8.3145%" y="2511.50"></text></g><g><title>`0x7FFE2F06118D (2 samples, 0.27%)</title><rect x="8.0645%" y="2485" width="0.2688%" height="15" fill="rgb(212,95,11)" fg:x="60" fg:w="2"/><text x="8.3145%" y="2495.50"></text></g><g><title>`0x7FFE2F063013 (2 samples, 0.27%)</title><rect x="8.0645%" y="2469" width="0.2688%" height="15" fill="rgb(240,179,47)" fg:x="60" fg:w="2"/><text x="8.3145%" y="2479.50"></text></g><g><title>`0x7FFE2F08AB06 (2 samples, 0.27%)</title><rect x="8.0645%" y="2453" width="0.2688%" height="15" fill="rgb(240,163,11)" fg:x="60" fg:w="2"/><text x="8.3145%" y="2463.50"></text></g><g><title>`0x7FFE2F08A584 (1 samples, 0.13%)</title><rect x="8.1989%" y="2437" width="0.1344%" height="15" fill="rgb(236,37,12)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2447.50"></text></g><g><title>`0x7FFE2F047883 (1 samples, 0.13%)</title><rect x="8.1989%" y="2421" width="0.1344%" height="15" fill="rgb(232,164,16)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2431.50"></text></g><g><title>`0x7FFE2F0486FA (1 samples, 0.13%)</title><rect x="8.1989%" y="2405" width="0.1344%" height="15" fill="rgb(244,205,15)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2415.50"></text></g><g><title>`0x7FFE2F0B37AC (1 samples, 0.13%)</title><rect x="8.1989%" y="2389" width="0.1344%" height="15" fill="rgb(223,117,47)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2399.50"></text></g><g><title>`0x7FFE2F0B483E (1 samples, 0.13%)</title><rect x="8.1989%" y="2373" width="0.1344%" height="15" fill="rgb(244,107,35)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2383.50"></text></g><g><title>`0x7FFE2F1A0EDE (1 samples, 0.13%)</title><rect x="8.1989%" y="2357" width="0.1344%" height="15" fill="rgb(205,140,8)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2367.50"></text></g><g><title>`0x7FFE2D4D32EB (1 samples, 0.13%)</title><rect x="8.1989%" y="2341" width="0.1344%" height="15" fill="rgb(228,84,46)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2351.50"></text></g><g><title>`0x7FFE2D4D3172 (1 samples, 0.13%)</title><rect x="8.1989%" y="2325" width="0.1344%" height="15" fill="rgb(254,188,9)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2335.50"></text></g><g><title>`0x7FFE2C53E716 (1 samples, 0.13%)</title><rect x="8.1989%" y="2309" width="0.1344%" height="15" fill="rgb(206,112,54)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2319.50"></text></g><g><title>`0x7FFE2D4AECC0 (1 samples, 0.13%)</title><rect x="8.1989%" y="2293" width="0.1344%" height="15" fill="rgb(216,84,49)" fg:x="61" fg:w="1"/><text x="8.4489%" y="2303.50"></text></g><g><title>`0x7FFE29E6C272 (1 samples, 0.13%)</title><rect x="8.3333%" y="2517" width="0.1344%" height="15" fill="rgb(214,194,35)" fg:x="62" fg:w="1"/><text x="8.5833%" y="2527.50"></text></g><g><title>`0x7FFE29F124C2 (1 samples, 0.13%)</title><rect x="8.3333%" y="2501" width="0.1344%" height="15" fill="rgb(249,28,3)" fg:x="62" fg:w="1"/><text x="8.5833%" y="2511.50"></text></g><g><title>`0x7FFE29F127DB (1 samples, 0.13%)</title><rect x="8.3333%" y="2485" width="0.1344%" height="15" fill="rgb(222,56,52)" fg:x="62" fg:w="1"/><text x="8.5833%" y="2495.50"></text></g><g><title>`0x7FFE29F12914 (1 samples, 0.13%)</title><rect x="8.3333%" y="2469" width="0.1344%" height="15" fill="rgb(245,217,50)" fg:x="62" fg:w="1"/><text x="8.5833%" y="2479.50"></text></g><g><title>`0x7FFE2F08A4F2 (1 samples, 0.13%)</title><rect x="8.4677%" y="2373" width="0.1344%" height="15" fill="rgb(213,201,24)" fg:x="63" fg:w="1"/><text x="8.7177%" y="2383.50"></text></g><g><title>`0x7FFE2F08EF05 (1 samples, 0.13%)</title><rect x="8.4677%" y="2357" width="0.1344%" height="15" fill="rgb(248,116,28)" fg:x="63" fg:w="1"/><text x="8.7177%" y="2367.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.13%)</title><rect x="8.4677%" y="2341" width="0.1344%" height="15" fill="rgb(219,72,43)" fg:x="63" fg:w="1"/><text x="8.7177%" y="2351.50"></text></g><g><title>`0x7FFE2F0AD64C (1 samples, 0.13%)</title><rect x="8.4677%" y="2325" width="0.1344%" height="15" fill="rgb(209,138,14)" fg:x="63" fg:w="1"/><text x="8.7177%" y="2335.50"></text></g><g><title>`0x7FFE2F0AE175 (1 samples, 0.13%)</title><rect x="8.4677%" y="2309" width="0.1344%" height="15" fill="rgb(222,18,33)" fg:x="63" fg:w="1"/><text x="8.7177%" y="2319.50"></text></g><g><title>`0x7FFE2F0613B9 (1 samples, 0.13%)</title><rect x="8.4677%" y="2293" width="0.1344%" height="15" fill="rgb(213,199,7)" fg:x="63" fg:w="1"/><text x="8.7177%" y="2303.50"></text></g><g><title>`0x7FFE29E6C4FD (2 samples, 0.27%)</title><rect x="8.4677%" y="2517" width="0.2688%" height="15" fill="rgb(250,110,10)" fg:x="63" fg:w="2"/><text x="8.7177%" y="2527.50"></text></g><g><title>`0x7FFE29EDC94F (2 samples, 0.27%)</title><rect x="8.4677%" y="2501" width="0.2688%" height="15" fill="rgb(248,123,6)" fg:x="63" fg:w="2"/><text x="8.7177%" y="2511.50"></text></g><g><title>`0x7FFE29EDC561 (2 samples, 0.27%)</title><rect x="8.4677%" y="2485" width="0.2688%" height="15" fill="rgb(206,91,31)" fg:x="63" fg:w="2"/><text x="8.7177%" y="2495.50"></text></g><g><title>`0x7FFE29EDD111 (2 samples, 0.27%)</title><rect x="8.4677%" y="2469" width="0.2688%" height="15" fill="rgb(211,154,13)" fg:x="63" fg:w="2"/><text x="8.7177%" y="2479.50"></text></g><g><title>`0x7FFE2A13A9BA (2 samples, 0.27%)</title><rect x="8.4677%" y="2453" width="0.2688%" height="15" fill="rgb(225,148,7)" fg:x="63" fg:w="2"/><text x="8.7177%" y="2463.50"></text></g><g><title>`0x7FFE2A0333F2 (2 samples, 0.27%)</title><rect x="8.4677%" y="2437" width="0.2688%" height="15" fill="rgb(220,160,43)" fg:x="63" fg:w="2"/><text x="8.7177%" y="2447.50"></text></g><g><title>`0x7FFE2F06118D (2 samples, 0.27%)</title><rect x="8.4677%" y="2421" width="0.2688%" height="15" fill="rgb(213,52,39)" fg:x="63" fg:w="2"/><text x="8.7177%" y="2431.50"></text></g><g><title>`0x7FFE2F063013 (2 samples, 0.27%)</title><rect x="8.4677%" y="2405" width="0.2688%" height="15" fill="rgb(243,137,7)" fg:x="63" fg:w="2"/><text x="8.7177%" y="2415.50"></text></g><g><title>`0x7FFE2F08AB06 (2 samples, 0.27%)</title><rect x="8.4677%" y="2389" width="0.2688%" height="15" fill="rgb(230,79,13)" fg:x="63" fg:w="2"/><text x="8.7177%" y="2399.50"></text></g><g><title>`0x7FFE2F08A584 (1 samples, 0.13%)</title><rect x="8.6022%" y="2373" width="0.1344%" height="15" fill="rgb(247,105,23)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2383.50"></text></g><g><title>`0x7FFE2F047883 (1 samples, 0.13%)</title><rect x="8.6022%" y="2357" width="0.1344%" height="15" fill="rgb(223,179,41)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2367.50"></text></g><g><title>`0x7FFE2F0486FA (1 samples, 0.13%)</title><rect x="8.6022%" y="2341" width="0.1344%" height="15" fill="rgb(218,9,34)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2351.50"></text></g><g><title>`0x7FFE2F0B37AC (1 samples, 0.13%)</title><rect x="8.6022%" y="2325" width="0.1344%" height="15" fill="rgb(222,106,8)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2335.50"></text></g><g><title>`0x7FFE2F0B483E (1 samples, 0.13%)</title><rect x="8.6022%" y="2309" width="0.1344%" height="15" fill="rgb(211,220,0)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2319.50"></text></g><g><title>`0x7FFE2F1A0EDE (1 samples, 0.13%)</title><rect x="8.6022%" y="2293" width="0.1344%" height="15" fill="rgb(229,52,16)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2303.50"></text></g><g><title>`0x7FFE2D4115D6 (1 samples, 0.13%)</title><rect x="8.6022%" y="2277" width="0.1344%" height="15" fill="rgb(212,155,18)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2287.50"></text></g><g><title>`0x7FFE2D40796D (1 samples, 0.13%)</title><rect x="8.6022%" y="2261" width="0.1344%" height="15" fill="rgb(242,21,14)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2271.50"></text></g><g><title>`0x7FFE2D407ACB (1 samples, 0.13%)</title><rect x="8.6022%" y="2245" width="0.1344%" height="15" fill="rgb(222,19,48)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2255.50"></text></g><g><title>`0x7FFE2F085613 (1 samples, 0.13%)</title><rect x="8.6022%" y="2229" width="0.1344%" height="15" fill="rgb(232,45,27)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2239.50"></text></g><g><title>`0x7FFE2F0857A1 (1 samples, 0.13%)</title><rect x="8.6022%" y="2213" width="0.1344%" height="15" fill="rgb(249,103,42)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2223.50"></text></g><g><title>`0x7FFE2F0854B2 (1 samples, 0.13%)</title><rect x="8.6022%" y="2197" width="0.1344%" height="15" fill="rgb(246,81,33)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2207.50"></text></g><g><title>`0x7FFE2F084CA3 (1 samples, 0.13%)</title><rect x="8.6022%" y="2181" width="0.1344%" height="15" fill="rgb(252,33,42)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2191.50"></text></g><g><title>`0x7FFE2F08504A (1 samples, 0.13%)</title><rect x="8.6022%" y="2165" width="0.1344%" height="15" fill="rgb(209,212,41)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2175.50"></text></g><g><title>`0x7FFE2D406EC0 (1 samples, 0.13%)</title><rect x="8.6022%" y="2149" width="0.1344%" height="15" fill="rgb(207,154,6)" fg:x="64" fg:w="1"/><text x="8.8522%" y="2159.50"></text></g><g><title>`0x7FFE29E6C764 (1 samples, 0.13%)</title><rect x="8.7366%" y="2517" width="0.1344%" height="15" fill="rgb(223,64,47)" fg:x="65" fg:w="1"/><text x="8.9866%" y="2527.50"></text></g><g><title>`0x7FFE29DF3D72 (1 samples, 0.13%)</title><rect x="8.7366%" y="2501" width="0.1344%" height="15" fill="rgb(211,161,38)" fg:x="65" fg:w="1"/><text x="8.9866%" y="2511.50"></text></g><g><title>`0x7FFE29DF30C5 (7 samples, 0.94%)</title><rect x="8.0645%" y="2565" width="0.9409%" height="15" fill="rgb(219,138,40)" fg:x="60" fg:w="7"/><text x="8.3145%" y="2575.50"></text></g><g><title>`0x7FFE29DF1830 (7 samples, 0.94%)</title><rect x="8.0645%" y="2549" width="0.9409%" height="15" fill="rgb(241,228,46)" fg:x="60" fg:w="7"/><text x="8.3145%" y="2559.50"></text></g><g><title>`0x7FFE29DF26F2 (5 samples, 0.67%)</title><rect x="8.3333%" y="2533" width="0.6720%" height="15" fill="rgb(223,209,38)" fg:x="62" fg:w="5"/><text x="8.5833%" y="2543.50"></text></g><g><title>`0x7FFE29E6C897 (1 samples, 0.13%)</title><rect x="8.8710%" y="2517" width="0.1344%" height="15" fill="rgb(236,164,45)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2527.50"></text></g><g><title>`0x7FFE29F62783 (1 samples, 0.13%)</title><rect x="8.8710%" y="2501" width="0.1344%" height="15" fill="rgb(231,15,5)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2511.50"></text></g><g><title>`0x7FFE29F60F73 (1 samples, 0.13%)</title><rect x="8.8710%" y="2485" width="0.1344%" height="15" fill="rgb(252,35,15)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2495.50"></text></g><g><title>`0x7FFE2A138E7E (1 samples, 0.13%)</title><rect x="8.8710%" y="2469" width="0.1344%" height="15" fill="rgb(248,181,18)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2479.50"></text></g><g><title>`0x7FFE2A0333F2 (1 samples, 0.13%)</title><rect x="8.8710%" y="2453" width="0.1344%" height="15" fill="rgb(233,39,42)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2463.50"></text></g><g><title>`0x7FFE2F06118D (1 samples, 0.13%)</title><rect x="8.8710%" y="2437" width="0.1344%" height="15" fill="rgb(238,110,33)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2447.50"></text></g><g><title>`0x7FFE2F063013 (1 samples, 0.13%)</title><rect x="8.8710%" y="2421" width="0.1344%" height="15" fill="rgb(233,195,10)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2431.50"></text></g><g><title>`0x7FFE2F08AB06 (1 samples, 0.13%)</title><rect x="8.8710%" y="2405" width="0.1344%" height="15" fill="rgb(254,105,3)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2415.50"></text></g><g><title>`0x7FFE2F08A510 (1 samples, 0.13%)</title><rect x="8.8710%" y="2389" width="0.1344%" height="15" fill="rgb(221,225,9)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2399.50"></text></g><g><title>`0x7FFE2F0AFCDA (1 samples, 0.13%)</title><rect x="8.8710%" y="2373" width="0.1344%" height="15" fill="rgb(224,227,45)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2383.50"></text></g><g><title>`0x7FFE2F0B00AC (1 samples, 0.13%)</title><rect x="8.8710%" y="2357" width="0.1344%" height="15" fill="rgb(229,198,43)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2367.50"></text></g><g><title>`0x7FFE2F0B23D4 (1 samples, 0.13%)</title><rect x="8.8710%" y="2341" width="0.1344%" height="15" fill="rgb(206,209,35)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2351.50"></text></g><g><title>`0x7FFE2F1A3B74 (1 samples, 0.13%)</title><rect x="8.8710%" y="2325" width="0.1344%" height="15" fill="rgb(245,195,53)" fg:x="66" fg:w="1"/><text x="9.1210%" y="2335.50"></text></g><g><title>`0x7FFE2F0B032F (1 samples, 0.13%)</title><rect x="9.0054%" y="2453" width="0.1344%" height="15" fill="rgb(240,92,26)" fg:x="67" fg:w="1"/><text x="9.2554%" y="2463.50"></text></g><g><title>`0x7FFE2F0B0BB0 (1 samples, 0.13%)</title><rect x="9.0054%" y="2437" width="0.1344%" height="15" fill="rgb(207,40,23)" fg:x="67" fg:w="1"/><text x="9.2554%" y="2447.50"></text></g><g><title>`0x7FFE2F0B0EE3 (1 samples, 0.13%)</title><rect x="9.0054%" y="2421" width="0.1344%" height="15" fill="rgb(223,111,35)" fg:x="67" fg:w="1"/><text x="9.2554%" y="2431.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="9.0054%" y="2405" width="0.1344%" height="15" fill="rgb(229,147,28)" fg:x="67" fg:w="1"/><text x="9.2554%" y="2415.50"></text></g><g><title>`0x7FFE2F0AD42E (1 samples, 0.13%)</title><rect x="9.1398%" y="2357" width="0.1344%" height="15" fill="rgb(211,29,28)" fg:x="68" fg:w="1"/><text x="9.3898%" y="2367.50"></text></g><g><title>`0x7FFE2F0AD9EB (1 samples, 0.13%)</title><rect x="9.1398%" y="2341" width="0.1344%" height="15" fill="rgb(228,72,33)" fg:x="68" fg:w="1"/><text x="9.3898%" y="2351.50"></text></g><g><title>`0x7FFE2F1A3734 (1 samples, 0.13%)</title><rect x="9.1398%" y="2325" width="0.1344%" height="15" fill="rgb(205,214,31)" fg:x="68" fg:w="1"/><text x="9.3898%" y="2335.50"></text></g><g><title>`0x7FFE2F08A510 (3 samples, 0.40%)</title><rect x="9.0054%" y="2485" width="0.4032%" height="15" fill="rgb(224,111,15)" fg:x="67" fg:w="3"/><text x="9.2554%" y="2495.50"></text></g><g><title>`0x7FFE2F0AFDB4 (3 samples, 0.40%)</title><rect x="9.0054%" y="2469" width="0.4032%" height="15" fill="rgb(253,21,26)" fg:x="67" fg:w="3"/><text x="9.2554%" y="2479.50"></text></g><g><title>`0x7FFE2F0B039D (2 samples, 0.27%)</title><rect x="9.1398%" y="2453" width="0.2688%" height="15" fill="rgb(245,139,43)" fg:x="68" fg:w="2"/><text x="9.3898%" y="2463.50"></text></g><g><title>`0x7FFE2F0B24CC (2 samples, 0.27%)</title><rect x="9.1398%" y="2437" width="0.2688%" height="15" fill="rgb(252,170,7)" fg:x="68" fg:w="2"/><text x="9.3898%" y="2447.50"></text></g><g><title>`0x7FFE2F0AD5A8 (2 samples, 0.27%)</title><rect x="9.1398%" y="2421" width="0.2688%" height="15" fill="rgb(231,118,14)" fg:x="68" fg:w="2"/><text x="9.3898%" y="2431.50"></text></g><g><title>`0x7FFE2F08BABE (2 samples, 0.27%)</title><rect x="9.1398%" y="2405" width="0.2688%" height="15" fill="rgb(238,83,0)" fg:x="68" fg:w="2"/><text x="9.3898%" y="2415.50"></text></g><g><title>`0x7FFE2F08D8EE (2 samples, 0.27%)</title><rect x="9.1398%" y="2389" width="0.2688%" height="15" fill="rgb(221,39,39)" fg:x="68" fg:w="2"/><text x="9.3898%" y="2399.50"></text></g><g><title>`0x7FFE2F0AD001 (2 samples, 0.27%)</title><rect x="9.1398%" y="2373" width="0.2688%" height="15" fill="rgb(222,119,46)" fg:x="68" fg:w="2"/><text x="9.3898%" y="2383.50"></text></g><g><title>`0x7FFE2F0AD5A8 (1 samples, 0.13%)</title><rect x="9.2742%" y="2357" width="0.1344%" height="15" fill="rgb(222,165,49)" fg:x="69" fg:w="1"/><text x="9.5242%" y="2367.50"></text></g><g><title>`0x7FFE2F08BABE (1 samples, 0.13%)</title><rect x="9.2742%" y="2341" width="0.1344%" height="15" fill="rgb(219,113,52)" fg:x="69" fg:w="1"/><text x="9.5242%" y="2351.50"></text></g><g><title>`0x7FFE2F08D8EE (1 samples, 0.13%)</title><rect x="9.2742%" y="2325" width="0.1344%" height="15" fill="rgb(214,7,15)" fg:x="69" fg:w="1"/><text x="9.5242%" y="2335.50"></text></g><g><title>`0x7FFE2F0AD001 (1 samples, 0.13%)</title><rect x="9.2742%" y="2309" width="0.1344%" height="15" fill="rgb(235,32,4)" fg:x="69" fg:w="1"/><text x="9.5242%" y="2319.50"></text></g><g><title>`0x7FFE2F0AD5A8 (1 samples, 0.13%)</title><rect x="9.2742%" y="2293" width="0.1344%" height="15" fill="rgb(238,90,54)" fg:x="69" fg:w="1"/><text x="9.5242%" y="2303.50"></text></g><g><title>`0x7FFE2F08B80E (1 samples, 0.13%)</title><rect x="9.2742%" y="2277" width="0.1344%" height="15" fill="rgb(213,208,19)" fg:x="69" fg:w="1"/><text x="9.5242%" y="2287.50"></text></g><g><title>`0x7FFE2F062183 (1 samples, 0.13%)</title><rect x="9.2742%" y="2261" width="0.1344%" height="15" fill="rgb(233,156,4)" fg:x="69" fg:w="1"/><text x="9.5242%" y="2271.50"></text></g><g><title>`0x7FFE2A13430B (1 samples, 0.13%)</title><rect x="9.4086%" y="2389" width="0.1344%" height="15" fill="rgb(207,194,5)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2399.50"></text></g><g><title>`0x7FFE2A134192 (1 samples, 0.13%)</title><rect x="9.4086%" y="2373" width="0.1344%" height="15" fill="rgb(206,111,30)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2383.50"></text></g><g><title>`0x7FFE2C53E716 (1 samples, 0.13%)</title><rect x="9.4086%" y="2357" width="0.1344%" height="15" fill="rgb(243,70,54)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2367.50"></text></g><g><title>`0x7FFE29EDF282 (1 samples, 0.13%)</title><rect x="9.4086%" y="2341" width="0.1344%" height="15" fill="rgb(242,28,8)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2351.50"></text></g><g><title>`0x7FFE29EDF321 (1 samples, 0.13%)</title><rect x="9.4086%" y="2325" width="0.1344%" height="15" fill="rgb(219,106,18)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2335.50"></text></g><g><title>`0x7FFE2C54F4F8 (1 samples, 0.13%)</title><rect x="9.4086%" y="2309" width="0.1344%" height="15" fill="rgb(244,222,10)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2319.50"></text></g><g><title>`0x7FFE2C5826A8 (1 samples, 0.13%)</title><rect x="9.4086%" y="2293" width="0.1344%" height="15" fill="rgb(236,179,52)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2303.50"></text></g><g><title>`0x7FFE2C54C892 (1 samples, 0.13%)</title><rect x="9.4086%" y="2277" width="0.1344%" height="15" fill="rgb(213,23,39)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2287.50"></text></g><g><title>`0x7FFE2C54C926 (1 samples, 0.13%)</title><rect x="9.4086%" y="2261" width="0.1344%" height="15" fill="rgb(238,48,10)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2271.50"></text></g><g><title>`0x7FFE2C54CA95 (1 samples, 0.13%)</title><rect x="9.4086%" y="2245" width="0.1344%" height="15" fill="rgb(251,196,23)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2255.50"></text></g><g><title>`0x7FFE2C55BB70 (1 samples, 0.13%)</title><rect x="9.4086%" y="2229" width="0.1344%" height="15" fill="rgb(250,152,24)" fg:x="70" fg:w="1"/><text x="9.6586%" y="2239.50"></text></g><g><title>`0x7FFE2F0486FA (2 samples, 0.27%)</title><rect x="9.4086%" y="2453" width="0.2688%" height="15" fill="rgb(209,150,17)" fg:x="70" fg:w="2"/><text x="9.6586%" y="2463.50"></text></g><g><title>`0x7FFE2F0B37AC (2 samples, 0.27%)</title><rect x="9.4086%" y="2437" width="0.2688%" height="15" fill="rgb(234,202,34)" fg:x="70" fg:w="2"/><text x="9.6586%" y="2447.50"></text></g><g><title>`0x7FFE2F0B483E (2 samples, 0.27%)</title><rect x="9.4086%" y="2421" width="0.2688%" height="15" fill="rgb(253,148,53)" fg:x="70" fg:w="2"/><text x="9.6586%" y="2431.50"></text></g><g><title>`0x7FFE2F1A0EDE (2 samples, 0.27%)</title><rect x="9.4086%" y="2405" width="0.2688%" height="15" fill="rgb(218,129,16)" fg:x="70" fg:w="2"/><text x="9.6586%" y="2415.50"></text></g><g><title>`0x7FFE2A134326 (1 samples, 0.13%)</title><rect x="9.5430%" y="2389" width="0.1344%" height="15" fill="rgb(216,85,19)" fg:x="71" fg:w="1"/><text x="9.7930%" y="2399.50"></text></g><g><title>`0x7FFE29FA7DC0 (1 samples, 0.13%)</title><rect x="9.5430%" y="2373" width="0.1344%" height="15" fill="rgb(235,228,7)" fg:x="71" fg:w="1"/><text x="9.7930%" y="2383.50"></text></g><g><title>`0x7FFE29FA84EB (1 samples, 0.13%)</title><rect x="9.5430%" y="2357" width="0.1344%" height="15" fill="rgb(245,175,0)" fg:x="71" fg:w="1"/><text x="9.7930%" y="2367.50"></text></g><g><title>`0x7FFE29FA8747 (1 samples, 0.13%)</title><rect x="9.5430%" y="2341" width="0.1344%" height="15" fill="rgb(208,168,36)" fg:x="71" fg:w="1"/><text x="9.7930%" y="2351.50"></text></g><g><title>`0x7FFE2F0486FA (1 samples, 0.13%)</title><rect x="9.6774%" y="2437" width="0.1344%" height="15" fill="rgb(246,171,24)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2447.50"></text></g><g><title>`0x7FFE2F0B37AC (1 samples, 0.13%)</title><rect x="9.6774%" y="2421" width="0.1344%" height="15" fill="rgb(215,142,24)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2431.50"></text></g><g><title>`0x7FFE2F0B483E (1 samples, 0.13%)</title><rect x="9.6774%" y="2405" width="0.1344%" height="15" fill="rgb(250,187,7)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2415.50"></text></g><g><title>`0x7FFE2F1A0EDE (1 samples, 0.13%)</title><rect x="9.6774%" y="2389" width="0.1344%" height="15" fill="rgb(228,66,33)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2399.50"></text></g><g><title>`0x7FFE2EAB11B9 (1 samples, 0.13%)</title><rect x="9.6774%" y="2373" width="0.1344%" height="15" fill="rgb(234,215,21)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2383.50"></text></g><g><title>`0x7FFE2EAB13C6 (1 samples, 0.13%)</title><rect x="9.6774%" y="2357" width="0.1344%" height="15" fill="rgb(222,191,20)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2367.50"></text></g><g><title>`0x7FFE2EAB156D (1 samples, 0.13%)</title><rect x="9.6774%" y="2341" width="0.1344%" height="15" fill="rgb(245,79,54)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2351.50"></text></g><g><title>`0x7FFE2F085613 (1 samples, 0.13%)</title><rect x="9.6774%" y="2325" width="0.1344%" height="15" fill="rgb(240,10,37)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2335.50"></text></g><g><title>`0x7FFE2F0857A1 (1 samples, 0.13%)</title><rect x="9.6774%" y="2309" width="0.1344%" height="15" fill="rgb(214,192,32)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2319.50"></text></g><g><title>`0x7FFE2F085482 (1 samples, 0.13%)</title><rect x="9.6774%" y="2293" width="0.1344%" height="15" fill="rgb(209,36,54)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2303.50"></text></g><g><title>`0x7FFE2F1A6CE4 (1 samples, 0.13%)</title><rect x="9.6774%" y="2277" width="0.1344%" height="15" fill="rgb(220,10,11)" fg:x="72" fg:w="1"/><text x="9.9274%" y="2287.50"></text></g><g><title>fuzzit.exe`dirs::home_dir (15 samples, 2.02%)</title><rect x="7.9301%" y="2613" width="2.0161%" height="15" fill="rgb(221,106,17)" fg:x="59" fg:w="15"/><text x="8.1801%" y="2623.50">f..</text></g><g><title>fuzzit.exe`dirs_sys::target_windows::known_folder_profile (15 samples, 2.02%)</title><rect x="7.9301%" y="2597" width="2.0161%" height="15" fill="rgb(251,142,44)" fg:x="59" fg:w="15"/><text x="8.1801%" y="2607.50">f..</text></g><g><title>fuzzit.exe`dirs_sys::target_windows::known_folder (15 samples, 2.02%)</title><rect x="7.9301%" y="2581" width="2.0161%" height="15" fill="rgb(238,13,15)" fg:x="59" fg:w="15"/><text x="8.1801%" y="2591.50">f..</text></g><g><title>`0x7FFE2E41AFE5 (7 samples, 0.94%)</title><rect x="9.0054%" y="2565" width="0.9409%" height="15" fill="rgb(208,107,27)" fg:x="67" fg:w="7"/><text x="9.2554%" y="2575.50"></text></g><g><title>`0x7FFE2E3224D2 (7 samples, 0.94%)</title><rect x="9.0054%" y="2549" width="0.9409%" height="15" fill="rgb(205,136,37)" fg:x="67" fg:w="7"/><text x="9.2554%" y="2559.50"></text></g><g><title>`0x7FFE2F06118D (7 samples, 0.94%)</title><rect x="9.0054%" y="2533" width="0.9409%" height="15" fill="rgb(250,205,27)" fg:x="67" fg:w="7"/><text x="9.2554%" y="2543.50"></text></g><g><title>`0x7FFE2F063013 (7 samples, 0.94%)</title><rect x="9.0054%" y="2517" width="0.9409%" height="15" fill="rgb(210,80,43)" fg:x="67" fg:w="7"/><text x="9.2554%" y="2527.50"></text></g><g><title>`0x7FFE2F08AB06 (7 samples, 0.94%)</title><rect x="9.0054%" y="2501" width="0.9409%" height="15" fill="rgb(247,160,36)" fg:x="67" fg:w="7"/><text x="9.2554%" y="2511.50"></text></g><g><title>`0x7FFE2F08A584 (4 samples, 0.54%)</title><rect x="9.4086%" y="2485" width="0.5376%" height="15" fill="rgb(234,13,49)" fg:x="70" fg:w="4"/><text x="9.6586%" y="2495.50"></text></g><g><title>`0x7FFE2F047883 (4 samples, 0.54%)</title><rect x="9.4086%" y="2469" width="0.5376%" height="15" fill="rgb(234,122,0)" fg:x="70" fg:w="4"/><text x="9.6586%" y="2479.50"></text></g><g><title>`0x7FFE2F048726 (2 samples, 0.27%)</title><rect x="9.6774%" y="2453" width="0.2688%" height="15" fill="rgb(207,146,38)" fg:x="72" fg:w="2"/><text x="9.9274%" y="2463.50"></text></g><g><title>`0x7FFE2F048726 (1 samples, 0.13%)</title><rect x="9.8118%" y="2437" width="0.1344%" height="15" fill="rgb(207,177,25)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2447.50"></text></g><g><title>`0x7FFE2F0486FA (1 samples, 0.13%)</title><rect x="9.8118%" y="2421" width="0.1344%" height="15" fill="rgb(211,178,42)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2431.50"></text></g><g><title>`0x7FFE2F0B37AC (1 samples, 0.13%)</title><rect x="9.8118%" y="2405" width="0.1344%" height="15" fill="rgb(230,69,54)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2415.50"></text></g><g><title>`0x7FFE2F0B483E (1 samples, 0.13%)</title><rect x="9.8118%" y="2389" width="0.1344%" height="15" fill="rgb(214,135,41)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2399.50"></text></g><g><title>`0x7FFE2F1A0EDE (1 samples, 0.13%)</title><rect x="9.8118%" y="2373" width="0.1344%" height="15" fill="rgb(237,67,25)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2383.50"></text></g><g><title>`0x7FFE2ECF7AAF (1 samples, 0.13%)</title><rect x="9.8118%" y="2357" width="0.1344%" height="15" fill="rgb(222,189,50)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2367.50"></text></g><g><title>`0x7FFE2ED14762 (1 samples, 0.13%)</title><rect x="9.8118%" y="2341" width="0.1344%" height="15" fill="rgb(245,148,34)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2351.50"></text></g><g><title>`0x7FFE2ED148D0 (1 samples, 0.13%)</title><rect x="9.8118%" y="2325" width="0.1344%" height="15" fill="rgb(222,29,6)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2335.50"></text></g><g><title>`0x7FFE2ED0D89B (1 samples, 0.13%)</title><rect x="9.8118%" y="2309" width="0.1344%" height="15" fill="rgb(221,189,43)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2319.50"></text></g><g><title>`0x7FFE2ED0D6B0 (1 samples, 0.13%)</title><rect x="9.8118%" y="2293" width="0.1344%" height="15" fill="rgb(207,36,27)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2303.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="9.8118%" y="2277" width="0.1344%" height="15" fill="rgb(217,90,24)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2287.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.13%)</title><rect x="9.8118%" y="2261" width="0.1344%" height="15" fill="rgb(224,66,35)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2271.50"></text></g><g><title>`0x7FFE2F0663F7 (1 samples, 0.13%)</title><rect x="9.8118%" y="2245" width="0.1344%" height="15" fill="rgb(221,13,50)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2255.50"></text></g><g><title>`0x7FFE2F0688A7 (1 samples, 0.13%)</title><rect x="9.8118%" y="2229" width="0.1344%" height="15" fill="rgb(236,68,49)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2239.50"></text></g><g><title>`0x7FFE2F077CC8 (1 samples, 0.13%)</title><rect x="9.8118%" y="2213" width="0.1344%" height="15" fill="rgb(229,146,28)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2223.50"></text></g><g><title>`0x7FFE2F0784AE (1 samples, 0.13%)</title><rect x="9.8118%" y="2197" width="0.1344%" height="15" fill="rgb(225,31,38)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2207.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="9.8118%" y="2181" width="0.1344%" height="15" fill="rgb(250,208,3)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2191.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.13%)</title><rect x="9.8118%" y="2165" width="0.1344%" height="15" fill="rgb(246,54,23)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2175.50"></text></g><g><title>`0x7FFE2F067842 (1 samples, 0.13%)</title><rect x="9.8118%" y="2149" width="0.1344%" height="15" fill="rgb(243,76,11)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2159.50"></text></g><g><title>`0x7FFE2F068C1F (1 samples, 0.13%)</title><rect x="9.8118%" y="2133" width="0.1344%" height="15" fill="rgb(245,21,50)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2143.50"></text></g><g><title>`0x7FFE2F069594 (1 samples, 0.13%)</title><rect x="9.8118%" y="2117" width="0.1344%" height="15" fill="rgb(228,9,43)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2127.50"></text></g><g><title>`0x7FFE2F0690CA (1 samples, 0.13%)</title><rect x="9.8118%" y="2101" width="0.1344%" height="15" fill="rgb(208,100,47)" fg:x="73" fg:w="1"/><text x="10.0618%" y="2111.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="9.9462%" y="2565" width="0.1344%" height="15" fill="rgb(232,26,8)" fg:x="74" fg:w="1"/><text x="10.1962%" y="2575.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="9.9462%" y="2549" width="0.1344%" height="15" fill="rgb(216,166,38)" fg:x="74" fg:w="1"/><text x="10.1962%" y="2559.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="9.9462%" y="2533" width="0.1344%" height="15" fill="rgb(251,202,51)" fg:x="74" fg:w="1"/><text x="10.1962%" y="2543.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="9.9462%" y="2517" width="0.1344%" height="15" fill="rgb(254,216,34)" fg:x="74" fg:w="1"/><text x="10.1962%" y="2527.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$25::drop (1 samples, 0.13%)</title><rect x="9.9462%" y="2501" width="0.1344%" height="15" fill="rgb(251,32,27)" fg:x="74" fg:w="1"/><text x="10.1962%" y="2511.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="9.9462%" y="2485" width="0.1344%" height="15" fill="rgb(208,127,28)" fg:x="74" fg:w="1"/><text x="10.1962%" y="2495.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="9.9462%" y="2469" width="0.1344%" height="15" fill="rgb(224,137,22)" fg:x="74" fg:w="1"/><text x="10.1962%" y="2479.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::ok(enum2$&lt;core::result::Result&lt;tuple$ (2 samples, 0.27%)</title><rect x="9.9462%" y="2597" width="0.2688%" height="15" fill="rgb(254,70,32)" fg:x="74" fg:w="2"/><text x="10.1962%" y="2607.50"></text></g><g><title>fuzzit.exe`std::fs::write::inner (2 samples, 0.27%)</title><rect x="9.9462%" y="2581" width="0.2688%" height="15" fill="rgb(229,75,37)" fg:x="74" fg:w="2"/><text x="10.1962%" y="2591.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="10.0806%" y="2565" width="0.1344%" height="15" fill="rgb(252,64,23)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2575.50"></text></g><g><title>fuzzit.exe`std::fs::OpenOptions::_open (1 samples, 0.13%)</title><rect x="10.0806%" y="2549" width="0.1344%" height="15" fill="rgb(232,162,48)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2559.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.13%)</title><rect x="10.0806%" y="2533" width="0.1344%" height="15" fill="rgb(246,160,12)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2543.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="10.0806%" y="2517" width="0.1344%" height="15" fill="rgb(247,166,0)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2527.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="10.0806%" y="2501" width="0.1344%" height="15" fill="rgb(249,219,21)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2511.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="10.0806%" y="2485" width="0.1344%" height="15" fill="rgb(205,209,3)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2495.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="10.0806%" y="2469" width="0.1344%" height="15" fill="rgb(243,44,1)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2479.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="10.0806%" y="2453" width="0.1344%" height="15" fill="rgb(206,159,16)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2463.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="10.0806%" y="2437" width="0.1344%" height="15" fill="rgb(244,77,30)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2447.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="10.0806%" y="2421" width="0.1344%" height="15" fill="rgb(218,69,12)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2431.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="10.0806%" y="2405" width="0.1344%" height="15" fill="rgb(212,87,7)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2415.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="10.0806%" y="2389" width="0.1344%" height="15" fill="rgb(245,114,25)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2399.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="10.0806%" y="2373" width="0.1344%" height="15" fill="rgb(210,61,42)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2383.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="10.0806%" y="2357" width="0.1344%" height="15" fill="rgb(211,52,33)" fg:x="75" fg:w="1"/><text x="10.3306%" y="2367.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::is_console (5 samples, 0.67%)</title><rect x="10.3495%" y="2357" width="0.6720%" height="15" fill="rgb(234,58,33)" fg:x="77" fg:w="5"/><text x="10.5995%" y="2367.50"></text></g><g><title>`0x7FFE2C8D8B82 (5 samples, 0.67%)</title><rect x="10.3495%" y="2341" width="0.6720%" height="15" fill="rgb(220,115,36)" fg:x="77" fg:w="5"/><text x="10.5995%" y="2351.50"></text></g><g><title>`0x7FFE2F1A3314 (5 samples, 0.67%)</title><rect x="10.3495%" y="2325" width="0.6720%" height="15" fill="rgb(243,153,54)" fg:x="77" fg:w="5"/><text x="10.5995%" y="2335.50"></text></g><g><title>`0x7FFE2C89E38B (1 samples, 0.13%)</title><rect x="11.0215%" y="2341" width="0.1344%" height="15" fill="rgb(251,47,18)" fg:x="82" fg:w="1"/><text x="11.2715%" y="2351.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::is_utf8_console (13 samples, 1.75%)</title><rect x="11.0215%" y="2357" width="1.7473%" height="15" fill="rgb(242,102,42)" fg:x="82" fg:w="13"/><text x="11.2715%" y="2367.50"></text></g><g><title>`0x7FFE2C89E425 (12 samples, 1.61%)</title><rect x="11.1559%" y="2341" width="1.6129%" height="15" fill="rgb(234,31,38)" fg:x="83" fg:w="12"/><text x="11.4059%" y="2351.50"></text></g><g><title>`0x7FFE2F1A3314 (12 samples, 1.61%)</title><rect x="11.1559%" y="2325" width="1.6129%" height="15" fill="rgb(221,117,51)" fg:x="83" fg:w="12"/><text x="11.4059%" y="2335.50"></text></g><g><title>fuzzit.exe`fuzzit::cache::create_cache(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (31 samples, 4.17%)</title><rect x="9.9462%" y="2613" width="4.1667%" height="15" fill="rgb(212,20,18)" fg:x="74" fg:w="31"/><text x="10.1962%" y="2623.50">fuzzi..</text></g><g><title>fuzzit.exe`std::fs::write (29 samples, 3.90%)</title><rect x="10.2151%" y="2597" width="3.8978%" height="15" fill="rgb(245,133,36)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2607.50">fuzz..</text></g><g><title>fuzzit.exe`core::convert::impl$0::as_ref (29 samples, 3.90%)</title><rect x="10.2151%" y="2581" width="3.8978%" height="15" fill="rgb(212,6,19)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2591.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::stdio::_eprint (29 samples, 3.90%)</title><rect x="10.2151%" y="2565" width="3.8978%" height="15" fill="rgb(218,1,36)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2575.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::stdio::print_to (29 samples, 3.90%)</title><rect x="10.2151%" y="2549" width="3.8978%" height="15" fill="rgb(246,84,54)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2559.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::stdio::impl$26::write_fmt (29 samples, 3.90%)</title><rect x="10.2151%" y="2533" width="3.8978%" height="15" fill="rgb(242,110,6)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2543.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::Write::write_fmt (29 samples, 3.90%)</title><rect x="10.2151%" y="2517" width="3.8978%" height="15" fill="rgb(214,47,5)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2527.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::default_write_fmt (29 samples, 3.90%)</title><rect x="10.2151%" y="2501" width="3.8978%" height="15" fill="rgb(218,159,25)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2511.50">fuzz..</text></g><g><title>fuzzit.exe`core::fmt::write (29 samples, 3.90%)</title><rect x="10.2151%" y="2485" width="3.8978%" height="15" fill="rgb(215,211,28)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2495.50">fuzz..</text></g><g><title>fuzzit.exe`core::fmt::impl$18::fmt (29 samples, 3.90%)</title><rect x="10.2151%" y="2469" width="3.8978%" height="15" fill="rgb(238,59,32)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2479.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StderrLock&gt; (29 samples, 3.90%)</title><rect x="10.2151%" y="2453" width="3.8978%" height="15" fill="rgb(226,82,3)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2463.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::stdio::impl$29::write_all (29 samples, 3.90%)</title><rect x="10.2151%" y="2437" width="3.8978%" height="15" fill="rgb(240,164,32)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2447.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::stdio::impl$2::write_all (29 samples, 3.90%)</title><rect x="10.2151%" y="2421" width="3.8978%" height="15" fill="rgb(232,46,7)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2431.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::stdio::handle_ebadf (29 samples, 3.90%)</title><rect x="10.2151%" y="2405" width="3.8978%" height="15" fill="rgb(229,129,53)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2415.50">fuzz..</text></g><g><title>fuzzit.exe`std::io::Write::write_all&lt;std::sys::stdio::windows::Stderr&gt; (29 samples, 3.90%)</title><rect x="10.2151%" y="2389" width="3.8978%" height="15" fill="rgb(234,188,29)" fg:x="76" fg:w="29"/><text x="10.4651%" y="2399.50">fuzz..</text></g><g><title>fuzzit.exe`std::sys::stdio::windows::write (28 samples, 3.76%)</title><rect x="10.3495%" y="2373" width="3.7634%" height="15" fill="rgb(246,141,4)" fg:x="77" fg:w="28"/><text x="10.5995%" y="2383.50">fuzz..</text></g><g><title>fuzzit.exe`std::sys::stdio::windows::write_console_utf16 (10 samples, 1.34%)</title><rect x="12.7688%" y="2357" width="1.3441%" height="15" fill="rgb(229,23,39)" fg:x="95" fg:w="10"/><text x="13.0188%" y="2367.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::write_valid_utf8_to_console (10 samples, 1.34%)</title><rect x="12.7688%" y="2341" width="1.3441%" height="15" fill="rgb(206,12,3)" fg:x="95" fg:w="10"/><text x="13.0188%" y="2351.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::write_u16s (10 samples, 1.34%)</title><rect x="12.7688%" y="2325" width="1.3441%" height="15" fill="rgb(252,226,20)" fg:x="95" fg:w="10"/><text x="13.0188%" y="2335.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (10 samples, 1.34%)</title><rect x="12.7688%" y="2309" width="1.3441%" height="15" fill="rgb(216,123,35)" fg:x="95" fg:w="10"/><text x="13.0188%" y="2319.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (10 samples, 1.34%)</title><rect x="12.7688%" y="2293" width="1.3441%" height="15" fill="rgb(212,68,40)" fg:x="95" fg:w="10"/><text x="13.0188%" y="2303.50"></text></g><g><title>`0x7FFE2C8E1E3E (10 samples, 1.34%)</title><rect x="12.7688%" y="2277" width="1.3441%" height="15" fill="rgb(254,125,32)" fg:x="95" fg:w="10"/><text x="13.0188%" y="2287.50"></text></g><g><title>`0x7FFE2C8E1F7C (10 samples, 1.34%)</title><rect x="12.7688%" y="2261" width="1.3441%" height="15" fill="rgb(253,97,22)" fg:x="95" fg:w="10"/><text x="13.0188%" y="2271.50"></text></g><g><title>`0x7FFE2F1A3314 (10 samples, 1.34%)</title><rect x="12.7688%" y="2245" width="1.3441%" height="15" fill="rgb(241,101,14)" fg:x="95" fg:w="10"/><text x="13.0188%" y="2255.50"></text></g><g><title>fuzzit.exe`std::fs::DirBuilder::create_dir_all (1 samples, 0.13%)</title><rect x="14.1129%" y="2533" width="0.1344%" height="15" fill="rgb(238,103,29)" fg:x="105" fg:w="1"/><text x="14.3629%" y="2543.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::DirBuilder::mkdir (1 samples, 0.13%)</title><rect x="14.1129%" y="2517" width="0.1344%" height="15" fill="rgb(233,195,47)" fg:x="105" fg:w="1"/><text x="14.3629%" y="2527.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.13%)</title><rect x="14.1129%" y="2501" width="0.1344%" height="15" fill="rgb(246,218,30)" fg:x="105" fg:w="1"/><text x="14.3629%" y="2511.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.13%)</title><rect x="14.1129%" y="2485" width="0.1344%" height="15" fill="rgb(219,145,47)" fg:x="105" fg:w="1"/><text x="14.3629%" y="2495.50"></text></g><g><title>`0x7FFE2C872B12 (1 samples, 0.13%)</title><rect x="14.1129%" y="2469" width="0.1344%" height="15" fill="rgb(243,12,26)" fg:x="105" fg:w="1"/><text x="14.3629%" y="2479.50"></text></g><g><title>`0x7FFE2C8739DA (1 samples, 0.13%)</title><rect x="14.1129%" y="2453" width="0.1344%" height="15" fill="rgb(214,87,16)" fg:x="105" fg:w="1"/><text x="14.3629%" y="2463.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="14.1129%" y="2437" width="0.1344%" height="15" fill="rgb(208,99,42)" fg:x="105" fg:w="1"/><text x="14.3629%" y="2447.50"></text></g><g><title>fuzzit.exe`fuzzit::cache::mtime_matches_cache(ref$ (3 samples, 0.40%)</title><rect x="14.1129%" y="2613" width="0.4032%" height="15" fill="rgb(253,99,2)" fg:x="105" fg:w="3"/><text x="14.3629%" y="2623.50"></text></g><g><title>fuzzit.exe`core::option::impl$40::branch(enum2$&lt;core::option::Option (3 samples, 0.40%)</title><rect x="14.1129%" y="2597" width="0.4032%" height="15" fill="rgb(220,168,23)" fg:x="105" fg:w="3"/><text x="14.3629%" y="2607.50"></text></g><g><title>fuzzit.exe`fuzzit::cache::get_cache_path(ref$ (3 samples, 0.40%)</title><rect x="14.1129%" y="2581" width="0.4032%" height="15" fill="rgb(242,38,24)" fg:x="105" fg:w="3"/><text x="14.3629%" y="2591.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,std::io::error::Error&gt; &gt;::ok(enum2$&lt;core::result::Result&lt;tuple$ (3 samples, 0.40%)</title><rect x="14.1129%" y="2565" width="0.4032%" height="15" fill="rgb(225,182,9)" fg:x="105" fg:w="3"/><text x="14.3629%" y="2575.50"></text></g><g><title>fuzzit.exe`std::fs::DirBuilder::create_dir_all (3 samples, 0.40%)</title><rect x="14.1129%" y="2549" width="0.4032%" height="15" fill="rgb(243,178,37)" fg:x="105" fg:w="3"/><text x="14.3629%" y="2559.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::DirBuilder::mkdir (2 samples, 0.27%)</title><rect x="14.2473%" y="2533" width="0.2688%" height="15" fill="rgb(232,139,19)" fg:x="106" fg:w="2"/><text x="14.4973%" y="2543.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (2 samples, 0.27%)</title><rect x="14.2473%" y="2517" width="0.2688%" height="15" fill="rgb(225,201,24)" fg:x="106" fg:w="2"/><text x="14.4973%" y="2527.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (2 samples, 0.27%)</title><rect x="14.2473%" y="2501" width="0.2688%" height="15" fill="rgb(221,47,46)" fg:x="106" fg:w="2"/><text x="14.4973%" y="2511.50"></text></g><g><title>`0x7FFE2C872B12 (2 samples, 0.27%)</title><rect x="14.2473%" y="2485" width="0.2688%" height="15" fill="rgb(249,23,13)" fg:x="106" fg:w="2"/><text x="14.4973%" y="2495.50"></text></g><g><title>`0x7FFE2C8739DA (2 samples, 0.27%)</title><rect x="14.2473%" y="2469" width="0.2688%" height="15" fill="rgb(219,9,5)" fg:x="106" fg:w="2"/><text x="14.4973%" y="2479.50"></text></g><g><title>`0x7FFE2F1A3CD4 (2 samples, 0.27%)</title><rect x="14.2473%" y="2453" width="0.2688%" height="15" fill="rgb(254,171,16)" fg:x="106" fg:w="2"/><text x="14.4973%" y="2463.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;tuple$ (53 samples, 7.12%)</title><rect x="7.5269%" y="2645" width="7.1237%" height="15" fill="rgb(230,171,20)" fg:x="56" fg:w="53"/><text x="7.7769%" y="2655.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data(enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt;, enum2$&lt;core::option::Option (53 samples, 7.12%)</title><rect x="7.5269%" y="2629" width="7.1237%" height="15" fill="rgb(210,71,41)" fg:x="56" fg:w="53"/><text x="7.7769%" y="2639.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`std::path::impl$45::deref (1 samples, 0.13%)</title><rect x="14.5161%" y="2613" width="0.1344%" height="15" fill="rgb(206,173,20)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2623.50"></text></g><g><title>fuzzit.exe`std::path::Path::new (1 samples, 0.13%)</title><rect x="14.5161%" y="2597" width="0.1344%" height="15" fill="rgb(233,88,34)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2607.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$59::as_ref (1 samples, 0.13%)</title><rect x="14.5161%" y="2581" width="0.1344%" height="15" fill="rgb(223,209,46)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2591.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$7::deref (1 samples, 0.13%)</title><rect x="14.5161%" y="2565" width="0.1344%" height="15" fill="rgb(250,43,18)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2575.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$5::index (1 samples, 0.13%)</title><rect x="14.5161%" y="2549" width="0.1344%" height="15" fill="rgb(208,13,10)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2559.50"></text></g><g><title>fuzzit.exe`std::sys::os_str::wtf8::Buf::as_slice (1 samples, 0.13%)</title><rect x="14.5161%" y="2533" width="0.1344%" height="15" fill="rgb(212,200,36)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2543.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::as_slice (1 samples, 0.13%)</title><rect x="14.5161%" y="2517" width="0.1344%" height="15" fill="rgb(225,90,30)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2527.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.13%)</title><rect x="14.5161%" y="2501" width="0.1344%" height="15" fill="rgb(236,182,39)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2511.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_slice (1 samples, 0.13%)</title><rect x="14.5161%" y="2485" width="0.1344%" height="15" fill="rgb(212,144,35)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2495.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.13%)</title><rect x="14.5161%" y="2469" width="0.1344%" height="15" fill="rgb(228,63,44)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2479.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.13%)</title><rect x="14.5161%" y="2453" width="0.1344%" height="15" fill="rgb(228,109,6)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2463.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.13%)</title><rect x="14.5161%" y="2437" width="0.1344%" height="15" fill="rgb(238,117,24)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2447.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.13%)</title><rect x="14.5161%" y="2421" width="0.1344%" height="15" fill="rgb(242,26,26)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2431.50"></text></g><g><title>fuzzit.exe`rayon::slice::sort::recurse&lt;std::path::PathBuf,bool (*)(ref$&lt;std::path::PathBuf&gt;,ref$&lt;std::path::PathBuf&gt;)&gt;(ref_mut$&lt;slice2$&lt;std::path::PathBuf&gt; &gt;, bool (**)(std::path::PathBuf*, std::path::PathBuf*), enum2$&lt;core::option::Option&lt;ref_mut$ (1 samples, 0.13%)</title><rect x="14.5161%" y="2405" width="0.1344%" height="15" fill="rgb(221,92,48)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2415.50"></text></g><g><title>fuzzit.exe`rayon::slice::sort::partition(ref_mut$&lt;slice2$&lt;std::path::PathBuf&gt; &gt;, unsigned long long, bool (**) (1 samples, 0.13%)</title><rect x="14.5161%" y="2389" width="0.1344%" height="15" fill="rgb(209,209,32)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2399.50"></text></g><g><title>fuzzit.exe`core::ops::function::Fn::call(bool (**) (1 samples, 0.13%)</title><rect x="14.5161%" y="2373" width="0.1344%" height="15" fill="rgb(221,70,22)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2383.50"></text></g><g><title>fuzzit.exe`core::cmp::PartialOrd::lt (1 samples, 0.13%)</title><rect x="14.5161%" y="2357" width="0.1344%" height="15" fill="rgb(248,145,5)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2367.50"></text></g><g><title>fuzzit.exe`std::path::impl$63::partial_cmp (1 samples, 0.13%)</title><rect x="14.5161%" y="2341" width="0.1344%" height="15" fill="rgb(226,116,26)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2351.50"></text></g><g><title>fuzzit.exe`std::path::Path::components (1 samples, 0.13%)</title><rect x="14.5161%" y="2325" width="0.1344%" height="15" fill="rgb(244,5,17)" fg:x="108" fg:w="1"/><text x="14.7661%" y="2335.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::is_console (2 samples, 0.27%)</title><rect x="14.7849%" y="2389" width="0.2688%" height="15" fill="rgb(252,159,33)" fg:x="110" fg:w="2"/><text x="15.0349%" y="2399.50"></text></g><g><title>`0x7FFE2C8D8B82 (2 samples, 0.27%)</title><rect x="14.7849%" y="2373" width="0.2688%" height="15" fill="rgb(206,71,0)" fg:x="110" fg:w="2"/><text x="15.0349%" y="2383.50"></text></g><g><title>`0x7FFE2F1A3314 (2 samples, 0.27%)</title><rect x="14.7849%" y="2357" width="0.2688%" height="15" fill="rgb(233,118,54)" fg:x="110" fg:w="2"/><text x="15.0349%" y="2367.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::is_utf8_console (1 samples, 0.13%)</title><rect x="15.0538%" y="2389" width="0.1344%" height="15" fill="rgb(234,83,48)" fg:x="112" fg:w="1"/><text x="15.3038%" y="2399.50"></text></g><g><title>`0x7FFE2C89E425 (1 samples, 0.13%)</title><rect x="15.0538%" y="2373" width="0.1344%" height="15" fill="rgb(228,3,54)" fg:x="112" fg:w="1"/><text x="15.3038%" y="2383.50"></text></g><g><title>`0x7FFE2F1A3314 (1 samples, 0.13%)</title><rect x="15.0538%" y="2357" width="0.1344%" height="15" fill="rgb(226,155,13)" fg:x="112" fg:w="1"/><text x="15.3038%" y="2367.50"></text></g><g><title>fuzzit.exe`__scrt_common_main_seh() (66 samples, 8.87%)</title><rect x="6.4516%" y="2837" width="8.8710%" height="15" fill="rgb(241,28,37)" fg:x="48" fg:w="66"/><text x="6.7016%" y="2847.50">fuzzit.exe`__..</text></g><g><title>fuzzit.exe`invoke_main() (59 samples, 7.93%)</title><rect x="7.3925%" y="2821" width="7.9301%" height="15" fill="rgb(233,93,10)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2831.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`main (59 samples, 7.93%)</title><rect x="7.3925%" y="2805" width="7.9301%" height="15" fill="rgb(225,113,19)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2815.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::rt::lang_start_internal (59 samples, 7.93%)</title><rect x="7.3925%" y="2789" width="7.9301%" height="15" fill="rgb(241,2,18)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2799.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind (59 samples, 7.93%)</title><rect x="7.3925%" y="2773" width="7.9301%" height="15" fill="rgb(228,207,21)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2783.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::panicking::try (59 samples, 7.93%)</title><rect x="7.3925%" y="2757" width="7.9301%" height="15" fill="rgb(213,211,35)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2767.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (59 samples, 7.93%)</title><rect x="7.3925%" y="2741" width="7.9301%" height="15" fill="rgb(209,83,10)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2751.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::rt::lang_start_internal::closure$0 (59 samples, 7.93%)</title><rect x="7.3925%" y="2725" width="7.9301%" height="15" fill="rgb(209,164,1)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2735.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$ (59 samples, 7.93%)</title><rect x="7.3925%" y="2709" width="7.9301%" height="15" fill="rgb(213,184,43)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2719.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::process::impl$67::report(enum2$&lt;core::result::Result&lt;tuple$ (59 samples, 7.93%)</title><rect x="7.3925%" y="2693" width="7.9301%" height="15" fill="rgb(231,61,34)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2703.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt; (*)(),enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt; (*) (59 samples, 7.93%)</title><rect x="7.3925%" y="2677" width="7.9301%" height="15" fill="rgb(235,75,3)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2687.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`fuzzit::main (59 samples, 7.93%)</title><rect x="7.3925%" y="2661" width="7.9301%" height="15" fill="rgb(220,106,47)" fg:x="55" fg:w="59"/><text x="7.6425%" y="2671.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`fuzzit::status::display(alloc::string::String, bool, alloc::vec::Vec&lt;tuple$ (5 samples, 0.67%)</title><rect x="14.6505%" y="2645" width="0.6720%" height="15" fill="rgb(210,196,33)" fg:x="109" fg:w="5"/><text x="14.9005%" y="2655.50"></text></g><g><title>fuzzit.exe`std::io::stdio::_print (5 samples, 0.67%)</title><rect x="14.6505%" y="2629" width="0.6720%" height="15" fill="rgb(229,154,42)" fg:x="109" fg:w="5"/><text x="14.9005%" y="2639.50"></text></g><g><title>fuzzit.exe`std::io::stdio::print_to (5 samples, 0.67%)</title><rect x="14.6505%" y="2613" width="0.6720%" height="15" fill="rgb(228,114,26)" fg:x="109" fg:w="5"/><text x="14.9005%" y="2623.50"></text></g><g><title>fuzzit.exe`std::io::stdio::impl$16::write_fmt (5 samples, 0.67%)</title><rect x="14.6505%" y="2597" width="0.6720%" height="15" fill="rgb(208,144,1)" fg:x="109" fg:w="5"/><text x="14.9005%" y="2607.50"></text></g><g><title>fuzzit.exe`std::io::Write::write_fmt (5 samples, 0.67%)</title><rect x="14.6505%" y="2581" width="0.6720%" height="15" fill="rgb(239,112,37)" fg:x="109" fg:w="5"/><text x="14.9005%" y="2591.50"></text></g><g><title>fuzzit.exe`std::io::default_write_fmt (5 samples, 0.67%)</title><rect x="14.6505%" y="2565" width="0.6720%" height="15" fill="rgb(210,96,50)" fg:x="109" fg:w="5"/><text x="14.9005%" y="2575.50"></text></g><g><title>fuzzit.exe`core::fmt::write (5 samples, 0.67%)</title><rect x="14.6505%" y="2549" width="0.6720%" height="15" fill="rgb(222,178,2)" fg:x="109" fg:w="5"/><text x="14.9005%" y="2559.50"></text></g><g><title>fuzzit.exe`std::io::default_write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (5 samples, 0.67%)</title><rect x="14.6505%" y="2533" width="0.6720%" height="15" fill="rgb(226,74,18)" fg:x="109" fg:w="5"/><text x="14.9005%" y="2543.50"></text></g><g><title>fuzzit.exe`std::io::stdio::impl$19::write_all (4 samples, 0.54%)</title><rect x="14.7849%" y="2517" width="0.5376%" height="15" fill="rgb(225,67,54)" fg:x="110" fg:w="4"/><text x="15.0349%" y="2527.50"></text></g><g><title>fuzzit.exe`std::sync::reentrant_lock::impl$11::deref (4 samples, 0.54%)</title><rect x="14.7849%" y="2501" width="0.5376%" height="15" fill="rgb(251,92,32)" fg:x="110" fg:w="4"/><text x="15.0349%" y="2511.50"></text></g><g><title>fuzzit.exe`std::io::buffered::linewritershim::impl$1::write_all (4 samples, 0.54%)</title><rect x="14.7849%" y="2485" width="0.5376%" height="15" fill="rgb(228,149,22)" fg:x="110" fg:w="4"/><text x="15.0349%" y="2495.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (4 samples, 0.54%)</title><rect x="14.7849%" y="2469" width="0.5376%" height="15" fill="rgb(243,54,13)" fg:x="110" fg:w="4"/><text x="15.0349%" y="2479.50"></text></g><g><title>fuzzit.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (4 samples, 0.54%)</title><rect x="14.7849%" y="2453" width="0.5376%" height="15" fill="rgb(243,180,28)" fg:x="110" fg:w="4"/><text x="15.0349%" y="2463.50"></text></g><g><title>fuzzit.exe`std::io::stdio::impl$1::write (4 samples, 0.54%)</title><rect x="14.7849%" y="2437" width="0.5376%" height="15" fill="rgb(208,167,24)" fg:x="110" fg:w="4"/><text x="15.0349%" y="2447.50"></text></g><g><title>fuzzit.exe`std::io::stdio::handle_ebadf (4 samples, 0.54%)</title><rect x="14.7849%" y="2421" width="0.5376%" height="15" fill="rgb(245,73,45)" fg:x="110" fg:w="4"/><text x="15.0349%" y="2431.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::write (4 samples, 0.54%)</title><rect x="14.7849%" y="2405" width="0.5376%" height="15" fill="rgb(237,203,48)" fg:x="110" fg:w="4"/><text x="15.0349%" y="2415.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::write_console_utf16 (1 samples, 0.13%)</title><rect x="15.1882%" y="2389" width="0.1344%" height="15" fill="rgb(211,197,16)" fg:x="113" fg:w="1"/><text x="15.4382%" y="2399.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::write_valid_utf8_to_console (1 samples, 0.13%)</title><rect x="15.1882%" y="2373" width="0.1344%" height="15" fill="rgb(243,99,51)" fg:x="113" fg:w="1"/><text x="15.4382%" y="2383.50"></text></g><g><title>fuzzit.exe`std::sys::stdio::windows::write_u16s (1 samples, 0.13%)</title><rect x="15.1882%" y="2357" width="0.1344%" height="15" fill="rgb(215,123,29)" fg:x="113" fg:w="1"/><text x="15.4382%" y="2367.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.13%)</title><rect x="15.1882%" y="2341" width="0.1344%" height="15" fill="rgb(239,186,37)" fg:x="113" fg:w="1"/><text x="15.4382%" y="2351.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.13%)</title><rect x="15.1882%" y="2325" width="0.1344%" height="15" fill="rgb(252,136,39)" fg:x="113" fg:w="1"/><text x="15.4382%" y="2335.50"></text></g><g><title>`0x7FFE2C8E1E3E (1 samples, 0.13%)</title><rect x="15.1882%" y="2309" width="0.1344%" height="15" fill="rgb(223,213,32)" fg:x="113" fg:w="1"/><text x="15.4382%" y="2319.50"></text></g><g><title>`0x7FFE2C8E1F7C (1 samples, 0.13%)</title><rect x="15.1882%" y="2293" width="0.1344%" height="15" fill="rgb(233,115,5)" fg:x="113" fg:w="1"/><text x="15.4382%" y="2303.50"></text></g><g><title>`0x7FFE2F1A3314 (1 samples, 0.13%)</title><rect x="15.1882%" y="2277" width="0.1344%" height="15" fill="rgb(207,226,44)" fg:x="113" fg:w="1"/><text x="15.4382%" y="2287.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;*, tuple$ (3 samples, 0.40%)</title><rect x="15.4570%" y="2357" width="0.4032%" height="15" fill="rgb(208,126,0)" fg:x="115" fg:w="3"/><text x="15.7070%" y="2367.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt;*, tuple$ (1 samples, 0.13%)</title><rect x="15.7258%" y="2341" width="0.1344%" height="15" fill="rgb(244,66,21)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2351.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::steal::closure$1 (1 samples, 0.13%)</title><rect x="15.7258%" y="2325" width="0.1344%" height="15" fill="rgb(222,97,12)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2335.50"></text></g><g><title>fuzzit.exe`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal&lt;rayon_core::job::JobRef&gt; (1 samples, 0.13%)</title><rect x="15.7258%" y="2309" width="0.1344%" height="15" fill="rgb(219,213,19)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2319.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin (1 samples, 0.13%)</title><rect x="15.7258%" y="2293" width="0.1344%" height="15" fill="rgb(252,169,30)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2303.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle&lt;crossbeam_epoch::default::pin::closure_env$0,crossbeam_epoch::guard::Guard&gt; (1 samples, 0.13%)</title><rect x="15.7258%" y="2277" width="0.1344%" height="15" fill="rgb(206,32,51)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2287.50"></text></g><g><title>fuzzit.exe`std::thread::local::LocalKey&lt;crossbeam_epoch::collector::LocalHandle&gt;::try_with(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.13%)</title><rect x="15.7258%" y="2261" width="0.1344%" height="15" fill="rgb(250,172,42)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2271.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle::closure$0(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.13%)</title><rect x="15.7258%" y="2245" width="0.1344%" height="15" fill="rgb(209,34,43)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2255.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin::closure$0 (1 samples, 0.13%)</title><rect x="15.7258%" y="2229" width="0.1344%" height="15" fill="rgb(223,11,35)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2239.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.13%)</title><rect x="15.7258%" y="2213" width="0.1344%" height="15" fill="rgb(251,219,26)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2223.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::internal::Local::pin (1 samples, 0.13%)</title><rect x="15.7258%" y="2197" width="0.1344%" height="15" fill="rgb(231,119,3)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2207.50"></text></g><g><title>fuzzit.exe`core::cell::Cell&lt;core::num::wrapping::Wrapping&lt;usize&gt; &gt;::get (1 samples, 0.13%)</title><rect x="15.7258%" y="2181" width="0.1344%" height="15" fill="rgb(216,97,11)" fg:x="117" fg:w="1"/><text x="15.9758%" y="2191.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (5 samples, 0.67%)</title><rect x="15.4570%" y="2533" width="0.6720%" height="15" fill="rgb(223,59,9)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2543.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (5 samples, 0.67%)</title><rect x="15.4570%" y="2517" width="0.6720%" height="15" fill="rgb(233,93,31)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2527.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (5 samples, 0.67%)</title><rect x="15.4570%" y="2501" width="0.6720%" height="15" fill="rgb(239,81,33)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2511.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::find_work (5 samples, 0.67%)</title><rect x="15.4570%" y="2485" width="0.6720%" height="15" fill="rgb(213,120,34)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2495.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::option::Option&lt;rayon_core::job::JobRef&gt; &gt;::or_else(enum2$&lt;core::option::Option (5 samples, 0.67%)</title><rect x="15.4570%" y="2469" width="0.6720%" height="15" fill="rgb(243,49,53)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2479.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::find_work::closure$0 (5 samples, 0.67%)</title><rect x="15.4570%" y="2453" width="0.6720%" height="15" fill="rgb(247,216,33)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2463.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::steal (5 samples, 0.67%)</title><rect x="15.4570%" y="2437" width="0.6720%" height="15" fill="rgb(226,26,14)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2447.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range (5 samples, 0.67%)</title><rect x="15.4570%" y="2421" width="0.6720%" height="15" fill="rgb(215,49,53)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2431.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::try_fold(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (5 samples, 0.67%)</title><rect x="15.4570%" y="2405" width="0.6720%" height="15" fill="rgb(245,162,40)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2415.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::chain::impl$1::try_fold&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt;,tuple$&lt;&gt;,core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (5 samples, 0.67%)</title><rect x="15.4570%" y="2389" width="0.6720%" height="15" fill="rgb(229,68,17)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2399.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::range::Range&lt;usize&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (5 samples, 0.67%)</title><rect x="15.4570%" y="2373" width="0.6720%" height="15" fill="rgb(213,182,10)" fg:x="115" fg:w="5"/><text x="15.7070%" y="2383.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$3::call_mut(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;**, tuple$ (2 samples, 0.27%)</title><rect x="15.8602%" y="2357" width="0.2688%" height="15" fill="rgb(245,125,30)" fg:x="118" fg:w="2"/><text x="16.1102%" y="2367.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;*, tuple$ (2 samples, 0.27%)</title><rect x="15.8602%" y="2341" width="0.2688%" height="15" fill="rgb(232,202,2)" fg:x="118" fg:w="2"/><text x="16.1102%" y="2351.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt;*, tuple$ (1 samples, 0.13%)</title><rect x="15.9946%" y="2325" width="0.1344%" height="15" fill="rgb(237,140,51)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2335.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::steal::closure$1 (1 samples, 0.13%)</title><rect x="15.9946%" y="2309" width="0.1344%" height="15" fill="rgb(236,157,25)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2319.50"></text></g><g><title>fuzzit.exe`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal&lt;rayon_core::job::JobRef&gt; (1 samples, 0.13%)</title><rect x="15.9946%" y="2293" width="0.1344%" height="15" fill="rgb(219,209,0)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2303.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin (1 samples, 0.13%)</title><rect x="15.9946%" y="2277" width="0.1344%" height="15" fill="rgb(240,116,54)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2287.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle&lt;crossbeam_epoch::default::pin::closure_env$0,crossbeam_epoch::guard::Guard&gt; (1 samples, 0.13%)</title><rect x="15.9946%" y="2261" width="0.1344%" height="15" fill="rgb(216,10,36)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2271.50"></text></g><g><title>fuzzit.exe`std::thread::local::LocalKey&lt;crossbeam_epoch::collector::LocalHandle&gt;::try_with(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.13%)</title><rect x="15.9946%" y="2245" width="0.1344%" height="15" fill="rgb(222,72,44)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2255.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle::closure$0(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.13%)</title><rect x="15.9946%" y="2229" width="0.1344%" height="15" fill="rgb(232,159,9)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2239.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin::closure$0 (1 samples, 0.13%)</title><rect x="15.9946%" y="2213" width="0.1344%" height="15" fill="rgb(210,39,32)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2223.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.13%)</title><rect x="15.9946%" y="2197" width="0.1344%" height="15" fill="rgb(216,194,45)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2207.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::internal::Local::pin (1 samples, 0.13%)</title><rect x="15.9946%" y="2181" width="0.1344%" height="15" fill="rgb(218,18,35)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2191.50"></text></g><g><title>fuzzit.exe`core::cell::Cell&lt;core::num::wrapping::Wrapping&lt;usize&gt; &gt;::get (1 samples, 0.13%)</title><rect x="15.9946%" y="2165" width="0.1344%" height="15" fill="rgb(207,83,51)" fg:x="119" fg:w="1"/><text x="16.2446%" y="2175.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.13%)</title><rect x="16.1290%" y="1733" width="0.1344%" height="15" fill="rgb(225,63,43)" fg:x="120" fg:w="1"/><text x="16.3790%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.13%)</title><rect x="16.1290%" y="1717" width="0.1344%" height="15" fill="rgb(207,57,36)" fg:x="120" fg:w="1"/><text x="16.3790%" y="1727.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.13%)</title><rect x="16.1290%" y="1701" width="0.1344%" height="15" fill="rgb(216,99,33)" fg:x="120" fg:w="1"/><text x="16.3790%" y="1711.50"></text></g><g><title>`0x7FFE2C7FF233 (1 samples, 0.13%)</title><rect x="16.1290%" y="1685" width="0.1344%" height="15" fill="rgb(225,42,16)" fg:x="120" fg:w="1"/><text x="16.3790%" y="1695.50"></text></g><g><title>`0x7FFE2F1A3D84 (1 samples, 0.13%)</title><rect x="16.1290%" y="1669" width="0.1344%" height="15" fill="rgb(220,201,45)" fg:x="120" fg:w="1"/><text x="16.3790%" y="1679.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="16.2634%" y="1637" width="0.1344%" height="15" fill="rgb(225,33,4)" fg:x="121" fg:w="1"/><text x="16.5134%" y="1647.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="16.2634%" y="1621" width="0.1344%" height="15" fill="rgb(224,33,50)" fg:x="121" fg:w="1"/><text x="16.5134%" y="1631.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="16.2634%" y="1605" width="0.1344%" height="15" fill="rgb(246,198,51)" fg:x="121" fg:w="1"/><text x="16.5134%" y="1615.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.40%)</title><rect x="16.3978%" y="1637" width="0.4032%" height="15" fill="rgb(205,22,4)" fg:x="122" fg:w="3"/><text x="16.6478%" y="1647.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.40%)</title><rect x="16.3978%" y="1621" width="0.4032%" height="15" fill="rgb(206,3,8)" fg:x="122" fg:w="3"/><text x="16.6478%" y="1631.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="16.8011%" y="1637" width="0.4032%" height="15" fill="rgb(251,23,15)" fg:x="125" fg:w="3"/><text x="17.0511%" y="1647.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="16.8011%" y="1621" width="0.4032%" height="15" fill="rgb(252,88,28)" fg:x="125" fg:w="3"/><text x="17.0511%" y="1631.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="16.8011%" y="1605" width="0.4032%" height="15" fill="rgb(212,127,14)" fg:x="125" fg:w="3"/><text x="17.0511%" y="1615.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="16.8011%" y="1589" width="0.4032%" height="15" fill="rgb(247,145,37)" fg:x="125" fg:w="3"/><text x="17.0511%" y="1599.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.08%)</title><rect x="16.2634%" y="1701" width="1.0753%" height="15" fill="rgb(209,117,53)" fg:x="121" fg:w="8"/><text x="16.5134%" y="1711.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.08%)</title><rect x="16.2634%" y="1685" width="1.0753%" height="15" fill="rgb(212,90,42)" fg:x="121" fg:w="8"/><text x="16.5134%" y="1695.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.08%)</title><rect x="16.2634%" y="1669" width="1.0753%" height="15" fill="rgb(218,164,37)" fg:x="121" fg:w="8"/><text x="16.5134%" y="1679.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.08%)</title><rect x="16.2634%" y="1653" width="1.0753%" height="15" fill="rgb(246,65,34)" fg:x="121" fg:w="8"/><text x="16.5134%" y="1663.50"></text></g><g><title>`0x7FFE2C87A57A (1 samples, 0.13%)</title><rect x="17.2043%" y="1637" width="0.1344%" height="15" fill="rgb(231,100,33)" fg:x="128" fg:w="1"/><text x="17.4543%" y="1647.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="17.2043%" y="1621" width="0.1344%" height="15" fill="rgb(228,126,14)" fg:x="128" fg:w="1"/><text x="17.4543%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="17.3387%" y="1669" width="0.1344%" height="15" fill="rgb(215,173,21)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.13%)</title><rect x="17.3387%" y="1653" width="0.1344%" height="15" fill="rgb(210,6,40)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1663.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="17.3387%" y="1637" width="0.1344%" height="15" fill="rgb(212,48,18)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1647.50"></text></g><g><title>fuzzit.exe`std::path::PathBuf::_push (1 samples, 0.13%)</title><rect x="17.3387%" y="1621" width="0.1344%" height="15" fill="rgb(230,214,11)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1631.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::OsString::push (1 samples, 0.13%)</title><rect x="17.3387%" y="1605" width="0.1344%" height="15" fill="rgb(254,105,39)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1615.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$2::push::impl$0::spec_push_to (1 samples, 0.13%)</title><rect x="17.3387%" y="1589" width="0.1344%" height="15" fill="rgb(245,158,5)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1599.50"></text></g><g><title>fuzzit.exe`std::sys::os_str::wtf8::Buf::push_slice (1 samples, 0.13%)</title><rect x="17.3387%" y="1573" width="0.1344%" height="15" fill="rgb(249,208,11)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1583.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_wtf8 (1 samples, 0.13%)</title><rect x="17.3387%" y="1557" width="0.1344%" height="15" fill="rgb(210,39,28)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1567.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.13%)</title><rect x="17.3387%" y="1541" width="0.1344%" height="15" fill="rgb(211,56,53)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1551.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.13%)</title><rect x="17.3387%" y="1525" width="0.1344%" height="15" fill="rgb(226,201,30)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1535.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::append_elements (1 samples, 0.13%)</title><rect x="17.3387%" y="1509" width="0.1344%" height="15" fill="rgb(239,101,34)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1519.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::reserve (1 samples, 0.13%)</title><rect x="17.3387%" y="1493" width="0.1344%" height="15" fill="rgb(226,209,5)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1503.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::reserve (1 samples, 0.13%)</title><rect x="17.3387%" y="1477" width="0.1344%" height="15" fill="rgb(250,105,47)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1487.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::reserve (1 samples, 0.13%)</title><rect x="17.3387%" y="1461" width="0.1344%" height="15" fill="rgb(230,72,3)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1471.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="17.3387%" y="1445" width="0.1344%" height="15" fill="rgb(232,218,39)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1455.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.13%)</title><rect x="17.3387%" y="1429" width="0.1344%" height="15" fill="rgb(248,166,6)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1439.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="17.3387%" y="1413" width="0.1344%" height="15" fill="rgb(247,89,20)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1423.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="17.3387%" y="1397" width="0.1344%" height="15" fill="rgb(248,130,54)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1407.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.13%)</title><rect x="17.3387%" y="1381" width="0.1344%" height="15" fill="rgb(234,196,4)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1391.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="17.3387%" y="1365" width="0.1344%" height="15" fill="rgb(250,143,31)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1375.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="17.3387%" y="1349" width="0.1344%" height="15" fill="rgb(211,110,34)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1359.50"></text></g><g><title>`0x7FFE2F069E2D (1 samples, 0.13%)</title><rect x="17.3387%" y="1333" width="0.1344%" height="15" fill="rgb(215,124,48)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1343.50"></text></g><g><title>`0x7FFE2F06A0D5 (1 samples, 0.13%)</title><rect x="17.3387%" y="1317" width="0.1344%" height="15" fill="rgb(216,46,13)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1327.50"></text></g><g><title>`0x7FFE2F06A98A (1 samples, 0.13%)</title><rect x="17.3387%" y="1301" width="0.1344%" height="15" fill="rgb(205,184,25)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1311.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="17.3387%" y="1285" width="0.1344%" height="15" fill="rgb(228,1,10)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1295.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.13%)</title><rect x="17.3387%" y="1269" width="0.1344%" height="15" fill="rgb(213,116,27)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1279.50"></text></g><g><title>`0x7FFE2F0917B0 (1 samples, 0.13%)</title><rect x="17.3387%" y="1253" width="0.1344%" height="15" fill="rgb(241,95,50)" fg:x="129" fg:w="1"/><text x="17.5887%" y="1263.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (12 samples, 1.61%)</title><rect x="16.1290%" y="2053" width="1.6129%" height="15" fill="rgb(238,48,32)" fg:x="120" fg:w="12"/><text x="16.3790%" y="2063.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 1.61%)</title><rect x="16.1290%" y="2037" width="1.6129%" height="15" fill="rgb(235,113,49)" fg:x="120" fg:w="12"/><text x="16.3790%" y="2047.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (12 samples, 1.61%)</title><rect x="16.1290%" y="2021" width="1.6129%" height="15" fill="rgb(205,127,43)" fg:x="120" fg:w="12"/><text x="16.3790%" y="2031.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (12 samples, 1.61%)</title><rect x="16.1290%" y="2005" width="1.6129%" height="15" fill="rgb(250,162,2)" fg:x="120" fg:w="12"/><text x="16.3790%" y="2015.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (12 samples, 1.61%)</title><rect x="16.1290%" y="1989" width="1.6129%" height="15" fill="rgb(220,13,41)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1999.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="16.1290%" y="1973" width="1.6129%" height="15" fill="rgb(249,221,25)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="16.1290%" y="1957" width="1.6129%" height="15" fill="rgb(215,208,19)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1967.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="16.1290%" y="1941" width="1.6129%" height="15" fill="rgb(236,175,2)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1951.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="16.1290%" y="1925" width="1.6129%" height="15" fill="rgb(241,52,2)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1935.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.61%)</title><rect x="16.1290%" y="1909" width="1.6129%" height="15" fill="rgb(248,140,14)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1919.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="16.1290%" y="1893" width="1.6129%" height="15" fill="rgb(253,22,42)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="16.1290%" y="1877" width="1.6129%" height="15" fill="rgb(234,61,47)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="16.1290%" y="1861" width="1.6129%" height="15" fill="rgb(208,226,15)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1871.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="16.1290%" y="1845" width="1.6129%" height="15" fill="rgb(217,221,4)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1855.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (12 samples, 1.61%)</title><rect x="16.1290%" y="1829" width="1.6129%" height="15" fill="rgb(212,174,34)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1839.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.61%)</title><rect x="16.1290%" y="1813" width="1.6129%" height="15" fill="rgb(253,83,4)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1823.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.61%)</title><rect x="16.1290%" y="1797" width="1.6129%" height="15" fill="rgb(250,195,49)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1807.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.61%)</title><rect x="16.1290%" y="1781" width="1.6129%" height="15" fill="rgb(241,192,25)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1791.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.61%)</title><rect x="16.1290%" y="1765" width="1.6129%" height="15" fill="rgb(208,124,10)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1775.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.61%)</title><rect x="16.1290%" y="1749" width="1.6129%" height="15" fill="rgb(222,33,0)" fg:x="120" fg:w="12"/><text x="16.3790%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.48%)</title><rect x="16.2634%" y="1733" width="1.4785%" height="15" fill="rgb(234,209,28)" fg:x="121" fg:w="11"/><text x="16.5134%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.48%)</title><rect x="16.2634%" y="1717" width="1.4785%" height="15" fill="rgb(224,11,23)" fg:x="121" fg:w="11"/><text x="16.5134%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="17.3387%" y="1701" width="0.4032%" height="15" fill="rgb(232,99,1)" fg:x="129" fg:w="3"/><text x="17.5887%" y="1711.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="17.3387%" y="1685" width="0.4032%" height="15" fill="rgb(237,95,45)" fg:x="129" fg:w="3"/><text x="17.5887%" y="1695.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="17.4731%" y="1669" width="0.2688%" height="15" fill="rgb(208,109,11)" fg:x="130" fg:w="2"/><text x="17.7231%" y="1679.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="17.4731%" y="1653" width="0.2688%" height="15" fill="rgb(216,190,48)" fg:x="130" fg:w="2"/><text x="17.7231%" y="1663.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="17.4731%" y="1637" width="0.2688%" height="15" fill="rgb(251,171,36)" fg:x="130" fg:w="2"/><text x="17.7231%" y="1647.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="17.4731%" y="1621" width="0.2688%" height="15" fill="rgb(230,62,22)" fg:x="130" fg:w="2"/><text x="17.7231%" y="1631.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="17.4731%" y="1605" width="0.2688%" height="15" fill="rgb(225,114,35)" fg:x="130" fg:w="2"/><text x="17.7231%" y="1615.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="17.4731%" y="1589" width="0.2688%" height="15" fill="rgb(215,118,42)" fg:x="130" fg:w="2"/><text x="17.7231%" y="1599.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.13%)</title><rect x="17.7419%" y="1557" width="0.1344%" height="15" fill="rgb(243,119,21)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1567.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.13%)</title><rect x="17.7419%" y="1541" width="0.1344%" height="15" fill="rgb(252,177,53)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1551.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::finish (1 samples, 0.13%)</title><rect x="17.7419%" y="1525" width="0.1344%" height="15" fill="rgb(237,209,29)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1535.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::result (1 samples, 0.13%)</title><rect x="17.7419%" y="1509" width="0.1344%" height="15" fill="rgb(212,65,23)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1519.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::overlapped_result (1 samples, 0.13%)</title><rect x="17.7419%" y="1493" width="0.1344%" height="15" fill="rgb(230,222,46)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1503.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.13%)</title><rect x="17.7419%" y="1477" width="0.1344%" height="15" fill="rgb(215,135,32)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1487.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.13%)</title><rect x="17.7419%" y="1461" width="0.1344%" height="15" fill="rgb(246,101,22)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1471.50"></text></g><g><title>`0x7FFE2C7FE6F6 (1 samples, 0.13%)</title><rect x="17.7419%" y="1445" width="0.1344%" height="15" fill="rgb(206,107,13)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1455.50"></text></g><g><title>`0x7FFE2C7F895F (1 samples, 0.13%)</title><rect x="17.7419%" y="1429" width="0.1344%" height="15" fill="rgb(250,100,44)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1439.50"></text></g><g><title>`0x7FFE2F1A32B4 (1 samples, 0.13%)</title><rect x="17.7419%" y="1413" width="0.1344%" height="15" fill="rgb(231,147,38)" fg:x="132" fg:w="1"/><text x="17.9919%" y="1423.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="17.8763%" y="1461" width="0.1344%" height="15" fill="rgb(229,8,40)" fg:x="133" fg:w="1"/><text x="18.1263%" y="1471.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="17.8763%" y="1445" width="0.1344%" height="15" fill="rgb(221,135,30)" fg:x="133" fg:w="1"/><text x="18.1263%" y="1455.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="17.8763%" y="1429" width="0.1344%" height="15" fill="rgb(249,193,18)" fg:x="133" fg:w="1"/><text x="18.1263%" y="1439.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.40%)</title><rect x="18.0108%" y="1461" width="0.4032%" height="15" fill="rgb(209,133,39)" fg:x="134" fg:w="3"/><text x="18.2608%" y="1471.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.40%)</title><rect x="18.0108%" y="1445" width="0.4032%" height="15" fill="rgb(232,100,14)" fg:x="134" fg:w="3"/><text x="18.2608%" y="1455.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 0.94%)</title><rect x="17.8763%" y="1525" width="0.9409%" height="15" fill="rgb(224,185,1)" fg:x="133" fg:w="7"/><text x="18.1263%" y="1535.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 0.94%)</title><rect x="17.8763%" y="1509" width="0.9409%" height="15" fill="rgb(223,139,8)" fg:x="133" fg:w="7"/><text x="18.1263%" y="1519.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 0.94%)</title><rect x="17.8763%" y="1493" width="0.9409%" height="15" fill="rgb(232,213,38)" fg:x="133" fg:w="7"/><text x="18.1263%" y="1503.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 0.94%)</title><rect x="17.8763%" y="1477" width="0.9409%" height="15" fill="rgb(207,94,22)" fg:x="133" fg:w="7"/><text x="18.1263%" y="1487.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="18.4140%" y="1461" width="0.4032%" height="15" fill="rgb(219,183,54)" fg:x="137" fg:w="3"/><text x="18.6640%" y="1471.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="18.4140%" y="1445" width="0.4032%" height="15" fill="rgb(216,185,54)" fg:x="137" fg:w="3"/><text x="18.6640%" y="1455.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="18.4140%" y="1429" width="0.4032%" height="15" fill="rgb(254,217,39)" fg:x="137" fg:w="3"/><text x="18.6640%" y="1439.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="18.4140%" y="1413" width="0.4032%" height="15" fill="rgb(240,178,23)" fg:x="137" fg:w="3"/><text x="18.6640%" y="1423.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (11 samples, 1.48%)</title><rect x="17.7419%" y="1877" width="1.4785%" height="15" fill="rgb(218,11,47)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 1.48%)</title><rect x="17.7419%" y="1861" width="1.4785%" height="15" fill="rgb(218,51,51)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1871.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (11 samples, 1.48%)</title><rect x="17.7419%" y="1845" width="1.4785%" height="15" fill="rgb(238,126,27)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1855.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (11 samples, 1.48%)</title><rect x="17.7419%" y="1829" width="1.4785%" height="15" fill="rgb(249,202,22)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1839.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (11 samples, 1.48%)</title><rect x="17.7419%" y="1813" width="1.4785%" height="15" fill="rgb(254,195,49)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1823.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="17.7419%" y="1797" width="1.4785%" height="15" fill="rgb(208,123,14)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1807.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="17.7419%" y="1781" width="1.4785%" height="15" fill="rgb(224,200,8)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1791.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="17.7419%" y="1765" width="1.4785%" height="15" fill="rgb(217,61,36)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1775.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="17.7419%" y="1749" width="1.4785%" height="15" fill="rgb(206,35,45)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1759.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (11 samples, 1.48%)</title><rect x="17.7419%" y="1733" width="1.4785%" height="15" fill="rgb(217,65,33)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1743.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="17.7419%" y="1717" width="1.4785%" height="15" fill="rgb(222,158,48)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1727.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="17.7419%" y="1701" width="1.4785%" height="15" fill="rgb(254,2,54)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1711.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="17.7419%" y="1685" width="1.4785%" height="15" fill="rgb(250,143,38)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1695.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="17.7419%" y="1669" width="1.4785%" height="15" fill="rgb(248,25,0)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1679.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (11 samples, 1.48%)</title><rect x="17.7419%" y="1653" width="1.4785%" height="15" fill="rgb(206,152,27)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1663.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (11 samples, 1.48%)</title><rect x="17.7419%" y="1637" width="1.4785%" height="15" fill="rgb(240,77,30)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1647.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (11 samples, 1.48%)</title><rect x="17.7419%" y="1621" width="1.4785%" height="15" fill="rgb(231,5,3)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1631.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (11 samples, 1.48%)</title><rect x="17.7419%" y="1605" width="1.4785%" height="15" fill="rgb(207,226,32)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1615.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (11 samples, 1.48%)</title><rect x="17.7419%" y="1589" width="1.4785%" height="15" fill="rgb(222,207,47)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1599.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (11 samples, 1.48%)</title><rect x="17.7419%" y="1573" width="1.4785%" height="15" fill="rgb(229,115,45)" fg:x="132" fg:w="11"/><text x="17.9919%" y="1583.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (10 samples, 1.34%)</title><rect x="17.8763%" y="1557" width="1.3441%" height="15" fill="rgb(224,191,6)" fg:x="133" fg:w="10"/><text x="18.1263%" y="1567.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (10 samples, 1.34%)</title><rect x="17.8763%" y="1541" width="1.3441%" height="15" fill="rgb(230,227,24)" fg:x="133" fg:w="10"/><text x="18.1263%" y="1551.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="18.8172%" y="1525" width="0.4032%" height="15" fill="rgb(228,80,19)" fg:x="140" fg:w="3"/><text x="19.0672%" y="1535.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="18.8172%" y="1509" width="0.4032%" height="15" fill="rgb(247,229,0)" fg:x="140" fg:w="3"/><text x="19.0672%" y="1519.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (3 samples, 0.40%)</title><rect x="18.8172%" y="1493" width="0.4032%" height="15" fill="rgb(237,194,15)" fg:x="140" fg:w="3"/><text x="19.0672%" y="1503.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="18.8172%" y="1477" width="0.4032%" height="15" fill="rgb(219,203,20)" fg:x="140" fg:w="3"/><text x="19.0672%" y="1487.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="18.8172%" y="1461" width="0.4032%" height="15" fill="rgb(234,128,8)" fg:x="140" fg:w="3"/><text x="19.0672%" y="1471.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (3 samples, 0.40%)</title><rect x="18.8172%" y="1445" width="0.4032%" height="15" fill="rgb(248,202,8)" fg:x="140" fg:w="3"/><text x="19.0672%" y="1455.50"></text></g><g><title>`0x7FFE2C81DF99 (3 samples, 0.40%)</title><rect x="18.8172%" y="1429" width="0.4032%" height="15" fill="rgb(206,104,37)" fg:x="140" fg:w="3"/><text x="19.0672%" y="1439.50"></text></g><g><title>`0x7FFE2F1A39D4 (3 samples, 0.40%)</title><rect x="18.8172%" y="1413" width="0.4032%" height="15" fill="rgb(223,8,27)" fg:x="140" fg:w="3"/><text x="19.0672%" y="1423.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.13%)</title><rect x="19.2204%" y="1877" width="0.1344%" height="15" fill="rgb(216,217,28)" fg:x="143" fg:w="1"/><text x="19.4704%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.13%)</title><rect x="19.2204%" y="1861" width="0.1344%" height="15" fill="rgb(249,199,1)" fg:x="143" fg:w="1"/><text x="19.4704%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sync::poison::mutex::Mutex&lt;bool&gt;::lock (1 samples, 0.13%)</title><rect x="19.2204%" y="1845" width="0.1344%" height="15" fill="rgb(240,85,17)" fg:x="143" fg:w="1"/><text x="19.4704%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.13%)</title><rect x="19.2204%" y="1829" width="0.1344%" height="15" fill="rgb(206,108,45)" fg:x="143" fg:w="1"/><text x="19.4704%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.13%)</title><rect x="19.2204%" y="1813" width="0.1344%" height="15" fill="rgb(245,210,41)" fg:x="143" fg:w="1"/><text x="19.4704%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.13%)</title><rect x="19.2204%" y="1797" width="0.1344%" height="15" fill="rgb(206,13,37)" fg:x="143" fg:w="1"/><text x="19.4704%" y="1807.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.13%)</title><rect x="19.3548%" y="1669" width="0.1344%" height="15" fill="rgb(250,61,18)" fg:x="144" fg:w="1"/><text x="19.6048%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.13%)</title><rect x="19.3548%" y="1653" width="0.1344%" height="15" fill="rgb(235,172,48)" fg:x="144" fg:w="1"/><text x="19.6048%" y="1663.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="19.3548%" y="1637" width="0.1344%" height="15" fill="rgb(249,201,17)" fg:x="144" fg:w="1"/><text x="19.6048%" y="1647.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::new (1 samples, 0.13%)</title><rect x="19.3548%" y="1621" width="0.1344%" height="15" fill="rgb(219,208,6)" fg:x="144" fg:w="1"/><text x="19.6048%" y="1631.50"></text></g><g><title>fuzzit.exe`alloc::boxed::impl$0::new (1 samples, 0.13%)</title><rect x="19.3548%" y="1605" width="0.1344%" height="15" fill="rgb(248,31,23)" fg:x="144" fg:w="1"/><text x="19.6048%" y="1615.50"></text></g><g><title>fuzzit.exe`alloc::alloc::exchange_malloc (1 samples, 0.13%)</title><rect x="19.3548%" y="1589" width="0.1344%" height="15" fill="rgb(245,15,42)" fg:x="144" fg:w="1"/><text x="19.6048%" y="1599.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="19.3548%" y="1573" width="0.1344%" height="15" fill="rgb(222,217,39)" fg:x="144" fg:w="1"/><text x="19.6048%" y="1583.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.13%)</title><rect x="19.3548%" y="1557" width="0.1344%" height="15" fill="rgb(210,219,27)" fg:x="144" fg:w="1"/><text x="19.6048%" y="1567.50"></text></g><g><title>`0x7FFE2F09178F (1 samples, 0.13%)</title><rect x="19.3548%" y="1541" width="0.1344%" height="15" fill="rgb(252,166,36)" fg:x="144" fg:w="1"/><text x="19.6048%" y="1551.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="19.4892%" y="1573" width="0.1344%" height="15" fill="rgb(245,132,34)" fg:x="145" fg:w="1"/><text x="19.7392%" y="1583.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="19.4892%" y="1557" width="0.1344%" height="15" fill="rgb(236,54,3)" fg:x="145" fg:w="1"/><text x="19.7392%" y="1567.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="19.4892%" y="1541" width="0.1344%" height="15" fill="rgb(241,173,43)" fg:x="145" fg:w="1"/><text x="19.7392%" y="1551.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.40%)</title><rect x="19.6237%" y="1573" width="0.4032%" height="15" fill="rgb(215,190,9)" fg:x="146" fg:w="3"/><text x="19.8737%" y="1583.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.40%)</title><rect x="19.6237%" y="1557" width="0.4032%" height="15" fill="rgb(242,101,16)" fg:x="146" fg:w="3"/><text x="19.8737%" y="1567.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 0.94%)</title><rect x="19.4892%" y="1637" width="0.9409%" height="15" fill="rgb(223,190,21)" fg:x="145" fg:w="7"/><text x="19.7392%" y="1647.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 0.94%)</title><rect x="19.4892%" y="1621" width="0.9409%" height="15" fill="rgb(215,228,25)" fg:x="145" fg:w="7"/><text x="19.7392%" y="1631.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 0.94%)</title><rect x="19.4892%" y="1605" width="0.9409%" height="15" fill="rgb(225,36,22)" fg:x="145" fg:w="7"/><text x="19.7392%" y="1615.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 0.94%)</title><rect x="19.4892%" y="1589" width="0.9409%" height="15" fill="rgb(251,106,46)" fg:x="145" fg:w="7"/><text x="19.7392%" y="1599.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="20.0269%" y="1573" width="0.4032%" height="15" fill="rgb(208,90,1)" fg:x="149" fg:w="3"/><text x="20.2769%" y="1583.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="20.0269%" y="1557" width="0.4032%" height="15" fill="rgb(243,10,4)" fg:x="149" fg:w="3"/><text x="20.2769%" y="1567.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="20.0269%" y="1541" width="0.4032%" height="15" fill="rgb(212,137,27)" fg:x="149" fg:w="3"/><text x="20.2769%" y="1551.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="20.0269%" y="1525" width="0.4032%" height="15" fill="rgb(231,220,49)" fg:x="149" fg:w="3"/><text x="20.2769%" y="1535.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="20.4301%" y="1605" width="0.1344%" height="15" fill="rgb(237,96,20)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1615.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (1 samples, 0.13%)</title><rect x="20.4301%" y="1589" width="0.1344%" height="15" fill="rgb(239,229,30)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1599.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="20.4301%" y="1573" width="0.1344%" height="15" fill="rgb(219,65,33)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1583.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="20.4301%" y="1557" width="0.1344%" height="15" fill="rgb(243,134,7)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1567.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="20.4301%" y="1541" width="0.1344%" height="15" fill="rgb(216,177,54)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1551.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="20.4301%" y="1525" width="0.1344%" height="15" fill="rgb(211,160,20)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1535.50"></text></g><g><title>fuzzit.exe`std::sys::args::windows::to_user_path (1 samples, 0.13%)</title><rect x="20.4301%" y="1509" width="0.1344%" height="15" fill="rgb(239,85,39)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1519.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="20.4301%" y="1493" width="0.1344%" height="15" fill="rgb(232,125,22)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1503.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::to_u16s::inner (1 samples, 0.13%)</title><rect x="20.4301%" y="1477" width="0.1344%" height="15" fill="rgb(244,57,34)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1487.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::with_capacity (1 samples, 0.13%)</title><rect x="20.4301%" y="1461" width="0.1344%" height="15" fill="rgb(214,203,32)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1471.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.13%)</title><rect x="20.4301%" y="1445" width="0.1344%" height="15" fill="rgb(207,58,43)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1455.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.13%)</title><rect x="20.4301%" y="1429" width="0.1344%" height="15" fill="rgb(215,193,15)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1439.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.13%)</title><rect x="20.4301%" y="1413" width="0.1344%" height="15" fill="rgb(232,15,44)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1423.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.13%)</title><rect x="20.4301%" y="1397" width="0.1344%" height="15" fill="rgb(212,3,48)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1407.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="20.4301%" y="1381" width="0.1344%" height="15" fill="rgb(218,128,7)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1391.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.13%)</title><rect x="20.4301%" y="1365" width="0.1344%" height="15" fill="rgb(226,216,39)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1375.50"></text></g><g><title>`0x7FFE2F0923ED (1 samples, 0.13%)</title><rect x="20.4301%" y="1349" width="0.1344%" height="15" fill="rgb(243,47,51)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1359.50"></text></g><g><title>`0x7FFE2F0BC14F (1 samples, 0.13%)</title><rect x="20.4301%" y="1333" width="0.1344%" height="15" fill="rgb(241,183,40)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1343.50"></text></g><g><title>`0x7FFE2F0BC5CA (1 samples, 0.13%)</title><rect x="20.4301%" y="1317" width="0.1344%" height="15" fill="rgb(231,217,32)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1327.50"></text></g><g><title>`0x7FFE2F1A4064 (1 samples, 0.13%)</title><rect x="20.4301%" y="1301" width="0.1344%" height="15" fill="rgb(229,61,38)" fg:x="152" fg:w="1"/><text x="20.6801%" y="1311.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::LatchRef&lt;rayon_core::latch::LockLatch&gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2501" width="4.5699%" height="15" fill="rgb(225,210,5)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2511.50">fuzzi..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt; &gt;::call(rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2485" width="4.5699%" height="15" fill="rgb(231,79,45)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2495.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2469" width="4.5699%" height="15" fill="rgb(224,100,7)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2479.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2453" width="4.5699%" height="15" fill="rgb(241,198,18)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2463.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2437" width="4.5699%" height="15" fill="rgb(252,97,53)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2447.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (34 samples, 4.57%)</title><rect x="16.1290%" y="2421" width="4.5699%" height="15" fill="rgb(220,88,7)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2431.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2405" width="4.5699%" height="15" fill="rgb(213,176,14)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2415.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2389" width="4.5699%" height="15" fill="rgb(246,73,7)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2399.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2373" width="4.5699%" height="15" fill="rgb(245,64,36)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2383.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2357" width="4.5699%" height="15" fill="rgb(245,80,10)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2367.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (34 samples, 4.57%)</title><rect x="16.1290%" y="2341" width="4.5699%" height="15" fill="rgb(232,107,50)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2351.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2325" width="4.5699%" height="15" fill="rgb(253,3,0)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2335.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2309" width="4.5699%" height="15" fill="rgb(212,99,53)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2319.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2293" width="4.5699%" height="15" fill="rgb(249,111,54)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2303.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2277" width="4.5699%" height="15" fill="rgb(249,55,30)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2287.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2261" width="4.5699%" height="15" fill="rgb(237,47,42)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2271.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2245" width="4.5699%" height="15" fill="rgb(211,20,18)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2255.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (34 samples, 4.57%)</title><rect x="16.1290%" y="2229" width="4.5699%" height="15" fill="rgb(231,203,46)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2239.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2213" width="4.5699%" height="15" fill="rgb(237,142,3)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2223.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2197" width="4.5699%" height="15" fill="rgb(241,107,1)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2207.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2181" width="4.5699%" height="15" fill="rgb(229,83,13)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2191.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2165" width="4.5699%" height="15" fill="rgb(241,91,40)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2175.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2149" width="4.5699%" height="15" fill="rgb(225,3,45)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2159.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2133" width="4.5699%" height="15" fill="rgb(244,223,14)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2143.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (34 samples, 4.57%)</title><rect x="16.1290%" y="2117" width="4.5699%" height="15" fill="rgb(224,124,37)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2127.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2101" width="4.5699%" height="15" fill="rgb(251,171,30)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2111.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2085" width="4.5699%" height="15" fill="rgb(236,46,54)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2095.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (34 samples, 4.57%)</title><rect x="16.1290%" y="2069" width="4.5699%" height="15" fill="rgb(245,213,5)" fg:x="120" fg:w="34"/><text x="16.3790%" y="2079.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (22 samples, 2.96%)</title><rect x="17.7419%" y="2053" width="2.9570%" height="15" fill="rgb(230,144,27)" fg:x="132" fg:w="22"/><text x="17.9919%" y="2063.50">fuz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (22 samples, 2.96%)</title><rect x="17.7419%" y="2037" width="2.9570%" height="15" fill="rgb(220,86,6)" fg:x="132" fg:w="22"/><text x="17.9919%" y="2047.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (22 samples, 2.96%)</title><rect x="17.7419%" y="2021" width="2.9570%" height="15" fill="rgb(240,20,13)" fg:x="132" fg:w="22"/><text x="17.9919%" y="2031.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (22 samples, 2.96%)</title><rect x="17.7419%" y="2005" width="2.9570%" height="15" fill="rgb(217,89,34)" fg:x="132" fg:w="22"/><text x="17.9919%" y="2015.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (22 samples, 2.96%)</title><rect x="17.7419%" y="1989" width="2.9570%" height="15" fill="rgb(229,13,5)" fg:x="132" fg:w="22"/><text x="17.9919%" y="1999.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (22 samples, 2.96%)</title><rect x="17.7419%" y="1973" width="2.9570%" height="15" fill="rgb(244,67,35)" fg:x="132" fg:w="22"/><text x="17.9919%" y="1983.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (22 samples, 2.96%)</title><rect x="17.7419%" y="1957" width="2.9570%" height="15" fill="rgb(221,40,2)" fg:x="132" fg:w="22"/><text x="17.9919%" y="1967.50">fuz..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (22 samples, 2.96%)</title><rect x="17.7419%" y="1941" width="2.9570%" height="15" fill="rgb(237,157,21)" fg:x="132" fg:w="22"/><text x="17.9919%" y="1951.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (22 samples, 2.96%)</title><rect x="17.7419%" y="1925" width="2.9570%" height="15" fill="rgb(222,94,11)" fg:x="132" fg:w="22"/><text x="17.9919%" y="1935.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (22 samples, 2.96%)</title><rect x="17.7419%" y="1909" width="2.9570%" height="15" fill="rgb(249,113,6)" fg:x="132" fg:w="22"/><text x="17.9919%" y="1919.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (22 samples, 2.96%)</title><rect x="17.7419%" y="1893" width="2.9570%" height="15" fill="rgb(238,137,36)" fg:x="132" fg:w="22"/><text x="17.9919%" y="1903.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="19.3548%" y="1877" width="1.3441%" height="15" fill="rgb(210,102,26)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1887.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="19.3548%" y="1861" width="1.3441%" height="15" fill="rgb(218,30,30)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1871.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="19.3548%" y="1845" width="1.3441%" height="15" fill="rgb(214,67,26)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1855.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (10 samples, 1.34%)</title><rect x="19.3548%" y="1829" width="1.3441%" height="15" fill="rgb(251,9,53)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1839.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="19.3548%" y="1813" width="1.3441%" height="15" fill="rgb(228,204,25)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1823.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="19.3548%" y="1797" width="1.3441%" height="15" fill="rgb(207,153,8)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1807.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="19.3548%" y="1781" width="1.3441%" height="15" fill="rgb(242,9,16)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1791.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (10 samples, 1.34%)</title><rect x="19.3548%" y="1765" width="1.3441%" height="15" fill="rgb(217,211,10)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1775.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (10 samples, 1.34%)</title><rect x="19.3548%" y="1749" width="1.3441%" height="15" fill="rgb(219,228,52)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1759.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (10 samples, 1.34%)</title><rect x="19.3548%" y="1733" width="1.3441%" height="15" fill="rgb(231,92,29)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1743.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (10 samples, 1.34%)</title><rect x="19.3548%" y="1717" width="1.3441%" height="15" fill="rgb(232,8,23)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1727.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (10 samples, 1.34%)</title><rect x="19.3548%" y="1701" width="1.3441%" height="15" fill="rgb(216,211,34)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1711.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (10 samples, 1.34%)</title><rect x="19.3548%" y="1685" width="1.3441%" height="15" fill="rgb(236,151,0)" fg:x="144" fg:w="10"/><text x="19.6048%" y="1695.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (9 samples, 1.21%)</title><rect x="19.4892%" y="1669" width="1.2097%" height="15" fill="rgb(209,168,3)" fg:x="145" fg:w="9"/><text x="19.7392%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (9 samples, 1.21%)</title><rect x="19.4892%" y="1653" width="1.2097%" height="15" fill="rgb(208,129,28)" fg:x="145" fg:w="9"/><text x="19.7392%" y="1663.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (2 samples, 0.27%)</title><rect x="20.4301%" y="1637" width="0.2688%" height="15" fill="rgb(229,78,22)" fg:x="152" fg:w="2"/><text x="20.6801%" y="1647.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (2 samples, 0.27%)</title><rect x="20.4301%" y="1621" width="0.2688%" height="15" fill="rgb(228,187,13)" fg:x="152" fg:w="2"/><text x="20.6801%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="20.5645%" y="1605" width="0.1344%" height="15" fill="rgb(240,119,24)" fg:x="153" fg:w="1"/><text x="20.8145%" y="1615.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="20.5645%" y="1589" width="0.1344%" height="15" fill="rgb(209,194,42)" fg:x="153" fg:w="1"/><text x="20.8145%" y="1599.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="20.5645%" y="1573" width="0.1344%" height="15" fill="rgb(247,200,46)" fg:x="153" fg:w="1"/><text x="20.8145%" y="1583.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="20.5645%" y="1557" width="0.1344%" height="15" fill="rgb(218,76,16)" fg:x="153" fg:w="1"/><text x="20.8145%" y="1567.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="20.5645%" y="1541" width="0.1344%" height="15" fill="rgb(225,21,48)" fg:x="153" fg:w="1"/><text x="20.8145%" y="1551.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="20.5645%" y="1525" width="0.1344%" height="15" fill="rgb(239,223,50)" fg:x="153" fg:w="1"/><text x="20.8145%" y="1535.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (1 samples, 0.13%)</title><rect x="20.6989%" y="1189" width="0.1344%" height="15" fill="rgb(244,45,21)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1199.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.13%)</title><rect x="20.6989%" y="1173" width="0.1344%" height="15" fill="rgb(232,33,43)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1183.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (1 samples, 0.13%)</title><rect x="20.6989%" y="1157" width="0.1344%" height="15" fill="rgb(209,8,3)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1167.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (1 samples, 0.13%)</title><rect x="20.6989%" y="1141" width="0.1344%" height="15" fill="rgb(214,25,53)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1151.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (1 samples, 0.13%)</title><rect x="20.6989%" y="1125" width="0.1344%" height="15" fill="rgb(254,186,54)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1135.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::find_work (1 samples, 0.13%)</title><rect x="20.6989%" y="1109" width="0.1344%" height="15" fill="rgb(208,174,49)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1119.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::option::Option&lt;rayon_core::job::JobRef&gt; &gt;::or_else(enum2$&lt;core::option::Option (1 samples, 0.13%)</title><rect x="20.6989%" y="1093" width="0.1344%" height="15" fill="rgb(233,191,51)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1103.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::find_work::closure$0 (1 samples, 0.13%)</title><rect x="20.6989%" y="1077" width="0.1344%" height="15" fill="rgb(222,134,10)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1087.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::steal (1 samples, 0.13%)</title><rect x="20.6989%" y="1061" width="0.1344%" height="15" fill="rgb(230,226,20)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1071.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range (1 samples, 0.13%)</title><rect x="20.6989%" y="1045" width="0.1344%" height="15" fill="rgb(251,111,25)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1055.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::try_fold(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.13%)</title><rect x="20.6989%" y="1029" width="0.1344%" height="15" fill="rgb(224,40,46)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1039.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::chain::impl$1::try_fold&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt;,tuple$&lt;&gt;,core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.13%)</title><rect x="20.6989%" y="1013" width="0.1344%" height="15" fill="rgb(236,108,47)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1023.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::range::Range&lt;usize&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.13%)</title><rect x="20.6989%" y="997" width="0.1344%" height="15" fill="rgb(234,93,0)" fg:x="154" fg:w="1"/><text x="20.9489%" y="1007.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;*, tuple$ (1 samples, 0.13%)</title><rect x="20.6989%" y="981" width="0.1344%" height="15" fill="rgb(224,213,32)" fg:x="154" fg:w="1"/><text x="20.9489%" y="991.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt;*, tuple$ (1 samples, 0.13%)</title><rect x="20.6989%" y="965" width="0.1344%" height="15" fill="rgb(251,11,48)" fg:x="154" fg:w="1"/><text x="20.9489%" y="975.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::steal::closure$1 (1 samples, 0.13%)</title><rect x="20.6989%" y="949" width="0.1344%" height="15" fill="rgb(236,173,5)" fg:x="154" fg:w="1"/><text x="20.9489%" y="959.50"></text></g><g><title>fuzzit.exe`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal&lt;rayon_core::job::JobRef&gt; (1 samples, 0.13%)</title><rect x="20.6989%" y="933" width="0.1344%" height="15" fill="rgb(230,95,12)" fg:x="154" fg:w="1"/><text x="20.9489%" y="943.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin (1 samples, 0.13%)</title><rect x="20.6989%" y="917" width="0.1344%" height="15" fill="rgb(232,209,1)" fg:x="154" fg:w="1"/><text x="20.9489%" y="927.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle&lt;crossbeam_epoch::default::pin::closure_env$0,crossbeam_epoch::guard::Guard&gt; (1 samples, 0.13%)</title><rect x="20.6989%" y="901" width="0.1344%" height="15" fill="rgb(232,6,1)" fg:x="154" fg:w="1"/><text x="20.9489%" y="911.50"></text></g><g><title>fuzzit.exe`std::thread::local::LocalKey&lt;crossbeam_epoch::collector::LocalHandle&gt;::try_with(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.13%)</title><rect x="20.6989%" y="885" width="0.1344%" height="15" fill="rgb(210,224,50)" fg:x="154" fg:w="1"/><text x="20.9489%" y="895.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle::closure$0(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.13%)</title><rect x="20.6989%" y="869" width="0.1344%" height="15" fill="rgb(228,127,35)" fg:x="154" fg:w="1"/><text x="20.9489%" y="879.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin::closure$0 (1 samples, 0.13%)</title><rect x="20.6989%" y="853" width="0.1344%" height="15" fill="rgb(245,102,45)" fg:x="154" fg:w="1"/><text x="20.9489%" y="863.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.13%)</title><rect x="20.6989%" y="837" width="0.1344%" height="15" fill="rgb(214,1,49)" fg:x="154" fg:w="1"/><text x="20.9489%" y="847.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::internal::Local::pin (1 samples, 0.13%)</title><rect x="20.6989%" y="821" width="0.1344%" height="15" fill="rgb(226,163,40)" fg:x="154" fg:w="1"/><text x="20.9489%" y="831.50"></text></g><g><title>fuzzit.exe`core::cell::Cell&lt;core::num::wrapping::Wrapping&lt;usize&gt; &gt;::get (1 samples, 0.13%)</title><rect x="20.6989%" y="805" width="0.1344%" height="15" fill="rgb(239,212,28)" fg:x="154" fg:w="1"/><text x="20.9489%" y="815.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (1 samples, 0.13%)</title><rect x="20.8333%" y="965" width="0.1344%" height="15" fill="rgb(220,20,13)" fg:x="155" fg:w="1"/><text x="21.0833%" y="975.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.13%)</title><rect x="20.8333%" y="949" width="0.1344%" height="15" fill="rgb(210,164,35)" fg:x="155" fg:w="1"/><text x="21.0833%" y="959.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (1 samples, 0.13%)</title><rect x="20.8333%" y="933" width="0.1344%" height="15" fill="rgb(248,109,41)" fg:x="155" fg:w="1"/><text x="21.0833%" y="943.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (1 samples, 0.13%)</title><rect x="20.8333%" y="917" width="0.1344%" height="15" fill="rgb(238,23,50)" fg:x="155" fg:w="1"/><text x="21.0833%" y="927.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(tuple$ (1 samples, 0.13%)</title><rect x="20.8333%" y="901" width="0.1344%" height="15" fill="rgb(211,48,49)" fg:x="155" fg:w="1"/><text x="21.0833%" y="911.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.8333%" y="885" width="0.1344%" height="15" fill="rgb(223,36,21)" fg:x="155" fg:w="1"/><text x="21.0833%" y="895.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.8333%" y="869" width="0.1344%" height="15" fill="rgb(207,123,46)" fg:x="155" fg:w="1"/><text x="21.0833%" y="879.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.8333%" y="853" width="0.1344%" height="15" fill="rgb(240,218,32)" fg:x="155" fg:w="1"/><text x="21.0833%" y="863.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.8333%" y="837" width="0.1344%" height="15" fill="rgb(252,5,43)" fg:x="155" fg:w="1"/><text x="21.0833%" y="847.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="20.8333%" y="821" width="0.1344%" height="15" fill="rgb(252,84,19)" fg:x="155" fg:w="1"/><text x="21.0833%" y="831.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.8333%" y="805" width="0.1344%" height="15" fill="rgb(243,152,39)" fg:x="155" fg:w="1"/><text x="21.0833%" y="815.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.8333%" y="789" width="0.1344%" height="15" fill="rgb(234,160,15)" fg:x="155" fg:w="1"/><text x="21.0833%" y="799.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.8333%" y="773" width="0.1344%" height="15" fill="rgb(237,34,20)" fg:x="155" fg:w="1"/><text x="21.0833%" y="783.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="20.8333%" y="757" width="0.1344%" height="15" fill="rgb(229,97,13)" fg:x="155" fg:w="1"/><text x="21.0833%" y="767.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="20.8333%" y="741" width="0.1344%" height="15" fill="rgb(234,71,50)" fg:x="155" fg:w="1"/><text x="21.0833%" y="751.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.8333%" y="725" width="0.1344%" height="15" fill="rgb(253,155,4)" fg:x="155" fg:w="1"/><text x="21.0833%" y="735.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search(std::path::PathBuf*, std::sync::mpsc::Sender (1 samples, 0.13%)</title><rect x="20.8333%" y="709" width="0.1344%" height="15" fill="rgb(222,185,37)" fg:x="155" fg:w="1"/><text x="21.0833%" y="719.50"></text></g><g><title>fuzzit.exe`std::path::impl$45::deref (1 samples, 0.13%)</title><rect x="20.8333%" y="693" width="0.1344%" height="15" fill="rgb(251,177,13)" fg:x="155" fg:w="1"/><text x="21.0833%" y="703.50"></text></g><g><title>fuzzit.exe`std::fs::metadata(ref$ (1 samples, 0.13%)</title><rect x="20.8333%" y="677" width="0.1344%" height="15" fill="rgb(250,179,40)" fg:x="155" fg:w="1"/><text x="21.0833%" y="687.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 0.13%)</title><rect x="20.8333%" y="661" width="0.1344%" height="15" fill="rgb(242,44,2)" fg:x="155" fg:w="1"/><text x="21.0833%" y="671.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="20.8333%" y="645" width="0.1344%" height="15" fill="rgb(216,177,13)" fg:x="155" fg:w="1"/><text x="21.0833%" y="655.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="20.8333%" y="629" width="0.1344%" height="15" fill="rgb(216,106,43)" fg:x="155" fg:w="1"/><text x="21.0833%" y="639.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="20.8333%" y="613" width="0.1344%" height="15" fill="rgb(216,183,2)" fg:x="155" fg:w="1"/><text x="21.0833%" y="623.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="20.8333%" y="597" width="0.1344%" height="15" fill="rgb(249,75,3)" fg:x="155" fg:w="1"/><text x="21.0833%" y="607.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="20.8333%" y="581" width="0.1344%" height="15" fill="rgb(219,67,39)" fg:x="155" fg:w="1"/><text x="21.0833%" y="591.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="20.8333%" y="565" width="0.1344%" height="15" fill="rgb(253,228,2)" fg:x="155" fg:w="1"/><text x="21.0833%" y="575.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="20.8333%" y="549" width="0.1344%" height="15" fill="rgb(235,138,27)" fg:x="155" fg:w="1"/><text x="21.0833%" y="559.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="20.8333%" y="533" width="0.1344%" height="15" fill="rgb(236,97,51)" fg:x="155" fg:w="1"/><text x="21.0833%" y="543.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="20.8333%" y="517" width="0.1344%" height="15" fill="rgb(240,80,30)" fg:x="155" fg:w="1"/><text x="21.0833%" y="527.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="20.8333%" y="501" width="0.1344%" height="15" fill="rgb(230,178,19)" fg:x="155" fg:w="1"/><text x="21.0833%" y="511.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="20.6989%" y="1541" width="0.4032%" height="15" fill="rgb(210,190,27)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1551.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="20.6989%" y="1525" width="0.4032%" height="15" fill="rgb(222,107,31)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1535.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="20.6989%" y="1509" width="0.4032%" height="15" fill="rgb(216,127,34)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1519.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="20.6989%" y="1493" width="0.4032%" height="15" fill="rgb(234,116,52)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1503.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 0.40%)</title><rect x="20.6989%" y="1477" width="0.4032%" height="15" fill="rgb(222,124,15)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1487.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.40%)</title><rect x="20.6989%" y="1461" width="0.4032%" height="15" fill="rgb(231,179,28)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1471.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (3 samples, 0.40%)</title><rect x="20.6989%" y="1445" width="0.4032%" height="15" fill="rgb(226,93,45)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1455.50"></text></g><g><title>fuzzit.exe`rayon::iter::extend::impl$33::par_extend&lt;tuple$&lt;&gt;,rayon::iter::map::Map&lt;rayon::iter::par_bridge::IterBridge&lt;std::fs::ReadDir&gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;*, rayon::iter::map::Map&lt;rayon::iter::par_bridge::IterBridge (3 samples, 0.40%)</title><rect x="20.6989%" y="1429" width="0.4032%" height="15" fill="rgb(215,8,51)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1439.50"></text></g><g><title>fuzzit.exe`alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::iter (3 samples, 0.40%)</title><rect x="20.6989%" y="1413" width="0.4032%" height="15" fill="rgb(223,106,5)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1423.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$1::drive_unindexed&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterBridge&lt;std::fs::ReadDir&gt;, rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="20.6989%" y="1397" width="0.4032%" height="15" fill="rgb(250,191,5)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1407.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="20.6989%" y="1381" width="0.4032%" height="15" fill="rgb(242,132,44)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1391.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="20.6989%" y="1365" width="0.4032%" height="15" fill="rgb(251,152,29)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1375.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="20.6989%" y="1349" width="0.4032%" height="15" fill="rgb(218,179,5)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1359.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="20.6989%" y="1333" width="0.4032%" height="15" fill="rgb(227,67,19)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1343.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity (3 samples, 0.40%)</title><rect x="20.6989%" y="1317" width="0.4032%" height="15" fill="rgb(233,119,31)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1327.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.40%)</title><rect x="20.6989%" y="1301" width="0.4032%" height="15" fill="rgb(241,120,22)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1311.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.40%)</title><rect x="20.6989%" y="1285" width="0.4032%" height="15" fill="rgb(224,102,30)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1295.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.40%)</title><rect x="20.6989%" y="1269" width="0.4032%" height="15" fill="rgb(210,164,37)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1279.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.40%)</title><rect x="20.6989%" y="1253" width="0.4032%" height="15" fill="rgb(226,191,16)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1263.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="20.6989%" y="1237" width="0.4032%" height="15" fill="rgb(214,40,45)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1247.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="20.6989%" y="1221" width="0.4032%" height="15" fill="rgb(244,29,26)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1231.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="20.6989%" y="1205" width="0.4032%" height="15" fill="rgb(216,16,5)" fg:x="154" fg:w="3"/><text x="20.9489%" y="1215.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="20.8333%" y="1189" width="0.2688%" height="15" fill="rgb(249,76,35)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1199.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="20.8333%" y="1173" width="0.2688%" height="15" fill="rgb(207,11,44)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1183.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="20.8333%" y="1157" width="0.2688%" height="15" fill="rgb(228,190,49)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1167.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (2 samples, 0.27%)</title><rect x="20.8333%" y="1141" width="0.2688%" height="15" fill="rgb(214,173,12)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1151.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="20.8333%" y="1125" width="0.2688%" height="15" fill="rgb(218,26,35)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1135.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (2 samples, 0.27%)</title><rect x="20.8333%" y="1109" width="0.2688%" height="15" fill="rgb(220,200,19)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1119.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (2 samples, 0.27%)</title><rect x="20.8333%" y="1093" width="0.2688%" height="15" fill="rgb(239,95,49)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1103.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="20.8333%" y="1077" width="0.2688%" height="15" fill="rgb(235,85,53)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1087.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="20.8333%" y="1061" width="0.2688%" height="15" fill="rgb(233,133,31)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1071.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="20.8333%" y="1045" width="0.2688%" height="15" fill="rgb(218,25,20)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1055.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (2 samples, 0.27%)</title><rect x="20.8333%" y="1029" width="0.2688%" height="15" fill="rgb(252,210,38)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1039.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="20.8333%" y="1013" width="0.2688%" height="15" fill="rgb(242,134,21)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1023.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (2 samples, 0.27%)</title><rect x="20.8333%" y="997" width="0.2688%" height="15" fill="rgb(213,28,48)" fg:x="155" fg:w="2"/><text x="21.0833%" y="1007.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (2 samples, 0.27%)</title><rect x="20.8333%" y="981" width="0.2688%" height="15" fill="rgb(250,196,2)" fg:x="155" fg:w="2"/><text x="21.0833%" y="991.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="965" width="0.1344%" height="15" fill="rgb(227,5,17)" fg:x="156" fg:w="1"/><text x="21.2177%" y="975.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="949" width="0.1344%" height="15" fill="rgb(221,226,24)" fg:x="156" fg:w="1"/><text x="21.2177%" y="959.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="933" width="0.1344%" height="15" fill="rgb(211,5,48)" fg:x="156" fg:w="1"/><text x="21.2177%" y="943.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="20.9677%" y="917" width="0.1344%" height="15" fill="rgb(219,150,6)" fg:x="156" fg:w="1"/><text x="21.2177%" y="927.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="901" width="0.1344%" height="15" fill="rgb(251,46,16)" fg:x="156" fg:w="1"/><text x="21.2177%" y="911.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.9677%" y="885" width="0.1344%" height="15" fill="rgb(220,204,40)" fg:x="156" fg:w="1"/><text x="21.2177%" y="895.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.9677%" y="869" width="0.1344%" height="15" fill="rgb(211,85,2)" fg:x="156" fg:w="1"/><text x="21.2177%" y="879.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="853" width="0.1344%" height="15" fill="rgb(229,17,7)" fg:x="156" fg:w="1"/><text x="21.2177%" y="863.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="837" width="0.1344%" height="15" fill="rgb(239,72,28)" fg:x="156" fg:w="1"/><text x="21.2177%" y="847.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="821" width="0.1344%" height="15" fill="rgb(230,47,54)" fg:x="156" fg:w="1"/><text x="21.2177%" y="831.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="20.9677%" y="805" width="0.1344%" height="15" fill="rgb(214,50,8)" fg:x="156" fg:w="1"/><text x="21.2177%" y="815.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="789" width="0.1344%" height="15" fill="rgb(216,198,43)" fg:x="156" fg:w="1"/><text x="21.2177%" y="799.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.9677%" y="773" width="0.1344%" height="15" fill="rgb(234,20,35)" fg:x="156" fg:w="1"/><text x="21.2177%" y="783.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.9677%" y="757" width="0.1344%" height="15" fill="rgb(254,45,19)" fg:x="156" fg:w="1"/><text x="21.2177%" y="767.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="741" width="0.1344%" height="15" fill="rgb(219,14,44)" fg:x="156" fg:w="1"/><text x="21.2177%" y="751.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="725" width="0.1344%" height="15" fill="rgb(217,220,26)" fg:x="156" fg:w="1"/><text x="21.2177%" y="735.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="709" width="0.1344%" height="15" fill="rgb(213,158,28)" fg:x="156" fg:w="1"/><text x="21.2177%" y="719.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="20.9677%" y="693" width="0.1344%" height="15" fill="rgb(252,51,52)" fg:x="156" fg:w="1"/><text x="21.2177%" y="703.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="20.9677%" y="677" width="0.1344%" height="15" fill="rgb(246,89,16)" fg:x="156" fg:w="1"/><text x="21.2177%" y="687.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.9677%" y="661" width="0.1344%" height="15" fill="rgb(216,158,49)" fg:x="156" fg:w="1"/><text x="21.2177%" y="671.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.9677%" y="645" width="0.1344%" height="15" fill="rgb(236,107,19)" fg:x="156" fg:w="1"/><text x="21.2177%" y="655.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="20.9677%" y="629" width="0.1344%" height="15" fill="rgb(228,185,30)" fg:x="156" fg:w="1"/><text x="21.2177%" y="639.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="20.9677%" y="613" width="0.1344%" height="15" fill="rgb(246,134,8)" fg:x="156" fg:w="1"/><text x="21.2177%" y="623.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.13%)</title><rect x="20.9677%" y="597" width="0.1344%" height="15" fill="rgb(214,143,50)" fg:x="156" fg:w="1"/><text x="21.2177%" y="607.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search(std::path::PathBuf*, std::sync::mpsc::Sender (1 samples, 0.13%)</title><rect x="20.9677%" y="581" width="0.1344%" height="15" fill="rgb(228,75,8)" fg:x="156" fg:w="1"/><text x="21.2177%" y="591.50"></text></g><g><title>fuzzit.exe`std::path::impl$45::deref (1 samples, 0.13%)</title><rect x="20.9677%" y="565" width="0.1344%" height="15" fill="rgb(207,175,4)" fg:x="156" fg:w="1"/><text x="21.2177%" y="575.50"></text></g><g><title>fuzzit.exe`std::path::Path::new (1 samples, 0.13%)</title><rect x="20.9677%" y="549" width="0.1344%" height="15" fill="rgb(205,108,24)" fg:x="156" fg:w="1"/><text x="21.2177%" y="559.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$59::as_ref (1 samples, 0.13%)</title><rect x="20.9677%" y="533" width="0.1344%" height="15" fill="rgb(244,120,49)" fg:x="156" fg:w="1"/><text x="21.2177%" y="543.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$7::deref (1 samples, 0.13%)</title><rect x="20.9677%" y="517" width="0.1344%" height="15" fill="rgb(223,47,38)" fg:x="156" fg:w="1"/><text x="21.2177%" y="527.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$5::index (1 samples, 0.13%)</title><rect x="20.9677%" y="501" width="0.1344%" height="15" fill="rgb(229,179,11)" fg:x="156" fg:w="1"/><text x="21.2177%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::os_str::wtf8::Buf::as_slice (1 samples, 0.13%)</title><rect x="20.9677%" y="485" width="0.1344%" height="15" fill="rgb(231,122,1)" fg:x="156" fg:w="1"/><text x="21.2177%" y="495.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::as_slice (1 samples, 0.13%)</title><rect x="20.9677%" y="469" width="0.1344%" height="15" fill="rgb(245,119,9)" fg:x="156" fg:w="1"/><text x="21.2177%" y="479.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.13%)</title><rect x="20.9677%" y="453" width="0.1344%" height="15" fill="rgb(241,163,25)" fg:x="156" fg:w="1"/><text x="21.2177%" y="463.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_slice (1 samples, 0.13%)</title><rect x="20.9677%" y="437" width="0.1344%" height="15" fill="rgb(217,214,3)" fg:x="156" fg:w="1"/><text x="21.2177%" y="447.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.13%)</title><rect x="20.9677%" y="421" width="0.1344%" height="15" fill="rgb(240,86,28)" fg:x="156" fg:w="1"/><text x="21.2177%" y="431.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.13%)</title><rect x="20.9677%" y="405" width="0.1344%" height="15" fill="rgb(215,47,9)" fg:x="156" fg:w="1"/><text x="21.2177%" y="415.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.13%)</title><rect x="20.9677%" y="389" width="0.1344%" height="15" fill="rgb(252,25,45)" fg:x="156" fg:w="1"/><text x="21.2177%" y="399.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.13%)</title><rect x="20.9677%" y="373" width="0.1344%" height="15" fill="rgb(251,164,9)" fg:x="156" fg:w="1"/><text x="21.2177%" y="383.50"></text></g><g><title>fuzzit.exe`std::path::PathBuf::_push (1 samples, 0.13%)</title><rect x="20.9677%" y="357" width="0.1344%" height="15" fill="rgb(233,194,0)" fg:x="156" fg:w="1"/><text x="21.2177%" y="367.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::OsString::push (1 samples, 0.13%)</title><rect x="20.9677%" y="341" width="0.1344%" height="15" fill="rgb(249,111,24)" fg:x="156" fg:w="1"/><text x="21.2177%" y="351.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::impl$2::push::impl$0::spec_push_to (1 samples, 0.13%)</title><rect x="20.9677%" y="325" width="0.1344%" height="15" fill="rgb(250,223,3)" fg:x="156" fg:w="1"/><text x="21.2177%" y="335.50"></text></g><g><title>fuzzit.exe`std::sys::os_str::wtf8::Buf::push_slice (1 samples, 0.13%)</title><rect x="20.9677%" y="309" width="0.1344%" height="15" fill="rgb(236,178,37)" fg:x="156" fg:w="1"/><text x="21.2177%" y="319.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_wtf8 (1 samples, 0.13%)</title><rect x="20.9677%" y="293" width="0.1344%" height="15" fill="rgb(241,158,50)" fg:x="156" fg:w="1"/><text x="21.2177%" y="303.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.13%)</title><rect x="20.9677%" y="277" width="0.1344%" height="15" fill="rgb(213,121,41)" fg:x="156" fg:w="1"/><text x="21.2177%" y="287.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.13%)</title><rect x="20.9677%" y="261" width="0.1344%" height="15" fill="rgb(240,92,3)" fg:x="156" fg:w="1"/><text x="21.2177%" y="271.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::append_elements (1 samples, 0.13%)</title><rect x="20.9677%" y="245" width="0.1344%" height="15" fill="rgb(205,123,3)" fg:x="156" fg:w="1"/><text x="21.2177%" y="255.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::reserve (1 samples, 0.13%)</title><rect x="20.9677%" y="229" width="0.1344%" height="15" fill="rgb(205,97,47)" fg:x="156" fg:w="1"/><text x="21.2177%" y="239.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::reserve (1 samples, 0.13%)</title><rect x="20.9677%" y="213" width="0.1344%" height="15" fill="rgb(247,152,14)" fg:x="156" fg:w="1"/><text x="21.2177%" y="223.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::reserve (1 samples, 0.13%)</title><rect x="20.9677%" y="197" width="0.1344%" height="15" fill="rgb(248,195,53)" fg:x="156" fg:w="1"/><text x="21.2177%" y="207.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="20.9677%" y="181" width="0.1344%" height="15" fill="rgb(226,201,16)" fg:x="156" fg:w="1"/><text x="21.2177%" y="191.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.13%)</title><rect x="20.9677%" y="165" width="0.1344%" height="15" fill="rgb(205,98,0)" fg:x="156" fg:w="1"/><text x="21.2177%" y="175.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="20.9677%" y="149" width="0.1344%" height="15" fill="rgb(214,191,48)" fg:x="156" fg:w="1"/><text x="21.2177%" y="159.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="20.9677%" y="133" width="0.1344%" height="15" fill="rgb(237,112,39)" fg:x="156" fg:w="1"/><text x="21.2177%" y="143.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.13%)</title><rect x="20.9677%" y="117" width="0.1344%" height="15" fill="rgb(247,203,27)" fg:x="156" fg:w="1"/><text x="21.2177%" y="127.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="20.9677%" y="101" width="0.1344%" height="15" fill="rgb(235,124,28)" fg:x="156" fg:w="1"/><text x="21.2177%" y="111.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="20.9677%" y="85" width="0.1344%" height="15" fill="rgb(208,207,46)" fg:x="156" fg:w="1"/><text x="21.2177%" y="95.50"></text></g><g><title>`0x7FFE2F069E2D (1 samples, 0.13%)</title><rect x="20.9677%" y="69" width="0.1344%" height="15" fill="rgb(234,176,4)" fg:x="156" fg:w="1"/><text x="21.2177%" y="79.50"></text></g><g><title>`0x7FFE2F06A0D5 (1 samples, 0.13%)</title><rect x="20.9677%" y="53" width="0.1344%" height="15" fill="rgb(230,133,28)" fg:x="156" fg:w="1"/><text x="21.2177%" y="63.50"></text></g><g><title>`0x7FFE2F06B7BA (1 samples, 0.13%)</title><rect x="20.9677%" y="37" width="0.1344%" height="15" fill="rgb(211,137,40)" fg:x="156" fg:w="1"/><text x="21.2177%" y="47.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::LatchRef&lt;rayon_core::latch::LockLatch&gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2501" width="0.5376%" height="15" fill="rgb(254,35,13)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2511.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;::call(rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2485" width="0.5376%" height="15" fill="rgb(225,49,51)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2495.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2469" width="0.5376%" height="15" fill="rgb(251,10,15)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2479.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2453" width="0.5376%" height="15" fill="rgb(228,207,15)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2463.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,rayon_core::registry::impl$6::in_worker_cold::closure$0::closure_env$0&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2437" width="0.5376%" height="15" fill="rgb(241,99,19)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2447.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (4 samples, 0.54%)</title><rect x="20.6989%" y="2421" width="0.5376%" height="15" fill="rgb(207,104,49)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2431.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2405" width="0.5376%" height="15" fill="rgb(234,99,18)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2415.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2389" width="0.5376%" height="15" fill="rgb(213,191,49)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2399.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2373" width="0.5376%" height="15" fill="rgb(210,226,19)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2383.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2357" width="0.5376%" height="15" fill="rgb(229,97,18)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2367.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (4 samples, 0.54%)</title><rect x="20.6989%" y="2341" width="0.5376%" height="15" fill="rgb(211,167,15)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2351.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2325" width="0.5376%" height="15" fill="rgb(210,169,34)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2335.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2309" width="0.5376%" height="15" fill="rgb(241,121,31)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2319.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2293" width="0.5376%" height="15" fill="rgb(232,40,11)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2303.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2277" width="0.5376%" height="15" fill="rgb(205,86,26)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2287.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2261" width="0.5376%" height="15" fill="rgb(231,126,28)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2271.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2245" width="0.5376%" height="15" fill="rgb(219,221,18)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2255.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (4 samples, 0.54%)</title><rect x="20.6989%" y="2229" width="0.5376%" height="15" fill="rgb(211,40,0)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2239.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2213" width="0.5376%" height="15" fill="rgb(239,85,43)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2223.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2197" width="0.5376%" height="15" fill="rgb(231,55,21)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2207.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2181" width="0.5376%" height="15" fill="rgb(225,184,43)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2191.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2165" width="0.5376%" height="15" fill="rgb(251,158,41)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2175.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2149" width="0.5376%" height="15" fill="rgb(234,159,37)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2159.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2133" width="0.5376%" height="15" fill="rgb(216,204,22)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2143.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (4 samples, 0.54%)</title><rect x="20.6989%" y="2117" width="0.5376%" height="15" fill="rgb(214,17,3)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2127.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2101" width="0.5376%" height="15" fill="rgb(212,111,17)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2111.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2085" width="0.5376%" height="15" fill="rgb(221,157,24)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2095.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="2069" width="0.5376%" height="15" fill="rgb(252,16,13)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2079.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2053" width="0.5376%" height="15" fill="rgb(221,62,2)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2063.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2037" width="0.5376%" height="15" fill="rgb(247,87,22)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2047.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="2021" width="0.5376%" height="15" fill="rgb(215,73,9)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2031.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (4 samples, 0.54%)</title><rect x="20.6989%" y="2005" width="0.5376%" height="15" fill="rgb(207,175,33)" fg:x="154" fg:w="4"/><text x="20.9489%" y="2015.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1989" width="0.5376%" height="15" fill="rgb(243,129,54)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1999.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="1973" width="0.5376%" height="15" fill="rgb(227,119,45)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="1957" width="0.5376%" height="15" fill="rgb(205,109,36)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1967.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1941" width="0.5376%" height="15" fill="rgb(205,6,39)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1951.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1925" width="0.5376%" height="15" fill="rgb(221,32,16)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1935.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1909" width="0.5376%" height="15" fill="rgb(228,144,50)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1919.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (4 samples, 0.54%)</title><rect x="20.6989%" y="1893" width="0.5376%" height="15" fill="rgb(229,201,53)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1877" width="0.5376%" height="15" fill="rgb(249,153,27)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="1861" width="0.5376%" height="15" fill="rgb(227,106,25)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1871.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="1845" width="0.5376%" height="15" fill="rgb(230,65,29)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1855.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1829" width="0.5376%" height="15" fill="rgb(221,57,46)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1839.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1813" width="0.5376%" height="15" fill="rgb(229,161,17)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1823.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1797" width="0.5376%" height="15" fill="rgb(222,213,11)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1807.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (4 samples, 0.54%)</title><rect x="20.6989%" y="1781" width="0.5376%" height="15" fill="rgb(235,35,13)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1791.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1765" width="0.5376%" height="15" fill="rgb(233,158,34)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1775.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="1749" width="0.5376%" height="15" fill="rgb(215,151,48)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1759.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="1733" width="0.5376%" height="15" fill="rgb(229,84,14)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1743.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1717" width="0.5376%" height="15" fill="rgb(229,68,14)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1727.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1701" width="0.5376%" height="15" fill="rgb(243,106,26)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1711.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1685" width="0.5376%" height="15" fill="rgb(206,45,38)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1695.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (4 samples, 0.54%)</title><rect x="20.6989%" y="1669" width="0.5376%" height="15" fill="rgb(226,6,15)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1679.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="20.6989%" y="1653" width="0.5376%" height="15" fill="rgb(232,22,54)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1663.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="1637" width="0.5376%" height="15" fill="rgb(229,222,32)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1647.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="1621" width="0.5376%" height="15" fill="rgb(228,62,29)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1631.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (4 samples, 0.54%)</title><rect x="20.6989%" y="1605" width="0.5376%" height="15" fill="rgb(251,103,34)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1615.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (4 samples, 0.54%)</title><rect x="20.6989%" y="1589" width="0.5376%" height="15" fill="rgb(233,12,30)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1599.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result&lt;tuple$ (4 samples, 0.54%)</title><rect x="20.6989%" y="1573" width="0.5376%" height="15" fill="rgb(238,52,0)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1583.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search(std::path::PathBuf*, std::sync::mpsc::Sender (4 samples, 0.54%)</title><rect x="20.6989%" y="1557" width="0.5376%" height="15" fill="rgb(223,98,5)" fg:x="154" fg:w="4"/><text x="20.9489%" y="1567.50"></text></g><g><title>fuzzit.exe`std::path::impl$45::deref (1 samples, 0.13%)</title><rect x="21.1022%" y="1541" width="0.1344%" height="15" fill="rgb(228,75,37)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1551.50"></text></g><g><title>fuzzit.exe`std::fs::metadata(ref$ (1 samples, 0.13%)</title><rect x="21.1022%" y="1525" width="0.1344%" height="15" fill="rgb(205,115,49)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1535.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 0.13%)</title><rect x="21.1022%" y="1509" width="0.1344%" height="15" fill="rgb(250,154,43)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1519.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="21.1022%" y="1493" width="0.1344%" height="15" fill="rgb(226,43,29)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1503.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="21.1022%" y="1477" width="0.1344%" height="15" fill="rgb(249,228,39)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1487.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="21.1022%" y="1461" width="0.1344%" height="15" fill="rgb(216,79,43)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1471.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="21.1022%" y="1445" width="0.1344%" height="15" fill="rgb(228,95,12)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1455.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="21.1022%" y="1429" width="0.1344%" height="15" fill="rgb(249,221,15)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1439.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="21.1022%" y="1413" width="0.1344%" height="15" fill="rgb(233,34,13)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1423.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="21.1022%" y="1397" width="0.1344%" height="15" fill="rgb(214,103,39)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1407.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="21.1022%" y="1381" width="0.1344%" height="15" fill="rgb(251,126,39)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1391.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (1 samples, 0.13%)</title><rect x="21.1022%" y="1365" width="0.1344%" height="15" fill="rgb(214,216,36)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1375.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="21.1022%" y="1349" width="0.1344%" height="15" fill="rgb(220,221,8)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1359.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="21.1022%" y="1333" width="0.1344%" height="15" fill="rgb(240,216,3)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1343.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="21.1022%" y="1317" width="0.1344%" height="15" fill="rgb(232,218,17)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1327.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="21.1022%" y="1301" width="0.1344%" height="15" fill="rgb(229,163,45)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1311.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="21.1022%" y="1285" width="0.1344%" height="15" fill="rgb(231,110,42)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1295.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="21.1022%" y="1269" width="0.1344%" height="15" fill="rgb(208,170,48)" fg:x="157" fg:w="1"/><text x="21.3522%" y="1279.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::fuse::impl$3::next(core::iter::adapters::fuse::Fuse (2 samples, 0.27%)</title><rect x="21.2366%" y="2357" width="0.2688%" height="15" fill="rgb(239,116,25)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2367.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::fuse::impl$10::next(core::iter::adapters::fuse::Fuse (2 samples, 0.27%)</title><rect x="21.2366%" y="2341" width="0.2688%" height="15" fill="rgb(219,200,50)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2351.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::fuse::and_then_or_clear(enum2$&lt;core::option::Option&lt;std::fs::ReadDir&gt; &gt;*, enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;std::fs::DirEntry,std::io::error::Error&gt; &gt; &gt; &gt; (*) (2 samples, 0.27%)</title><rect x="21.2366%" y="2325" width="0.2688%" height="15" fill="rgb(245,200,0)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2335.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (2 samples, 0.27%)</title><rect x="21.2366%" y="2309" width="0.2688%" height="15" fill="rgb(245,119,33)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2319.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="21.2366%" y="2293" width="0.2688%" height="15" fill="rgb(231,125,12)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2303.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="21.2366%" y="2277" width="0.2688%" height="15" fill="rgb(216,96,41)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2287.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::sync::Arc (2 samples, 0.27%)</title><rect x="21.2366%" y="2261" width="0.2688%" height="15" fill="rgb(248,43,45)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2271.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (2 samples, 0.27%)</title><rect x="21.2366%" y="2245" width="0.2688%" height="15" fill="rgb(217,222,7)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2255.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;std::path::PathBuf,alloc::alloc::Global&gt;::inner (2 samples, 0.27%)</title><rect x="21.2366%" y="2229" width="0.2688%" height="15" fill="rgb(233,28,6)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2239.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::path::PathBuf&gt; &gt;::as_ref (2 samples, 0.27%)</title><rect x="21.2366%" y="2213" width="0.2688%" height="15" fill="rgb(231,218,15)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2223.50"></text></g><g><title>`0x7FFE2C81DD91 (2 samples, 0.27%)</title><rect x="21.2366%" y="2197" width="0.2688%" height="15" fill="rgb(226,171,48)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2207.50"></text></g><g><title>`0x7FFE2F1A3414 (2 samples, 0.27%)</title><rect x="21.2366%" y="2181" width="0.2688%" height="15" fill="rgb(235,201,9)" fg:x="158" fg:w="2"/><text x="21.4866%" y="2191.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (1 samples, 0.13%)</title><rect x="21.5054%" y="1941" width="0.1344%" height="15" fill="rgb(217,80,15)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1951.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.13%)</title><rect x="21.5054%" y="1925" width="0.1344%" height="15" fill="rgb(219,152,8)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1935.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (1 samples, 0.13%)</title><rect x="21.5054%" y="1909" width="0.1344%" height="15" fill="rgb(243,107,38)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1919.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (1 samples, 0.13%)</title><rect x="21.5054%" y="1893" width="0.1344%" height="15" fill="rgb(231,17,5)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1903.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (1 samples, 0.13%)</title><rect x="21.5054%" y="1877" width="0.1344%" height="15" fill="rgb(209,25,54)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::find_work (1 samples, 0.13%)</title><rect x="21.5054%" y="1861" width="0.1344%" height="15" fill="rgb(219,0,2)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1871.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::option::Option&lt;rayon_core::job::JobRef&gt; &gt;::or_else(enum2$&lt;core::option::Option (1 samples, 0.13%)</title><rect x="21.5054%" y="1845" width="0.1344%" height="15" fill="rgb(246,9,5)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1855.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::find_work::closure$0 (1 samples, 0.13%)</title><rect x="21.5054%" y="1829" width="0.1344%" height="15" fill="rgb(226,159,4)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1839.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::steal (1 samples, 0.13%)</title><rect x="21.5054%" y="1813" width="0.1344%" height="15" fill="rgb(219,175,34)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1823.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range (1 samples, 0.13%)</title><rect x="21.5054%" y="1797" width="0.1344%" height="15" fill="rgb(236,10,46)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1807.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::try_fold(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.13%)</title><rect x="21.5054%" y="1781" width="0.1344%" height="15" fill="rgb(240,211,16)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1791.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::chain::impl$1::try_fold&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt;,tuple$&lt;&gt;,core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.13%)</title><rect x="21.5054%" y="1765" width="0.1344%" height="15" fill="rgb(205,3,43)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1775.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::range::Range&lt;usize&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.13%)</title><rect x="21.5054%" y="1749" width="0.1344%" height="15" fill="rgb(245,7,22)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1759.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$3::call_mut(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;**, tuple$ (1 samples, 0.13%)</title><rect x="21.5054%" y="1733" width="0.1344%" height="15" fill="rgb(239,132,32)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1743.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;*, tuple$ (1 samples, 0.13%)</title><rect x="21.5054%" y="1717" width="0.1344%" height="15" fill="rgb(228,202,34)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1727.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt;*, tuple$ (1 samples, 0.13%)</title><rect x="21.5054%" y="1701" width="0.1344%" height="15" fill="rgb(254,200,22)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1711.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::steal::closure$1 (1 samples, 0.13%)</title><rect x="21.5054%" y="1685" width="0.1344%" height="15" fill="rgb(219,10,39)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1695.50"></text></g><g><title>fuzzit.exe`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal&lt;rayon_core::job::JobRef&gt; (1 samples, 0.13%)</title><rect x="21.5054%" y="1669" width="0.1344%" height="15" fill="rgb(226,210,39)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1679.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::pin (1 samples, 0.13%)</title><rect x="21.5054%" y="1653" width="0.1344%" height="15" fill="rgb(208,219,16)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1663.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle&lt;crossbeam_epoch::default::pin::closure_env$0,crossbeam_epoch::guard::Guard&gt; (1 samples, 0.13%)</title><rect x="21.5054%" y="1637" width="0.1344%" height="15" fill="rgb(216,158,51)" fg:x="160" fg:w="1"/><text x="21.7554%" y="1647.50"></text></g><g><title>`0x7FFE2C85B3A9 (1 samples, 0.13%)</title><rect x="21.6398%" y="1045" width="0.1344%" height="15" fill="rgb(233,14,44)" fg:x="161" fg:w="1"/><text x="21.8898%" y="1055.50"></text></g><g><title>`0x7FFE2F1A3B54 (1 samples, 0.13%)</title><rect x="21.6398%" y="1029" width="0.1344%" height="15" fill="rgb(237,97,39)" fg:x="161" fg:w="1"/><text x="21.8898%" y="1039.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="21.6398%" y="1157" width="0.2688%" height="15" fill="rgb(218,198,43)" fg:x="161" fg:w="2"/><text x="21.8898%" y="1167.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="21.6398%" y="1141" width="0.2688%" height="15" fill="rgb(231,104,20)" fg:x="161" fg:w="2"/><text x="21.8898%" y="1151.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="21.6398%" y="1125" width="0.2688%" height="15" fill="rgb(254,36,13)" fg:x="161" fg:w="2"/><text x="21.8898%" y="1135.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$25::drop (2 samples, 0.27%)</title><rect x="21.6398%" y="1109" width="0.2688%" height="15" fill="rgb(248,14,50)" fg:x="161" fg:w="2"/><text x="21.8898%" y="1119.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::file_attr (2 samples, 0.27%)</title><rect x="21.6398%" y="1093" width="0.2688%" height="15" fill="rgb(217,107,29)" fg:x="161" fg:w="2"/><text x="21.8898%" y="1103.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (2 samples, 0.27%)</title><rect x="21.6398%" y="1077" width="0.2688%" height="15" fill="rgb(251,169,33)" fg:x="161" fg:w="2"/><text x="21.8898%" y="1087.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (2 samples, 0.27%)</title><rect x="21.6398%" y="1061" width="0.2688%" height="15" fill="rgb(217,108,32)" fg:x="161" fg:w="2"/><text x="21.8898%" y="1071.50"></text></g><g><title>`0x7FFE2C85B3EF (1 samples, 0.13%)</title><rect x="21.7742%" y="1045" width="0.1344%" height="15" fill="rgb(219,66,42)" fg:x="162" fg:w="1"/><text x="22.0242%" y="1055.50"></text></g><g><title>`0x7FFE2F1A3454 (1 samples, 0.13%)</title><rect x="21.7742%" y="1029" width="0.1344%" height="15" fill="rgb(206,180,7)" fg:x="162" fg:w="1"/><text x="22.0242%" y="1039.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="21.5054%" y="2293" width="0.5376%" height="15" fill="rgb(208,226,31)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2303.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="21.5054%" y="2277" width="0.5376%" height="15" fill="rgb(218,26,49)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2287.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="21.5054%" y="2261" width="0.5376%" height="15" fill="rgb(233,197,48)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2271.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="21.5054%" y="2245" width="0.5376%" height="15" fill="rgb(252,181,51)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2255.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::vec::Vec (4 samples, 0.54%)</title><rect x="21.5054%" y="2229" width="0.5376%" height="15" fill="rgb(253,90,19)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2239.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (4 samples, 0.54%)</title><rect x="21.5054%" y="2213" width="0.5376%" height="15" fill="rgb(215,171,30)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2223.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (4 samples, 0.54%)</title><rect x="21.5054%" y="2197" width="0.5376%" height="15" fill="rgb(214,222,9)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2207.50"></text></g><g><title>fuzzit.exe`rayon::iter::extend::impl$33::par_extend&lt;tuple$&lt;&gt;,rayon::iter::map::Map&lt;rayon::iter::par_bridge::IterBridge&lt;std::fs::ReadDir&gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;*, rayon::iter::map::Map&lt;rayon::iter::par_bridge::IterBridge (4 samples, 0.54%)</title><rect x="21.5054%" y="2181" width="0.5376%" height="15" fill="rgb(223,3,22)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2191.50"></text></g><g><title>fuzzit.exe`alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::iter (4 samples, 0.54%)</title><rect x="21.5054%" y="2165" width="0.5376%" height="15" fill="rgb(225,196,46)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2175.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$1::drive_unindexed&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterBridge&lt;std::fs::ReadDir&gt;, rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="21.5054%" y="2149" width="0.5376%" height="15" fill="rgb(209,110,37)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2159.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="21.5054%" y="2133" width="0.5376%" height="15" fill="rgb(249,89,12)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2143.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="21.5054%" y="2117" width="0.5376%" height="15" fill="rgb(226,27,33)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2127.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="21.5054%" y="2101" width="0.5376%" height="15" fill="rgb(213,82,22)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2111.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="21.5054%" y="2085" width="0.5376%" height="15" fill="rgb(248,140,0)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2095.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity (4 samples, 0.54%)</title><rect x="21.5054%" y="2069" width="0.5376%" height="15" fill="rgb(228,106,3)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2079.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.54%)</title><rect x="21.5054%" y="2053" width="0.5376%" height="15" fill="rgb(209,23,37)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2063.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.54%)</title><rect x="21.5054%" y="2037" width="0.5376%" height="15" fill="rgb(241,93,50)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2047.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.54%)</title><rect x="21.5054%" y="2021" width="0.5376%" height="15" fill="rgb(253,46,43)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2031.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (4 samples, 0.54%)</title><rect x="21.5054%" y="2005" width="0.5376%" height="15" fill="rgb(226,206,43)" fg:x="160" fg:w="4"/><text x="21.7554%" y="2015.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (4 samples, 0.54%)</title><rect x="21.5054%" y="1989" width="0.5376%" height="15" fill="rgb(217,54,7)" fg:x="160" fg:w="4"/><text x="21.7554%" y="1999.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="21.5054%" y="1973" width="0.5376%" height="15" fill="rgb(223,5,52)" fg:x="160" fg:w="4"/><text x="21.7554%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (4 samples, 0.54%)</title><rect x="21.5054%" y="1957" width="0.5376%" height="15" fill="rgb(206,52,46)" fg:x="160" fg:w="4"/><text x="21.7554%" y="1967.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1941" width="0.4032%" height="15" fill="rgb(253,136,11)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1951.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1925" width="0.4032%" height="15" fill="rgb(208,106,33)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1935.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1909" width="0.4032%" height="15" fill="rgb(206,54,4)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1919.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (3 samples, 0.40%)</title><rect x="21.6398%" y="1893" width="0.4032%" height="15" fill="rgb(213,3,15)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1877" width="0.4032%" height="15" fill="rgb(252,211,39)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1861" width="0.4032%" height="15" fill="rgb(223,6,36)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1871.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1845" width="0.4032%" height="15" fill="rgb(252,169,45)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1855.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1829" width="0.4032%" height="15" fill="rgb(212,48,26)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1839.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1813" width="0.4032%" height="15" fill="rgb(251,102,48)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1823.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1797" width="0.4032%" height="15" fill="rgb(243,208,16)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1807.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (3 samples, 0.40%)</title><rect x="21.6398%" y="1781" width="0.4032%" height="15" fill="rgb(219,96,24)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1791.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1765" width="0.4032%" height="15" fill="rgb(219,33,29)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1775.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1749" width="0.4032%" height="15" fill="rgb(223,176,5)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1759.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1733" width="0.4032%" height="15" fill="rgb(228,140,14)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1743.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1717" width="0.4032%" height="15" fill="rgb(217,179,31)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1727.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1701" width="0.4032%" height="15" fill="rgb(230,9,30)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1711.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1685" width="0.4032%" height="15" fill="rgb(230,136,20)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1695.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (3 samples, 0.40%)</title><rect x="21.6398%" y="1669" width="0.4032%" height="15" fill="rgb(215,210,22)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1679.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1653" width="0.4032%" height="15" fill="rgb(218,43,5)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1663.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1637" width="0.4032%" height="15" fill="rgb(216,11,5)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1647.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1621" width="0.4032%" height="15" fill="rgb(209,82,29)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1631.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1605" width="0.4032%" height="15" fill="rgb(244,115,12)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1615.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1589" width="0.4032%" height="15" fill="rgb(222,82,18)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1599.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1573" width="0.4032%" height="15" fill="rgb(249,227,8)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1583.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (3 samples, 0.40%)</title><rect x="21.6398%" y="1557" width="0.4032%" height="15" fill="rgb(253,141,45)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1567.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1541" width="0.4032%" height="15" fill="rgb(234,184,4)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1551.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1525" width="0.4032%" height="15" fill="rgb(218,194,23)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1535.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1509" width="0.4032%" height="15" fill="rgb(235,66,41)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1519.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1493" width="0.4032%" height="15" fill="rgb(245,217,1)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1503.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1477" width="0.4032%" height="15" fill="rgb(229,91,1)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1487.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1461" width="0.4032%" height="15" fill="rgb(207,101,30)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1471.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (3 samples, 0.40%)</title><rect x="21.6398%" y="1445" width="0.4032%" height="15" fill="rgb(223,82,49)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1455.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (3 samples, 0.40%)</title><rect x="21.6398%" y="1429" width="0.4032%" height="15" fill="rgb(218,167,17)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1439.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1413" width="0.4032%" height="15" fill="rgb(208,103,14)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1423.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (3 samples, 0.40%)</title><rect x="21.6398%" y="1397" width="0.4032%" height="15" fill="rgb(238,20,8)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1407.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (3 samples, 0.40%)</title><rect x="21.6398%" y="1381" width="0.4032%" height="15" fill="rgb(218,80,54)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1391.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (3 samples, 0.40%)</title><rect x="21.6398%" y="1365" width="0.4032%" height="15" fill="rgb(240,144,17)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1375.50"></text></g><g><title>fuzzit.exe`std::path::Path::is_dir (3 samples, 0.40%)</title><rect x="21.6398%" y="1349" width="0.4032%" height="15" fill="rgb(245,27,50)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1359.50"></text></g><g><title>fuzzit.exe`std::fs::metadata (3 samples, 0.40%)</title><rect x="21.6398%" y="1333" width="0.4032%" height="15" fill="rgb(251,51,7)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1343.50"></text></g><g><title>fuzzit.exe`core::result::Result::map (3 samples, 0.40%)</title><rect x="21.6398%" y="1317" width="0.4032%" height="15" fill="rgb(245,217,29)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1327.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (3 samples, 0.40%)</title><rect x="21.6398%" y="1301" width="0.4032%" height="15" fill="rgb(221,176,29)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1311.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (3 samples, 0.40%)</title><rect x="21.6398%" y="1285" width="0.4032%" height="15" fill="rgb(212,180,24)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1295.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="21.6398%" y="1269" width="0.4032%" height="15" fill="rgb(254,24,2)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1279.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="21.6398%" y="1253" width="0.4032%" height="15" fill="rgb(230,100,2)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1263.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (3 samples, 0.40%)</title><rect x="21.6398%" y="1237" width="0.4032%" height="15" fill="rgb(219,142,25)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1247.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (3 samples, 0.40%)</title><rect x="21.6398%" y="1221" width="0.4032%" height="15" fill="rgb(240,73,43)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1231.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (3 samples, 0.40%)</title><rect x="21.6398%" y="1205" width="0.4032%" height="15" fill="rgb(214,114,15)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1215.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (3 samples, 0.40%)</title><rect x="21.6398%" y="1189" width="0.4032%" height="15" fill="rgb(207,130,4)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1199.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (3 samples, 0.40%)</title><rect x="21.6398%" y="1173" width="0.4032%" height="15" fill="rgb(221,25,40)" fg:x="161" fg:w="3"/><text x="21.8898%" y="1183.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="21.9086%" y="1157" width="0.1344%" height="15" fill="rgb(241,184,7)" fg:x="163" fg:w="1"/><text x="22.1586%" y="1167.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="21.9086%" y="1141" width="0.1344%" height="15" fill="rgb(235,159,4)" fg:x="163" fg:w="1"/><text x="22.1586%" y="1151.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="21.9086%" y="1125" width="0.1344%" height="15" fill="rgb(214,87,48)" fg:x="163" fg:w="1"/><text x="22.1586%" y="1135.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="21.9086%" y="1109" width="0.1344%" height="15" fill="rgb(246,198,24)" fg:x="163" fg:w="1"/><text x="22.1586%" y="1119.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="21.9086%" y="1093" width="0.1344%" height="15" fill="rgb(209,66,40)" fg:x="163" fg:w="1"/><text x="22.1586%" y="1103.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="21.9086%" y="1077" width="0.1344%" height="15" fill="rgb(233,147,39)" fg:x="163" fg:w="1"/><text x="22.1586%" y="1087.50"></text></g><g><title>fuzzit.exe`std::fs::read_dir (1 samples, 0.13%)</title><rect x="22.0430%" y="2293" width="0.1344%" height="15" fill="rgb(231,145,52)" fg:x="164" fg:w="1"/><text x="22.2930%" y="2303.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::sys::fs::windows::ReadDir,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::fs::windows::ReadDir,std::io::error::Error&gt; &gt;, std::fs::ReadDir (*) (1 samples, 0.13%)</title><rect x="22.0430%" y="2277" width="0.1344%" height="15" fill="rgb(206,20,26)" fg:x="164" fg:w="1"/><text x="22.2930%" y="2287.50"></text></g><g><title>fuzzit.exe`std::sys::fs::read_dir (1 samples, 0.13%)</title><rect x="22.0430%" y="2261" width="0.1344%" height="15" fill="rgb(238,220,4)" fg:x="164" fg:w="1"/><text x="22.2930%" y="2271.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::readdir (1 samples, 0.13%)</title><rect x="22.0430%" y="2245" width="0.1344%" height="15" fill="rgb(252,195,42)" fg:x="164" fg:w="1"/><text x="22.2930%" y="2255.50"></text></g><g><title>`0x7FFE2C81D5D3 (1 samples, 0.13%)</title><rect x="22.0430%" y="2229" width="0.1344%" height="15" fill="rgb(209,10,6)" fg:x="164" fg:w="1"/><text x="22.2930%" y="2239.50"></text></g><g><title>`0x7FFE2C81D8D4 (1 samples, 0.13%)</title><rect x="22.0430%" y="2213" width="0.1344%" height="15" fill="rgb(229,3,52)" fg:x="164" fg:w="1"/><text x="22.2930%" y="2223.50"></text></g><g><title>`0x7FFE2F1A5BC4 (1 samples, 0.13%)</title><rect x="22.0430%" y="2197" width="0.1344%" height="15" fill="rgb(253,49,37)" fg:x="164" fg:w="1"/><text x="22.2930%" y="2207.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="22.1774%" y="2101" width="0.1344%" height="15" fill="rgb(240,103,49)" fg:x="165" fg:w="1"/><text x="22.4274%" y="2111.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="22.1774%" y="2085" width="0.1344%" height="15" fill="rgb(250,182,30)" fg:x="165" fg:w="1"/><text x="22.4274%" y="2095.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="22.1774%" y="2069" width="0.1344%" height="15" fill="rgb(248,8,30)" fg:x="165" fg:w="1"/><text x="22.4274%" y="2079.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$25::drop (1 samples, 0.13%)</title><rect x="22.1774%" y="2053" width="0.1344%" height="15" fill="rgb(237,120,30)" fg:x="165" fg:w="1"/><text x="22.4274%" y="2063.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::file_attr (1 samples, 0.13%)</title><rect x="22.1774%" y="2037" width="0.1344%" height="15" fill="rgb(221,146,34)" fg:x="165" fg:w="1"/><text x="22.4274%" y="2047.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.13%)</title><rect x="22.1774%" y="2021" width="0.1344%" height="15" fill="rgb(242,55,13)" fg:x="165" fg:w="1"/><text x="22.4274%" y="2031.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.13%)</title><rect x="22.1774%" y="2005" width="0.1344%" height="15" fill="rgb(242,112,31)" fg:x="165" fg:w="1"/><text x="22.4274%" y="2015.50"></text></g><g><title>`0x7FFE2C85B3A9 (1 samples, 0.13%)</title><rect x="22.1774%" y="1989" width="0.1344%" height="15" fill="rgb(249,192,27)" fg:x="165" fg:w="1"/><text x="22.4274%" y="1999.50"></text></g><g><title>`0x7FFE2F1A3B54 (1 samples, 0.13%)</title><rect x="22.1774%" y="1973" width="0.1344%" height="15" fill="rgb(208,204,44)" fg:x="165" fg:w="1"/><text x="22.4274%" y="1983.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result&lt;tuple$ (7 samples, 0.94%)</title><rect x="21.5054%" y="2325" width="0.9409%" height="15" fill="rgb(208,93,54)" fg:x="160" fg:w="7"/><text x="21.7554%" y="2335.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search(std::path::PathBuf*, std::sync::mpsc::Sender (7 samples, 0.94%)</title><rect x="21.5054%" y="2309" width="0.9409%" height="15" fill="rgb(242,1,31)" fg:x="160" fg:w="7"/><text x="21.7554%" y="2319.50"></text></g><g><title>fuzzit.exe`std::path::impl$45::deref (2 samples, 0.27%)</title><rect x="22.1774%" y="2293" width="0.2688%" height="15" fill="rgb(241,83,25)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2303.50"></text></g><g><title>fuzzit.exe`std::fs::metadata(ref$ (2 samples, 0.27%)</title><rect x="22.1774%" y="2277" width="0.2688%" height="15" fill="rgb(205,169,50)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2287.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (2 samples, 0.27%)</title><rect x="22.1774%" y="2261" width="0.2688%" height="15" fill="rgb(239,186,37)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2271.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (2 samples, 0.27%)</title><rect x="22.1774%" y="2245" width="0.2688%" height="15" fill="rgb(205,221,10)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2255.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (2 samples, 0.27%)</title><rect x="22.1774%" y="2229" width="0.2688%" height="15" fill="rgb(218,196,15)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2239.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="22.1774%" y="2213" width="0.2688%" height="15" fill="rgb(218,196,35)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2223.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="22.1774%" y="2197" width="0.2688%" height="15" fill="rgb(233,63,24)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2207.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (2 samples, 0.27%)</title><rect x="22.1774%" y="2181" width="0.2688%" height="15" fill="rgb(225,8,4)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2191.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (2 samples, 0.27%)</title><rect x="22.1774%" y="2165" width="0.2688%" height="15" fill="rgb(234,105,35)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2175.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (2 samples, 0.27%)</title><rect x="22.1774%" y="2149" width="0.2688%" height="15" fill="rgb(236,21,32)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2159.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (2 samples, 0.27%)</title><rect x="22.1774%" y="2133" width="0.2688%" height="15" fill="rgb(228,109,6)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2143.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (2 samples, 0.27%)</title><rect x="22.1774%" y="2117" width="0.2688%" height="15" fill="rgb(229,215,31)" fg:x="165" fg:w="2"/><text x="22.4274%" y="2127.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="22.3118%" y="2101" width="0.1344%" height="15" fill="rgb(221,52,54)" fg:x="166" fg:w="1"/><text x="22.5618%" y="2111.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="22.3118%" y="2085" width="0.1344%" height="15" fill="rgb(252,129,43)" fg:x="166" fg:w="1"/><text x="22.5618%" y="2095.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="22.3118%" y="2069" width="0.1344%" height="15" fill="rgb(248,183,27)" fg:x="166" fg:w="1"/><text x="22.5618%" y="2079.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="22.3118%" y="2053" width="0.1344%" height="15" fill="rgb(250,0,22)" fg:x="166" fg:w="1"/><text x="22.5618%" y="2063.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="22.3118%" y="2037" width="0.1344%" height="15" fill="rgb(213,166,10)" fg:x="166" fg:w="1"/><text x="22.5618%" y="2047.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="22.3118%" y="2021" width="0.1344%" height="15" fill="rgb(207,163,36)" fg:x="166" fg:w="1"/><text x="22.5618%" y="2031.50"></text></g><g><title>`0x7FFE2C8031A9 (3 samples, 0.40%)</title><rect x="22.4462%" y="2149" width="0.4032%" height="15" fill="rgb(208,122,22)" fg:x="167" fg:w="3"/><text x="22.6962%" y="2159.50"></text></g><g><title>`0x7FFE2F1A3414 (3 samples, 0.40%)</title><rect x="22.4462%" y="2133" width="0.4032%" height="15" fill="rgb(207,104,49)" fg:x="167" fg:w="3"/><text x="22.6962%" y="2143.50"></text></g><g><title>`0x7FFE2C802AA3 (1 samples, 0.13%)</title><rect x="22.8495%" y="2069" width="0.1344%" height="15" fill="rgb(248,211,50)" fg:x="170" fg:w="1"/><text x="23.0995%" y="2079.50"></text></g><g><title>`0x7FFE2F11991F (1 samples, 0.13%)</title><rect x="22.8495%" y="2053" width="0.1344%" height="15" fill="rgb(217,13,45)" fg:x="170" fg:w="1"/><text x="23.0995%" y="2063.50"></text></g><g><title>`0x7FFE2F055969 (1 samples, 0.13%)</title><rect x="22.8495%" y="2037" width="0.1344%" height="15" fill="rgb(211,216,49)" fg:x="170" fg:w="1"/><text x="23.0995%" y="2047.50"></text></g><g><title>`0x7FFE2F0577C1 (1 samples, 0.13%)</title><rect x="22.8495%" y="2021" width="0.1344%" height="15" fill="rgb(221,58,53)" fg:x="170" fg:w="1"/><text x="23.0995%" y="2031.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (17 samples, 2.28%)</title><rect x="21.2366%" y="2389" width="2.2849%" height="15" fill="rgb(220,112,41)" fg:x="158" fg:w="17"/><text x="21.4866%" y="2399.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (17 samples, 2.28%)</title><rect x="21.2366%" y="2373" width="2.2849%" height="15" fill="rgb(236,38,28)" fg:x="158" fg:w="17"/><text x="21.4866%" y="2383.50">f..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (15 samples, 2.02%)</title><rect x="21.5054%" y="2357" width="2.0161%" height="15" fill="rgb(227,195,22)" fg:x="160" fg:w="15"/><text x="21.7554%" y="2367.50">f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (15 samples, 2.02%)</title><rect x="21.5054%" y="2341" width="2.0161%" height="15" fill="rgb(214,55,33)" fg:x="160" fg:w="15"/><text x="21.7554%" y="2351.50">f..</text></g><g><title>fuzzit.exe`std::path::Path::is_dir (8 samples, 1.08%)</title><rect x="22.4462%" y="2325" width="1.0753%" height="15" fill="rgb(248,80,13)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2335.50"></text></g><g><title>fuzzit.exe`std::fs::metadata (8 samples, 1.08%)</title><rect x="22.4462%" y="2309" width="1.0753%" height="15" fill="rgb(238,52,6)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2319.50"></text></g><g><title>fuzzit.exe`core::result::Result::map (8 samples, 1.08%)</title><rect x="22.4462%" y="2293" width="1.0753%" height="15" fill="rgb(224,198,47)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2303.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (8 samples, 1.08%)</title><rect x="22.4462%" y="2277" width="1.0753%" height="15" fill="rgb(233,171,20)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2287.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (8 samples, 1.08%)</title><rect x="22.4462%" y="2261" width="1.0753%" height="15" fill="rgb(241,30,25)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2271.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (8 samples, 1.08%)</title><rect x="22.4462%" y="2245" width="1.0753%" height="15" fill="rgb(207,171,38)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2255.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (8 samples, 1.08%)</title><rect x="22.4462%" y="2229" width="1.0753%" height="15" fill="rgb(234,70,1)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2239.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (8 samples, 1.08%)</title><rect x="22.4462%" y="2213" width="1.0753%" height="15" fill="rgb(232,178,18)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2223.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (8 samples, 1.08%)</title><rect x="22.4462%" y="2197" width="1.0753%" height="15" fill="rgb(241,78,40)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2207.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (8 samples, 1.08%)</title><rect x="22.4462%" y="2181" width="1.0753%" height="15" fill="rgb(222,35,25)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2191.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (8 samples, 1.08%)</title><rect x="22.4462%" y="2165" width="1.0753%" height="15" fill="rgb(207,92,16)" fg:x="167" fg:w="8"/><text x="22.6962%" y="2175.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (5 samples, 0.67%)</title><rect x="22.8495%" y="2149" width="0.6720%" height="15" fill="rgb(216,59,51)" fg:x="170" fg:w="5"/><text x="23.0995%" y="2159.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (5 samples, 0.67%)</title><rect x="22.8495%" y="2133" width="0.6720%" height="15" fill="rgb(213,80,28)" fg:x="170" fg:w="5"/><text x="23.0995%" y="2143.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (5 samples, 0.67%)</title><rect x="22.8495%" y="2117" width="0.6720%" height="15" fill="rgb(220,93,7)" fg:x="170" fg:w="5"/><text x="23.0995%" y="2127.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (5 samples, 0.67%)</title><rect x="22.8495%" y="2101" width="0.6720%" height="15" fill="rgb(225,24,44)" fg:x="170" fg:w="5"/><text x="23.0995%" y="2111.50"></text></g><g><title>`0x7FFE2C8045C7 (5 samples, 0.67%)</title><rect x="22.8495%" y="2085" width="0.6720%" height="15" fill="rgb(243,74,40)" fg:x="170" fg:w="5"/><text x="23.0995%" y="2095.50"></text></g><g><title>`0x7FFE2C802CD7 (4 samples, 0.54%)</title><rect x="22.9839%" y="2069" width="0.5376%" height="15" fill="rgb(228,39,7)" fg:x="171" fg:w="4"/><text x="23.2339%" y="2079.50"></text></g><g><title>`0x7FFE2F1A3CD4 (4 samples, 0.54%)</title><rect x="22.9839%" y="2053" width="0.5376%" height="15" fill="rgb(227,79,8)" fg:x="171" fg:w="4"/><text x="23.2339%" y="2063.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.5215%" y="2181" width="0.1344%" height="15" fill="rgb(236,58,11)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2191.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.5215%" y="2165" width="0.1344%" height="15" fill="rgb(249,63,35)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2175.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="23.5215%" y="2149" width="0.1344%" height="15" fill="rgb(252,114,16)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2159.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="23.5215%" y="2133" width="0.1344%" height="15" fill="rgb(254,151,24)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2143.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.5215%" y="2117" width="0.1344%" height="15" fill="rgb(253,54,39)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2127.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search(std::path::PathBuf*, std::sync::mpsc::Sender (1 samples, 0.13%)</title><rect x="23.5215%" y="2101" width="0.1344%" height="15" fill="rgb(243,25,45)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2111.50"></text></g><g><title>fuzzit.exe`std::path::impl$45::deref (1 samples, 0.13%)</title><rect x="23.5215%" y="2085" width="0.1344%" height="15" fill="rgb(234,134,9)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2095.50"></text></g><g><title>fuzzit.exe`std::fs::metadata(ref$ (1 samples, 0.13%)</title><rect x="23.5215%" y="2069" width="0.1344%" height="15" fill="rgb(227,166,31)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2079.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 0.13%)</title><rect x="23.5215%" y="2053" width="0.1344%" height="15" fill="rgb(245,143,41)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2063.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="23.5215%" y="2037" width="0.1344%" height="15" fill="rgb(238,181,32)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2047.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="23.5215%" y="2021" width="0.1344%" height="15" fill="rgb(224,113,18)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2031.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="23.5215%" y="2005" width="0.1344%" height="15" fill="rgb(240,229,28)" fg:x="175" fg:w="1"/><text x="23.7715%" y="2015.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="23.5215%" y="1989" width="0.1344%" height="15" fill="rgb(250,185,3)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1999.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="23.5215%" y="1973" width="0.1344%" height="15" fill="rgb(212,59,25)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1983.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="23.5215%" y="1957" width="0.1344%" height="15" fill="rgb(221,87,20)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1967.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="23.5215%" y="1941" width="0.1344%" height="15" fill="rgb(213,74,28)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1951.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="23.5215%" y="1925" width="0.1344%" height="15" fill="rgb(224,132,34)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1935.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (1 samples, 0.13%)</title><rect x="23.5215%" y="1909" width="0.1344%" height="15" fill="rgb(222,101,24)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1919.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="23.5215%" y="1893" width="0.1344%" height="15" fill="rgb(254,142,4)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1903.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="23.5215%" y="1877" width="0.1344%" height="15" fill="rgb(230,229,49)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1887.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="23.5215%" y="1861" width="0.1344%" height="15" fill="rgb(238,70,47)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1871.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="23.5215%" y="1845" width="0.1344%" height="15" fill="rgb(231,160,17)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1855.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="23.5215%" y="1829" width="0.1344%" height="15" fill="rgb(218,68,53)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1839.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="23.5215%" y="1813" width="0.1344%" height="15" fill="rgb(236,111,10)" fg:x="175" fg:w="1"/><text x="23.7715%" y="1823.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (2 samples, 0.27%)</title><rect x="23.5215%" y="2357" width="0.2688%" height="15" fill="rgb(224,34,41)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2367.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.27%)</title><rect x="23.5215%" y="2341" width="0.2688%" height="15" fill="rgb(241,118,19)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2351.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (2 samples, 0.27%)</title><rect x="23.5215%" y="2325" width="0.2688%" height="15" fill="rgb(238,129,25)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2335.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (2 samples, 0.27%)</title><rect x="23.5215%" y="2309" width="0.2688%" height="15" fill="rgb(238,22,31)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2319.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(tuple$ (2 samples, 0.27%)</title><rect x="23.5215%" y="2293" width="0.2688%" height="15" fill="rgb(222,174,48)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2303.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="23.5215%" y="2277" width="0.2688%" height="15" fill="rgb(206,152,40)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2287.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="23.5215%" y="2261" width="0.2688%" height="15" fill="rgb(218,99,54)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2271.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="23.5215%" y="2245" width="0.2688%" height="15" fill="rgb(220,174,26)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2255.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="23.5215%" y="2229" width="0.2688%" height="15" fill="rgb(245,116,9)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2239.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (2 samples, 0.27%)</title><rect x="23.5215%" y="2213" width="0.2688%" height="15" fill="rgb(209,72,35)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2223.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="23.5215%" y="2197" width="0.2688%" height="15" fill="rgb(226,126,21)" fg:x="175" fg:w="2"/><text x="23.7715%" y="2207.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="2181" width="0.1344%" height="15" fill="rgb(227,192,1)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2191.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="2165" width="0.1344%" height="15" fill="rgb(237,180,29)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2175.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="2149" width="0.1344%" height="15" fill="rgb(230,197,35)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2159.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="2133" width="0.1344%" height="15" fill="rgb(246,193,31)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2143.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="2117" width="0.1344%" height="15" fill="rgb(241,36,4)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2127.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="23.6559%" y="2101" width="0.1344%" height="15" fill="rgb(241,130,17)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2111.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="2085" width="0.1344%" height="15" fill="rgb(206,137,32)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2095.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="2069" width="0.1344%" height="15" fill="rgb(237,228,51)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2079.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="2053" width="0.1344%" height="15" fill="rgb(243,6,42)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2063.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="2037" width="0.1344%" height="15" fill="rgb(251,74,28)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2047.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="2021" width="0.1344%" height="15" fill="rgb(218,20,49)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2031.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="2005" width="0.1344%" height="15" fill="rgb(238,28,14)" fg:x="176" fg:w="1"/><text x="23.9059%" y="2015.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="23.6559%" y="1989" width="0.1344%" height="15" fill="rgb(229,40,46)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1999.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1973" width="0.1344%" height="15" fill="rgb(244,195,20)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1957" width="0.1344%" height="15" fill="rgb(253,56,35)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1967.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1941" width="0.1344%" height="15" fill="rgb(210,149,44)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1951.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1925" width="0.1344%" height="15" fill="rgb(240,135,12)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1935.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1909" width="0.1344%" height="15" fill="rgb(251,24,50)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1919.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1893" width="0.1344%" height="15" fill="rgb(243,200,47)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1903.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="23.6559%" y="1877" width="0.1344%" height="15" fill="rgb(224,166,26)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1861" width="0.1344%" height="15" fill="rgb(233,0,47)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1871.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1845" width="0.1344%" height="15" fill="rgb(253,80,5)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1855.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1829" width="0.1344%" height="15" fill="rgb(214,133,25)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1839.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1813" width="0.1344%" height="15" fill="rgb(209,27,14)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1823.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1797" width="0.1344%" height="15" fill="rgb(219,102,51)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1807.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1781" width="0.1344%" height="15" fill="rgb(237,18,16)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1791.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="23.6559%" y="1765" width="0.1344%" height="15" fill="rgb(241,85,17)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1775.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1749" width="0.1344%" height="15" fill="rgb(236,90,42)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1759.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1733" width="0.1344%" height="15" fill="rgb(249,57,21)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1743.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1717" width="0.1344%" height="15" fill="rgb(243,12,36)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1727.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1701" width="0.1344%" height="15" fill="rgb(253,128,47)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1711.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1685" width="0.1344%" height="15" fill="rgb(207,33,20)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1695.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1669" width="0.1344%" height="15" fill="rgb(233,215,35)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1679.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="23.6559%" y="1653" width="0.1344%" height="15" fill="rgb(249,188,52)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1663.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1637" width="0.1344%" height="15" fill="rgb(225,12,32)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1647.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1621" width="0.1344%" height="15" fill="rgb(247,98,14)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1631.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1605" width="0.1344%" height="15" fill="rgb(247,219,48)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1615.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1589" width="0.1344%" height="15" fill="rgb(253,60,48)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1599.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1573" width="0.1344%" height="15" fill="rgb(245,15,52)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1583.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1557" width="0.1344%" height="15" fill="rgb(220,133,28)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1567.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="23.6559%" y="1541" width="0.1344%" height="15" fill="rgb(217,180,4)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1551.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.6559%" y="1525" width="0.1344%" height="15" fill="rgb(251,24,1)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1535.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1509" width="0.1344%" height="15" fill="rgb(212,185,49)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1519.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.6559%" y="1493" width="0.1344%" height="15" fill="rgb(215,175,22)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1503.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="23.6559%" y="1477" width="0.1344%" height="15" fill="rgb(250,205,14)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1487.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="23.6559%" y="1461" width="0.1344%" height="15" fill="rgb(225,211,22)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1471.50"></text></g><g><title>fuzzit.exe`std::path::Path::is_dir (1 samples, 0.13%)</title><rect x="23.6559%" y="1445" width="0.1344%" height="15" fill="rgb(251,179,42)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1455.50"></text></g><g><title>fuzzit.exe`std::fs::metadata (1 samples, 0.13%)</title><rect x="23.6559%" y="1429" width="0.1344%" height="15" fill="rgb(208,216,51)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1439.50"></text></g><g><title>fuzzit.exe`core::result::Result::map (1 samples, 0.13%)</title><rect x="23.6559%" y="1413" width="0.1344%" height="15" fill="rgb(235,36,11)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1423.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="23.6559%" y="1397" width="0.1344%" height="15" fill="rgb(213,189,28)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1407.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="23.6559%" y="1381" width="0.1344%" height="15" fill="rgb(227,203,42)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1391.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="23.6559%" y="1365" width="0.1344%" height="15" fill="rgb(244,72,36)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1375.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="23.6559%" y="1349" width="0.1344%" height="15" fill="rgb(213,53,17)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1359.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="23.6559%" y="1333" width="0.1344%" height="15" fill="rgb(207,167,3)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1343.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="23.6559%" y="1317" width="0.1344%" height="15" fill="rgb(216,98,30)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1327.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="23.6559%" y="1301" width="0.1344%" height="15" fill="rgb(236,123,15)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1311.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="23.6559%" y="1285" width="0.1344%" height="15" fill="rgb(248,81,50)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1295.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (1 samples, 0.13%)</title><rect x="23.6559%" y="1269" width="0.1344%" height="15" fill="rgb(214,120,4)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1279.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="23.6559%" y="1253" width="0.1344%" height="15" fill="rgb(208,179,34)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1263.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="23.6559%" y="1237" width="0.1344%" height="15" fill="rgb(227,140,7)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1247.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="23.6559%" y="1221" width="0.1344%" height="15" fill="rgb(214,22,6)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1231.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="23.6559%" y="1205" width="0.1344%" height="15" fill="rgb(207,137,27)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1215.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="23.6559%" y="1189" width="0.1344%" height="15" fill="rgb(210,8,46)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1199.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="23.6559%" y="1173" width="0.1344%" height="15" fill="rgb(240,16,54)" fg:x="176" fg:w="1"/><text x="23.9059%" y="1183.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (1 samples, 0.13%)</title><rect x="23.7903%" y="2245" width="0.1344%" height="15" fill="rgb(211,209,29)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2255.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.13%)</title><rect x="23.7903%" y="2229" width="0.1344%" height="15" fill="rgb(226,228,24)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2239.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (1 samples, 0.13%)</title><rect x="23.7903%" y="2213" width="0.1344%" height="15" fill="rgb(222,84,9)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2223.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (1 samples, 0.13%)</title><rect x="23.7903%" y="2197" width="0.1344%" height="15" fill="rgb(234,203,30)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2207.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(tuple$ (1 samples, 0.13%)</title><rect x="23.7903%" y="2181" width="0.1344%" height="15" fill="rgb(238,109,14)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2191.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.7903%" y="2165" width="0.1344%" height="15" fill="rgb(233,206,34)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2175.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.7903%" y="2149" width="0.1344%" height="15" fill="rgb(220,167,47)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2159.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.7903%" y="2133" width="0.1344%" height="15" fill="rgb(238,105,10)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2143.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.7903%" y="2117" width="0.1344%" height="15" fill="rgb(213,227,17)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2127.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="23.7903%" y="2101" width="0.1344%" height="15" fill="rgb(217,132,38)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2111.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="23.7903%" y="2085" width="0.1344%" height="15" fill="rgb(242,146,4)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2095.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.7903%" y="2069" width="0.1344%" height="15" fill="rgb(212,61,9)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2079.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.7903%" y="2053" width="0.1344%" height="15" fill="rgb(247,126,22)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2063.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="23.7903%" y="2037" width="0.1344%" height="15" fill="rgb(220,196,2)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2047.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="23.7903%" y="2021" width="0.1344%" height="15" fill="rgb(208,46,4)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2031.50"></text></g><g><title>fuzzit.exe`std::path::Path::is_dir (1 samples, 0.13%)</title><rect x="23.7903%" y="2005" width="0.1344%" height="15" fill="rgb(252,104,46)" fg:x="177" fg:w="1"/><text x="24.0403%" y="2015.50"></text></g><g><title>fuzzit.exe`std::fs::metadata (1 samples, 0.13%)</title><rect x="23.7903%" y="1989" width="0.1344%" height="15" fill="rgb(237,152,48)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1999.50"></text></g><g><title>fuzzit.exe`core::result::Result::map (1 samples, 0.13%)</title><rect x="23.7903%" y="1973" width="0.1344%" height="15" fill="rgb(221,59,37)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1983.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="23.7903%" y="1957" width="0.1344%" height="15" fill="rgb(209,202,51)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="23.7903%" y="1941" width="0.1344%" height="15" fill="rgb(228,81,30)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1951.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="23.7903%" y="1925" width="0.1344%" height="15" fill="rgb(227,42,39)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1935.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="23.7903%" y="1909" width="0.1344%" height="15" fill="rgb(221,26,2)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1919.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="23.7903%" y="1893" width="0.1344%" height="15" fill="rgb(254,61,31)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1903.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="23.7903%" y="1877" width="0.1344%" height="15" fill="rgb(222,173,38)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1887.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="23.7903%" y="1861" width="0.1344%" height="15" fill="rgb(218,50,12)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="23.7903%" y="1845" width="0.1344%" height="15" fill="rgb(223,88,40)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1855.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="23.7903%" y="1829" width="0.1344%" height="15" fill="rgb(237,54,19)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1839.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="23.7903%" y="1813" width="0.1344%" height="15" fill="rgb(251,129,25)" fg:x="177" fg:w="1"/><text x="24.0403%" y="1823.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.13%)</title><rect x="23.9247%" y="1989" width="0.1344%" height="15" fill="rgb(238,97,19)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1999.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search(std::path::PathBuf*, std::sync::mpsc::Sender (1 samples, 0.13%)</title><rect x="23.9247%" y="1973" width="0.1344%" height="15" fill="rgb(240,169,18)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1983.50"></text></g><g><title>fuzzit.exe`std::path::impl$45::deref (1 samples, 0.13%)</title><rect x="23.9247%" y="1957" width="0.1344%" height="15" fill="rgb(230,187,49)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1967.50"></text></g><g><title>fuzzit.exe`std::fs::metadata(ref$ (1 samples, 0.13%)</title><rect x="23.9247%" y="1941" width="0.1344%" height="15" fill="rgb(209,44,26)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1951.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 0.13%)</title><rect x="23.9247%" y="1925" width="0.1344%" height="15" fill="rgb(244,0,6)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1935.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="23.9247%" y="1909" width="0.1344%" height="15" fill="rgb(248,18,21)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1919.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="23.9247%" y="1893" width="0.1344%" height="15" fill="rgb(245,180,19)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1903.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="23.9247%" y="1877" width="0.1344%" height="15" fill="rgb(252,118,36)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1887.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="23.9247%" y="1861" width="0.1344%" height="15" fill="rgb(210,224,19)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1871.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="23.9247%" y="1845" width="0.1344%" height="15" fill="rgb(218,30,24)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1855.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="23.9247%" y="1829" width="0.1344%" height="15" fill="rgb(219,75,50)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1839.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="23.9247%" y="1813" width="0.1344%" height="15" fill="rgb(234,72,50)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="23.9247%" y="1797" width="0.1344%" height="15" fill="rgb(219,100,48)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (1 samples, 0.13%)</title><rect x="23.9247%" y="1781" width="0.1344%" height="15" fill="rgb(253,5,41)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="23.9247%" y="1765" width="0.1344%" height="15" fill="rgb(247,181,11)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1775.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="23.9247%" y="1749" width="0.1344%" height="15" fill="rgb(222,223,25)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1759.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="23.9247%" y="1733" width="0.1344%" height="15" fill="rgb(214,198,28)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1743.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="23.9247%" y="1717" width="0.1344%" height="15" fill="rgb(230,46,43)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1727.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="23.9247%" y="1701" width="0.1344%" height="15" fill="rgb(233,65,53)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1711.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="23.9247%" y="1685" width="0.1344%" height="15" fill="rgb(221,121,27)" fg:x="178" fg:w="1"/><text x="24.1747%" y="1695.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (2 samples, 0.27%)</title><rect x="23.9247%" y="2021" width="0.2688%" height="15" fill="rgb(247,70,47)" fg:x="178" fg:w="2"/><text x="24.1747%" y="2031.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (2 samples, 0.27%)</title><rect x="23.9247%" y="2005" width="0.2688%" height="15" fill="rgb(228,85,35)" fg:x="178" fg:w="2"/><text x="24.1747%" y="2015.50"></text></g><g><title>fuzzit.exe`std::path::Path::is_dir (1 samples, 0.13%)</title><rect x="24.0591%" y="1989" width="0.1344%" height="15" fill="rgb(209,50,18)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1999.50"></text></g><g><title>fuzzit.exe`std::fs::metadata (1 samples, 0.13%)</title><rect x="24.0591%" y="1973" width="0.1344%" height="15" fill="rgb(250,19,35)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1983.50"></text></g><g><title>fuzzit.exe`core::result::Result::map (1 samples, 0.13%)</title><rect x="24.0591%" y="1957" width="0.1344%" height="15" fill="rgb(253,107,29)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="24.0591%" y="1941" width="0.1344%" height="15" fill="rgb(252,179,29)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1951.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="24.0591%" y="1925" width="0.1344%" height="15" fill="rgb(238,194,6)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1935.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="24.0591%" y="1909" width="0.1344%" height="15" fill="rgb(238,164,29)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1919.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="24.0591%" y="1893" width="0.1344%" height="15" fill="rgb(224,25,9)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1903.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="24.0591%" y="1877" width="0.1344%" height="15" fill="rgb(244,153,23)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1887.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="24.0591%" y="1861" width="0.1344%" height="15" fill="rgb(212,203,14)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1871.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="24.0591%" y="1845" width="0.1344%" height="15" fill="rgb(220,164,20)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="24.0591%" y="1829" width="0.1344%" height="15" fill="rgb(222,203,48)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (1 samples, 0.13%)</title><rect x="24.0591%" y="1813" width="0.1344%" height="15" fill="rgb(215,159,22)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="24.0591%" y="1797" width="0.1344%" height="15" fill="rgb(216,183,47)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1807.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="24.0591%" y="1781" width="0.1344%" height="15" fill="rgb(229,195,25)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1791.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="24.0591%" y="1765" width="0.1344%" height="15" fill="rgb(224,132,51)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1775.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="24.0591%" y="1749" width="0.1344%" height="15" fill="rgb(240,63,7)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1759.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="24.0591%" y="1733" width="0.1344%" height="15" fill="rgb(249,182,41)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1743.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="24.0591%" y="1717" width="0.1344%" height="15" fill="rgb(243,47,26)" fg:x="179" fg:w="1"/><text x="24.3091%" y="1727.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (3 samples, 0.40%)</title><rect x="23.9247%" y="2053" width="0.4032%" height="15" fill="rgb(233,48,2)" fg:x="178" fg:w="3"/><text x="24.1747%" y="2063.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (3 samples, 0.40%)</title><rect x="23.9247%" y="2037" width="0.4032%" height="15" fill="rgb(244,165,34)" fg:x="178" fg:w="3"/><text x="24.1747%" y="2047.50"></text></g><g><title>fuzzit.exe`std::sync::poison::mutex::Mutex&lt;core::iter::adapters::fuse::Fuse&lt;std::fs::ReadDir&gt; &gt;::lock (1 samples, 0.13%)</title><rect x="24.1935%" y="2021" width="0.1344%" height="15" fill="rgb(207,89,7)" fg:x="180" fg:w="1"/><text x="24.4435%" y="2031.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.13%)</title><rect x="24.1935%" y="2005" width="0.1344%" height="15" fill="rgb(244,117,36)" fg:x="180" fg:w="1"/><text x="24.4435%" y="2015.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (1 samples, 0.13%)</title><rect x="24.3280%" y="1909" width="0.1344%" height="15" fill="rgb(226,144,34)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1919.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.13%)</title><rect x="24.3280%" y="1893" width="0.1344%" height="15" fill="rgb(213,23,19)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (1 samples, 0.13%)</title><rect x="24.3280%" y="1877" width="0.1344%" height="15" fill="rgb(217,75,12)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (1 samples, 0.13%)</title><rect x="24.3280%" y="1861" width="0.1344%" height="15" fill="rgb(224,159,17)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1871.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1845" width="0.1344%" height="15" fill="rgb(217,118,1)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1855.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1829" width="0.1344%" height="15" fill="rgb(232,180,48)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1839.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1813" width="0.1344%" height="15" fill="rgb(230,27,33)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1823.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1797" width="0.1344%" height="15" fill="rgb(205,31,21)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1807.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1781" width="0.1344%" height="15" fill="rgb(253,59,4)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1791.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.3280%" y="1765" width="0.1344%" height="15" fill="rgb(224,201,9)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1775.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1749" width="0.1344%" height="15" fill="rgb(229,206,30)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1759.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1733" width="0.1344%" height="15" fill="rgb(212,67,47)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1743.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1717" width="0.1344%" height="15" fill="rgb(211,96,50)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1727.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1701" width="0.1344%" height="15" fill="rgb(252,114,18)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1711.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1685" width="0.1344%" height="15" fill="rgb(223,58,37)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1695.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1669" width="0.1344%" height="15" fill="rgb(237,70,4)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1679.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.3280%" y="1653" width="0.1344%" height="15" fill="rgb(244,85,46)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1663.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1637" width="0.1344%" height="15" fill="rgb(223,39,52)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1647.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1621" width="0.1344%" height="15" fill="rgb(218,200,14)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1631.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1605" width="0.1344%" height="15" fill="rgb(208,171,16)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1615.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1589" width="0.1344%" height="15" fill="rgb(234,200,18)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1599.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1573" width="0.1344%" height="15" fill="rgb(228,45,11)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1583.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1557" width="0.1344%" height="15" fill="rgb(237,182,11)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1567.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.3280%" y="1541" width="0.1344%" height="15" fill="rgb(241,175,49)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1551.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1525" width="0.1344%" height="15" fill="rgb(247,38,35)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1535.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1509" width="0.1344%" height="15" fill="rgb(228,39,49)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1519.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1493" width="0.1344%" height="15" fill="rgb(226,101,26)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1503.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1477" width="0.1344%" height="15" fill="rgb(206,141,19)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1487.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1461" width="0.1344%" height="15" fill="rgb(211,200,13)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1471.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1445" width="0.1344%" height="15" fill="rgb(241,121,6)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1455.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.3280%" y="1429" width="0.1344%" height="15" fill="rgb(234,221,29)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1439.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1413" width="0.1344%" height="15" fill="rgb(229,136,5)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1423.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1397" width="0.1344%" height="15" fill="rgb(238,36,11)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1407.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1381" width="0.1344%" height="15" fill="rgb(251,55,41)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1391.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1365" width="0.1344%" height="15" fill="rgb(242,34,40)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1375.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1349" width="0.1344%" height="15" fill="rgb(215,42,17)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1359.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1333" width="0.1344%" height="15" fill="rgb(207,44,46)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1343.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.3280%" y="1317" width="0.1344%" height="15" fill="rgb(211,206,28)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1327.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1301" width="0.1344%" height="15" fill="rgb(237,167,16)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1311.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1285" width="0.1344%" height="15" fill="rgb(233,66,6)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1295.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1269" width="0.1344%" height="15" fill="rgb(246,123,29)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1279.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1253" width="0.1344%" height="15" fill="rgb(209,62,40)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1263.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1237" width="0.1344%" height="15" fill="rgb(218,4,25)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1247.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1221" width="0.1344%" height="15" fill="rgb(253,91,49)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1231.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.3280%" y="1205" width="0.1344%" height="15" fill="rgb(228,155,29)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1215.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.3280%" y="1189" width="0.1344%" height="15" fill="rgb(243,57,37)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1199.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1173" width="0.1344%" height="15" fill="rgb(244,167,17)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1183.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.3280%" y="1157" width="0.1344%" height="15" fill="rgb(207,181,38)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1167.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="24.3280%" y="1141" width="0.1344%" height="15" fill="rgb(211,8,23)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1151.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="24.3280%" y="1125" width="0.1344%" height="15" fill="rgb(235,11,44)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1135.50"></text></g><g><title>fuzzit.exe`std::path::Path::is_dir (1 samples, 0.13%)</title><rect x="24.3280%" y="1109" width="0.1344%" height="15" fill="rgb(248,18,52)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1119.50"></text></g><g><title>fuzzit.exe`std::fs::metadata (1 samples, 0.13%)</title><rect x="24.3280%" y="1093" width="0.1344%" height="15" fill="rgb(208,4,7)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1103.50"></text></g><g><title>fuzzit.exe`core::result::Result::map (1 samples, 0.13%)</title><rect x="24.3280%" y="1077" width="0.1344%" height="15" fill="rgb(240,17,39)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1087.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="24.3280%" y="1061" width="0.1344%" height="15" fill="rgb(207,170,3)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1071.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="24.3280%" y="1045" width="0.1344%" height="15" fill="rgb(236,100,52)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1055.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="24.3280%" y="1029" width="0.1344%" height="15" fill="rgb(246,78,51)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1039.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="24.3280%" y="1013" width="0.1344%" height="15" fill="rgb(211,17,15)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1023.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="24.3280%" y="997" width="0.1344%" height="15" fill="rgb(209,59,46)" fg:x="181" fg:w="1"/><text x="24.5780%" y="1007.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="24.3280%" y="981" width="0.1344%" height="15" fill="rgb(210,92,25)" fg:x="181" fg:w="1"/><text x="24.5780%" y="991.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="24.3280%" y="965" width="0.1344%" height="15" fill="rgb(238,174,52)" fg:x="181" fg:w="1"/><text x="24.5780%" y="975.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="24.3280%" y="949" width="0.1344%" height="15" fill="rgb(230,73,7)" fg:x="181" fg:w="1"/><text x="24.5780%" y="959.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (1 samples, 0.13%)</title><rect x="24.3280%" y="933" width="0.1344%" height="15" fill="rgb(243,124,40)" fg:x="181" fg:w="1"/><text x="24.5780%" y="943.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="24.3280%" y="917" width="0.1344%" height="15" fill="rgb(244,170,11)" fg:x="181" fg:w="1"/><text x="24.5780%" y="927.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="24.3280%" y="901" width="0.1344%" height="15" fill="rgb(207,114,54)" fg:x="181" fg:w="1"/><text x="24.5780%" y="911.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="24.3280%" y="885" width="0.1344%" height="15" fill="rgb(205,42,20)" fg:x="181" fg:w="1"/><text x="24.5780%" y="895.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="24.3280%" y="869" width="0.1344%" height="15" fill="rgb(230,30,28)" fg:x="181" fg:w="1"/><text x="24.5780%" y="879.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="24.3280%" y="853" width="0.1344%" height="15" fill="rgb(205,73,54)" fg:x="181" fg:w="1"/><text x="24.5780%" y="863.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="24.3280%" y="837" width="0.1344%" height="15" fill="rgb(254,227,23)" fg:x="181" fg:w="1"/><text x="24.5780%" y="847.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.4624%" y="1829" width="0.1344%" height="15" fill="rgb(228,202,34)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1839.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.4624%" y="1813" width="0.1344%" height="15" fill="rgb(222,225,37)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1823.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="24.4624%" y="1797" width="0.1344%" height="15" fill="rgb(221,14,54)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1807.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="24.4624%" y="1781" width="0.1344%" height="15" fill="rgb(254,102,2)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1791.50"></text></g><g><title>fuzzit.exe`std::path::Path::is_dir (1 samples, 0.13%)</title><rect x="24.4624%" y="1765" width="0.1344%" height="15" fill="rgb(232,104,17)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1775.50"></text></g><g><title>fuzzit.exe`std::fs::metadata (1 samples, 0.13%)</title><rect x="24.4624%" y="1749" width="0.1344%" height="15" fill="rgb(250,220,14)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1759.50"></text></g><g><title>fuzzit.exe`core::result::Result::map (1 samples, 0.13%)</title><rect x="24.4624%" y="1733" width="0.1344%" height="15" fill="rgb(241,158,9)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="24.4624%" y="1717" width="0.1344%" height="15" fill="rgb(246,9,43)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="24.4624%" y="1701" width="0.1344%" height="15" fill="rgb(206,73,33)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1711.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="24.4624%" y="1685" width="0.1344%" height="15" fill="rgb(222,79,8)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1695.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="24.4624%" y="1669" width="0.1344%" height="15" fill="rgb(234,8,54)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1679.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="24.4624%" y="1653" width="0.1344%" height="15" fill="rgb(209,134,38)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1663.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="24.4624%" y="1637" width="0.1344%" height="15" fill="rgb(230,127,29)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1647.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="24.4624%" y="1621" width="0.1344%" height="15" fill="rgb(242,44,41)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="24.4624%" y="1605" width="0.1344%" height="15" fill="rgb(222,56,43)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1615.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="24.4624%" y="1589" width="0.1344%" height="15" fill="rgb(238,39,47)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1599.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="24.4624%" y="1573" width="0.1344%" height="15" fill="rgb(226,79,43)" fg:x="182" fg:w="1"/><text x="24.7124%" y="1583.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (1 samples, 0.13%)</title><rect x="24.5968%" y="1269" width="0.1344%" height="15" fill="rgb(242,105,53)" fg:x="183" fg:w="1"/><text x="24.8468%" y="1279.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.13%)</title><rect x="24.5968%" y="1253" width="0.1344%" height="15" fill="rgb(251,132,46)" fg:x="183" fg:w="1"/><text x="24.8468%" y="1263.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::no_work_found (1 samples, 0.13%)</title><rect x="24.5968%" y="1237" width="0.1344%" height="15" fill="rgb(231,77,14)" fg:x="183" fg:w="1"/><text x="24.8468%" y="1247.50"></text></g><g><title>`0x7FFE2C89696B (1 samples, 0.13%)</title><rect x="24.5968%" y="1221" width="0.1344%" height="15" fill="rgb(240,135,9)" fg:x="183" fg:w="1"/><text x="24.8468%" y="1231.50"></text></g><g><title>`0x7FFE2F10E134 (1 samples, 0.13%)</title><rect x="24.5968%" y="1205" width="0.1344%" height="15" fill="rgb(248,109,14)" fg:x="183" fg:w="1"/><text x="24.8468%" y="1215.50"></text></g><g><title>`0x7FFE2F1A38B4 (1 samples, 0.13%)</title><rect x="24.5968%" y="1189" width="0.1344%" height="15" fill="rgb(227,146,52)" fg:x="183" fg:w="1"/><text x="24.8468%" y="1199.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="24.5968%" y="1621" width="0.2688%" height="15" fill="rgb(232,54,3)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1631.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="24.5968%" y="1605" width="0.2688%" height="15" fill="rgb(229,201,43)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1615.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="24.5968%" y="1589" width="0.2688%" height="15" fill="rgb(252,161,33)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1599.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="24.5968%" y="1573" width="0.2688%" height="15" fill="rgb(226,146,40)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1583.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::vec::Vec (2 samples, 0.27%)</title><rect x="24.5968%" y="1557" width="0.2688%" height="15" fill="rgb(219,47,25)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1567.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (2 samples, 0.27%)</title><rect x="24.5968%" y="1541" width="0.2688%" height="15" fill="rgb(250,135,13)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1551.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (2 samples, 0.27%)</title><rect x="24.5968%" y="1525" width="0.2688%" height="15" fill="rgb(219,229,18)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1535.50"></text></g><g><title>fuzzit.exe`rayon::iter::extend::impl$33::par_extend&lt;tuple$&lt;&gt;,rayon::iter::map::Map&lt;rayon::iter::par_bridge::IterBridge&lt;std::fs::ReadDir&gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;*, rayon::iter::map::Map&lt;rayon::iter::par_bridge::IterBridge (2 samples, 0.27%)</title><rect x="24.5968%" y="1509" width="0.2688%" height="15" fill="rgb(217,152,27)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1519.50"></text></g><g><title>fuzzit.exe`alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::iter (2 samples, 0.27%)</title><rect x="24.5968%" y="1493" width="0.2688%" height="15" fill="rgb(225,71,47)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1503.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$1::drive_unindexed&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterBridge&lt;std::fs::ReadDir&gt;, rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="24.5968%" y="1477" width="0.2688%" height="15" fill="rgb(220,139,14)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1487.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="24.5968%" y="1461" width="0.2688%" height="15" fill="rgb(247,54,32)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1471.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="24.5968%" y="1445" width="0.2688%" height="15" fill="rgb(252,131,39)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1455.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="24.5968%" y="1429" width="0.2688%" height="15" fill="rgb(210,108,39)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1439.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::ops::range::Range&lt;usize&gt;,rayon::iter::par_bridge::impl$1::drive_unindexed::closure_env$0&lt;std::fs::ReadDir,rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="24.5968%" y="1413" width="0.2688%" height="15" fill="rgb(205,23,29)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1423.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity (2 samples, 0.27%)</title><rect x="24.5968%" y="1397" width="0.2688%" height="15" fill="rgb(246,139,46)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1407.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.27%)</title><rect x="24.5968%" y="1381" width="0.2688%" height="15" fill="rgb(250,81,26)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1391.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec&lt;core::sync::atomic::AtomicBool,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.27%)</title><rect x="24.5968%" y="1365" width="0.2688%" height="15" fill="rgb(214,104,7)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1375.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.27%)</title><rect x="24.5968%" y="1349" width="0.2688%" height="15" fill="rgb(233,189,8)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1359.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.27%)</title><rect x="24.5968%" y="1333" width="0.2688%" height="15" fill="rgb(228,141,17)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1343.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (2 samples, 0.27%)</title><rect x="24.5968%" y="1317" width="0.2688%" height="15" fill="rgb(247,157,1)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1327.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (2 samples, 0.27%)</title><rect x="24.5968%" y="1301" width="0.2688%" height="15" fill="rgb(249,225,5)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1311.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (2 samples, 0.27%)</title><rect x="24.5968%" y="1285" width="0.2688%" height="15" fill="rgb(242,55,13)" fg:x="183" fg:w="2"/><text x="24.8468%" y="1295.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1269" width="0.1344%" height="15" fill="rgb(230,49,50)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1279.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1253" width="0.1344%" height="15" fill="rgb(241,111,38)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1263.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1237" width="0.1344%" height="15" fill="rgb(252,155,4)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1247.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.7312%" y="1221" width="0.1344%" height="15" fill="rgb(212,69,32)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1231.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1205" width="0.1344%" height="15" fill="rgb(243,107,47)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1215.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="1189" width="0.1344%" height="15" fill="rgb(247,130,12)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1199.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="1173" width="0.1344%" height="15" fill="rgb(233,74,16)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1183.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1157" width="0.1344%" height="15" fill="rgb(208,58,18)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1167.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1141" width="0.1344%" height="15" fill="rgb(242,225,1)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1151.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1125" width="0.1344%" height="15" fill="rgb(249,39,40)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1135.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.7312%" y="1109" width="0.1344%" height="15" fill="rgb(207,72,44)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1119.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1093" width="0.1344%" height="15" fill="rgb(215,193,12)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1103.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="1077" width="0.1344%" height="15" fill="rgb(248,41,39)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1087.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="1061" width="0.1344%" height="15" fill="rgb(253,85,4)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1071.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1045" width="0.1344%" height="15" fill="rgb(243,70,31)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1055.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1029" width="0.1344%" height="15" fill="rgb(253,195,26)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1039.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="1013" width="0.1344%" height="15" fill="rgb(243,42,11)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1023.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.7312%" y="997" width="0.1344%" height="15" fill="rgb(239,66,17)" fg:x="184" fg:w="1"/><text x="24.9812%" y="1007.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="981" width="0.1344%" height="15" fill="rgb(217,132,21)" fg:x="184" fg:w="1"/><text x="24.9812%" y="991.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="965" width="0.1344%" height="15" fill="rgb(252,202,21)" fg:x="184" fg:w="1"/><text x="24.9812%" y="975.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="949" width="0.1344%" height="15" fill="rgb(233,98,36)" fg:x="184" fg:w="1"/><text x="24.9812%" y="959.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="933" width="0.1344%" height="15" fill="rgb(216,153,54)" fg:x="184" fg:w="1"/><text x="24.9812%" y="943.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="917" width="0.1344%" height="15" fill="rgb(250,99,7)" fg:x="184" fg:w="1"/><text x="24.9812%" y="927.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="901" width="0.1344%" height="15" fill="rgb(207,56,50)" fg:x="184" fg:w="1"/><text x="24.9812%" y="911.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.7312%" y="885" width="0.1344%" height="15" fill="rgb(244,61,34)" fg:x="184" fg:w="1"/><text x="24.9812%" y="895.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="869" width="0.1344%" height="15" fill="rgb(241,50,38)" fg:x="184" fg:w="1"/><text x="24.9812%" y="879.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="853" width="0.1344%" height="15" fill="rgb(212,166,30)" fg:x="184" fg:w="1"/><text x="24.9812%" y="863.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="837" width="0.1344%" height="15" fill="rgb(249,127,32)" fg:x="184" fg:w="1"/><text x="24.9812%" y="847.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="821" width="0.1344%" height="15" fill="rgb(209,103,0)" fg:x="184" fg:w="1"/><text x="24.9812%" y="831.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="805" width="0.1344%" height="15" fill="rgb(238,209,51)" fg:x="184" fg:w="1"/><text x="24.9812%" y="815.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="789" width="0.1344%" height="15" fill="rgb(237,56,23)" fg:x="184" fg:w="1"/><text x="24.9812%" y="799.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (1 samples, 0.13%)</title><rect x="24.7312%" y="773" width="0.1344%" height="15" fill="rgb(215,153,46)" fg:x="184" fg:w="1"/><text x="24.9812%" y="783.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (1 samples, 0.13%)</title><rect x="24.7312%" y="757" width="0.1344%" height="15" fill="rgb(224,49,31)" fg:x="184" fg:w="1"/><text x="24.9812%" y="767.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="741" width="0.1344%" height="15" fill="rgb(250,18,42)" fg:x="184" fg:w="1"/><text x="24.9812%" y="751.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="725" width="0.1344%" height="15" fill="rgb(215,176,39)" fg:x="184" fg:w="1"/><text x="24.9812%" y="735.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="24.7312%" y="709" width="0.1344%" height="15" fill="rgb(223,77,29)" fg:x="184" fg:w="1"/><text x="24.9812%" y="719.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (1 samples, 0.13%)</title><rect x="24.7312%" y="693" width="0.1344%" height="15" fill="rgb(234,94,52)" fg:x="184" fg:w="1"/><text x="24.9812%" y="703.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.13%)</title><rect x="24.7312%" y="677" width="0.1344%" height="15" fill="rgb(220,154,50)" fg:x="184" fg:w="1"/><text x="24.9812%" y="687.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search(std::path::PathBuf*, std::sync::mpsc::Sender (1 samples, 0.13%)</title><rect x="24.7312%" y="661" width="0.1344%" height="15" fill="rgb(212,11,10)" fg:x="184" fg:w="1"/><text x="24.9812%" y="671.50"></text></g><g><title>fuzzit.exe`std::path::impl$45::deref (1 samples, 0.13%)</title><rect x="24.7312%" y="645" width="0.1344%" height="15" fill="rgb(205,166,19)" fg:x="184" fg:w="1"/><text x="24.9812%" y="655.50"></text></g><g><title>fuzzit.exe`std::fs::metadata(ref$ (1 samples, 0.13%)</title><rect x="24.7312%" y="629" width="0.1344%" height="15" fill="rgb(244,198,16)" fg:x="184" fg:w="1"/><text x="24.9812%" y="639.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 0.13%)</title><rect x="24.7312%" y="613" width="0.1344%" height="15" fill="rgb(219,69,12)" fg:x="184" fg:w="1"/><text x="24.9812%" y="623.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="24.7312%" y="597" width="0.1344%" height="15" fill="rgb(245,30,7)" fg:x="184" fg:w="1"/><text x="24.9812%" y="607.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="24.7312%" y="581" width="0.1344%" height="15" fill="rgb(218,221,48)" fg:x="184" fg:w="1"/><text x="24.9812%" y="591.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="24.7312%" y="565" width="0.1344%" height="15" fill="rgb(216,66,15)" fg:x="184" fg:w="1"/><text x="24.9812%" y="575.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="24.7312%" y="549" width="0.1344%" height="15" fill="rgb(226,122,50)" fg:x="184" fg:w="1"/><text x="24.9812%" y="559.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="24.7312%" y="533" width="0.1344%" height="15" fill="rgb(239,156,16)" fg:x="184" fg:w="1"/><text x="24.9812%" y="543.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="24.7312%" y="517" width="0.1344%" height="15" fill="rgb(224,27,38)" fg:x="184" fg:w="1"/><text x="24.9812%" y="527.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="24.7312%" y="501" width="0.1344%" height="15" fill="rgb(224,39,27)" fg:x="184" fg:w="1"/><text x="24.9812%" y="511.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="24.7312%" y="485" width="0.1344%" height="15" fill="rgb(215,92,29)" fg:x="184" fg:w="1"/><text x="24.9812%" y="495.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (1 samples, 0.13%)</title><rect x="24.7312%" y="469" width="0.1344%" height="15" fill="rgb(207,159,16)" fg:x="184" fg:w="1"/><text x="24.9812%" y="479.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="24.7312%" y="453" width="0.1344%" height="15" fill="rgb(238,163,47)" fg:x="184" fg:w="1"/><text x="24.9812%" y="463.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="24.7312%" y="437" width="0.1344%" height="15" fill="rgb(219,91,49)" fg:x="184" fg:w="1"/><text x="24.9812%" y="447.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="24.7312%" y="421" width="0.1344%" height="15" fill="rgb(227,167,31)" fg:x="184" fg:w="1"/><text x="24.9812%" y="431.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="24.7312%" y="405" width="0.1344%" height="15" fill="rgb(234,80,54)" fg:x="184" fg:w="1"/><text x="24.9812%" y="415.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="24.7312%" y="389" width="0.1344%" height="15" fill="rgb(212,114,2)" fg:x="184" fg:w="1"/><text x="24.9812%" y="399.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="24.7312%" y="373" width="0.1344%" height="15" fill="rgb(234,50,24)" fg:x="184" fg:w="1"/><text x="24.9812%" y="383.50"></text></g><g><title>fuzzit.exe`std::fs::read_dir (2 samples, 0.27%)</title><rect x="24.8656%" y="1621" width="0.2688%" height="15" fill="rgb(221,68,8)" fg:x="185" fg:w="2"/><text x="25.1156%" y="1631.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::sys::fs::windows::ReadDir,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::fs::windows::ReadDir,std::io::error::Error&gt; &gt;, std::fs::ReadDir (*) (2 samples, 0.27%)</title><rect x="24.8656%" y="1605" width="0.2688%" height="15" fill="rgb(254,180,31)" fg:x="185" fg:w="2"/><text x="25.1156%" y="1615.50"></text></g><g><title>fuzzit.exe`std::sys::fs::read_dir (2 samples, 0.27%)</title><rect x="24.8656%" y="1589" width="0.2688%" height="15" fill="rgb(247,130,50)" fg:x="185" fg:w="2"/><text x="25.1156%" y="1599.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::readdir (2 samples, 0.27%)</title><rect x="24.8656%" y="1573" width="0.2688%" height="15" fill="rgb(211,109,4)" fg:x="185" fg:w="2"/><text x="25.1156%" y="1583.50"></text></g><g><title>`0x7FFE2C81D5D3 (2 samples, 0.27%)</title><rect x="24.8656%" y="1557" width="0.2688%" height="15" fill="rgb(238,50,21)" fg:x="185" fg:w="2"/><text x="25.1156%" y="1567.50"></text></g><g><title>`0x7FFE2C81D8D4 (2 samples, 0.27%)</title><rect x="24.8656%" y="1541" width="0.2688%" height="15" fill="rgb(225,57,45)" fg:x="185" fg:w="2"/><text x="25.1156%" y="1551.50"></text></g><g><title>`0x7FFE2F1A5BC4 (2 samples, 0.27%)</title><rect x="24.8656%" y="1525" width="0.2688%" height="15" fill="rgb(209,196,50)" fg:x="185" fg:w="2"/><text x="25.1156%" y="1535.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result&lt;tuple$ (5 samples, 0.67%)</title><rect x="24.5968%" y="1653" width="0.6720%" height="15" fill="rgb(242,140,13)" fg:x="183" fg:w="5"/><text x="24.8468%" y="1663.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search(std::path::PathBuf*, std::sync::mpsc::Sender (5 samples, 0.67%)</title><rect x="24.5968%" y="1637" width="0.6720%" height="15" fill="rgb(217,111,7)" fg:x="183" fg:w="5"/><text x="24.8468%" y="1647.50"></text></g><g><title>fuzzit.exe`std::path::impl$45::deref (1 samples, 0.13%)</title><rect x="25.1344%" y="1621" width="0.1344%" height="15" fill="rgb(253,193,51)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1631.50"></text></g><g><title>fuzzit.exe`std::fs::metadata(ref$ (1 samples, 0.13%)</title><rect x="25.1344%" y="1605" width="0.1344%" height="15" fill="rgb(252,70,29)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1615.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::fs::windows::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (1 samples, 0.13%)</title><rect x="25.1344%" y="1589" width="0.1344%" height="15" fill="rgb(232,127,12)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1599.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (1 samples, 0.13%)</title><rect x="25.1344%" y="1573" width="0.1344%" height="15" fill="rgb(211,180,21)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1583.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (1 samples, 0.13%)</title><rect x="25.1344%" y="1557" width="0.1344%" height="15" fill="rgb(229,72,13)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1567.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="25.1344%" y="1541" width="0.1344%" height="15" fill="rgb(240,211,49)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1551.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="25.1344%" y="1525" width="0.1344%" height="15" fill="rgb(219,149,40)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1535.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="25.1344%" y="1509" width="0.1344%" height="15" fill="rgb(210,127,46)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1519.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="25.1344%" y="1493" width="0.1344%" height="15" fill="rgb(220,106,7)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1503.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="25.1344%" y="1477" width="0.1344%" height="15" fill="rgb(249,31,22)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1487.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (1 samples, 0.13%)</title><rect x="25.1344%" y="1461" width="0.1344%" height="15" fill="rgb(253,1,49)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1471.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="25.1344%" y="1445" width="0.1344%" height="15" fill="rgb(227,144,33)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1455.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="25.1344%" y="1429" width="0.1344%" height="15" fill="rgb(249,163,44)" fg:x="187" fg:w="1"/><text x="25.3844%" y="1439.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="25.2688%" y="1477" width="0.1344%" height="15" fill="rgb(234,15,39)" fg:x="188" fg:w="1"/><text x="25.5188%" y="1487.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="25.2688%" y="1461" width="0.1344%" height="15" fill="rgb(207,66,16)" fg:x="188" fg:w="1"/><text x="25.5188%" y="1471.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(tuple$ (32 samples, 4.30%)</title><rect x="21.2366%" y="2501" width="4.3011%" height="15" fill="rgb(233,112,24)" fg:x="158" fg:w="32"/><text x="21.4866%" y="2511.50">fuzzi..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (32 samples, 4.30%)</title><rect x="21.2366%" y="2485" width="4.3011%" height="15" fill="rgb(230,90,22)" fg:x="158" fg:w="32"/><text x="21.4866%" y="2495.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (32 samples, 4.30%)</title><rect x="21.2366%" y="2469" width="4.3011%" height="15" fill="rgb(229,61,13)" fg:x="158" fg:w="32"/><text x="21.4866%" y="2479.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (32 samples, 4.30%)</title><rect x="21.2366%" y="2453" width="4.3011%" height="15" fill="rgb(225,57,24)" fg:x="158" fg:w="32"/><text x="21.4866%" y="2463.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (32 samples, 4.30%)</title><rect x="21.2366%" y="2437" width="4.3011%" height="15" fill="rgb(208,169,48)" fg:x="158" fg:w="32"/><text x="21.4866%" y="2447.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (32 samples, 4.30%)</title><rect x="21.2366%" y="2421" width="4.3011%" height="15" fill="rgb(244,218,51)" fg:x="158" fg:w="32"/><text x="21.4866%" y="2431.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (32 samples, 4.30%)</title><rect x="21.2366%" y="2405" width="4.3011%" height="15" fill="rgb(214,148,10)" fg:x="158" fg:w="32"/><text x="21.4866%" y="2415.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (15 samples, 2.02%)</title><rect x="23.5215%" y="2389" width="2.0161%" height="15" fill="rgb(225,174,27)" fg:x="175" fg:w="15"/><text x="23.7715%" y="2399.50">f..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (15 samples, 2.02%)</title><rect x="23.5215%" y="2373" width="2.0161%" height="15" fill="rgb(230,96,26)" fg:x="175" fg:w="15"/><text x="23.7715%" y="2383.50">f..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (13 samples, 1.75%)</title><rect x="23.7903%" y="2357" width="1.7473%" height="15" fill="rgb(232,10,30)" fg:x="177" fg:w="13"/><text x="24.0403%" y="2367.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (13 samples, 1.75%)</title><rect x="23.7903%" y="2341" width="1.7473%" height="15" fill="rgb(222,8,50)" fg:x="177" fg:w="13"/><text x="24.0403%" y="2351.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (13 samples, 1.75%)</title><rect x="23.7903%" y="2325" width="1.7473%" height="15" fill="rgb(213,81,27)" fg:x="177" fg:w="13"/><text x="24.0403%" y="2335.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (13 samples, 1.75%)</title><rect x="23.7903%" y="2309" width="1.7473%" height="15" fill="rgb(245,50,10)" fg:x="177" fg:w="13"/><text x="24.0403%" y="2319.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (13 samples, 1.75%)</title><rect x="23.7903%" y="2293" width="1.7473%" height="15" fill="rgb(216,100,18)" fg:x="177" fg:w="13"/><text x="24.0403%" y="2303.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (13 samples, 1.75%)</title><rect x="23.7903%" y="2277" width="1.7473%" height="15" fill="rgb(236,147,54)" fg:x="177" fg:w="13"/><text x="24.0403%" y="2287.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (13 samples, 1.75%)</title><rect x="23.7903%" y="2261" width="1.7473%" height="15" fill="rgb(205,143,26)" fg:x="177" fg:w="13"/><text x="24.0403%" y="2271.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (12 samples, 1.61%)</title><rect x="23.9247%" y="2245" width="1.6129%" height="15" fill="rgb(236,26,9)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2255.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (12 samples, 1.61%)</title><rect x="23.9247%" y="2229" width="1.6129%" height="15" fill="rgb(221,165,53)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2239.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (12 samples, 1.61%)</title><rect x="23.9247%" y="2213" width="1.6129%" height="15" fill="rgb(214,110,17)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2223.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.61%)</title><rect x="23.9247%" y="2197" width="1.6129%" height="15" fill="rgb(237,197,12)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2207.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (12 samples, 1.61%)</title><rect x="23.9247%" y="2181" width="1.6129%" height="15" fill="rgb(205,84,17)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2191.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (12 samples, 1.61%)</title><rect x="23.9247%" y="2165" width="1.6129%" height="15" fill="rgb(237,18,45)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2175.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (12 samples, 1.61%)</title><rect x="23.9247%" y="2149" width="1.6129%" height="15" fill="rgb(221,87,14)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2159.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (12 samples, 1.61%)</title><rect x="23.9247%" y="2133" width="1.6129%" height="15" fill="rgb(238,186,15)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2143.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (12 samples, 1.61%)</title><rect x="23.9247%" y="2117" width="1.6129%" height="15" fill="rgb(208,115,11)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2127.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (12 samples, 1.61%)</title><rect x="23.9247%" y="2101" width="1.6129%" height="15" fill="rgb(254,175,0)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2111.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.61%)</title><rect x="23.9247%" y="2085" width="1.6129%" height="15" fill="rgb(227,24,42)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2095.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (12 samples, 1.61%)</title><rect x="23.9247%" y="2069" width="1.6129%" height="15" fill="rgb(223,211,37)" fg:x="178" fg:w="12"/><text x="24.1747%" y="2079.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (9 samples, 1.21%)</title><rect x="24.3280%" y="2053" width="1.2097%" height="15" fill="rgb(235,49,27)" fg:x="181" fg:w="9"/><text x="24.5780%" y="2063.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (9 samples, 1.21%)</title><rect x="24.3280%" y="2037" width="1.2097%" height="15" fill="rgb(254,97,51)" fg:x="181" fg:w="9"/><text x="24.5780%" y="2047.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (9 samples, 1.21%)</title><rect x="24.3280%" y="2021" width="1.2097%" height="15" fill="rgb(249,51,40)" fg:x="181" fg:w="9"/><text x="24.5780%" y="2031.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (9 samples, 1.21%)</title><rect x="24.3280%" y="2005" width="1.2097%" height="15" fill="rgb(210,128,45)" fg:x="181" fg:w="9"/><text x="24.5780%" y="2015.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (9 samples, 1.21%)</title><rect x="24.3280%" y="1989" width="1.2097%" height="15" fill="rgb(224,137,50)" fg:x="181" fg:w="9"/><text x="24.5780%" y="1999.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (9 samples, 1.21%)</title><rect x="24.3280%" y="1973" width="1.2097%" height="15" fill="rgb(242,15,9)" fg:x="181" fg:w="9"/><text x="24.5780%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (9 samples, 1.21%)</title><rect x="24.3280%" y="1957" width="1.2097%" height="15" fill="rgb(233,187,41)" fg:x="181" fg:w="9"/><text x="24.5780%" y="1967.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (9 samples, 1.21%)</title><rect x="24.3280%" y="1941" width="1.2097%" height="15" fill="rgb(227,2,29)" fg:x="181" fg:w="9"/><text x="24.5780%" y="1951.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (9 samples, 1.21%)</title><rect x="24.3280%" y="1925" width="1.2097%" height="15" fill="rgb(222,70,3)" fg:x="181" fg:w="9"/><text x="24.5780%" y="1935.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (8 samples, 1.08%)</title><rect x="24.4624%" y="1909" width="1.0753%" height="15" fill="rgb(213,11,42)" fg:x="182" fg:w="8"/><text x="24.7124%" y="1919.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (8 samples, 1.08%)</title><rect x="24.4624%" y="1893" width="1.0753%" height="15" fill="rgb(225,150,9)" fg:x="182" fg:w="8"/><text x="24.7124%" y="1903.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (8 samples, 1.08%)</title><rect x="24.4624%" y="1877" width="1.0753%" height="15" fill="rgb(230,162,45)" fg:x="182" fg:w="8"/><text x="24.7124%" y="1887.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (8 samples, 1.08%)</title><rect x="24.4624%" y="1861" width="1.0753%" height="15" fill="rgb(222,14,52)" fg:x="182" fg:w="8"/><text x="24.7124%" y="1871.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (8 samples, 1.08%)</title><rect x="24.4624%" y="1845" width="1.0753%" height="15" fill="rgb(254,198,14)" fg:x="182" fg:w="8"/><text x="24.7124%" y="1855.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;,tuple$&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (7 samples, 0.94%)</title><rect x="24.5968%" y="1829" width="0.9409%" height="15" fill="rgb(220,217,30)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1839.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$1&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$ (7 samples, 0.94%)</title><rect x="24.5968%" y="1813" width="0.9409%" height="15" fill="rgb(215,146,41)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1823.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (7 samples, 0.94%)</title><rect x="24.5968%" y="1797" width="0.9409%" height="15" fill="rgb(217,27,36)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1807.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (7 samples, 0.94%)</title><rect x="24.5968%" y="1781" width="0.9409%" height="15" fill="rgb(219,218,39)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1791.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,rayon::iter::plumbing::bridge_unindexed_producer_consumer::closure_env$0&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer (7 samples, 0.94%)</title><rect x="24.5968%" y="1765" width="0.9409%" height="15" fill="rgb(219,4,42)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1775.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (7 samples, 0.94%)</title><rect x="24.5968%" y="1749" width="0.9409%" height="15" fill="rgb(249,119,36)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1759.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_unindexed_producer_consumer&lt;ref$&lt;rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt; &gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::extend::ListVecConsumer,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(bool, rayon::iter::plumbing::Splitter, rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapConsumer (7 samples, 0.94%)</title><rect x="24.5968%" y="1733" width="0.9409%" height="15" fill="rgb(209,23,33)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1743.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (7 samples, 0.94%)</title><rect x="24.5968%" y="1717" width="0.9409%" height="15" fill="rgb(211,10,0)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1727.50"></text></g><g><title>fuzzit.exe`rayon::iter::par_bridge::impl$2::fold_with&lt;std::fs::ReadDir,rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt; &gt;(rayon::iter::par_bridge::IterParallelProducer&lt;std::fs::ReadDir&gt;*, rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$ (7 samples, 0.94%)</title><rect x="24.5968%" y="1701" width="0.9409%" height="15" fill="rgb(208,99,37)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1711.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::consume(rayon::iter::map::MapFolder&lt;rayon::iter::extend::ListVecFolder&lt;tuple$&lt;&gt; &gt;,fuzzit::git_data::recursive_repo_search::closure_env$0&gt;, enum2$&lt;core::result::Result (7 samples, 0.94%)</title><rect x="24.5968%" y="1685" width="0.9409%" height="15" fill="rgb(213,132,31)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1695.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::recursive_repo_search::closure$0(fuzzit::git_data::recursive_repo_search::closure_env$0*, enum2$&lt;core::result::Result (7 samples, 0.94%)</title><rect x="24.5968%" y="1669" width="0.9409%" height="15" fill="rgb(243,129,40)" fg:x="183" fg:w="7"/><text x="24.8468%" y="1679.50"></text></g><g><title>fuzzit.exe`std::path::Path::is_dir (2 samples, 0.27%)</title><rect x="25.2688%" y="1653" width="0.2688%" height="15" fill="rgb(210,66,33)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1663.50"></text></g><g><title>fuzzit.exe`std::fs::metadata (2 samples, 0.27%)</title><rect x="25.2688%" y="1637" width="0.2688%" height="15" fill="rgb(209,189,4)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1647.50"></text></g><g><title>fuzzit.exe`core::result::Result::map (2 samples, 0.27%)</title><rect x="25.2688%" y="1621" width="0.2688%" height="15" fill="rgb(214,107,37)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::fs::metadata (2 samples, 0.27%)</title><rect x="25.2688%" y="1605" width="0.2688%" height="15" fill="rgb(245,88,54)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1615.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::with_native_path (2 samples, 0.27%)</title><rect x="25.2688%" y="1589" width="0.2688%" height="15" fill="rgb(205,146,20)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1599.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="25.2688%" y="1573" width="0.2688%" height="15" fill="rgb(220,161,25)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1583.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="25.2688%" y="1557" width="0.2688%" height="15" fill="rgb(215,152,15)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1567.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (2 samples, 0.27%)</title><rect x="25.2688%" y="1541" width="0.2688%" height="15" fill="rgb(233,192,44)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1551.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (2 samples, 0.27%)</title><rect x="25.2688%" y="1525" width="0.2688%" height="15" fill="rgb(240,170,46)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1535.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (2 samples, 0.27%)</title><rect x="25.2688%" y="1509" width="0.2688%" height="15" fill="rgb(207,104,33)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1519.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::stat (2 samples, 0.27%)</title><rect x="25.2688%" y="1493" width="0.2688%" height="15" fill="rgb(219,21,39)" fg:x="188" fg:w="2"/><text x="25.5188%" y="1503.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::metadata (1 samples, 0.13%)</title><rect x="25.4032%" y="1477" width="0.1344%" height="15" fill="rgb(214,133,29)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1487.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="25.4032%" y="1461" width="0.1344%" height="15" fill="rgb(226,93,6)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1471.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="25.4032%" y="1445" width="0.1344%" height="15" fill="rgb(252,222,34)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1455.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="25.4032%" y="1429" width="0.1344%" height="15" fill="rgb(252,92,48)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1439.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$25::drop (1 samples, 0.13%)</title><rect x="25.4032%" y="1413" width="0.1344%" height="15" fill="rgb(245,223,24)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1423.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::file_attr (1 samples, 0.13%)</title><rect x="25.4032%" y="1397" width="0.1344%" height="15" fill="rgb(205,176,3)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1407.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.13%)</title><rect x="25.4032%" y="1381" width="0.1344%" height="15" fill="rgb(235,151,15)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1391.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.13%)</title><rect x="25.4032%" y="1365" width="0.1344%" height="15" fill="rgb(237,209,11)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1375.50"></text></g><g><title>`0x7FFE2C85B3A9 (1 samples, 0.13%)</title><rect x="25.4032%" y="1349" width="0.1344%" height="15" fill="rgb(243,227,24)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1359.50"></text></g><g><title>`0x7FFE2F1A3B54 (1 samples, 0.13%)</title><rect x="25.4032%" y="1333" width="0.1344%" height="15" fill="rgb(239,193,16)" fg:x="189" fg:w="1"/><text x="25.6532%" y="1343.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.13%)</title><rect x="25.5376%" y="2213" width="0.1344%" height="15" fill="rgb(231,27,9)" fg:x="190" fg:w="1"/><text x="25.7876%" y="2223.50"></text></g><g><title>`0x7FFE2C7FF233 (1 samples, 0.13%)</title><rect x="25.5376%" y="2197" width="0.1344%" height="15" fill="rgb(219,169,10)" fg:x="190" fg:w="1"/><text x="25.7876%" y="2207.50"></text></g><g><title>`0x7FFE2F1A3D84 (1 samples, 0.13%)</title><rect x="25.5376%" y="2181" width="0.1344%" height="15" fill="rgb(244,229,43)" fg:x="190" fg:w="1"/><text x="25.7876%" y="2191.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (2 samples, 0.27%)</title><rect x="25.5376%" y="2245" width="0.2688%" height="15" fill="rgb(254,38,20)" fg:x="190" fg:w="2"/><text x="25.7876%" y="2255.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (2 samples, 0.27%)</title><rect x="25.5376%" y="2229" width="0.2688%" height="15" fill="rgb(250,47,30)" fg:x="190" fg:w="2"/><text x="25.7876%" y="2239.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (1 samples, 0.13%)</title><rect x="25.6720%" y="2213" width="0.1344%" height="15" fill="rgb(224,124,36)" fg:x="191" fg:w="1"/><text x="25.9220%" y="2223.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::read_overlapped (1 samples, 0.13%)</title><rect x="25.6720%" y="2197" width="0.1344%" height="15" fill="rgb(246,68,51)" fg:x="191" fg:w="1"/><text x="25.9220%" y="2207.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.13%)</title><rect x="25.6720%" y="2181" width="0.1344%" height="15" fill="rgb(253,43,49)" fg:x="191" fg:w="1"/><text x="25.9220%" y="2191.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.13%)</title><rect x="25.6720%" y="2165" width="0.1344%" height="15" fill="rgb(219,54,36)" fg:x="191" fg:w="1"/><text x="25.9220%" y="2175.50"></text></g><g><title>`0x7FFE2C7FF67A (1 samples, 0.13%)</title><rect x="25.6720%" y="2149" width="0.1344%" height="15" fill="rgb(227,133,34)" fg:x="191" fg:w="1"/><text x="25.9220%" y="2159.50"></text></g><g><title>`0x7FFE2F1A32F4 (1 samples, 0.13%)</title><rect x="25.6720%" y="2133" width="0.1344%" height="15" fill="rgb(247,227,15)" fg:x="191" fg:w="1"/><text x="25.9220%" y="2143.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (2 samples, 0.27%)</title><rect x="25.8065%" y="2181" width="0.2688%" height="15" fill="rgb(229,96,14)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2191.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="25.8065%" y="2165" width="0.2688%" height="15" fill="rgb(220,79,17)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2175.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="25.8065%" y="2149" width="0.2688%" height="15" fill="rgb(205,131,53)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2159.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (2 samples, 0.27%)</title><rect x="25.8065%" y="2133" width="0.2688%" height="15" fill="rgb(209,50,29)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2143.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (2 samples, 0.27%)</title><rect x="25.8065%" y="2117" width="0.2688%" height="15" fill="rgb(245,86,46)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2127.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (2 samples, 0.27%)</title><rect x="25.8065%" y="2101" width="0.2688%" height="15" fill="rgb(235,66,46)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2111.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (2 samples, 0.27%)</title><rect x="25.8065%" y="2085" width="0.2688%" height="15" fill="rgb(232,148,31)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2095.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (2 samples, 0.27%)</title><rect x="25.8065%" y="2069" width="0.2688%" height="15" fill="rgb(217,149,8)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2079.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (2 samples, 0.27%)</title><rect x="25.8065%" y="2053" width="0.2688%" height="15" fill="rgb(209,183,11)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2063.50"></text></g><g><title>`0x7FFE2C8045C7 (2 samples, 0.27%)</title><rect x="25.8065%" y="2037" width="0.2688%" height="15" fill="rgb(208,55,20)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2047.50"></text></g><g><title>`0x7FFE2C802CD7 (2 samples, 0.27%)</title><rect x="25.8065%" y="2021" width="0.2688%" height="15" fill="rgb(218,39,14)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2031.50"></text></g><g><title>`0x7FFE2F1A3CD4 (2 samples, 0.27%)</title><rect x="25.8065%" y="2005" width="0.2688%" height="15" fill="rgb(216,169,33)" fg:x="192" fg:w="2"/><text x="26.0565%" y="2015.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.13%)</title><rect x="26.0753%" y="2165" width="0.1344%" height="15" fill="rgb(233,80,24)" fg:x="194" fg:w="1"/><text x="26.3253%" y="2175.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.13%)</title><rect x="26.0753%" y="2149" width="0.1344%" height="15" fill="rgb(213,179,31)" fg:x="194" fg:w="1"/><text x="26.3253%" y="2159.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (4 samples, 0.54%)</title><rect x="25.8065%" y="2213" width="0.5376%" height="15" fill="rgb(209,19,5)" fg:x="192" fg:w="4"/><text x="26.0565%" y="2223.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (4 samples, 0.54%)</title><rect x="25.8065%" y="2197" width="0.5376%" height="15" fill="rgb(219,18,35)" fg:x="192" fg:w="4"/><text x="26.0565%" y="2207.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (2 samples, 0.27%)</title><rect x="26.0753%" y="2181" width="0.2688%" height="15" fill="rgb(209,169,16)" fg:x="194" fg:w="2"/><text x="26.3253%" y="2191.50"></text></g><g><title>fuzzit.exe`alloc::fmt::format::format_inner (1 samples, 0.13%)</title><rect x="26.2097%" y="2165" width="0.1344%" height="15" fill="rgb(245,90,51)" fg:x="195" fg:w="1"/><text x="26.4597%" y="2175.50"></text></g><g><title>fuzzit.exe`core::result::Result::expect (1 samples, 0.13%)</title><rect x="26.2097%" y="2149" width="0.1344%" height="15" fill="rgb(220,99,45)" fg:x="195" fg:w="1"/><text x="26.4597%" y="2159.50"></text></g><g><title>fuzzit.exe`core::fmt::write (1 samples, 0.13%)</title><rect x="26.2097%" y="2133" width="0.1344%" height="15" fill="rgb(249,89,25)" fg:x="195" fg:w="1"/><text x="26.4597%" y="2143.50"></text></g><g><title>fuzzit.exe`core::fmt::Formatter::new (1 samples, 0.13%)</title><rect x="26.2097%" y="2117" width="0.1344%" height="15" fill="rgb(239,193,0)" fg:x="195" fg:w="1"/><text x="26.4597%" y="2127.50"></text></g><g><title>fuzzit.exe`std::sync::poison::mutex::Mutex::lock (1 samples, 0.13%)</title><rect x="26.3441%" y="2213" width="0.1344%" height="15" fill="rgb(231,126,1)" fg:x="196" fg:w="1"/><text x="26.5941%" y="2223.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.13%)</title><rect x="26.3441%" y="2197" width="0.1344%" height="15" fill="rgb(243,166,3)" fg:x="196" fg:w="1"/><text x="26.5941%" y="2207.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.13%)</title><rect x="26.3441%" y="2181" width="0.1344%" height="15" fill="rgb(223,22,34)" fg:x="196" fg:w="1"/><text x="26.5941%" y="2191.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::futex_wait (1 samples, 0.13%)</title><rect x="26.3441%" y="2165" width="0.1344%" height="15" fill="rgb(251,52,51)" fg:x="196" fg:w="1"/><text x="26.5941%" y="2175.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::wait_on_address (1 samples, 0.13%)</title><rect x="26.3441%" y="2149" width="0.1344%" height="15" fill="rgb(221,165,28)" fg:x="196" fg:w="1"/><text x="26.5941%" y="2159.50"></text></g><g><title>`0x7FFE2C8C2638 (1 samples, 0.13%)</title><rect x="26.3441%" y="2133" width="0.1344%" height="15" fill="rgb(218,121,47)" fg:x="196" fg:w="1"/><text x="26.5941%" y="2143.50"></text></g><g><title>`0x7FFE2F046D63 (1 samples, 0.13%)</title><rect x="26.3441%" y="2117" width="0.1344%" height="15" fill="rgb(209,120,9)" fg:x="196" fg:w="1"/><text x="26.5941%" y="2127.50"></text></g><g><title>`0x7FFE2F1A6E84 (1 samples, 0.13%)</title><rect x="26.3441%" y="2101" width="0.1344%" height="15" fill="rgb(236,68,12)" fg:x="196" fg:w="1"/><text x="26.5941%" y="2111.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.13%)</title><rect x="26.4785%" y="2149" width="0.1344%" height="15" fill="rgb(225,194,26)" fg:x="197" fg:w="1"/><text x="26.7285%" y="2159.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.13%)</title><rect x="26.4785%" y="2133" width="0.1344%" height="15" fill="rgb(231,84,39)" fg:x="197" fg:w="1"/><text x="26.7285%" y="2143.50"></text></g><g><title>`0x7FFE2C90B06A (1 samples, 0.13%)</title><rect x="26.4785%" y="2117" width="0.1344%" height="15" fill="rgb(210,11,45)" fg:x="197" fg:w="1"/><text x="26.7285%" y="2127.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.13%)</title><rect x="26.4785%" y="2101" width="0.1344%" height="15" fill="rgb(224,54,52)" fg:x="197" fg:w="1"/><text x="26.7285%" y="2111.50"></text></g><g><title>`0x7FFE2C8776C5 (22 samples, 2.96%)</title><rect x="26.6129%" y="2149" width="2.9570%" height="15" fill="rgb(238,102,14)" fg:x="198" fg:w="22"/><text x="26.8629%" y="2159.50">`0x..</text></g><g><title>`0x7FFE2F1A4C44 (22 samples, 2.96%)</title><rect x="26.6129%" y="2133" width="2.9570%" height="15" fill="rgb(243,160,52)" fg:x="198" fg:w="22"/><text x="26.8629%" y="2143.50">`0x..</text></g><g><title>`0x7FFE2C87838E (1 samples, 0.13%)</title><rect x="29.5699%" y="2149" width="0.1344%" height="15" fill="rgb(216,114,19)" fg:x="220" fg:w="1"/><text x="29.8199%" y="2159.50"></text></g><g><title>`0x7FFE2DD2E4E1 (1 samples, 0.13%)</title><rect x="29.7043%" y="2101" width="0.1344%" height="15" fill="rgb(244,166,37)" fg:x="221" fg:w="1"/><text x="29.9543%" y="2111.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="29.7043%" y="2085" width="0.1344%" height="15" fill="rgb(246,29,44)" fg:x="221" fg:w="1"/><text x="29.9543%" y="2095.50"></text></g><g><title>`0x7FFE2DD2D5FB (2 samples, 0.27%)</title><rect x="29.7043%" y="2117" width="0.2688%" height="15" fill="rgb(215,56,53)" fg:x="221" fg:w="2"/><text x="29.9543%" y="2127.50"></text></g><g><title>`0x7FFE2DD2E553 (1 samples, 0.13%)</title><rect x="29.8387%" y="2101" width="0.1344%" height="15" fill="rgb(217,60,2)" fg:x="222" fg:w="1"/><text x="30.0887%" y="2111.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="29.8387%" y="2085" width="0.1344%" height="15" fill="rgb(207,26,24)" fg:x="222" fg:w="1"/><text x="30.0887%" y="2095.50"></text></g><g><title>`0x7FFE2C8787CB (17 samples, 2.28%)</title><rect x="29.7043%" y="2149" width="2.2849%" height="15" fill="rgb(252,210,15)" fg:x="221" fg:w="17"/><text x="29.9543%" y="2159.50">`..</text></g><g><title>`0x7FFE2DD2D052 (17 samples, 2.28%)</title><rect x="29.7043%" y="2133" width="2.2849%" height="15" fill="rgb(253,209,26)" fg:x="221" fg:w="17"/><text x="29.9543%" y="2143.50">`..</text></g><g><title>`0x7FFE2DD2D646 (15 samples, 2.02%)</title><rect x="29.9731%" y="2117" width="2.0161%" height="15" fill="rgb(238,170,14)" fg:x="223" fg:w="15"/><text x="30.2231%" y="2127.50">`..</text></g><g><title>`0x7FFE2F1A3BB4 (15 samples, 2.02%)</title><rect x="29.9731%" y="2101" width="2.0161%" height="15" fill="rgb(216,178,15)" fg:x="223" fg:w="15"/><text x="30.2231%" y="2111.50">`..</text></g><g><title>`0x7FFE2DD37CE6 (1 samples, 0.13%)</title><rect x="31.9892%" y="2133" width="0.1344%" height="15" fill="rgb(250,197,2)" fg:x="238" fg:w="1"/><text x="32.2392%" y="2143.50"></text></g><g><title>`0x7FFE2F1A3554 (1 samples, 0.13%)</title><rect x="31.9892%" y="2117" width="0.1344%" height="15" fill="rgb(212,70,42)" fg:x="238" fg:w="1"/><text x="32.2392%" y="2127.50"></text></g><g><title>`0x7FFE2C87892F (2 samples, 0.27%)</title><rect x="31.9892%" y="2149" width="0.2688%" height="15" fill="rgb(227,213,9)" fg:x="238" fg:w="2"/><text x="32.2392%" y="2159.50"></text></g><g><title>`0x7FFE2DD3820E (1 samples, 0.13%)</title><rect x="32.1237%" y="2133" width="0.1344%" height="15" fill="rgb(245,99,25)" fg:x="239" fg:w="1"/><text x="32.3737%" y="2143.50"></text></g><g><title>`0x7FFE2DD37133 (1 samples, 0.13%)</title><rect x="32.1237%" y="2117" width="0.1344%" height="15" fill="rgb(250,82,29)" fg:x="239" fg:w="1"/><text x="32.3737%" y="2127.50"></text></g><g><title>`0x7FFE2DD371FD (1 samples, 0.13%)</title><rect x="32.1237%" y="2101" width="0.1344%" height="15" fill="rgb(241,226,54)" fg:x="239" fg:w="1"/><text x="32.3737%" y="2111.50"></text></g><g><title>`0x7FFE2F09DAD7 (1 samples, 0.13%)</title><rect x="32.1237%" y="2085" width="0.1344%" height="15" fill="rgb(221,99,41)" fg:x="239" fg:w="1"/><text x="32.3737%" y="2095.50"></text></g><g><title>`0x7FFE2F0CBC67 (1 samples, 0.13%)</title><rect x="32.1237%" y="2069" width="0.1344%" height="15" fill="rgb(213,90,21)" fg:x="239" fg:w="1"/><text x="32.3737%" y="2079.50"></text></g><g><title>`0x7FFE2F0E6F5B (1 samples, 0.13%)</title><rect x="32.1237%" y="2053" width="0.1344%" height="15" fill="rgb(205,208,24)" fg:x="239" fg:w="1"/><text x="32.3737%" y="2063.50"></text></g><g><title>`0x7FFE2F0E71D2 (1 samples, 0.13%)</title><rect x="32.1237%" y="2037" width="0.1344%" height="15" fill="rgb(246,31,12)" fg:x="239" fg:w="1"/><text x="32.3737%" y="2047.50"></text></g><g><title>`0x7FFE2F0E7422 (1 samples, 0.13%)</title><rect x="32.1237%" y="2021" width="0.1344%" height="15" fill="rgb(213,154,6)" fg:x="239" fg:w="1"/><text x="32.3737%" y="2031.50"></text></g><g><title>`0x7FFE2C878B3F (1 samples, 0.13%)</title><rect x="32.2581%" y="2149" width="0.1344%" height="15" fill="rgb(222,163,29)" fg:x="240" fg:w="1"/><text x="32.5081%" y="2159.50"></text></g><g><title>`0x7FFE2F075D02 (1 samples, 0.13%)</title><rect x="32.2581%" y="2133" width="0.1344%" height="15" fill="rgb(227,201,8)" fg:x="240" fg:w="1"/><text x="32.5081%" y="2143.50"></text></g><g><title>`0x7FFE2F1A43E4 (1 samples, 0.13%)</title><rect x="32.2581%" y="2117" width="0.1344%" height="15" fill="rgb(233,9,32)" fg:x="240" fg:w="1"/><text x="32.5081%" y="2127.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (45 samples, 6.05%)</title><rect x="26.4785%" y="2213" width="6.0484%" height="15" fill="rgb(217,54,24)" fg:x="197" fg:w="45"/><text x="26.7285%" y="2223.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (45 samples, 6.05%)</title><rect x="26.4785%" y="2197" width="6.0484%" height="15" fill="rgb(235,192,0)" fg:x="197" fg:w="45"/><text x="26.7285%" y="2207.50">fuzzit.e..</text></g><g><title>`0x7FFE2DD4C6D4 (45 samples, 6.05%)</title><rect x="26.4785%" y="2181" width="6.0484%" height="15" fill="rgb(235,45,9)" fg:x="197" fg:w="45"/><text x="26.7285%" y="2191.50">`0x7FFE2..</text></g><g><title>`0x7FFE2C874E26 (45 samples, 6.05%)</title><rect x="26.4785%" y="2165" width="6.0484%" height="15" fill="rgb(246,42,40)" fg:x="197" fg:w="45"/><text x="26.7285%" y="2175.50">`0x7FFE2..</text></g><g><title>`0x7FFE2C879763 (1 samples, 0.13%)</title><rect x="32.3925%" y="2149" width="0.1344%" height="15" fill="rgb(248,111,24)" fg:x="241" fg:w="1"/><text x="32.6425%" y="2159.50"></text></g><g><title>`0x7FFE2F1A3974 (1 samples, 0.13%)</title><rect x="32.3925%" y="2133" width="0.1344%" height="15" fill="rgb(249,65,22)" fg:x="241" fg:w="1"/><text x="32.6425%" y="2143.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (1 samples, 0.13%)</title><rect x="32.5269%" y="2181" width="0.1344%" height="15" fill="rgb(238,111,51)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2191.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (1 samples, 0.13%)</title><rect x="32.5269%" y="2165" width="0.1344%" height="15" fill="rgb(250,118,22)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2175.50"></text></g><g><title>fuzzit.exe`core::result::Result::ok (1 samples, 0.13%)</title><rect x="32.5269%" y="2149" width="0.1344%" height="15" fill="rgb(234,84,26)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2159.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::to_u16s::inner (1 samples, 0.13%)</title><rect x="32.5269%" y="2133" width="0.1344%" height="15" fill="rgb(243,172,12)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2143.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$8::deref (1 samples, 0.13%)</title><rect x="32.5269%" y="2117" width="0.1344%" height="15" fill="rgb(236,150,49)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2127.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_slice (1 samples, 0.13%)</title><rect x="32.5269%" y="2101" width="0.1344%" height="15" fill="rgb(225,197,26)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2111.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_ptr (1 samples, 0.13%)</title><rect x="32.5269%" y="2085" width="0.1344%" height="15" fill="rgb(214,17,42)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2095.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.13%)</title><rect x="32.5269%" y="2069" width="0.1344%" height="15" fill="rgb(224,165,40)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2079.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.13%)</title><rect x="32.5269%" y="2053" width="0.1344%" height="15" fill="rgb(246,100,4)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2063.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.13%)</title><rect x="32.5269%" y="2037" width="0.1344%" height="15" fill="rgb(222,103,0)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2047.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_desugared&lt;u16,alloc::alloc::Global,std::sys_common::wtf8::EncodeWide&gt; (1 samples, 0.13%)</title><rect x="32.5269%" y="2021" width="0.1344%" height="15" fill="rgb(227,189,26)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2031.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::impl$18::next (1 samples, 0.13%)</title><rect x="32.5269%" y="2005" width="0.1344%" height="15" fill="rgb(214,202,17)" fg:x="242" fg:w="1"/><text x="32.7769%" y="2015.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::impl$17::next (1 samples, 0.13%)</title><rect x="32.5269%" y="1989" width="0.1344%" height="15" fill="rgb(229,111,3)" fg:x="242" fg:w="1"/><text x="32.7769%" y="1999.50"></text></g><g><title>fuzzit.exe`core::str::validations::next_code_point (1 samples, 0.13%)</title><rect x="32.5269%" y="1973" width="0.1344%" height="15" fill="rgb(229,172,15)" fg:x="242" fg:w="1"/><text x="32.7769%" y="1983.50"></text></g><g><title>`0x7FFE2DD43BEB (1 samples, 0.13%)</title><rect x="32.6613%" y="2165" width="0.1344%" height="15" fill="rgb(230,224,35)" fg:x="243" fg:w="1"/><text x="32.9113%" y="2175.50"></text></g><g><title>`0x7FFE2C8C8A10 (1 samples, 0.13%)</title><rect x="32.6613%" y="2149" width="0.1344%" height="15" fill="rgb(251,141,6)" fg:x="243" fg:w="1"/><text x="32.9113%" y="2159.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="32.7957%" y="2133" width="0.1344%" height="15" fill="rgb(225,208,6)" fg:x="244" fg:w="1"/><text x="33.0457%" y="2143.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="32.7957%" y="2117" width="0.1344%" height="15" fill="rgb(246,181,16)" fg:x="244" fg:w="1"/><text x="33.0457%" y="2127.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="32.7957%" y="2101" width="0.1344%" height="15" fill="rgb(227,129,36)" fg:x="244" fg:w="1"/><text x="33.0457%" y="2111.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="32.7957%" y="2085" width="0.1344%" height="15" fill="rgb(248,117,24)" fg:x="244" fg:w="1"/><text x="33.0457%" y="2095.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="32.7957%" y="2069" width="0.1344%" height="15" fill="rgb(214,185,35)" fg:x="244" fg:w="1"/><text x="33.0457%" y="2079.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (3 samples, 0.40%)</title><rect x="32.6613%" y="2181" width="0.4032%" height="15" fill="rgb(236,150,34)" fg:x="243" fg:w="3"/><text x="32.9113%" y="2191.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (2 samples, 0.27%)</title><rect x="32.7957%" y="2165" width="0.2688%" height="15" fill="rgb(243,228,27)" fg:x="244" fg:w="2"/><text x="33.0457%" y="2175.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="32.7957%" y="2149" width="0.2688%" height="15" fill="rgb(245,77,44)" fg:x="244" fg:w="2"/><text x="33.0457%" y="2159.50"></text></g><g><title>fuzzit.exe`std::path::PathBuf::_push (1 samples, 0.13%)</title><rect x="32.9301%" y="2133" width="0.1344%" height="15" fill="rgb(235,214,42)" fg:x="245" fg:w="1"/><text x="33.1801%" y="2143.50"></text></g><g><title>fuzzit.exe`std::path::Path::is_absolute (1 samples, 0.13%)</title><rect x="32.9301%" y="2117" width="0.1344%" height="15" fill="rgb(221,74,3)" fg:x="245" fg:w="1"/><text x="33.1801%" y="2127.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::is_absolute (1 samples, 0.13%)</title><rect x="32.9301%" y="2101" width="0.1344%" height="15" fill="rgb(206,121,29)" fg:x="245" fg:w="1"/><text x="33.1801%" y="2111.50"></text></g><g><title>fuzzit.exe`std::path::Path::has_root (1 samples, 0.13%)</title><rect x="32.9301%" y="2085" width="0.1344%" height="15" fill="rgb(249,131,53)" fg:x="245" fg:w="1"/><text x="33.1801%" y="2095.50"></text></g><g><title>fuzzit.exe`std::path::Path::components (1 samples, 0.13%)</title><rect x="32.9301%" y="2069" width="0.1344%" height="15" fill="rgb(236,170,29)" fg:x="245" fg:w="1"/><text x="33.1801%" y="2079.50"></text></g><g><title>`0x7FFE2C81DF4E (1 samples, 0.13%)</title><rect x="33.0645%" y="2117" width="0.1344%" height="15" fill="rgb(247,96,15)" fg:x="246" fg:w="1"/><text x="33.3145%" y="2127.50"></text></g><g><title>`0x7FFE2F11D2DD (1 samples, 0.13%)</title><rect x="33.0645%" y="2101" width="0.1344%" height="15" fill="rgb(211,210,7)" fg:x="246" fg:w="1"/><text x="33.3145%" y="2111.50"></text></g><g><title>`0x7FFE2F055AEA (1 samples, 0.13%)</title><rect x="33.0645%" y="2085" width="0.1344%" height="15" fill="rgb(240,88,50)" fg:x="246" fg:w="1"/><text x="33.3145%" y="2095.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="33.0645%" y="2069" width="0.1344%" height="15" fill="rgb(209,229,26)" fg:x="246" fg:w="1"/><text x="33.3145%" y="2079.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.13%)</title><rect x="33.0645%" y="2053" width="0.1344%" height="15" fill="rgb(210,68,23)" fg:x="246" fg:w="1"/><text x="33.3145%" y="2063.50"></text></g><g><title>`0x7FFE2F091DB7 (1 samples, 0.13%)</title><rect x="33.0645%" y="2037" width="0.1344%" height="15" fill="rgb(229,180,13)" fg:x="246" fg:w="1"/><text x="33.3145%" y="2047.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (68 samples, 9.14%)</title><rect x="25.5376%" y="2293" width="9.1398%" height="15" fill="rgb(236,53,44)" fg:x="190" fg:w="68"/><text x="25.7876%" y="2303.50">fuzzit.exe`en..</text></g><g><title>fuzzit.exe`std::process::Command::output (68 samples, 9.14%)</title><rect x="25.5376%" y="2277" width="9.1398%" height="15" fill="rgb(244,214,29)" fg:x="190" fg:w="68"/><text x="25.7876%" y="2287.50">fuzzit.exe`st..</text></g><g><title>fuzzit.exe`std::sys::process::output (68 samples, 9.14%)</title><rect x="25.5376%" y="2261" width="9.1398%" height="15" fill="rgb(220,75,29)" fg:x="190" fg:w="68"/><text x="25.7876%" y="2271.50">fuzzit.exe`st..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (66 samples, 8.87%)</title><rect x="25.8065%" y="2245" width="8.8710%" height="15" fill="rgb(214,183,37)" fg:x="192" fg:w="66"/><text x="26.0565%" y="2255.50">fuzzit.exe`st..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (66 samples, 8.87%)</title><rect x="25.8065%" y="2229" width="8.8710%" height="15" fill="rgb(239,117,29)" fg:x="192" fg:w="66"/><text x="26.0565%" y="2239.50">fuzzit.exe`st..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (16 samples, 2.15%)</title><rect x="32.5269%" y="2213" width="2.1505%" height="15" fill="rgb(237,171,35)" fg:x="242" fg:w="16"/><text x="32.7769%" y="2223.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (16 samples, 2.15%)</title><rect x="32.5269%" y="2197" width="2.1505%" height="15" fill="rgb(229,178,53)" fg:x="242" fg:w="16"/><text x="32.7769%" y="2207.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (12 samples, 1.61%)</title><rect x="33.0645%" y="2181" width="1.6129%" height="15" fill="rgb(210,102,19)" fg:x="246" fg:w="12"/><text x="33.3145%" y="2191.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (12 samples, 1.61%)</title><rect x="33.0645%" y="2165" width="1.6129%" height="15" fill="rgb(235,127,22)" fg:x="246" fg:w="12"/><text x="33.3145%" y="2175.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (12 samples, 1.61%)</title><rect x="33.0645%" y="2149" width="1.6129%" height="15" fill="rgb(244,31,31)" fg:x="246" fg:w="12"/><text x="33.3145%" y="2159.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (12 samples, 1.61%)</title><rect x="33.0645%" y="2133" width="1.6129%" height="15" fill="rgb(231,43,21)" fg:x="246" fg:w="12"/><text x="33.3145%" y="2143.50"></text></g><g><title>`0x7FFE2C81DF99 (11 samples, 1.48%)</title><rect x="33.1989%" y="2117" width="1.4785%" height="15" fill="rgb(217,131,35)" fg:x="247" fg:w="11"/><text x="33.4489%" y="2127.50"></text></g><g><title>`0x7FFE2F1A39D4 (11 samples, 1.48%)</title><rect x="33.1989%" y="2101" width="1.4785%" height="15" fill="rgb(221,149,4)" fg:x="247" fg:w="11"/><text x="33.4489%" y="2111.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (69 samples, 9.27%)</title><rect x="25.5376%" y="2501" width="9.2742%" height="15" fill="rgb(232,170,28)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2511.50">fuzzit.exe`ra..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (69 samples, 9.27%)</title><rect x="25.5376%" y="2485" width="9.2742%" height="15" fill="rgb(238,56,10)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2495.50">fuzzit.exe`en..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (69 samples, 9.27%)</title><rect x="25.5376%" y="2469" width="9.2742%" height="15" fill="rgb(235,196,14)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2479.50">fuzzit.exe`ra..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (69 samples, 9.27%)</title><rect x="25.5376%" y="2453" width="9.2742%" height="15" fill="rgb(216,45,48)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2463.50">fuzzit.exe`st..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (69 samples, 9.27%)</title><rect x="25.5376%" y="2437" width="9.2742%" height="15" fill="rgb(238,213,17)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2447.50">fuzzit.exe`st..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (69 samples, 9.27%)</title><rect x="25.5376%" y="2421" width="9.2742%" height="15" fill="rgb(212,13,2)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2431.50">fuzzit.exe`st..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (69 samples, 9.27%)</title><rect x="25.5376%" y="2405" width="9.2742%" height="15" fill="rgb(240,114,20)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2415.50">fuzzit.exe`co..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (69 samples, 9.27%)</title><rect x="25.5376%" y="2389" width="9.2742%" height="15" fill="rgb(228,41,40)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2399.50">fuzzit.exe`ra..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (69 samples, 9.27%)</title><rect x="25.5376%" y="2373" width="9.2742%" height="15" fill="rgb(244,132,35)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2383.50">fuzzit.exe`ra..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (69 samples, 9.27%)</title><rect x="25.5376%" y="2357" width="9.2742%" height="15" fill="rgb(253,189,4)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2367.50">fuzzit.exe`ra..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (69 samples, 9.27%)</title><rect x="25.5376%" y="2341" width="9.2742%" height="15" fill="rgb(224,37,19)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2351.50">fuzzit.exe`fu..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (69 samples, 9.27%)</title><rect x="25.5376%" y="2325" width="9.2742%" height="15" fill="rgb(235,223,18)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2335.50">fuzzit.exe`en..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (69 samples, 9.27%)</title><rect x="25.5376%" y="2309" width="9.2742%" height="15" fill="rgb(235,163,25)" fg:x="190" fg:w="69"/><text x="25.7876%" y="2319.50">fuzzit.exe`fu..</text></g><g><title>fuzzit.exe`std::process::Command::args(alloc::vec::Vec&lt;ref$ (1 samples, 0.13%)</title><rect x="34.6774%" y="2293" width="0.1344%" height="15" fill="rgb(217,145,28)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2303.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$17::into_iter(alloc::vec::Vec&lt;ref$ (1 samples, 0.13%)</title><rect x="34.6774%" y="2277" width="0.1344%" height="15" fill="rgb(223,223,32)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2287.50"></text></g><g><title>fuzzit.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;ref$ (1 samples, 0.13%)</title><rect x="34.6774%" y="2261" width="0.1344%" height="15" fill="rgb(227,189,39)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2271.50"></text></g><g><title>fuzzit.exe`core::slice::iter::Iter&lt;ref$&lt;str$&gt; &gt;::new(ref$&lt;slice2$&lt;ref$ (1 samples, 0.13%)</title><rect x="34.6774%" y="2245" width="0.1344%" height="15" fill="rgb(248,10,22)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2255.50"></text></g><g><title>fuzzit.exe`core::ptr::mut_ptr::impl$0::add(ref$ (1 samples, 0.13%)</title><rect x="34.6774%" y="2229" width="0.1344%" height="15" fill="rgb(248,46,39)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2239.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::new (1 samples, 0.13%)</title><rect x="34.6774%" y="2213" width="0.1344%" height="15" fill="rgb(248,113,48)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2223.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::OsStr::to_os_string (1 samples, 0.13%)</title><rect x="34.6774%" y="2197" width="0.1344%" height="15" fill="rgb(245,16,25)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2207.50"></text></g><g><title>fuzzit.exe`std::sys::os_str::wtf8::Slice::to_owned (1 samples, 0.13%)</title><rect x="34.6774%" y="2181" width="0.1344%" height="15" fill="rgb(249,152,16)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2191.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8::to_owned (1 samples, 0.13%)</title><rect x="34.6774%" y="2165" width="0.1344%" height="15" fill="rgb(250,16,1)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2175.50"></text></g><g><title>fuzzit.exe`alloc::slice::impl$0::to_vec (1 samples, 0.13%)</title><rect x="34.6774%" y="2149" width="0.1344%" height="15" fill="rgb(249,138,3)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2159.50"></text></g><g><title>fuzzit.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.13%)</title><rect x="34.6774%" y="2133" width="0.1344%" height="15" fill="rgb(227,71,41)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2143.50"></text></g><g><title>fuzzit.exe`alloc::slice::impl$0::to_vec_in::impl$1::to_vec (1 samples, 0.13%)</title><rect x="34.6774%" y="2117" width="0.1344%" height="15" fill="rgb(209,184,23)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2127.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.13%)</title><rect x="34.6774%" y="2101" width="0.1344%" height="15" fill="rgb(223,215,31)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2111.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.13%)</title><rect x="34.6774%" y="2085" width="0.1344%" height="15" fill="rgb(210,146,28)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2095.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.13%)</title><rect x="34.6774%" y="2069" width="0.1344%" height="15" fill="rgb(209,183,41)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2079.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.13%)</title><rect x="34.6774%" y="2053" width="0.1344%" height="15" fill="rgb(209,224,45)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2063.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::allocate (1 samples, 0.13%)</title><rect x="34.6774%" y="2037" width="0.1344%" height="15" fill="rgb(224,209,51)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2047.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="34.6774%" y="2021" width="0.1344%" height="15" fill="rgb(223,17,39)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2031.50"></text></g><g><title>fuzzit.exe`alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="34.6774%" y="2005" width="0.1344%" height="15" fill="rgb(234,204,37)" fg:x="258" fg:w="1"/><text x="34.9274%" y="2015.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="34.8118%" y="2053" width="0.1344%" height="15" fill="rgb(236,120,5)" fg:x="259" fg:w="1"/><text x="35.0618%" y="2063.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="34.8118%" y="2037" width="0.1344%" height="15" fill="rgb(248,97,27)" fg:x="259" fg:w="1"/><text x="35.0618%" y="2047.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="34.8118%" y="2021" width="0.1344%" height="15" fill="rgb(240,66,17)" fg:x="259" fg:w="1"/><text x="35.0618%" y="2031.50"></text></g><g><title>`0x7FFE2C8776C5 (1 samples, 0.13%)</title><rect x="34.9462%" y="2053" width="0.1344%" height="15" fill="rgb(210,79,3)" fg:x="260" fg:w="1"/><text x="35.1962%" y="2063.50"></text></g><g><title>`0x7FFE2F1A4C44 (1 samples, 0.13%)</title><rect x="34.9462%" y="2037" width="0.1344%" height="15" fill="rgb(214,176,27)" fg:x="260" fg:w="1"/><text x="35.1962%" y="2047.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (5 samples, 0.67%)</title><rect x="34.8118%" y="2117" width="0.6720%" height="15" fill="rgb(235,185,3)" fg:x="259" fg:w="5"/><text x="35.0618%" y="2127.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (5 samples, 0.67%)</title><rect x="34.8118%" y="2101" width="0.6720%" height="15" fill="rgb(227,24,12)" fg:x="259" fg:w="5"/><text x="35.0618%" y="2111.50"></text></g><g><title>`0x7FFE2DD4C6D4 (5 samples, 0.67%)</title><rect x="34.8118%" y="2085" width="0.6720%" height="15" fill="rgb(252,169,48)" fg:x="259" fg:w="5"/><text x="35.0618%" y="2095.50"></text></g><g><title>`0x7FFE2C874E26 (5 samples, 0.67%)</title><rect x="34.8118%" y="2069" width="0.6720%" height="15" fill="rgb(212,65,1)" fg:x="259" fg:w="5"/><text x="35.0618%" y="2079.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="35.0806%" y="2053" width="0.4032%" height="15" fill="rgb(242,39,24)" fg:x="261" fg:w="3"/><text x="35.3306%" y="2063.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="35.0806%" y="2037" width="0.4032%" height="15" fill="rgb(249,32,23)" fg:x="261" fg:w="3"/><text x="35.3306%" y="2047.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="35.0806%" y="2021" width="0.4032%" height="15" fill="rgb(251,195,23)" fg:x="261" fg:w="3"/><text x="35.3306%" y="2031.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="35.0806%" y="2005" width="0.4032%" height="15" fill="rgb(236,174,8)" fg:x="261" fg:w="3"/><text x="35.3306%" y="2015.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="35.4839%" y="2085" width="0.1344%" height="15" fill="rgb(220,197,8)" fg:x="264" fg:w="1"/><text x="35.7339%" y="2095.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (1 samples, 0.13%)</title><rect x="35.4839%" y="2069" width="0.1344%" height="15" fill="rgb(240,108,37)" fg:x="264" fg:w="1"/><text x="35.7339%" y="2079.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="35.4839%" y="2053" width="0.1344%" height="15" fill="rgb(232,176,24)" fg:x="264" fg:w="1"/><text x="35.7339%" y="2063.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="35.4839%" y="2037" width="0.1344%" height="15" fill="rgb(243,35,29)" fg:x="264" fg:w="1"/><text x="35.7339%" y="2047.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="35.4839%" y="2021" width="0.1344%" height="15" fill="rgb(210,37,18)" fg:x="264" fg:w="1"/><text x="35.7339%" y="2031.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="35.4839%" y="2005" width="0.1344%" height="15" fill="rgb(224,184,40)" fg:x="264" fg:w="1"/><text x="35.7339%" y="2015.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="35.4839%" y="1989" width="0.1344%" height="15" fill="rgb(236,39,29)" fg:x="264" fg:w="1"/><text x="35.7339%" y="1999.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="35.4839%" y="1973" width="0.1344%" height="15" fill="rgb(232,48,39)" fg:x="264" fg:w="1"/><text x="35.7339%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="34.8118%" y="2293" width="1.0753%" height="15" fill="rgb(236,34,42)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2303.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="34.8118%" y="2277" width="1.0753%" height="15" fill="rgb(243,106,37)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2287.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="34.8118%" y="2261" width="1.0753%" height="15" fill="rgb(218,96,6)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2271.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (8 samples, 1.08%)</title><rect x="34.8118%" y="2245" width="1.0753%" height="15" fill="rgb(235,130,12)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2255.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (8 samples, 1.08%)</title><rect x="34.8118%" y="2229" width="1.0753%" height="15" fill="rgb(231,95,0)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2239.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (8 samples, 1.08%)</title><rect x="34.8118%" y="2213" width="1.0753%" height="15" fill="rgb(228,12,23)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2223.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (8 samples, 1.08%)</title><rect x="34.8118%" y="2197" width="1.0753%" height="15" fill="rgb(216,12,1)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2207.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (8 samples, 1.08%)</title><rect x="34.8118%" y="2181" width="1.0753%" height="15" fill="rgb(219,59,3)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2191.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (8 samples, 1.08%)</title><rect x="34.8118%" y="2165" width="1.0753%" height="15" fill="rgb(215,208,46)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2175.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (8 samples, 1.08%)</title><rect x="34.8118%" y="2149" width="1.0753%" height="15" fill="rgb(254,224,29)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2159.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (8 samples, 1.08%)</title><rect x="34.8118%" y="2133" width="1.0753%" height="15" fill="rgb(232,14,29)" fg:x="259" fg:w="8"/><text x="35.0618%" y="2143.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="35.4839%" y="2117" width="0.4032%" height="15" fill="rgb(208,45,52)" fg:x="264" fg:w="3"/><text x="35.7339%" y="2127.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="35.4839%" y="2101" width="0.4032%" height="15" fill="rgb(234,191,28)" fg:x="264" fg:w="3"/><text x="35.7339%" y="2111.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="35.6183%" y="2085" width="0.2688%" height="15" fill="rgb(244,67,43)" fg:x="265" fg:w="2"/><text x="35.8683%" y="2095.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="35.6183%" y="2069" width="0.2688%" height="15" fill="rgb(236,189,24)" fg:x="265" fg:w="2"/><text x="35.8683%" y="2079.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="35.6183%" y="2053" width="0.2688%" height="15" fill="rgb(239,214,33)" fg:x="265" fg:w="2"/><text x="35.8683%" y="2063.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="35.6183%" y="2037" width="0.2688%" height="15" fill="rgb(226,176,41)" fg:x="265" fg:w="2"/><text x="35.8683%" y="2047.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="35.6183%" y="2021" width="0.2688%" height="15" fill="rgb(248,47,8)" fg:x="265" fg:w="2"/><text x="35.8683%" y="2031.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="35.6183%" y="2005" width="0.2688%" height="15" fill="rgb(218,81,44)" fg:x="265" fg:w="2"/><text x="35.8683%" y="2015.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (1 samples, 0.13%)</title><rect x="35.8871%" y="2053" width="0.1344%" height="15" fill="rgb(213,98,6)" fg:x="267" fg:w="1"/><text x="36.1371%" y="2063.50"></text></g><g><title>fuzzit.exe`alloc::sync::Arc&lt;rayon_core::registry::Registry,alloc::alloc::Global&gt;::inner (1 samples, 0.13%)</title><rect x="35.8871%" y="2037" width="0.1344%" height="15" fill="rgb(222,85,22)" fg:x="267" fg:w="1"/><text x="36.1371%" y="2047.50"></text></g><g><title>fuzzit.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rayon_core::registry::Registry&gt; &gt;::as_ref (1 samples, 0.13%)</title><rect x="35.8871%" y="2021" width="0.1344%" height="15" fill="rgb(239,46,39)" fg:x="267" fg:w="1"/><text x="36.1371%" y="2031.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::find_work (1 samples, 0.13%)</title><rect x="35.8871%" y="2005" width="0.1344%" height="15" fill="rgb(237,12,29)" fg:x="267" fg:w="1"/><text x="36.1371%" y="2015.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::option::Option&lt;rayon_core::job::JobRef&gt; &gt;::or_else(enum2$&lt;core::option::Option (1 samples, 0.13%)</title><rect x="35.8871%" y="1989" width="0.1344%" height="15" fill="rgb(214,77,8)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1999.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::find_work::closure$0 (1 samples, 0.13%)</title><rect x="35.8871%" y="1973" width="0.1344%" height="15" fill="rgb(217,168,37)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::steal (1 samples, 0.13%)</title><rect x="35.8871%" y="1957" width="0.1344%" height="15" fill="rgb(221,217,23)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1967.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range (1 samples, 0.13%)</title><rect x="35.8871%" y="1941" width="0.1344%" height="15" fill="rgb(243,229,36)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1951.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::try_fold(core::iter::adapters::filter::Filter&lt;core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.13%)</title><rect x="35.8871%" y="1925" width="0.1344%" height="15" fill="rgb(251,163,40)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1935.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::chain::impl$1::try_fold&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt;,tuple$&lt;&gt;,core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::chain::Chain&lt;core::ops::range::Range&lt;usize&gt;,core::ops::range::Range&lt;usize&gt; &gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.13%)</title><rect x="35.8871%" y="1909" width="0.1344%" height="15" fill="rgb(237,222,12)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1919.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::range::Range&lt;usize&gt;*, tuple$&lt;&gt;, core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0 (1 samples, 0.13%)</title><rect x="35.8871%" y="1893" width="0.1344%" height="15" fill="rgb(248,132,6)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1903.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$3::call_mut(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;**, tuple$ (1 samples, 0.13%)</title><rect x="35.8871%" y="1877" width="0.1344%" height="15" fill="rgb(227,167,50)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1887.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::filter_try_fold::closure$0(core::iter::adapters::filter::filter_try_fold::closure_env$0&lt;usize,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;rayon_core::job::JobRef,tuple$&lt;&gt; &gt; &gt;,rayon_core::registry::impl$10::steal::closure_env$0,core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt; &gt;*, tuple$ (1 samples, 0.13%)</title><rect x="35.8871%" y="1861" width="0.1344%" height="15" fill="rgb(242,84,37)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1871.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;usize,rayon_core::job::JobRef,rayon_core::registry::impl$10::steal::closure_env$1&gt;*, tuple$ (1 samples, 0.13%)</title><rect x="35.8871%" y="1845" width="0.1344%" height="15" fill="rgb(212,4,50)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1855.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::impl$10::steal::closure$1 (1 samples, 0.13%)</title><rect x="35.8871%" y="1829" width="0.1344%" height="15" fill="rgb(230,228,32)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1839.50"></text></g><g><title>fuzzit.exe`crossbeam_deque::deque::Stealer&lt;rayon_core::job::JobRef&gt;::steal&lt;rayon_core::job::JobRef&gt; (1 samples, 0.13%)</title><rect x="35.8871%" y="1813" width="0.1344%" height="15" fill="rgb(248,217,23)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1823.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::is_pinned (1 samples, 0.13%)</title><rect x="35.8871%" y="1797" width="0.1344%" height="15" fill="rgb(238,197,32)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1807.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::with_handle (1 samples, 0.13%)</title><rect x="35.8871%" y="1781" width="0.1344%" height="15" fill="rgb(236,106,1)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1791.50"></text></g><g><title>fuzzit.exe`std::thread::local::LocalKey&lt;crossbeam_epoch::collector::LocalHandle&gt;::try_with(crossbeam_epoch::default::with_handle::closure_env$0 (1 samples, 0.13%)</title><rect x="35.8871%" y="1765" width="0.1344%" height="15" fill="rgb(219,228,13)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1775.50"></text></g><g><title>fuzzit.exe`core::ops::function::FnOnce::call_once(crossbeam_epoch::default::HANDLE::constant$0::closure_env$0, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option (1 samples, 0.13%)</title><rect x="35.8871%" y="1749" width="0.1344%" height="15" fill="rgb(238,30,35)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1759.50"></text></g><g><title>fuzzit.exe`crossbeam_epoch::default::HANDLE::constant$0::closure$0(crossbeam_epoch::default::HANDLE::constant$0::closure_env$0*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option (1 samples, 0.13%)</title><rect x="35.8871%" y="1733" width="0.1344%" height="15" fill="rgb(236,70,23)" fg:x="267" fg:w="1"/><text x="36.1371%" y="1743.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="36.0215%" y="1781" width="0.1344%" height="15" fill="rgb(249,104,48)" fg:x="268" fg:w="1"/><text x="36.2715%" y="1791.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="36.0215%" y="1765" width="0.1344%" height="15" fill="rgb(254,117,50)" fg:x="268" fg:w="1"/><text x="36.2715%" y="1775.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="36.0215%" y="1749" width="0.1344%" height="15" fill="rgb(223,152,4)" fg:x="268" fg:w="1"/><text x="36.2715%" y="1759.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="36.1559%" y="1733" width="0.1344%" height="15" fill="rgb(245,6,2)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.13%)</title><rect x="36.1559%" y="1717" width="0.1344%" height="15" fill="rgb(249,150,24)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.13%)</title><rect x="36.1559%" y="1701" width="0.1344%" height="15" fill="rgb(228,185,42)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1711.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.13%)</title><rect x="36.1559%" y="1685" width="0.1344%" height="15" fill="rgb(226,39,33)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1695.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="36.1559%" y="1669" width="0.1344%" height="15" fill="rgb(221,166,19)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1679.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="36.1559%" y="1653" width="0.1344%" height="15" fill="rgb(209,109,2)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1663.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="36.1559%" y="1637" width="0.1344%" height="15" fill="rgb(252,216,26)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1647.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="36.1559%" y="1621" width="0.1344%" height="15" fill="rgb(227,173,36)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1631.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="36.1559%" y="1605" width="0.1344%" height="15" fill="rgb(209,90,7)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1615.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="36.1559%" y="1589" width="0.1344%" height="15" fill="rgb(250,194,11)" fg:x="269" fg:w="1"/><text x="36.4059%" y="1599.50"></text></g><g><title>`0x7FFE2C8776C5 (4 samples, 0.54%)</title><rect x="36.2903%" y="1669" width="0.5376%" height="15" fill="rgb(220,72,50)" fg:x="270" fg:w="4"/><text x="36.5403%" y="1679.50"></text></g><g><title>`0x7FFE2F1A4C44 (4 samples, 0.54%)</title><rect x="36.2903%" y="1653" width="0.5376%" height="15" fill="rgb(222,106,48)" fg:x="270" fg:w="4"/><text x="36.5403%" y="1663.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="36.8280%" y="1669" width="0.4032%" height="15" fill="rgb(216,220,45)" fg:x="274" fg:w="3"/><text x="37.0780%" y="1679.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="36.8280%" y="1653" width="0.4032%" height="15" fill="rgb(234,112,18)" fg:x="274" fg:w="3"/><text x="37.0780%" y="1663.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="36.8280%" y="1637" width="0.4032%" height="15" fill="rgb(206,179,9)" fg:x="274" fg:w="3"/><text x="37.0780%" y="1647.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="36.8280%" y="1621" width="0.4032%" height="15" fill="rgb(215,115,40)" fg:x="274" fg:w="3"/><text x="37.0780%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.08%)</title><rect x="36.2903%" y="1733" width="1.0753%" height="15" fill="rgb(222,69,34)" fg:x="270" fg:w="8"/><text x="36.5403%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.08%)</title><rect x="36.2903%" y="1717" width="1.0753%" height="15" fill="rgb(209,161,10)" fg:x="270" fg:w="8"/><text x="36.5403%" y="1727.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.08%)</title><rect x="36.2903%" y="1701" width="1.0753%" height="15" fill="rgb(217,6,38)" fg:x="270" fg:w="8"/><text x="36.5403%" y="1711.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.08%)</title><rect x="36.2903%" y="1685" width="1.0753%" height="15" fill="rgb(229,229,48)" fg:x="270" fg:w="8"/><text x="36.5403%" y="1695.50"></text></g><g><title>`0x7FFE2C878C6E (1 samples, 0.13%)</title><rect x="37.2312%" y="1669" width="0.1344%" height="15" fill="rgb(225,21,28)" fg:x="277" fg:w="1"/><text x="37.4812%" y="1679.50"></text></g><g><title>`0x7FFE2DD316EC (1 samples, 0.13%)</title><rect x="37.2312%" y="1653" width="0.1344%" height="15" fill="rgb(206,33,13)" fg:x="277" fg:w="1"/><text x="37.4812%" y="1663.50"></text></g><g><title>`0x7FFE2F13D582 (1 samples, 0.13%)</title><rect x="37.2312%" y="1637" width="0.1344%" height="15" fill="rgb(242,178,17)" fg:x="277" fg:w="1"/><text x="37.4812%" y="1647.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (14 samples, 1.88%)</title><rect x="35.8871%" y="2085" width="1.8817%" height="15" fill="rgb(220,162,5)" fg:x="267" fg:w="14"/><text x="36.1371%" y="2095.50">f..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 1.88%)</title><rect x="35.8871%" y="2069" width="1.8817%" height="15" fill="rgb(210,33,43)" fg:x="267" fg:w="14"/><text x="36.1371%" y="2079.50">f..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (13 samples, 1.75%)</title><rect x="36.0215%" y="2053" width="1.7473%" height="15" fill="rgb(216,116,54)" fg:x="268" fg:w="13"/><text x="36.2715%" y="2063.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (13 samples, 1.75%)</title><rect x="36.0215%" y="2037" width="1.7473%" height="15" fill="rgb(249,92,24)" fg:x="268" fg:w="13"/><text x="36.2715%" y="2047.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (13 samples, 1.75%)</title><rect x="36.0215%" y="2021" width="1.7473%" height="15" fill="rgb(231,189,14)" fg:x="268" fg:w="13"/><text x="36.2715%" y="2031.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="36.0215%" y="2005" width="1.7473%" height="15" fill="rgb(230,8,41)" fg:x="268" fg:w="13"/><text x="36.2715%" y="2015.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="36.0215%" y="1989" width="1.7473%" height="15" fill="rgb(249,7,27)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1999.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="36.0215%" y="1973" width="1.7473%" height="15" fill="rgb(232,86,5)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1983.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="36.0215%" y="1957" width="1.7473%" height="15" fill="rgb(224,175,18)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1967.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (13 samples, 1.75%)</title><rect x="36.0215%" y="1941" width="1.7473%" height="15" fill="rgb(220,129,12)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1951.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="36.0215%" y="1925" width="1.7473%" height="15" fill="rgb(210,19,36)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1935.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="36.0215%" y="1909" width="1.7473%" height="15" fill="rgb(219,96,14)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1919.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="36.0215%" y="1893" width="1.7473%" height="15" fill="rgb(249,106,1)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="36.0215%" y="1877" width="1.7473%" height="15" fill="rgb(249,155,20)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1887.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (13 samples, 1.75%)</title><rect x="36.0215%" y="1861" width="1.7473%" height="15" fill="rgb(244,168,9)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1871.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (13 samples, 1.75%)</title><rect x="36.0215%" y="1845" width="1.7473%" height="15" fill="rgb(216,23,50)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1855.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (13 samples, 1.75%)</title><rect x="36.0215%" y="1829" width="1.7473%" height="15" fill="rgb(224,219,20)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1839.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (13 samples, 1.75%)</title><rect x="36.0215%" y="1813" width="1.7473%" height="15" fill="rgb(222,156,15)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1823.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (13 samples, 1.75%)</title><rect x="36.0215%" y="1797" width="1.7473%" height="15" fill="rgb(231,97,17)" fg:x="268" fg:w="13"/><text x="36.2715%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.61%)</title><rect x="36.1559%" y="1781" width="1.6129%" height="15" fill="rgb(218,70,48)" fg:x="269" fg:w="12"/><text x="36.4059%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (12 samples, 1.61%)</title><rect x="36.1559%" y="1765" width="1.6129%" height="15" fill="rgb(212,196,52)" fg:x="269" fg:w="12"/><text x="36.4059%" y="1775.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (12 samples, 1.61%)</title><rect x="36.1559%" y="1749" width="1.6129%" height="15" fill="rgb(243,203,18)" fg:x="269" fg:w="12"/><text x="36.4059%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="37.3656%" y="1733" width="0.4032%" height="15" fill="rgb(252,125,41)" fg:x="278" fg:w="3"/><text x="37.6156%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="37.3656%" y="1717" width="0.4032%" height="15" fill="rgb(223,180,33)" fg:x="278" fg:w="3"/><text x="37.6156%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (3 samples, 0.40%)</title><rect x="37.3656%" y="1701" width="0.4032%" height="15" fill="rgb(254,159,46)" fg:x="278" fg:w="3"/><text x="37.6156%" y="1711.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="37.3656%" y="1685" width="0.4032%" height="15" fill="rgb(254,38,10)" fg:x="278" fg:w="3"/><text x="37.6156%" y="1695.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="37.3656%" y="1669" width="0.4032%" height="15" fill="rgb(208,217,32)" fg:x="278" fg:w="3"/><text x="37.6156%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (3 samples, 0.40%)</title><rect x="37.3656%" y="1653" width="0.4032%" height="15" fill="rgb(221,120,13)" fg:x="278" fg:w="3"/><text x="37.6156%" y="1663.50"></text></g><g><title>`0x7FFE2C81DF99 (3 samples, 0.40%)</title><rect x="37.3656%" y="1637" width="0.4032%" height="15" fill="rgb(246,54,52)" fg:x="278" fg:w="3"/><text x="37.6156%" y="1647.50"></text></g><g><title>`0x7FFE2F1A39D4 (3 samples, 0.40%)</title><rect x="37.3656%" y="1621" width="0.4032%" height="15" fill="rgb(242,34,25)" fg:x="278" fg:w="3"/><text x="37.6156%" y="1631.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="37.7688%" y="1669" width="0.1344%" height="15" fill="rgb(247,209,9)" fg:x="281" fg:w="1"/><text x="38.0188%" y="1679.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="37.7688%" y="1653" width="0.1344%" height="15" fill="rgb(228,71,26)" fg:x="281" fg:w="1"/><text x="38.0188%" y="1663.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="37.7688%" y="1637" width="0.1344%" height="15" fill="rgb(222,145,49)" fg:x="281" fg:w="1"/><text x="38.0188%" y="1647.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.40%)</title><rect x="37.9032%" y="1669" width="0.4032%" height="15" fill="rgb(218,121,17)" fg:x="282" fg:w="3"/><text x="38.1532%" y="1679.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.40%)</title><rect x="37.9032%" y="1653" width="0.4032%" height="15" fill="rgb(244,50,7)" fg:x="282" fg:w="3"/><text x="38.1532%" y="1663.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 0.94%)</title><rect x="37.7688%" y="1733" width="0.9409%" height="15" fill="rgb(246,229,37)" fg:x="281" fg:w="7"/><text x="38.0188%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 0.94%)</title><rect x="37.7688%" y="1717" width="0.9409%" height="15" fill="rgb(225,18,5)" fg:x="281" fg:w="7"/><text x="38.0188%" y="1727.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 0.94%)</title><rect x="37.7688%" y="1701" width="0.9409%" height="15" fill="rgb(213,204,8)" fg:x="281" fg:w="7"/><text x="38.0188%" y="1711.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 0.94%)</title><rect x="37.7688%" y="1685" width="0.9409%" height="15" fill="rgb(238,103,6)" fg:x="281" fg:w="7"/><text x="38.0188%" y="1695.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="38.3065%" y="1669" width="0.4032%" height="15" fill="rgb(222,25,35)" fg:x="285" fg:w="3"/><text x="38.5565%" y="1679.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="38.3065%" y="1653" width="0.4032%" height="15" fill="rgb(213,203,35)" fg:x="285" fg:w="3"/><text x="38.5565%" y="1663.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="38.3065%" y="1637" width="0.4032%" height="15" fill="rgb(221,79,53)" fg:x="285" fg:w="3"/><text x="38.5565%" y="1647.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="38.3065%" y="1621" width="0.4032%" height="15" fill="rgb(243,200,35)" fg:x="285" fg:w="3"/><text x="38.5565%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="38.7097%" y="1701" width="0.1344%" height="15" fill="rgb(248,60,25)" fg:x="288" fg:w="1"/><text x="38.9597%" y="1711.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.13%)</title><rect x="38.7097%" y="1685" width="0.1344%" height="15" fill="rgb(227,53,46)" fg:x="288" fg:w="1"/><text x="38.9597%" y="1695.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="38.7097%" y="1669" width="0.1344%" height="15" fill="rgb(216,120,32)" fg:x="288" fg:w="1"/><text x="38.9597%" y="1679.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="38.7097%" y="1653" width="0.1344%" height="15" fill="rgb(220,134,1)" fg:x="288" fg:w="1"/><text x="38.9597%" y="1663.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="38.7097%" y="1637" width="0.1344%" height="15" fill="rgb(237,168,5)" fg:x="288" fg:w="1"/><text x="38.9597%" y="1647.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="38.7097%" y="1621" width="0.1344%" height="15" fill="rgb(231,100,33)" fg:x="288" fg:w="1"/><text x="38.9597%" y="1631.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="38.7097%" y="1605" width="0.1344%" height="15" fill="rgb(236,177,47)" fg:x="288" fg:w="1"/><text x="38.9597%" y="1615.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="38.7097%" y="1589" width="0.1344%" height="15" fill="rgb(235,7,49)" fg:x="288" fg:w="1"/><text x="38.9597%" y="1599.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="37.7688%" y="1909" width="1.3441%" height="15" fill="rgb(232,119,22)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1919.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="37.7688%" y="1893" width="1.3441%" height="15" fill="rgb(254,73,53)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="37.7688%" y="1877" width="1.3441%" height="15" fill="rgb(251,35,20)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1887.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (10 samples, 1.34%)</title><rect x="37.7688%" y="1861" width="1.3441%" height="15" fill="rgb(241,119,20)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1871.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (10 samples, 1.34%)</title><rect x="37.7688%" y="1845" width="1.3441%" height="15" fill="rgb(207,102,14)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1855.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (10 samples, 1.34%)</title><rect x="37.7688%" y="1829" width="1.3441%" height="15" fill="rgb(248,201,50)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1839.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (10 samples, 1.34%)</title><rect x="37.7688%" y="1813" width="1.3441%" height="15" fill="rgb(222,185,44)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1823.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (10 samples, 1.34%)</title><rect x="37.7688%" y="1797" width="1.3441%" height="15" fill="rgb(218,107,18)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (10 samples, 1.34%)</title><rect x="37.7688%" y="1781" width="1.3441%" height="15" fill="rgb(237,177,39)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (10 samples, 1.34%)</title><rect x="37.7688%" y="1765" width="1.3441%" height="15" fill="rgb(246,69,6)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1775.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (10 samples, 1.34%)</title><rect x="37.7688%" y="1749" width="1.3441%" height="15" fill="rgb(234,208,37)" fg:x="281" fg:w="10"/><text x="38.0188%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="38.7097%" y="1733" width="0.4032%" height="15" fill="rgb(225,4,6)" fg:x="288" fg:w="3"/><text x="38.9597%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="38.7097%" y="1717" width="0.4032%" height="15" fill="rgb(233,45,0)" fg:x="288" fg:w="3"/><text x="38.9597%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="38.8441%" y="1701" width="0.2688%" height="15" fill="rgb(226,136,5)" fg:x="289" fg:w="2"/><text x="39.0941%" y="1711.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="38.8441%" y="1685" width="0.2688%" height="15" fill="rgb(211,91,47)" fg:x="289" fg:w="2"/><text x="39.0941%" y="1695.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="38.8441%" y="1669" width="0.2688%" height="15" fill="rgb(242,88,51)" fg:x="289" fg:w="2"/><text x="39.0941%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="38.8441%" y="1653" width="0.2688%" height="15" fill="rgb(230,91,28)" fg:x="289" fg:w="2"/><text x="39.0941%" y="1663.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="38.8441%" y="1637" width="0.2688%" height="15" fill="rgb(254,186,29)" fg:x="289" fg:w="2"/><text x="39.0941%" y="1647.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="38.8441%" y="1621" width="0.2688%" height="15" fill="rgb(238,6,4)" fg:x="289" fg:w="2"/><text x="39.0941%" y="1631.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="39.1129%" y="1669" width="0.1344%" height="15" fill="rgb(221,151,16)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.13%)</title><rect x="39.1129%" y="1653" width="0.1344%" height="15" fill="rgb(251,143,52)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1663.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.13%)</title><rect x="39.1129%" y="1637" width="0.1344%" height="15" fill="rgb(206,90,15)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1647.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.13%)</title><rect x="39.1129%" y="1621" width="0.1344%" height="15" fill="rgb(218,35,8)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="39.1129%" y="1605" width="0.1344%" height="15" fill="rgb(239,215,6)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1615.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="39.1129%" y="1589" width="0.1344%" height="15" fill="rgb(245,116,39)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1599.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="39.1129%" y="1573" width="0.1344%" height="15" fill="rgb(242,65,28)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1583.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="39.1129%" y="1557" width="0.1344%" height="15" fill="rgb(252,132,53)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1567.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="39.1129%" y="1541" width="0.1344%" height="15" fill="rgb(224,159,50)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1551.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="39.1129%" y="1525" width="0.1344%" height="15" fill="rgb(224,93,4)" fg:x="291" fg:w="1"/><text x="39.3629%" y="1535.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="39.2473%" y="1605" width="0.1344%" height="15" fill="rgb(208,81,34)" fg:x="292" fg:w="1"/><text x="39.4973%" y="1615.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="39.2473%" y="1589" width="0.1344%" height="15" fill="rgb(233,92,54)" fg:x="292" fg:w="1"/><text x="39.4973%" y="1599.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="39.2473%" y="1573" width="0.1344%" height="15" fill="rgb(237,21,14)" fg:x="292" fg:w="1"/><text x="39.4973%" y="1583.50"></text></g><g><title>`0x7FFE2C8776C5 (6 samples, 0.81%)</title><rect x="39.3817%" y="1605" width="0.8065%" height="15" fill="rgb(249,128,51)" fg:x="293" fg:w="6"/><text x="39.6317%" y="1615.50"></text></g><g><title>`0x7FFE2F1A4C44 (6 samples, 0.81%)</title><rect x="39.3817%" y="1589" width="0.8065%" height="15" fill="rgb(223,129,24)" fg:x="293" fg:w="6"/><text x="39.6317%" y="1599.50"></text></g><g><title>`0x7FFE2DD2D5CA (1 samples, 0.13%)</title><rect x="40.1882%" y="1573" width="0.1344%" height="15" fill="rgb(231,168,25)" fg:x="299" fg:w="1"/><text x="40.4382%" y="1583.50"></text></g><g><title>`0x7FFE2DD2DE5C (1 samples, 0.13%)</title><rect x="40.1882%" y="1557" width="0.1344%" height="15" fill="rgb(224,39,20)" fg:x="299" fg:w="1"/><text x="40.4382%" y="1567.50"></text></g><g><title>`0x7FFE2DD2E744 (1 samples, 0.13%)</title><rect x="40.1882%" y="1541" width="0.1344%" height="15" fill="rgb(225,152,53)" fg:x="299" fg:w="1"/><text x="40.4382%" y="1551.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="40.1882%" y="1525" width="0.1344%" height="15" fill="rgb(252,17,24)" fg:x="299" fg:w="1"/><text x="40.4382%" y="1535.50"></text></g><g><title>`0x7FFE2C8787CB (6 samples, 0.81%)</title><rect x="40.1882%" y="1605" width="0.8065%" height="15" fill="rgb(250,114,30)" fg:x="299" fg:w="6"/><text x="40.4382%" y="1615.50"></text></g><g><title>`0x7FFE2DD2D052 (6 samples, 0.81%)</title><rect x="40.1882%" y="1589" width="0.8065%" height="15" fill="rgb(229,5,4)" fg:x="299" fg:w="6"/><text x="40.4382%" y="1599.50"></text></g><g><title>`0x7FFE2DD2D646 (5 samples, 0.67%)</title><rect x="40.3226%" y="1573" width="0.6720%" height="15" fill="rgb(225,176,49)" fg:x="300" fg:w="5"/><text x="40.5726%" y="1583.50"></text></g><g><title>`0x7FFE2F1A3BB4 (5 samples, 0.67%)</title><rect x="40.3226%" y="1557" width="0.6720%" height="15" fill="rgb(224,221,49)" fg:x="300" fg:w="5"/><text x="40.5726%" y="1567.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (14 samples, 1.88%)</title><rect x="39.2473%" y="1669" width="1.8817%" height="15" fill="rgb(253,169,27)" fg:x="292" fg:w="14"/><text x="39.4973%" y="1679.50">f..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (14 samples, 1.88%)</title><rect x="39.2473%" y="1653" width="1.8817%" height="15" fill="rgb(211,206,16)" fg:x="292" fg:w="14"/><text x="39.4973%" y="1663.50">f..</text></g><g><title>`0x7FFE2DD4C6D4 (14 samples, 1.88%)</title><rect x="39.2473%" y="1637" width="1.8817%" height="15" fill="rgb(244,87,35)" fg:x="292" fg:w="14"/><text x="39.4973%" y="1647.50">`..</text></g><g><title>`0x7FFE2C874E26 (14 samples, 1.88%)</title><rect x="39.2473%" y="1621" width="1.8817%" height="15" fill="rgb(246,28,10)" fg:x="292" fg:w="14"/><text x="39.4973%" y="1631.50">`..</text></g><g><title>`0x7FFE2C87A57A (1 samples, 0.13%)</title><rect x="40.9946%" y="1605" width="0.1344%" height="15" fill="rgb(229,12,44)" fg:x="305" fg:w="1"/><text x="41.2446%" y="1615.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="40.9946%" y="1589" width="0.1344%" height="15" fill="rgb(210,145,37)" fg:x="305" fg:w="1"/><text x="41.2446%" y="1599.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="41.1290%" y="1637" width="0.1344%" height="15" fill="rgb(227,112,52)" fg:x="306" fg:w="1"/><text x="41.3790%" y="1647.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (1 samples, 0.13%)</title><rect x="41.1290%" y="1621" width="0.1344%" height="15" fill="rgb(238,155,34)" fg:x="306" fg:w="1"/><text x="41.3790%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="41.1290%" y="1605" width="0.1344%" height="15" fill="rgb(239,226,36)" fg:x="306" fg:w="1"/><text x="41.3790%" y="1615.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="41.1290%" y="1589" width="0.1344%" height="15" fill="rgb(230,16,23)" fg:x="306" fg:w="1"/><text x="41.3790%" y="1599.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="41.1290%" y="1573" width="0.1344%" height="15" fill="rgb(236,171,36)" fg:x="306" fg:w="1"/><text x="41.3790%" y="1583.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="41.1290%" y="1557" width="0.1344%" height="15" fill="rgb(221,22,14)" fg:x="306" fg:w="1"/><text x="41.3790%" y="1567.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="41.1290%" y="1541" width="0.1344%" height="15" fill="rgb(242,43,11)" fg:x="306" fg:w="1"/><text x="41.3790%" y="1551.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="41.1290%" y="1525" width="0.1344%" height="15" fill="rgb(232,69,23)" fg:x="306" fg:w="1"/><text x="41.3790%" y="1535.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (45 samples, 6.05%)</title><rect x="35.8871%" y="2261" width="6.0484%" height="15" fill="rgb(216,180,54)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2271.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (45 samples, 6.05%)</title><rect x="35.8871%" y="2245" width="6.0484%" height="15" fill="rgb(216,5,24)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2255.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (45 samples, 6.05%)</title><rect x="35.8871%" y="2229" width="6.0484%" height="15" fill="rgb(225,89,9)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2239.50">fuzzit.e..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (45 samples, 6.05%)</title><rect x="35.8871%" y="2213" width="6.0484%" height="15" fill="rgb(243,75,33)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2223.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (45 samples, 6.05%)</title><rect x="35.8871%" y="2197" width="6.0484%" height="15" fill="rgb(247,141,45)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2207.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (45 samples, 6.05%)</title><rect x="35.8871%" y="2181" width="6.0484%" height="15" fill="rgb(232,177,36)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2191.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (45 samples, 6.05%)</title><rect x="35.8871%" y="2165" width="6.0484%" height="15" fill="rgb(219,125,36)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2175.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (45 samples, 6.05%)</title><rect x="35.8871%" y="2149" width="6.0484%" height="15" fill="rgb(227,94,9)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2159.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (45 samples, 6.05%)</title><rect x="35.8871%" y="2133" width="6.0484%" height="15" fill="rgb(240,34,52)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2143.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (45 samples, 6.05%)</title><rect x="35.8871%" y="2117" width="6.0484%" height="15" fill="rgb(216,45,12)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2127.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (45 samples, 6.05%)</title><rect x="35.8871%" y="2101" width="6.0484%" height="15" fill="rgb(246,21,19)" fg:x="267" fg:w="45"/><text x="36.1371%" y="2111.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (31 samples, 4.17%)</title><rect x="37.7688%" y="2085" width="4.1667%" height="15" fill="rgb(213,98,42)" fg:x="281" fg:w="31"/><text x="38.0188%" y="2095.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (31 samples, 4.17%)</title><rect x="37.7688%" y="2069" width="4.1667%" height="15" fill="rgb(250,136,47)" fg:x="281" fg:w="31"/><text x="38.0188%" y="2079.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (31 samples, 4.17%)</title><rect x="37.7688%" y="2053" width="4.1667%" height="15" fill="rgb(251,124,27)" fg:x="281" fg:w="31"/><text x="38.0188%" y="2063.50">fuzzi..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (31 samples, 4.17%)</title><rect x="37.7688%" y="2037" width="4.1667%" height="15" fill="rgb(229,180,14)" fg:x="281" fg:w="31"/><text x="38.0188%" y="2047.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (31 samples, 4.17%)</title><rect x="37.7688%" y="2021" width="4.1667%" height="15" fill="rgb(245,216,25)" fg:x="281" fg:w="31"/><text x="38.0188%" y="2031.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (31 samples, 4.17%)</title><rect x="37.7688%" y="2005" width="4.1667%" height="15" fill="rgb(251,43,5)" fg:x="281" fg:w="31"/><text x="38.0188%" y="2015.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (31 samples, 4.17%)</title><rect x="37.7688%" y="1989" width="4.1667%" height="15" fill="rgb(250,128,24)" fg:x="281" fg:w="31"/><text x="38.0188%" y="1999.50">fuzzi..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (31 samples, 4.17%)</title><rect x="37.7688%" y="1973" width="4.1667%" height="15" fill="rgb(217,117,27)" fg:x="281" fg:w="31"/><text x="38.0188%" y="1983.50">fuzzi..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (31 samples, 4.17%)</title><rect x="37.7688%" y="1957" width="4.1667%" height="15" fill="rgb(245,147,4)" fg:x="281" fg:w="31"/><text x="38.0188%" y="1967.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (31 samples, 4.17%)</title><rect x="37.7688%" y="1941" width="4.1667%" height="15" fill="rgb(242,201,35)" fg:x="281" fg:w="31"/><text x="38.0188%" y="1951.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (31 samples, 4.17%)</title><rect x="37.7688%" y="1925" width="4.1667%" height="15" fill="rgb(218,181,1)" fg:x="281" fg:w="31"/><text x="38.0188%" y="1935.50">fuzzi..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (21 samples, 2.82%)</title><rect x="39.1129%" y="1909" width="2.8226%" height="15" fill="rgb(222,6,29)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1919.50">fu..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (21 samples, 2.82%)</title><rect x="39.1129%" y="1893" width="2.8226%" height="15" fill="rgb(208,186,3)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1903.50">fu..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (21 samples, 2.82%)</title><rect x="39.1129%" y="1877" width="2.8226%" height="15" fill="rgb(216,36,26)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1887.50">fu..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (21 samples, 2.82%)</title><rect x="39.1129%" y="1861" width="2.8226%" height="15" fill="rgb(248,201,23)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1871.50">fu..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (21 samples, 2.82%)</title><rect x="39.1129%" y="1845" width="2.8226%" height="15" fill="rgb(251,170,31)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1855.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (21 samples, 2.82%)</title><rect x="39.1129%" y="1829" width="2.8226%" height="15" fill="rgb(207,110,25)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1839.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (21 samples, 2.82%)</title><rect x="39.1129%" y="1813" width="2.8226%" height="15" fill="rgb(250,54,15)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1823.50">fu..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (21 samples, 2.82%)</title><rect x="39.1129%" y="1797" width="2.8226%" height="15" fill="rgb(227,68,33)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1807.50">fu..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (21 samples, 2.82%)</title><rect x="39.1129%" y="1781" width="2.8226%" height="15" fill="rgb(238,34,41)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1791.50">fu..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (21 samples, 2.82%)</title><rect x="39.1129%" y="1765" width="2.8226%" height="15" fill="rgb(220,11,15)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1775.50">fu..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (21 samples, 2.82%)</title><rect x="39.1129%" y="1749" width="2.8226%" height="15" fill="rgb(246,111,35)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1759.50">fu..</text></g><g><title>fuzzit.exe`std::process::Command::output (21 samples, 2.82%)</title><rect x="39.1129%" y="1733" width="2.8226%" height="15" fill="rgb(209,88,53)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1743.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::output (21 samples, 2.82%)</title><rect x="39.1129%" y="1717" width="2.8226%" height="15" fill="rgb(231,185,47)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1727.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (21 samples, 2.82%)</title><rect x="39.1129%" y="1701" width="2.8226%" height="15" fill="rgb(233,154,1)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1711.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (21 samples, 2.82%)</title><rect x="39.1129%" y="1685" width="2.8226%" height="15" fill="rgb(225,15,46)" fg:x="291" fg:w="21"/><text x="39.3629%" y="1695.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (6 samples, 0.81%)</title><rect x="41.1290%" y="1669" width="0.8065%" height="15" fill="rgb(211,135,41)" fg:x="306" fg:w="6"/><text x="41.3790%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (6 samples, 0.81%)</title><rect x="41.1290%" y="1653" width="0.8065%" height="15" fill="rgb(208,54,0)" fg:x="306" fg:w="6"/><text x="41.3790%" y="1663.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (5 samples, 0.67%)</title><rect x="41.2634%" y="1637" width="0.6720%" height="15" fill="rgb(244,136,14)" fg:x="307" fg:w="5"/><text x="41.5134%" y="1647.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (5 samples, 0.67%)</title><rect x="41.2634%" y="1621" width="0.6720%" height="15" fill="rgb(241,56,14)" fg:x="307" fg:w="5"/><text x="41.5134%" y="1631.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (5 samples, 0.67%)</title><rect x="41.2634%" y="1605" width="0.6720%" height="15" fill="rgb(205,80,24)" fg:x="307" fg:w="5"/><text x="41.5134%" y="1615.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (5 samples, 0.67%)</title><rect x="41.2634%" y="1589" width="0.6720%" height="15" fill="rgb(220,57,4)" fg:x="307" fg:w="5"/><text x="41.5134%" y="1599.50"></text></g><g><title>`0x7FFE2C81DF99 (5 samples, 0.67%)</title><rect x="41.2634%" y="1573" width="0.6720%" height="15" fill="rgb(226,193,50)" fg:x="307" fg:w="5"/><text x="41.5134%" y="1583.50"></text></g><g><title>`0x7FFE2F1A39D4 (5 samples, 0.67%)</title><rect x="41.2634%" y="1557" width="0.6720%" height="15" fill="rgb(231,168,22)" fg:x="307" fg:w="5"/><text x="41.5134%" y="1567.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (46 samples, 6.18%)</title><rect x="35.8871%" y="2293" width="6.1828%" height="15" fill="rgb(254,215,14)" fg:x="267" fg:w="46"/><text x="36.1371%" y="2303.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (46 samples, 6.18%)</title><rect x="35.8871%" y="2277" width="6.1828%" height="15" fill="rgb(211,115,16)" fg:x="267" fg:w="46"/><text x="36.1371%" y="2287.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.13%)</title><rect x="41.9355%" y="2261" width="0.1344%" height="15" fill="rgb(236,210,16)" fg:x="312" fg:w="1"/><text x="42.1855%" y="2271.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.13%)</title><rect x="41.9355%" y="2245" width="0.1344%" height="15" fill="rgb(221,94,12)" fg:x="312" fg:w="1"/><text x="42.1855%" y="2255.50"></text></g><g><title>fuzzit.exe`std::sync::poison::mutex::Mutex&lt;bool&gt;::lock (1 samples, 0.13%)</title><rect x="41.9355%" y="2229" width="0.1344%" height="15" fill="rgb(235,218,49)" fg:x="312" fg:w="1"/><text x="42.1855%" y="2239.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.13%)</title><rect x="41.9355%" y="2213" width="0.1344%" height="15" fill="rgb(217,114,14)" fg:x="312" fg:w="1"/><text x="42.1855%" y="2223.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.13%)</title><rect x="41.9355%" y="2197" width="0.1344%" height="15" fill="rgb(216,145,22)" fg:x="312" fg:w="1"/><text x="42.1855%" y="2207.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::spin (1 samples, 0.13%)</title><rect x="41.9355%" y="2181" width="0.1344%" height="15" fill="rgb(217,112,39)" fg:x="312" fg:w="1"/><text x="42.1855%" y="2191.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.13%)</title><rect x="42.0699%" y="2053" width="0.1344%" height="15" fill="rgb(225,85,32)" fg:x="313" fg:w="1"/><text x="42.3199%" y="2063.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="42.0699%" y="2037" width="0.1344%" height="15" fill="rgb(245,209,47)" fg:x="313" fg:w="1"/><text x="42.3199%" y="2047.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="42.0699%" y="2021" width="0.1344%" height="15" fill="rgb(218,220,15)" fg:x="313" fg:w="1"/><text x="42.3199%" y="2031.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (2 samples, 0.27%)</title><rect x="42.0699%" y="2085" width="0.2688%" height="15" fill="rgb(222,202,31)" fg:x="313" fg:w="2"/><text x="42.3199%" y="2095.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (2 samples, 0.27%)</title><rect x="42.0699%" y="2069" width="0.2688%" height="15" fill="rgb(243,203,4)" fg:x="313" fg:w="2"/><text x="42.3199%" y="2079.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::result (1 samples, 0.13%)</title><rect x="42.2043%" y="2053" width="0.1344%" height="15" fill="rgb(237,92,17)" fg:x="314" fg:w="1"/><text x="42.4543%" y="2063.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::overlapped_result (1 samples, 0.13%)</title><rect x="42.2043%" y="2037" width="0.1344%" height="15" fill="rgb(231,119,7)" fg:x="314" fg:w="1"/><text x="42.4543%" y="2047.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (1 samples, 0.13%)</title><rect x="42.2043%" y="2021" width="0.1344%" height="15" fill="rgb(237,82,41)" fg:x="314" fg:w="1"/><text x="42.4543%" y="2031.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.13%)</title><rect x="42.2043%" y="2005" width="0.1344%" height="15" fill="rgb(226,81,48)" fg:x="314" fg:w="1"/><text x="42.4543%" y="2015.50"></text></g><g><title>`0x7FFE2C7FE6A4 (1 samples, 0.13%)</title><rect x="42.2043%" y="1989" width="0.1344%" height="15" fill="rgb(234,70,51)" fg:x="314" fg:w="1"/><text x="42.4543%" y="1999.50"></text></g><g><title>`0x7FFE2F078E0D (1 samples, 0.13%)</title><rect x="42.2043%" y="1973" width="0.1344%" height="15" fill="rgb(251,86,4)" fg:x="314" fg:w="1"/><text x="42.4543%" y="1983.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (2 samples, 0.27%)</title><rect x="42.3387%" y="2053" width="0.2688%" height="15" fill="rgb(244,144,28)" fg:x="315" fg:w="2"/><text x="42.5887%" y="2063.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (2 samples, 0.27%)</title><rect x="42.3387%" y="2037" width="0.2688%" height="15" fill="rgb(232,161,39)" fg:x="315" fg:w="2"/><text x="42.5887%" y="2047.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (2 samples, 0.27%)</title><rect x="42.3387%" y="2021" width="0.2688%" height="15" fill="rgb(247,34,51)" fg:x="315" fg:w="2"/><text x="42.5887%" y="2031.50"></text></g><g><title>`0x7FFE2C8CFEE5 (2 samples, 0.27%)</title><rect x="42.3387%" y="2005" width="0.2688%" height="15" fill="rgb(225,132,2)" fg:x="315" fg:w="2"/><text x="42.5887%" y="2015.50"></text></g><g><title>`0x7FFE2F1A4984 (2 samples, 0.27%)</title><rect x="42.3387%" y="1989" width="0.2688%" height="15" fill="rgb(209,159,44)" fg:x="315" fg:w="2"/><text x="42.5887%" y="1999.50"></text></g><g><title>fuzzit.exe`std::sync::poison::mutex::Mutex::lock (1 samples, 0.13%)</title><rect x="42.6075%" y="2053" width="0.1344%" height="15" fill="rgb(251,214,1)" fg:x="317" fg:w="1"/><text x="42.8575%" y="2063.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock (1 samples, 0.13%)</title><rect x="42.6075%" y="2037" width="0.1344%" height="15" fill="rgb(247,84,47)" fg:x="317" fg:w="1"/><text x="42.8575%" y="2047.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::lock_contended (1 samples, 0.13%)</title><rect x="42.6075%" y="2021" width="0.1344%" height="15" fill="rgb(240,111,43)" fg:x="317" fg:w="1"/><text x="42.8575%" y="2031.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::futex_wait (1 samples, 0.13%)</title><rect x="42.6075%" y="2005" width="0.1344%" height="15" fill="rgb(215,214,35)" fg:x="317" fg:w="1"/><text x="42.8575%" y="2015.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::wait_on_address (1 samples, 0.13%)</title><rect x="42.6075%" y="1989" width="0.1344%" height="15" fill="rgb(248,207,23)" fg:x="317" fg:w="1"/><text x="42.8575%" y="1999.50"></text></g><g><title>`0x7FFE2C8C2638 (1 samples, 0.13%)</title><rect x="42.6075%" y="1973" width="0.1344%" height="15" fill="rgb(214,186,4)" fg:x="317" fg:w="1"/><text x="42.8575%" y="1983.50"></text></g><g><title>`0x7FFE2F046D63 (1 samples, 0.13%)</title><rect x="42.6075%" y="1957" width="0.1344%" height="15" fill="rgb(220,133,22)" fg:x="317" fg:w="1"/><text x="42.8575%" y="1967.50"></text></g><g><title>`0x7FFE2F1A6E84 (1 samples, 0.13%)</title><rect x="42.6075%" y="1941" width="0.1344%" height="15" fill="rgb(239,134,19)" fg:x="317" fg:w="1"/><text x="42.8575%" y="1951.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.13%)</title><rect x="42.7419%" y="1957" width="0.1344%" height="15" fill="rgb(250,140,9)" fg:x="318" fg:w="1"/><text x="42.9919%" y="1967.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="42.7419%" y="1941" width="0.1344%" height="15" fill="rgb(225,59,14)" fg:x="318" fg:w="1"/><text x="42.9919%" y="1951.50"></text></g><g><title>`0x7FFE2C902481 (2 samples, 0.27%)</title><rect x="42.7419%" y="1973" width="0.2688%" height="15" fill="rgb(214,152,51)" fg:x="318" fg:w="2"/><text x="42.9919%" y="1983.50"></text></g><g><title>`0x7FFE2C90B06A (1 samples, 0.13%)</title><rect x="42.8763%" y="1957" width="0.1344%" height="15" fill="rgb(251,227,43)" fg:x="319" fg:w="1"/><text x="43.1263%" y="1967.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.13%)</title><rect x="42.8763%" y="1941" width="0.1344%" height="15" fill="rgb(241,96,17)" fg:x="319" fg:w="1"/><text x="43.1263%" y="1951.50"></text></g><g><title>`0x7FFE2C8774BC (3 samples, 0.40%)</title><rect x="42.7419%" y="1989" width="0.4032%" height="15" fill="rgb(234,198,43)" fg:x="318" fg:w="3"/><text x="42.9919%" y="1999.50"></text></g><g><title>`0x7FFE2C9024B5 (1 samples, 0.13%)</title><rect x="43.0108%" y="1973" width="0.1344%" height="15" fill="rgb(220,108,29)" fg:x="320" fg:w="1"/><text x="43.2608%" y="1983.50"></text></g><g><title>`0x7FFE2F0F2AD5 (1 samples, 0.13%)</title><rect x="43.0108%" y="1957" width="0.1344%" height="15" fill="rgb(226,163,33)" fg:x="320" fg:w="1"/><text x="43.2608%" y="1967.50"></text></g><g><title>`0x7FFE2F0F3004 (1 samples, 0.13%)</title><rect x="43.0108%" y="1941" width="0.1344%" height="15" fill="rgb(205,194,45)" fg:x="320" fg:w="1"/><text x="43.2608%" y="1951.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="43.0108%" y="1925" width="0.1344%" height="15" fill="rgb(206,143,44)" fg:x="320" fg:w="1"/><text x="43.2608%" y="1935.50"></text></g><g><title>`0x7FFE2C8776C5 (14 samples, 1.88%)</title><rect x="43.1452%" y="1989" width="1.8817%" height="15" fill="rgb(236,136,36)" fg:x="321" fg:w="14"/><text x="43.3952%" y="1999.50">`..</text></g><g><title>`0x7FFE2F1A4C44 (14 samples, 1.88%)</title><rect x="43.1452%" y="1973" width="1.8817%" height="15" fill="rgb(249,172,42)" fg:x="321" fg:w="14"/><text x="43.3952%" y="1983.50">`..</text></g><g><title>`0x7FFE2DD2DE27 (1 samples, 0.13%)</title><rect x="45.0269%" y="1941" width="0.1344%" height="15" fill="rgb(216,139,23)" fg:x="335" fg:w="1"/><text x="45.2769%" y="1951.50"></text></g><g><title>`0x7FFE2DD2F673 (1 samples, 0.13%)</title><rect x="45.0269%" y="1925" width="0.1344%" height="15" fill="rgb(207,166,20)" fg:x="335" fg:w="1"/><text x="45.2769%" y="1935.50"></text></g><g><title>`0x7FFE2DD2D389 (1 samples, 0.13%)</title><rect x="45.0269%" y="1909" width="0.1344%" height="15" fill="rgb(210,209,22)" fg:x="335" fg:w="1"/><text x="45.2769%" y="1919.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="45.0269%" y="1893" width="0.1344%" height="15" fill="rgb(232,118,20)" fg:x="335" fg:w="1"/><text x="45.2769%" y="1903.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.13%)</title><rect x="45.0269%" y="1877" width="0.1344%" height="15" fill="rgb(238,113,42)" fg:x="335" fg:w="1"/><text x="45.2769%" y="1887.50"></text></g><g><title>`0x7FFE2F0916E1 (1 samples, 0.13%)</title><rect x="45.0269%" y="1861" width="0.1344%" height="15" fill="rgb(231,42,5)" fg:x="335" fg:w="1"/><text x="45.2769%" y="1871.50"></text></g><g><title>`0x7FFE2DD2D5CA (2 samples, 0.27%)</title><rect x="45.0269%" y="1957" width="0.2688%" height="15" fill="rgb(243,166,24)" fg:x="335" fg:w="2"/><text x="45.2769%" y="1967.50"></text></g><g><title>`0x7FFE2DD2DE5C (1 samples, 0.13%)</title><rect x="45.1613%" y="1941" width="0.1344%" height="15" fill="rgb(237,226,12)" fg:x="336" fg:w="1"/><text x="45.4113%" y="1951.50"></text></g><g><title>`0x7FFE2DD2E7A8 (1 samples, 0.13%)</title><rect x="45.1613%" y="1925" width="0.1344%" height="15" fill="rgb(229,133,24)" fg:x="336" fg:w="1"/><text x="45.4113%" y="1935.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.13%)</title><rect x="45.1613%" y="1909" width="0.1344%" height="15" fill="rgb(238,33,43)" fg:x="336" fg:w="1"/><text x="45.4113%" y="1919.50"></text></g><g><title>`0x7FFE2DD2D5FB (1 samples, 0.13%)</title><rect x="45.2957%" y="1957" width="0.1344%" height="15" fill="rgb(227,59,38)" fg:x="337" fg:w="1"/><text x="45.5457%" y="1967.50"></text></g><g><title>`0x7FFE2DD2E4E1 (1 samples, 0.13%)</title><rect x="45.2957%" y="1941" width="0.1344%" height="15" fill="rgb(230,97,0)" fg:x="337" fg:w="1"/><text x="45.5457%" y="1951.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="45.2957%" y="1925" width="0.1344%" height="15" fill="rgb(250,173,50)" fg:x="337" fg:w="1"/><text x="45.5457%" y="1935.50"></text></g><g><title>`0x7FFE2C8787CB (15 samples, 2.02%)</title><rect x="45.0269%" y="1989" width="2.0161%" height="15" fill="rgb(240,15,50)" fg:x="335" fg:w="15"/><text x="45.2769%" y="1999.50">`..</text></g><g><title>`0x7FFE2DD2D052 (15 samples, 2.02%)</title><rect x="45.0269%" y="1973" width="2.0161%" height="15" fill="rgb(221,93,22)" fg:x="335" fg:w="15"/><text x="45.2769%" y="1983.50">`..</text></g><g><title>`0x7FFE2DD2D646 (12 samples, 1.61%)</title><rect x="45.4301%" y="1957" width="1.6129%" height="15" fill="rgb(245,180,53)" fg:x="338" fg:w="12"/><text x="45.6801%" y="1967.50"></text></g><g><title>`0x7FFE2F1A3BB4 (12 samples, 1.61%)</title><rect x="45.4301%" y="1941" width="1.6129%" height="15" fill="rgb(231,88,51)" fg:x="338" fg:w="12"/><text x="45.6801%" y="1951.50"></text></g><g><title>`0x7FFE2DD37F15 (1 samples, 0.13%)</title><rect x="47.0430%" y="1973" width="0.1344%" height="15" fill="rgb(240,58,21)" fg:x="350" fg:w="1"/><text x="47.2930%" y="1983.50"></text></g><g><title>`0x7FFE2DD37743 (1 samples, 0.13%)</title><rect x="47.0430%" y="1957" width="0.1344%" height="15" fill="rgb(237,21,10)" fg:x="350" fg:w="1"/><text x="47.2930%" y="1967.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.13%)</title><rect x="47.0430%" y="1941" width="0.1344%" height="15" fill="rgb(218,43,11)" fg:x="350" fg:w="1"/><text x="47.2930%" y="1951.50"></text></g><g><title>`0x7FFE2C87892F (2 samples, 0.27%)</title><rect x="47.0430%" y="1989" width="0.2688%" height="15" fill="rgb(218,221,29)" fg:x="350" fg:w="2"/><text x="47.2930%" y="1999.50"></text></g><g><title>`0x7FFE2DD37F70 (1 samples, 0.13%)</title><rect x="47.1774%" y="1973" width="0.1344%" height="15" fill="rgb(214,118,42)" fg:x="351" fg:w="1"/><text x="47.4274%" y="1983.50"></text></g><g><title>`0x7FFE2DD34BEC (1 samples, 0.13%)</title><rect x="47.1774%" y="1957" width="0.1344%" height="15" fill="rgb(251,200,26)" fg:x="351" fg:w="1"/><text x="47.4274%" y="1967.50"></text></g><g><title>`0x7FFE2F1A3B54 (1 samples, 0.13%)</title><rect x="47.1774%" y="1941" width="0.1344%" height="15" fill="rgb(237,101,39)" fg:x="351" fg:w="1"/><text x="47.4274%" y="1951.50"></text></g><g><title>`0x7FFE2C878B3F (1 samples, 0.13%)</title><rect x="47.3118%" y="1989" width="0.1344%" height="15" fill="rgb(251,117,11)" fg:x="352" fg:w="1"/><text x="47.5618%" y="1999.50"></text></g><g><title>`0x7FFE2F075D02 (1 samples, 0.13%)</title><rect x="47.3118%" y="1973" width="0.1344%" height="15" fill="rgb(216,223,23)" fg:x="352" fg:w="1"/><text x="47.5618%" y="1983.50"></text></g><g><title>`0x7FFE2F1A43E4 (1 samples, 0.13%)</title><rect x="47.3118%" y="1957" width="0.1344%" height="15" fill="rgb(251,54,12)" fg:x="352" fg:w="1"/><text x="47.5618%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (36 samples, 4.84%)</title><rect x="42.7419%" y="2053" width="4.8387%" height="15" fill="rgb(254,176,54)" fg:x="318" fg:w="36"/><text x="42.9919%" y="2063.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (36 samples, 4.84%)</title><rect x="42.7419%" y="2037" width="4.8387%" height="15" fill="rgb(210,32,8)" fg:x="318" fg:w="36"/><text x="42.9919%" y="2047.50">fuzzit..</text></g><g><title>`0x7FFE2DD4C6D4 (36 samples, 4.84%)</title><rect x="42.7419%" y="2021" width="4.8387%" height="15" fill="rgb(235,52,38)" fg:x="318" fg:w="36"/><text x="42.9919%" y="2031.50">`0x7FF..</text></g><g><title>`0x7FFE2C874E26 (36 samples, 4.84%)</title><rect x="42.7419%" y="2005" width="4.8387%" height="15" fill="rgb(231,4,44)" fg:x="318" fg:w="36"/><text x="42.9919%" y="2015.50">`0x7FF..</text></g><g><title>`0x7FFE2C879763 (1 samples, 0.13%)</title><rect x="47.4462%" y="1989" width="0.1344%" height="15" fill="rgb(249,2,32)" fg:x="353" fg:w="1"/><text x="47.6962%" y="1999.50"></text></g><g><title>`0x7FFE2F1A3974 (1 samples, 0.13%)</title><rect x="47.4462%" y="1973" width="0.1344%" height="15" fill="rgb(224,65,26)" fg:x="353" fg:w="1"/><text x="47.6962%" y="1983.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::make_command_line (1 samples, 0.13%)</title><rect x="47.5806%" y="2053" width="0.1344%" height="15" fill="rgb(250,73,40)" fg:x="354" fg:w="1"/><text x="47.8306%" y="2063.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.13%)</title><rect x="47.5806%" y="2037" width="0.1344%" height="15" fill="rgb(253,177,16)" fg:x="354" fg:w="1"/><text x="47.8306%" y="2047.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_desugared&lt;u16,alloc::alloc::Global,std::sys_common::wtf8::EncodeWide&gt; (1 samples, 0.13%)</title><rect x="47.5806%" y="2021" width="0.1344%" height="15" fill="rgb(217,32,34)" fg:x="354" fg:w="1"/><text x="47.8306%" y="2031.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.13%)</title><rect x="47.7151%" y="2021" width="0.1344%" height="15" fill="rgb(212,7,10)" fg:x="355" fg:w="1"/><text x="47.9651%" y="2031.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.13%)</title><rect x="47.7151%" y="2005" width="0.1344%" height="15" fill="rgb(245,89,8)" fg:x="355" fg:w="1"/><text x="47.9651%" y="2015.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.13%)</title><rect x="47.7151%" y="1989" width="0.1344%" height="15" fill="rgb(237,16,53)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1999.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (1 samples, 0.13%)</title><rect x="47.7151%" y="1973" width="0.1344%" height="15" fill="rgb(250,204,30)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1983.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.13%)</title><rect x="47.7151%" y="1957" width="0.1344%" height="15" fill="rgb(208,77,27)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1967.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.13%)</title><rect x="47.7151%" y="1941" width="0.1344%" height="15" fill="rgb(250,204,28)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1951.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.13%)</title><rect x="47.7151%" y="1925" width="0.1344%" height="15" fill="rgb(244,63,21)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1935.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.13%)</title><rect x="47.7151%" y="1909" width="0.1344%" height="15" fill="rgb(236,85,44)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1919.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.13%)</title><rect x="47.7151%" y="1893" width="0.1344%" height="15" fill="rgb(215,98,4)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1903.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="47.7151%" y="1877" width="0.1344%" height="15" fill="rgb(235,38,11)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1887.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.13%)</title><rect x="47.7151%" y="1861" width="0.1344%" height="15" fill="rgb(254,186,25)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1871.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.13%)</title><rect x="47.7151%" y="1845" width="0.1344%" height="15" fill="rgb(225,55,31)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1855.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="47.7151%" y="1829" width="0.1344%" height="15" fill="rgb(211,15,21)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1839.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="47.7151%" y="1813" width="0.1344%" height="15" fill="rgb(215,187,41)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1823.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.13%)</title><rect x="47.7151%" y="1797" width="0.1344%" height="15" fill="rgb(248,69,32)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1807.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="47.7151%" y="1781" width="0.1344%" height="15" fill="rgb(252,102,52)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1791.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="47.7151%" y="1765" width="0.1344%" height="15" fill="rgb(253,140,32)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1775.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="47.7151%" y="1749" width="0.1344%" height="15" fill="rgb(216,56,42)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1759.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.13%)</title><rect x="47.7151%" y="1733" width="0.1344%" height="15" fill="rgb(216,184,14)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1743.50"></text></g><g><title>`0x7FFE2F0923C9 (1 samples, 0.13%)</title><rect x="47.7151%" y="1717" width="0.1344%" height="15" fill="rgb(237,187,27)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1727.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="47.7151%" y="1701" width="0.1344%" height="15" fill="rgb(219,65,3)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1711.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.13%)</title><rect x="47.7151%" y="1685" width="0.1344%" height="15" fill="rgb(245,83,25)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1695.50"></text></g><g><title>`0x7FFE2F0669B0 (1 samples, 0.13%)</title><rect x="47.7151%" y="1669" width="0.1344%" height="15" fill="rgb(214,205,45)" fg:x="355" fg:w="1"/><text x="47.9651%" y="1679.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (1 samples, 0.13%)</title><rect x="47.8495%" y="2021" width="0.1344%" height="15" fill="rgb(241,20,18)" fg:x="356" fg:w="1"/><text x="48.0995%" y="2031.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (1 samples, 0.13%)</title><rect x="47.8495%" y="2005" width="0.1344%" height="15" fill="rgb(232,163,23)" fg:x="356" fg:w="1"/><text x="48.0995%" y="2015.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="47.8495%" y="1989" width="0.1344%" height="15" fill="rgb(214,5,46)" fg:x="356" fg:w="1"/><text x="48.0995%" y="1999.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.13%)</title><rect x="47.8495%" y="1973" width="0.1344%" height="15" fill="rgb(229,78,17)" fg:x="356" fg:w="1"/><text x="48.0995%" y="1983.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.13%)</title><rect x="47.8495%" y="1957" width="0.1344%" height="15" fill="rgb(248,89,10)" fg:x="356" fg:w="1"/><text x="48.0995%" y="1967.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.13%)</title><rect x="47.8495%" y="1941" width="0.1344%" height="15" fill="rgb(248,54,15)" fg:x="356" fg:w="1"/><text x="48.0995%" y="1951.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.13%)</title><rect x="47.8495%" y="1925" width="0.1344%" height="15" fill="rgb(223,116,6)" fg:x="356" fg:w="1"/><text x="48.0995%" y="1935.50"></text></g><g><title>fuzzit.exe`core::char::methods::encode_utf8_raw (1 samples, 0.13%)</title><rect x="47.8495%" y="1909" width="0.1344%" height="15" fill="rgb(205,125,38)" fg:x="356" fg:w="1"/><text x="48.0995%" y="1919.50"></text></g><g><title>fuzzit.exe`core::char::methods::len_utf8 (1 samples, 0.13%)</title><rect x="47.8495%" y="1893" width="0.1344%" height="15" fill="rgb(251,78,38)" fg:x="356" fg:w="1"/><text x="48.0995%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (2 samples, 0.27%)</title><rect x="47.9839%" y="2021" width="0.2688%" height="15" fill="rgb(253,78,28)" fg:x="357" fg:w="2"/><text x="48.2339%" y="2031.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (2 samples, 0.27%)</title><rect x="47.9839%" y="2005" width="0.2688%" height="15" fill="rgb(209,120,3)" fg:x="357" fg:w="2"/><text x="48.2339%" y="2015.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="47.9839%" y="1989" width="0.2688%" height="15" fill="rgb(238,229,9)" fg:x="357" fg:w="2"/><text x="48.2339%" y="1999.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="47.9839%" y="1973" width="0.2688%" height="15" fill="rgb(253,159,18)" fg:x="357" fg:w="2"/><text x="48.2339%" y="1983.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="47.9839%" y="1957" width="0.2688%" height="15" fill="rgb(244,42,34)" fg:x="357" fg:w="2"/><text x="48.2339%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="47.9839%" y="1941" width="0.2688%" height="15" fill="rgb(224,8,7)" fg:x="357" fg:w="2"/><text x="48.2339%" y="1951.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="47.9839%" y="1925" width="0.2688%" height="15" fill="rgb(210,201,45)" fg:x="357" fg:w="2"/><text x="48.2339%" y="1935.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="47.9839%" y="1909" width="0.2688%" height="15" fill="rgb(252,185,21)" fg:x="357" fg:w="2"/><text x="48.2339%" y="1919.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (110 samples, 14.78%)</title><rect x="34.8118%" y="2389" width="14.7849%" height="15" fill="rgb(223,131,1)" fg:x="259" fg:w="110"/><text x="35.0618%" y="2399.50">fuzzit.exe`rayon::iter:..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (110 samples, 14.78%)</title><rect x="34.8118%" y="2373" width="14.7849%" height="15" fill="rgb(245,141,16)" fg:x="259" fg:w="110"/><text x="35.0618%" y="2383.50">fuzzit.exe`rayon::iter:..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (110 samples, 14.78%)</title><rect x="34.8118%" y="2357" width="14.7849%" height="15" fill="rgb(229,55,45)" fg:x="259" fg:w="110"/><text x="35.0618%" y="2367.50">fuzzit.exe`core::ops::f..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (110 samples, 14.78%)</title><rect x="34.8118%" y="2341" width="14.7849%" height="15" fill="rgb(208,92,15)" fg:x="259" fg:w="110"/><text x="35.0618%" y="2351.50">fuzzit.exe`fuzzit::git_..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (110 samples, 14.78%)</title><rect x="34.8118%" y="2325" width="14.7849%" height="15" fill="rgb(234,185,47)" fg:x="259" fg:w="110"/><text x="35.0618%" y="2335.50">fuzzit.exe`rayon_core::..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (110 samples, 14.78%)</title><rect x="34.8118%" y="2309" width="14.7849%" height="15" fill="rgb(253,104,50)" fg:x="259" fg:w="110"/><text x="35.0618%" y="2319.50">fuzzit.exe`rayon_core::..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (56 samples, 7.53%)</title><rect x="42.0699%" y="2293" width="7.5269%" height="15" fill="rgb(205,70,7)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2303.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (56 samples, 7.53%)</title><rect x="42.0699%" y="2277" width="7.5269%" height="15" fill="rgb(240,178,43)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2287.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (56 samples, 7.53%)</title><rect x="42.0699%" y="2261" width="7.5269%" height="15" fill="rgb(214,112,2)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2271.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (56 samples, 7.53%)</title><rect x="42.0699%" y="2245" width="7.5269%" height="15" fill="rgb(206,46,17)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2255.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (56 samples, 7.53%)</title><rect x="42.0699%" y="2229" width="7.5269%" height="15" fill="rgb(225,220,16)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2239.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (56 samples, 7.53%)</title><rect x="42.0699%" y="2213" width="7.5269%" height="15" fill="rgb(238,65,40)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2223.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (56 samples, 7.53%)</title><rect x="42.0699%" y="2197" width="7.5269%" height="15" fill="rgb(230,151,21)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2207.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (56 samples, 7.53%)</title><rect x="42.0699%" y="2181" width="7.5269%" height="15" fill="rgb(218,58,49)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2191.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (56 samples, 7.53%)</title><rect x="42.0699%" y="2165" width="7.5269%" height="15" fill="rgb(219,179,14)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2175.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (56 samples, 7.53%)</title><rect x="42.0699%" y="2149" width="7.5269%" height="15" fill="rgb(223,72,1)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2159.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (56 samples, 7.53%)</title><rect x="42.0699%" y="2133" width="7.5269%" height="15" fill="rgb(238,126,10)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2143.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`std::process::Command::output (56 samples, 7.53%)</title><rect x="42.0699%" y="2117" width="7.5269%" height="15" fill="rgb(224,206,38)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2127.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`std::sys::process::output (56 samples, 7.53%)</title><rect x="42.0699%" y="2101" width="7.5269%" height="15" fill="rgb(212,201,54)" fg:x="313" fg:w="56"/><text x="42.3199%" y="2111.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (54 samples, 7.26%)</title><rect x="42.3387%" y="2085" width="7.2581%" height="15" fill="rgb(218,154,48)" fg:x="315" fg:w="54"/><text x="42.5887%" y="2095.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (54 samples, 7.26%)</title><rect x="42.3387%" y="2069" width="7.2581%" height="15" fill="rgb(232,93,24)" fg:x="315" fg:w="54"/><text x="42.5887%" y="2079.50">fuzzit.exe..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (14 samples, 1.88%)</title><rect x="47.7151%" y="2053" width="1.8817%" height="15" fill="rgb(245,30,21)" fg:x="355" fg:w="14"/><text x="47.9651%" y="2063.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (14 samples, 1.88%)</title><rect x="47.7151%" y="2037" width="1.8817%" height="15" fill="rgb(242,148,29)" fg:x="355" fg:w="14"/><text x="47.9651%" y="2047.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (10 samples, 1.34%)</title><rect x="48.2527%" y="2021" width="1.3441%" height="15" fill="rgb(244,153,54)" fg:x="359" fg:w="10"/><text x="48.5027%" y="2031.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (10 samples, 1.34%)</title><rect x="48.2527%" y="2005" width="1.3441%" height="15" fill="rgb(252,87,22)" fg:x="359" fg:w="10"/><text x="48.5027%" y="2015.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (10 samples, 1.34%)</title><rect x="48.2527%" y="1989" width="1.3441%" height="15" fill="rgb(210,51,29)" fg:x="359" fg:w="10"/><text x="48.5027%" y="1999.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (10 samples, 1.34%)</title><rect x="48.2527%" y="1973" width="1.3441%" height="15" fill="rgb(242,136,47)" fg:x="359" fg:w="10"/><text x="48.5027%" y="1983.50"></text></g><g><title>`0x7FFE2C81DF99 (10 samples, 1.34%)</title><rect x="48.2527%" y="1957" width="1.3441%" height="15" fill="rgb(238,68,4)" fg:x="359" fg:w="10"/><text x="48.5027%" y="1967.50"></text></g><g><title>`0x7FFE2F1A39D4 (10 samples, 1.34%)</title><rect x="48.2527%" y="1941" width="1.3441%" height="15" fill="rgb(242,161,30)" fg:x="359" fg:w="10"/><text x="48.5027%" y="1951.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="49.5968%" y="2005" width="0.1344%" height="15" fill="rgb(218,58,44)" fg:x="369" fg:w="1"/><text x="49.8468%" y="2015.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.13%)</title><rect x="49.5968%" y="1989" width="0.1344%" height="15" fill="rgb(252,125,32)" fg:x="369" fg:w="1"/><text x="49.8468%" y="1999.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.13%)</title><rect x="49.5968%" y="1973" width="0.1344%" height="15" fill="rgb(219,178,0)" fg:x="369" fg:w="1"/><text x="49.8468%" y="1983.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="49.5968%" y="1957" width="0.1344%" height="15" fill="rgb(213,152,7)" fg:x="369" fg:w="1"/><text x="49.8468%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::path::windows::get_long_path (1 samples, 0.13%)</title><rect x="49.5968%" y="1941" width="0.1344%" height="15" fill="rgb(249,109,34)" fg:x="369" fg:w="1"/><text x="49.8468%" y="1951.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="49.7312%" y="1941" width="0.1344%" height="15" fill="rgb(232,96,21)" fg:x="370" fg:w="1"/><text x="49.9812%" y="1951.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="49.7312%" y="1925" width="0.1344%" height="15" fill="rgb(228,27,39)" fg:x="370" fg:w="1"/><text x="49.9812%" y="1935.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="49.7312%" y="1909" width="0.1344%" height="15" fill="rgb(211,182,52)" fg:x="370" fg:w="1"/><text x="49.9812%" y="1919.50"></text></g><g><title>`0x7FFE2C8776C5 (7 samples, 0.94%)</title><rect x="49.8656%" y="1941" width="0.9409%" height="15" fill="rgb(234,178,38)" fg:x="371" fg:w="7"/><text x="50.1156%" y="1951.50"></text></g><g><title>`0x7FFE2F1A4C44 (7 samples, 0.94%)</title><rect x="49.8656%" y="1925" width="0.9409%" height="15" fill="rgb(221,111,3)" fg:x="371" fg:w="7"/><text x="50.1156%" y="1935.50"></text></g><g><title>`0x7FFE2DD2D5FB (1 samples, 0.13%)</title><rect x="50.8065%" y="1909" width="0.1344%" height="15" fill="rgb(228,175,21)" fg:x="378" fg:w="1"/><text x="51.0565%" y="1919.50"></text></g><g><title>`0x7FFE2DD2E523 (1 samples, 0.13%)</title><rect x="50.8065%" y="1893" width="0.1344%" height="15" fill="rgb(228,174,43)" fg:x="378" fg:w="1"/><text x="51.0565%" y="1903.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.13%)</title><rect x="50.8065%" y="1877" width="0.1344%" height="15" fill="rgb(211,191,0)" fg:x="378" fg:w="1"/><text x="51.0565%" y="1887.50"></text></g><g><title>`0x7FFE2C8787CB (8 samples, 1.08%)</title><rect x="50.8065%" y="1941" width="1.0753%" height="15" fill="rgb(253,117,3)" fg:x="378" fg:w="8"/><text x="51.0565%" y="1951.50"></text></g><g><title>`0x7FFE2DD2D052 (8 samples, 1.08%)</title><rect x="50.8065%" y="1925" width="1.0753%" height="15" fill="rgb(241,127,19)" fg:x="378" fg:w="8"/><text x="51.0565%" y="1935.50"></text></g><g><title>`0x7FFE2DD2D646 (7 samples, 0.94%)</title><rect x="50.9409%" y="1909" width="0.9409%" height="15" fill="rgb(218,103,12)" fg:x="379" fg:w="7"/><text x="51.1909%" y="1919.50"></text></g><g><title>`0x7FFE2F1A3BB4 (7 samples, 0.94%)</title><rect x="50.9409%" y="1893" width="0.9409%" height="15" fill="rgb(236,214,43)" fg:x="379" fg:w="7"/><text x="51.1909%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (17 samples, 2.28%)</title><rect x="49.7312%" y="2005" width="2.2849%" height="15" fill="rgb(244,144,19)" fg:x="370" fg:w="17"/><text x="49.9812%" y="2015.50">f..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (17 samples, 2.28%)</title><rect x="49.7312%" y="1989" width="2.2849%" height="15" fill="rgb(246,188,10)" fg:x="370" fg:w="17"/><text x="49.9812%" y="1999.50">f..</text></g><g><title>`0x7FFE2DD4C6D4 (17 samples, 2.28%)</title><rect x="49.7312%" y="1973" width="2.2849%" height="15" fill="rgb(212,193,33)" fg:x="370" fg:w="17"/><text x="49.9812%" y="1983.50">`..</text></g><g><title>`0x7FFE2C874E26 (17 samples, 2.28%)</title><rect x="49.7312%" y="1957" width="2.2849%" height="15" fill="rgb(241,51,29)" fg:x="370" fg:w="17"/><text x="49.9812%" y="1967.50">`..</text></g><g><title>`0x7FFE2C87A57A (1 samples, 0.13%)</title><rect x="51.8817%" y="1941" width="0.1344%" height="15" fill="rgb(211,58,19)" fg:x="386" fg:w="1"/><text x="52.1317%" y="1951.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="51.8817%" y="1925" width="0.1344%" height="15" fill="rgb(229,111,26)" fg:x="386" fg:w="1"/><text x="52.1317%" y="1935.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (1 samples, 0.13%)</title><rect x="52.0161%" y="1973" width="0.1344%" height="15" fill="rgb(213,115,40)" fg:x="387" fg:w="1"/><text x="52.2661%" y="1983.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (1 samples, 0.13%)</title><rect x="52.0161%" y="1957" width="0.1344%" height="15" fill="rgb(209,56,44)" fg:x="387" fg:w="1"/><text x="52.2661%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="52.0161%" y="1941" width="0.1344%" height="15" fill="rgb(230,108,32)" fg:x="387" fg:w="1"/><text x="52.2661%" y="1951.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.13%)</title><rect x="52.0161%" y="1925" width="0.1344%" height="15" fill="rgb(216,165,31)" fg:x="387" fg:w="1"/><text x="52.2661%" y="1935.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.13%)</title><rect x="52.0161%" y="1909" width="0.1344%" height="15" fill="rgb(218,122,21)" fg:x="387" fg:w="1"/><text x="52.2661%" y="1919.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.13%)</title><rect x="52.0161%" y="1893" width="0.1344%" height="15" fill="rgb(223,224,47)" fg:x="387" fg:w="1"/><text x="52.2661%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.13%)</title><rect x="52.0161%" y="1877" width="0.1344%" height="15" fill="rgb(238,102,44)" fg:x="387" fg:w="1"/><text x="52.2661%" y="1887.50"></text></g><g><title>fuzzit.exe`core::char::methods::encode_utf8_raw (1 samples, 0.13%)</title><rect x="52.0161%" y="1861" width="0.1344%" height="15" fill="rgb(236,46,40)" fg:x="387" fg:w="1"/><text x="52.2661%" y="1871.50"></text></g><g><title>fuzzit.exe`core::char::methods::len_utf8 (1 samples, 0.13%)</title><rect x="52.0161%" y="1845" width="0.1344%" height="15" fill="rgb(247,202,50)" fg:x="387" fg:w="1"/><text x="52.2661%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="52.1505%" y="1973" width="0.1344%" height="15" fill="rgb(209,99,20)" fg:x="388" fg:w="1"/><text x="52.4005%" y="1983.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.13%)</title><rect x="52.1505%" y="1957" width="0.1344%" height="15" fill="rgb(252,27,34)" fg:x="388" fg:w="1"/><text x="52.4005%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="52.1505%" y="1941" width="0.1344%" height="15" fill="rgb(215,206,23)" fg:x="388" fg:w="1"/><text x="52.4005%" y="1951.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="52.1505%" y="1925" width="0.1344%" height="15" fill="rgb(212,135,36)" fg:x="388" fg:w="1"/><text x="52.4005%" y="1935.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="52.1505%" y="1909" width="0.1344%" height="15" fill="rgb(240,189,1)" fg:x="388" fg:w="1"/><text x="52.4005%" y="1919.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="52.1505%" y="1893" width="0.1344%" height="15" fill="rgb(242,56,20)" fg:x="388" fg:w="1"/><text x="52.4005%" y="1903.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="52.1505%" y="1877" width="0.1344%" height="15" fill="rgb(247,132,33)" fg:x="388" fg:w="1"/><text x="52.4005%" y="1887.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="52.1505%" y="1861" width="0.1344%" height="15" fill="rgb(208,149,11)" fg:x="388" fg:w="1"/><text x="52.4005%" y="1871.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (24 samples, 3.23%)</title><rect x="49.5968%" y="2293" width="3.2258%" height="15" fill="rgb(211,33,11)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2303.50">fuz..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (24 samples, 3.23%)</title><rect x="49.5968%" y="2277" width="3.2258%" height="15" fill="rgb(221,29,38)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2287.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (24 samples, 3.23%)</title><rect x="49.5968%" y="2261" width="3.2258%" height="15" fill="rgb(206,182,49)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2271.50">fuz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (24 samples, 3.23%)</title><rect x="49.5968%" y="2245" width="3.2258%" height="15" fill="rgb(216,140,1)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2255.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (24 samples, 3.23%)</title><rect x="49.5968%" y="2229" width="3.2258%" height="15" fill="rgb(232,57,40)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2239.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (24 samples, 3.23%)</title><rect x="49.5968%" y="2213" width="3.2258%" height="15" fill="rgb(224,186,18)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2223.50">fuz..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (24 samples, 3.23%)</title><rect x="49.5968%" y="2197" width="3.2258%" height="15" fill="rgb(215,121,11)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2207.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (24 samples, 3.23%)</title><rect x="49.5968%" y="2181" width="3.2258%" height="15" fill="rgb(245,147,10)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2191.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (24 samples, 3.23%)</title><rect x="49.5968%" y="2165" width="3.2258%" height="15" fill="rgb(238,153,13)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2175.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (24 samples, 3.23%)</title><rect x="49.5968%" y="2149" width="3.2258%" height="15" fill="rgb(233,108,0)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2159.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (24 samples, 3.23%)</title><rect x="49.5968%" y="2133" width="3.2258%" height="15" fill="rgb(212,157,17)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2143.50">fuz..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (24 samples, 3.23%)</title><rect x="49.5968%" y="2117" width="3.2258%" height="15" fill="rgb(225,213,38)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2127.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (24 samples, 3.23%)</title><rect x="49.5968%" y="2101" width="3.2258%" height="15" fill="rgb(248,16,11)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2111.50">fuz..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (24 samples, 3.23%)</title><rect x="49.5968%" y="2085" width="3.2258%" height="15" fill="rgb(241,33,4)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2095.50">fuz..</text></g><g><title>fuzzit.exe`std::process::Command::output (24 samples, 3.23%)</title><rect x="49.5968%" y="2069" width="3.2258%" height="15" fill="rgb(222,26,43)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2079.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::output (24 samples, 3.23%)</title><rect x="49.5968%" y="2053" width="3.2258%" height="15" fill="rgb(243,29,36)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2063.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (24 samples, 3.23%)</title><rect x="49.5968%" y="2037" width="3.2258%" height="15" fill="rgb(241,9,27)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2047.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (24 samples, 3.23%)</title><rect x="49.5968%" y="2021" width="3.2258%" height="15" fill="rgb(205,117,26)" fg:x="369" fg:w="24"/><text x="49.8468%" y="2031.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (6 samples, 0.81%)</title><rect x="52.0161%" y="2005" width="0.8065%" height="15" fill="rgb(209,80,39)" fg:x="387" fg:w="6"/><text x="52.2661%" y="2015.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (6 samples, 0.81%)</title><rect x="52.0161%" y="1989" width="0.8065%" height="15" fill="rgb(239,155,6)" fg:x="387" fg:w="6"/><text x="52.2661%" y="1999.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (4 samples, 0.54%)</title><rect x="52.2849%" y="1973" width="0.5376%" height="15" fill="rgb(212,104,12)" fg:x="389" fg:w="4"/><text x="52.5349%" y="1983.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="52.2849%" y="1957" width="0.5376%" height="15" fill="rgb(234,204,3)" fg:x="389" fg:w="4"/><text x="52.5349%" y="1967.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="52.2849%" y="1941" width="0.5376%" height="15" fill="rgb(251,218,7)" fg:x="389" fg:w="4"/><text x="52.5349%" y="1951.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (4 samples, 0.54%)</title><rect x="52.2849%" y="1925" width="0.5376%" height="15" fill="rgb(221,81,32)" fg:x="389" fg:w="4"/><text x="52.5349%" y="1935.50"></text></g><g><title>`0x7FFE2C81DF99 (4 samples, 0.54%)</title><rect x="52.2849%" y="1909" width="0.5376%" height="15" fill="rgb(214,152,26)" fg:x="389" fg:w="4"/><text x="52.5349%" y="1919.50"></text></g><g><title>`0x7FFE2F1A39D4 (4 samples, 0.54%)</title><rect x="52.2849%" y="1893" width="0.5376%" height="15" fill="rgb(223,22,3)" fg:x="389" fg:w="4"/><text x="52.5349%" y="1903.50"></text></g><g><title>`0x7FFE2C89696B (1 samples, 0.13%)</title><rect x="52.8226%" y="2037" width="0.1344%" height="15" fill="rgb(207,174,7)" fg:x="393" fg:w="1"/><text x="53.0726%" y="2047.50"></text></g><g><title>`0x7FFE2F10E134 (1 samples, 0.13%)</title><rect x="52.8226%" y="2021" width="0.1344%" height="15" fill="rgb(224,19,52)" fg:x="393" fg:w="1"/><text x="53.0726%" y="2031.50"></text></g><g><title>`0x7FFE2F1A38B4 (1 samples, 0.13%)</title><rect x="52.8226%" y="2005" width="0.1344%" height="15" fill="rgb(228,24,14)" fg:x="393" fg:w="1"/><text x="53.0726%" y="2015.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (2 samples, 0.27%)</title><rect x="52.8226%" y="2085" width="0.2688%" height="15" fill="rgb(230,153,43)" fg:x="393" fg:w="2"/><text x="53.0726%" y="2095.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.27%)</title><rect x="52.8226%" y="2069" width="0.2688%" height="15" fill="rgb(231,106,12)" fg:x="393" fg:w="2"/><text x="53.0726%" y="2079.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::no_work_found (2 samples, 0.27%)</title><rect x="52.8226%" y="2053" width="0.2688%" height="15" fill="rgb(215,92,2)" fg:x="393" fg:w="2"/><text x="53.0726%" y="2063.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::sleep&lt;rayon_core::registry::impl$10::wait_until_cold::closure_env$0&gt; (1 samples, 0.13%)</title><rect x="52.9570%" y="2037" width="0.1344%" height="15" fill="rgb(249,143,25)" fg:x="394" fg:w="1"/><text x="53.2070%" y="2047.50"></text></g><g><title>fuzzit.exe`std::sync::poison::condvar::Condvar::wait(std::sync::poison::mutex::MutexGuard (1 samples, 0.13%)</title><rect x="52.9570%" y="2021" width="0.1344%" height="15" fill="rgb(252,7,35)" fg:x="394" fg:w="1"/><text x="53.2070%" y="2031.50"></text></g><g><title>fuzzit.exe`std::sync::poison::Flag::get (1 samples, 0.13%)</title><rect x="52.9570%" y="2005" width="0.1344%" height="15" fill="rgb(216,69,40)" fg:x="394" fg:w="1"/><text x="53.2070%" y="2015.50"></text></g><g><title>fuzzit.exe`core::sync::atomic::AtomicBool::load (1 samples, 0.13%)</title><rect x="52.9570%" y="1989" width="0.1344%" height="15" fill="rgb(240,36,33)" fg:x="394" fg:w="1"/><text x="53.2070%" y="1999.50"></text></g><g><title>fuzzit.exe`core::sync::atomic::atomic_load (1 samples, 0.13%)</title><rect x="52.9570%" y="1973" width="0.1344%" height="15" fill="rgb(231,128,14)" fg:x="394" fg:w="1"/><text x="53.2070%" y="1983.50"></text></g><g><title>fuzzit.exe`std::sys::sync::condvar::futex::Condvar::wait (1 samples, 0.13%)</title><rect x="52.9570%" y="1957" width="0.1344%" height="15" fill="rgb(245,143,14)" fg:x="394" fg:w="1"/><text x="53.2070%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (1 samples, 0.13%)</title><rect x="52.9570%" y="1941" width="0.1344%" height="15" fill="rgb(222,130,28)" fg:x="394" fg:w="1"/><text x="53.2070%" y="1951.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::futex_wait (1 samples, 0.13%)</title><rect x="52.9570%" y="1925" width="0.1344%" height="15" fill="rgb(212,10,48)" fg:x="394" fg:w="1"/><text x="53.2070%" y="1935.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::futex::wait_on_address (1 samples, 0.13%)</title><rect x="52.9570%" y="1909" width="0.1344%" height="15" fill="rgb(254,118,45)" fg:x="394" fg:w="1"/><text x="53.2070%" y="1919.50"></text></g><g><title>`0x7FFE2C8C2638 (1 samples, 0.13%)</title><rect x="52.9570%" y="1893" width="0.1344%" height="15" fill="rgb(228,6,45)" fg:x="394" fg:w="1"/><text x="53.2070%" y="1903.50"></text></g><g><title>`0x7FFE2F046CDE (1 samples, 0.13%)</title><rect x="52.9570%" y="1877" width="0.1344%" height="15" fill="rgb(241,18,35)" fg:x="394" fg:w="1"/><text x="53.2070%" y="1887.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.13%)</title><rect x="53.0914%" y="1877" width="0.1344%" height="15" fill="rgb(227,214,53)" fg:x="395" fg:w="1"/><text x="53.3414%" y="1887.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.13%)</title><rect x="53.0914%" y="1861" width="0.1344%" height="15" fill="rgb(224,107,51)" fg:x="395" fg:w="1"/><text x="53.3414%" y="1871.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.13%)</title><rect x="53.0914%" y="1845" width="0.1344%" height="15" fill="rgb(248,60,28)" fg:x="395" fg:w="1"/><text x="53.3414%" y="1855.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="53.0914%" y="1829" width="0.1344%" height="15" fill="rgb(249,101,23)" fg:x="395" fg:w="1"/><text x="53.3414%" y="1839.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="53.0914%" y="1813" width="0.1344%" height="15" fill="rgb(228,51,19)" fg:x="395" fg:w="1"/><text x="53.3414%" y="1823.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (2 samples, 0.27%)</title><rect x="53.2258%" y="1845" width="0.2688%" height="15" fill="rgb(213,20,6)" fg:x="396" fg:w="2"/><text x="53.4758%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (2 samples, 0.27%)</title><rect x="53.2258%" y="1829" width="0.2688%" height="15" fill="rgb(212,124,10)" fg:x="396" fg:w="2"/><text x="53.4758%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (2 samples, 0.27%)</title><rect x="53.2258%" y="1813" width="0.2688%" height="15" fill="rgb(248,3,40)" fg:x="396" fg:w="2"/><text x="53.4758%" y="1823.50"></text></g><g><title>`0x7FFE2C8CFEE5 (2 samples, 0.27%)</title><rect x="53.2258%" y="1797" width="0.2688%" height="15" fill="rgb(223,178,23)" fg:x="396" fg:w="2"/><text x="53.4758%" y="1807.50"></text></g><g><title>`0x7FFE2F1A4984 (2 samples, 0.27%)</title><rect x="53.2258%" y="1781" width="0.2688%" height="15" fill="rgb(240,132,45)" fg:x="396" fg:w="2"/><text x="53.4758%" y="1791.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.13%)</title><rect x="53.4946%" y="1781" width="0.1344%" height="15" fill="rgb(245,164,36)" fg:x="398" fg:w="1"/><text x="53.7446%" y="1791.50"></text></g><g><title>`0x7FFE2C9024B5 (1 samples, 0.13%)</title><rect x="53.4946%" y="1765" width="0.1344%" height="15" fill="rgb(231,188,53)" fg:x="398" fg:w="1"/><text x="53.7446%" y="1775.50"></text></g><g><title>`0x7FFE2F0F2AD5 (1 samples, 0.13%)</title><rect x="53.4946%" y="1749" width="0.1344%" height="15" fill="rgb(237,198,39)" fg:x="398" fg:w="1"/><text x="53.7446%" y="1759.50"></text></g><g><title>`0x7FFE2F0F3004 (1 samples, 0.13%)</title><rect x="53.4946%" y="1733" width="0.1344%" height="15" fill="rgb(223,120,35)" fg:x="398" fg:w="1"/><text x="53.7446%" y="1743.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="53.4946%" y="1717" width="0.1344%" height="15" fill="rgb(253,107,49)" fg:x="398" fg:w="1"/><text x="53.7446%" y="1727.50"></text></g><g><title>`0x7FFE2C8776C5 (6 samples, 0.81%)</title><rect x="53.6290%" y="1781" width="0.8065%" height="15" fill="rgb(216,44,31)" fg:x="399" fg:w="6"/><text x="53.8790%" y="1791.50"></text></g><g><title>`0x7FFE2F1A4C44 (6 samples, 0.81%)</title><rect x="53.6290%" y="1765" width="0.8065%" height="15" fill="rgb(253,87,21)" fg:x="399" fg:w="6"/><text x="53.8790%" y="1775.50"></text></g><g><title>`0x7FFE2DD2D5CA (1 samples, 0.13%)</title><rect x="54.4355%" y="1749" width="0.1344%" height="15" fill="rgb(226,18,2)" fg:x="405" fg:w="1"/><text x="54.6855%" y="1759.50"></text></g><g><title>`0x7FFE2DD2DE5C (1 samples, 0.13%)</title><rect x="54.4355%" y="1733" width="0.1344%" height="15" fill="rgb(216,8,46)" fg:x="405" fg:w="1"/><text x="54.6855%" y="1743.50"></text></g><g><title>`0x7FFE2DD2E7A8 (1 samples, 0.13%)</title><rect x="54.4355%" y="1717" width="0.1344%" height="15" fill="rgb(226,140,39)" fg:x="405" fg:w="1"/><text x="54.6855%" y="1727.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.13%)</title><rect x="54.4355%" y="1701" width="0.1344%" height="15" fill="rgb(221,194,54)" fg:x="405" fg:w="1"/><text x="54.6855%" y="1711.50"></text></g><g><title>`0x7FFE2C8787CB (7 samples, 0.94%)</title><rect x="54.4355%" y="1781" width="0.9409%" height="15" fill="rgb(213,92,11)" fg:x="405" fg:w="7"/><text x="54.6855%" y="1791.50"></text></g><g><title>`0x7FFE2DD2D052 (7 samples, 0.94%)</title><rect x="54.4355%" y="1765" width="0.9409%" height="15" fill="rgb(229,162,46)" fg:x="405" fg:w="7"/><text x="54.6855%" y="1775.50"></text></g><g><title>`0x7FFE2DD2D646 (6 samples, 0.81%)</title><rect x="54.5699%" y="1749" width="0.8065%" height="15" fill="rgb(214,111,36)" fg:x="406" fg:w="6"/><text x="54.8199%" y="1759.50"></text></g><g><title>`0x7FFE2F1A3BB4 (6 samples, 0.81%)</title><rect x="54.5699%" y="1733" width="0.8065%" height="15" fill="rgb(207,6,21)" fg:x="406" fg:w="6"/><text x="54.8199%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (15 samples, 2.02%)</title><rect x="53.4946%" y="1845" width="2.0161%" height="15" fill="rgb(213,127,38)" fg:x="398" fg:w="15"/><text x="53.7446%" y="1855.50">f..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (15 samples, 2.02%)</title><rect x="53.4946%" y="1829" width="2.0161%" height="15" fill="rgb(238,118,32)" fg:x="398" fg:w="15"/><text x="53.7446%" y="1839.50">f..</text></g><g><title>`0x7FFE2DD4C6D4 (15 samples, 2.02%)</title><rect x="53.4946%" y="1813" width="2.0161%" height="15" fill="rgb(240,139,39)" fg:x="398" fg:w="15"/><text x="53.7446%" y="1823.50">`..</text></g><g><title>`0x7FFE2C874E26 (15 samples, 2.02%)</title><rect x="53.4946%" y="1797" width="2.0161%" height="15" fill="rgb(235,10,37)" fg:x="398" fg:w="15"/><text x="53.7446%" y="1807.50">`..</text></g><g><title>`0x7FFE2C879763 (1 samples, 0.13%)</title><rect x="55.3763%" y="1781" width="0.1344%" height="15" fill="rgb(249,171,38)" fg:x="412" fg:w="1"/><text x="55.6263%" y="1791.50"></text></g><g><title>`0x7FFE2F1A3974 (1 samples, 0.13%)</title><rect x="55.3763%" y="1765" width="0.1344%" height="15" fill="rgb(242,144,32)" fg:x="412" fg:w="1"/><text x="55.6263%" y="1775.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.13%)</title><rect x="55.5108%" y="1813" width="0.1344%" height="15" fill="rgb(217,117,21)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1823.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.13%)</title><rect x="55.5108%" y="1797" width="0.1344%" height="15" fill="rgb(249,87,1)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1807.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.13%)</title><rect x="55.5108%" y="1781" width="0.1344%" height="15" fill="rgb(248,196,48)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (1 samples, 0.13%)</title><rect x="55.5108%" y="1765" width="0.1344%" height="15" fill="rgb(251,206,33)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1775.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.13%)</title><rect x="55.5108%" y="1749" width="0.1344%" height="15" fill="rgb(232,141,28)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1759.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.13%)</title><rect x="55.5108%" y="1733" width="0.1344%" height="15" fill="rgb(209,167,14)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1743.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.13%)</title><rect x="55.5108%" y="1717" width="0.1344%" height="15" fill="rgb(225,11,50)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1727.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.13%)</title><rect x="55.5108%" y="1701" width="0.1344%" height="15" fill="rgb(209,50,20)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1711.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.13%)</title><rect x="55.5108%" y="1685" width="0.1344%" height="15" fill="rgb(212,17,46)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1695.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="55.5108%" y="1669" width="0.1344%" height="15" fill="rgb(216,101,39)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1679.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.13%)</title><rect x="55.5108%" y="1653" width="0.1344%" height="15" fill="rgb(212,228,48)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1663.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.13%)</title><rect x="55.5108%" y="1637" width="0.1344%" height="15" fill="rgb(250,6,50)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1647.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="55.5108%" y="1621" width="0.1344%" height="15" fill="rgb(250,160,48)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1631.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="55.5108%" y="1605" width="0.1344%" height="15" fill="rgb(244,216,33)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1615.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.13%)</title><rect x="55.5108%" y="1589" width="0.1344%" height="15" fill="rgb(207,157,5)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1599.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="55.5108%" y="1573" width="0.1344%" height="15" fill="rgb(228,199,8)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1583.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="55.5108%" y="1557" width="0.1344%" height="15" fill="rgb(227,80,20)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1567.50"></text></g><g><title>`0x7FFE2F069E2D (1 samples, 0.13%)</title><rect x="55.5108%" y="1541" width="0.1344%" height="15" fill="rgb(222,9,33)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1551.50"></text></g><g><title>`0x7FFE2F06A0D5 (1 samples, 0.13%)</title><rect x="55.5108%" y="1525" width="0.1344%" height="15" fill="rgb(239,44,28)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1535.50"></text></g><g><title>`0x7FFE2F06A98A (1 samples, 0.13%)</title><rect x="55.5108%" y="1509" width="0.1344%" height="15" fill="rgb(249,187,43)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1519.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="55.5108%" y="1493" width="0.1344%" height="15" fill="rgb(216,141,28)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1503.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.13%)</title><rect x="55.5108%" y="1477" width="0.1344%" height="15" fill="rgb(230,154,53)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1487.50"></text></g><g><title>`0x7FFE2F091870 (1 samples, 0.13%)</title><rect x="55.5108%" y="1461" width="0.1344%" height="15" fill="rgb(227,82,4)" fg:x="413" fg:w="1"/><text x="55.7608%" y="1471.50"></text></g><g><title>`0x7FFE2C8D9E80 (1 samples, 0.13%)</title><rect x="55.6452%" y="1797" width="0.1344%" height="15" fill="rgb(220,107,16)" fg:x="414" fg:w="1"/><text x="55.8952%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (2 samples, 0.27%)</title><rect x="55.6452%" y="1813" width="0.2688%" height="15" fill="rgb(207,187,2)" fg:x="414" fg:w="2"/><text x="55.8952%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.13%)</title><rect x="55.7796%" y="1797" width="0.1344%" height="15" fill="rgb(210,162,52)" fg:x="415" fg:w="1"/><text x="56.0296%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="55.7796%" y="1781" width="0.1344%" height="15" fill="rgb(217,216,49)" fg:x="415" fg:w="1"/><text x="56.0296%" y="1791.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="55.7796%" y="1765" width="0.1344%" height="15" fill="rgb(218,146,49)" fg:x="415" fg:w="1"/><text x="56.0296%" y="1775.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="55.7796%" y="1749" width="0.1344%" height="15" fill="rgb(216,55,40)" fg:x="415" fg:w="1"/><text x="56.0296%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="55.7796%" y="1733" width="0.1344%" height="15" fill="rgb(208,196,21)" fg:x="415" fg:w="1"/><text x="56.0296%" y="1743.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="55.7796%" y="1717" width="0.1344%" height="15" fill="rgb(242,117,42)" fg:x="415" fg:w="1"/><text x="56.0296%" y="1727.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="55.7796%" y="1701" width="0.1344%" height="15" fill="rgb(210,11,23)" fg:x="415" fg:w="1"/><text x="56.0296%" y="1711.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (51 samples, 6.85%)</title><rect x="49.5968%" y="2325" width="6.8548%" height="15" fill="rgb(217,110,2)" fg:x="369" fg:w="51"/><text x="49.8468%" y="2335.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (51 samples, 6.85%)</title><rect x="49.5968%" y="2309" width="6.8548%" height="15" fill="rgb(229,77,54)" fg:x="369" fg:w="51"/><text x="49.8468%" y="2319.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (27 samples, 3.63%)</title><rect x="52.8226%" y="2293" width="3.6290%" height="15" fill="rgb(218,53,16)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2303.50">fuzz..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 3.63%)</title><rect x="52.8226%" y="2277" width="3.6290%" height="15" fill="rgb(215,38,13)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2287.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 3.63%)</title><rect x="52.8226%" y="2261" width="3.6290%" height="15" fill="rgb(235,42,18)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2271.50">fuzz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 3.63%)</title><rect x="52.8226%" y="2245" width="3.6290%" height="15" fill="rgb(219,66,54)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2255.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 3.63%)</title><rect x="52.8226%" y="2229" width="3.6290%" height="15" fill="rgb(222,205,4)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2239.50">fuzz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (27 samples, 3.63%)</title><rect x="52.8226%" y="2213" width="3.6290%" height="15" fill="rgb(227,213,46)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2223.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (27 samples, 3.63%)</title><rect x="52.8226%" y="2197" width="3.6290%" height="15" fill="rgb(250,145,42)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2207.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (27 samples, 3.63%)</title><rect x="52.8226%" y="2181" width="3.6290%" height="15" fill="rgb(219,15,2)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2191.50">fuzz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (27 samples, 3.63%)</title><rect x="52.8226%" y="2165" width="3.6290%" height="15" fill="rgb(231,181,52)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2175.50">fuzz..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (27 samples, 3.63%)</title><rect x="52.8226%" y="2149" width="3.6290%" height="15" fill="rgb(235,1,42)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2159.50">fuzz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (27 samples, 3.63%)</title><rect x="52.8226%" y="2133" width="3.6290%" height="15" fill="rgb(249,88,27)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2143.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (27 samples, 3.63%)</title><rect x="52.8226%" y="2117" width="3.6290%" height="15" fill="rgb(235,145,16)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2127.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (27 samples, 3.63%)</title><rect x="52.8226%" y="2101" width="3.6290%" height="15" fill="rgb(237,114,19)" fg:x="393" fg:w="27"/><text x="53.0726%" y="2111.50">fuzz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="53.0914%" y="2085" width="3.3602%" height="15" fill="rgb(238,51,50)" fg:x="395" fg:w="25"/><text x="53.3414%" y="2095.50">fuz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="53.0914%" y="2069" width="3.3602%" height="15" fill="rgb(205,194,25)" fg:x="395" fg:w="25"/><text x="53.3414%" y="2079.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="53.0914%" y="2053" width="3.3602%" height="15" fill="rgb(215,203,17)" fg:x="395" fg:w="25"/><text x="53.3414%" y="2063.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (25 samples, 3.36%)</title><rect x="53.0914%" y="2037" width="3.3602%" height="15" fill="rgb(233,112,49)" fg:x="395" fg:w="25"/><text x="53.3414%" y="2047.50">fuz..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="53.0914%" y="2021" width="3.3602%" height="15" fill="rgb(241,130,26)" fg:x="395" fg:w="25"/><text x="53.3414%" y="2031.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="53.0914%" y="2005" width="3.3602%" height="15" fill="rgb(252,223,19)" fg:x="395" fg:w="25"/><text x="53.3414%" y="2015.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="53.0914%" y="1989" width="3.3602%" height="15" fill="rgb(211,95,25)" fg:x="395" fg:w="25"/><text x="53.3414%" y="1999.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (25 samples, 3.36%)</title><rect x="53.0914%" y="1973" width="3.3602%" height="15" fill="rgb(251,182,27)" fg:x="395" fg:w="25"/><text x="53.3414%" y="1983.50">fuz..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (25 samples, 3.36%)</title><rect x="53.0914%" y="1957" width="3.3602%" height="15" fill="rgb(238,24,4)" fg:x="395" fg:w="25"/><text x="53.3414%" y="1967.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (25 samples, 3.36%)</title><rect x="53.0914%" y="1941" width="3.3602%" height="15" fill="rgb(224,220,25)" fg:x="395" fg:w="25"/><text x="53.3414%" y="1951.50">fuz..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (25 samples, 3.36%)</title><rect x="53.0914%" y="1925" width="3.3602%" height="15" fill="rgb(239,133,26)" fg:x="395" fg:w="25"/><text x="53.3414%" y="1935.50">fuz..</text></g><g><title>fuzzit.exe`std::process::Command::output (25 samples, 3.36%)</title><rect x="53.0914%" y="1909" width="3.3602%" height="15" fill="rgb(211,94,48)" fg:x="395" fg:w="25"/><text x="53.3414%" y="1919.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::output (25 samples, 3.36%)</title><rect x="53.0914%" y="1893" width="3.3602%" height="15" fill="rgb(239,87,6)" fg:x="395" fg:w="25"/><text x="53.3414%" y="1903.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (24 samples, 3.23%)</title><rect x="53.2258%" y="1877" width="3.2258%" height="15" fill="rgb(227,62,0)" fg:x="396" fg:w="24"/><text x="53.4758%" y="1887.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (24 samples, 3.23%)</title><rect x="53.2258%" y="1861" width="3.2258%" height="15" fill="rgb(211,226,4)" fg:x="396" fg:w="24"/><text x="53.4758%" y="1871.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (7 samples, 0.94%)</title><rect x="55.5108%" y="1845" width="0.9409%" height="15" fill="rgb(253,38,52)" fg:x="413" fg:w="7"/><text x="55.7608%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (7 samples, 0.94%)</title><rect x="55.5108%" y="1829" width="0.9409%" height="15" fill="rgb(229,126,40)" fg:x="413" fg:w="7"/><text x="55.7608%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (4 samples, 0.54%)</title><rect x="55.9140%" y="1813" width="0.5376%" height="15" fill="rgb(229,165,44)" fg:x="416" fg:w="4"/><text x="56.1640%" y="1823.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="55.9140%" y="1797" width="0.5376%" height="15" fill="rgb(247,95,47)" fg:x="416" fg:w="4"/><text x="56.1640%" y="1807.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="55.9140%" y="1781" width="0.5376%" height="15" fill="rgb(216,140,30)" fg:x="416" fg:w="4"/><text x="56.1640%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (4 samples, 0.54%)</title><rect x="55.9140%" y="1765" width="0.5376%" height="15" fill="rgb(246,214,8)" fg:x="416" fg:w="4"/><text x="56.1640%" y="1775.50"></text></g><g><title>`0x7FFE2C81DF99 (4 samples, 0.54%)</title><rect x="55.9140%" y="1749" width="0.5376%" height="15" fill="rgb(227,224,15)" fg:x="416" fg:w="4"/><text x="56.1640%" y="1759.50"></text></g><g><title>`0x7FFE2F1A39D4 (4 samples, 0.54%)</title><rect x="55.9140%" y="1733" width="0.5376%" height="15" fill="rgb(233,175,4)" fg:x="416" fg:w="4"/><text x="56.1640%" y="1743.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (52 samples, 6.99%)</title><rect x="49.5968%" y="2357" width="6.9892%" height="15" fill="rgb(221,66,45)" fg:x="369" fg:w="52"/><text x="49.8468%" y="2367.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (52 samples, 6.99%)</title><rect x="49.5968%" y="2341" width="6.9892%" height="15" fill="rgb(221,178,18)" fg:x="369" fg:w="52"/><text x="49.8468%" y="2351.50">fuzzit.ex..</text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.13%)</title><rect x="56.4516%" y="2325" width="0.1344%" height="15" fill="rgb(213,81,29)" fg:x="420" fg:w="1"/><text x="56.7016%" y="2335.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.13%)</title><rect x="56.4516%" y="2309" width="0.1344%" height="15" fill="rgb(220,89,49)" fg:x="420" fg:w="1"/><text x="56.7016%" y="2319.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::counters::AtomicCounters::sub_sleeping_thread (1 samples, 0.13%)</title><rect x="56.4516%" y="2293" width="0.1344%" height="15" fill="rgb(227,60,33)" fg:x="420" fg:w="1"/><text x="56.7016%" y="2303.50"></text></g><g><title>fuzzit.exe`core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.13%)</title><rect x="56.4516%" y="2277" width="0.1344%" height="15" fill="rgb(205,113,12)" fg:x="420" fg:w="1"/><text x="56.7016%" y="2287.50"></text></g><g><title>fuzzit.exe`core::sync::atomic::atomic_sub (1 samples, 0.13%)</title><rect x="56.4516%" y="2261" width="0.1344%" height="15" fill="rgb(211,32,1)" fg:x="420" fg:w="1"/><text x="56.7016%" y="2271.50"></text></g><g><title>`0x7FFE2F0BC526 (1 samples, 0.13%)</title><rect x="56.4516%" y="2245" width="0.1344%" height="15" fill="rgb(246,2,12)" fg:x="420" fg:w="1"/><text x="56.7016%" y="2255.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="56.5860%" y="2213" width="0.1344%" height="15" fill="rgb(243,37,27)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2223.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.13%)</title><rect x="56.5860%" y="2197" width="0.1344%" height="15" fill="rgb(248,211,31)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2207.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.13%)</title><rect x="56.5860%" y="2181" width="0.1344%" height="15" fill="rgb(242,146,47)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2191.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.13%)</title><rect x="56.5860%" y="2165" width="0.1344%" height="15" fill="rgb(206,70,20)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2175.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.13%)</title><rect x="56.5860%" y="2149" width="0.1344%" height="15" fill="rgb(215,10,51)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2159.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.13%)</title><rect x="56.5860%" y="2133" width="0.1344%" height="15" fill="rgb(243,178,53)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2143.50"></text></g><g><title>fuzzit.exe`alloc::str::impl$5::replacen&lt;ref$&lt;str$&gt; &gt;(ref$&lt;str$&gt;, ref$&lt;str$&gt;, ref$ (1 samples, 0.13%)</title><rect x="56.5860%" y="2117" width="0.1344%" height="15" fill="rgb(233,221,20)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2127.50"></text></g><g><title>fuzzit.exe`alloc::string::String::with_capacity (1 samples, 0.13%)</title><rect x="56.5860%" y="2101" width="0.1344%" height="15" fill="rgb(218,95,35)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2111.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.13%)</title><rect x="56.5860%" y="2085" width="0.1344%" height="15" fill="rgb(229,13,5)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2095.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="56.5860%" y="2069" width="0.1344%" height="15" fill="rgb(252,164,30)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2079.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="56.5860%" y="2053" width="0.1344%" height="15" fill="rgb(232,68,36)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2063.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.13%)</title><rect x="56.5860%" y="2037" width="0.1344%" height="15" fill="rgb(219,59,54)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2047.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.13%)</title><rect x="56.5860%" y="2021" width="0.1344%" height="15" fill="rgb(250,92,33)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2031.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="56.5860%" y="2005" width="0.1344%" height="15" fill="rgb(229,162,54)" fg:x="421" fg:w="1"/><text x="56.8360%" y="2015.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.13%)</title><rect x="56.5860%" y="1989" width="0.1344%" height="15" fill="rgb(244,114,52)" fg:x="421" fg:w="1"/><text x="56.8360%" y="1999.50"></text></g><g><title>`0x7FFE2F0923C9 (1 samples, 0.13%)</title><rect x="56.5860%" y="1973" width="0.1344%" height="15" fill="rgb(212,211,43)" fg:x="421" fg:w="1"/><text x="56.8360%" y="1983.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="56.5860%" y="1957" width="0.1344%" height="15" fill="rgb(226,147,8)" fg:x="421" fg:w="1"/><text x="56.8360%" y="1967.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.13%)</title><rect x="56.5860%" y="1941" width="0.1344%" height="15" fill="rgb(226,23,13)" fg:x="421" fg:w="1"/><text x="56.8360%" y="1951.50"></text></g><g><title>`0x7FFE2F067842 (1 samples, 0.13%)</title><rect x="56.5860%" y="1925" width="0.1344%" height="15" fill="rgb(240,63,4)" fg:x="421" fg:w="1"/><text x="56.8360%" y="1935.50"></text></g><g><title>`0x7FFE2F068C1F (1 samples, 0.13%)</title><rect x="56.5860%" y="1909" width="0.1344%" height="15" fill="rgb(221,1,32)" fg:x="421" fg:w="1"/><text x="56.8360%" y="1919.50"></text></g><g><title>`0x7FFE2F0694B3 (1 samples, 0.13%)</title><rect x="56.5860%" y="1893" width="0.1344%" height="15" fill="rgb(242,117,10)" fg:x="421" fg:w="1"/><text x="56.8360%" y="1903.50"></text></g><g><title>`0x7FFE2F1A3534 (1 samples, 0.13%)</title><rect x="56.5860%" y="1877" width="0.1344%" height="15" fill="rgb(249,172,44)" fg:x="421" fg:w="1"/><text x="56.8360%" y="1887.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.13%)</title><rect x="56.7204%" y="2037" width="0.1344%" height="15" fill="rgb(244,46,45)" fg:x="422" fg:w="1"/><text x="56.9704%" y="2047.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.13%)</title><rect x="56.7204%" y="2021" width="0.1344%" height="15" fill="rgb(206,43,17)" fg:x="422" fg:w="1"/><text x="56.9704%" y="2031.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.13%)</title><rect x="56.7204%" y="2005" width="0.1344%" height="15" fill="rgb(239,218,39)" fg:x="422" fg:w="1"/><text x="56.9704%" y="2015.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="56.7204%" y="1989" width="0.1344%" height="15" fill="rgb(208,169,54)" fg:x="422" fg:w="1"/><text x="56.9704%" y="1999.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="56.7204%" y="1973" width="0.1344%" height="15" fill="rgb(247,25,42)" fg:x="422" fg:w="1"/><text x="56.9704%" y="1983.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.13%)</title><rect x="56.8548%" y="1973" width="0.1344%" height="15" fill="rgb(226,23,31)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1983.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="56.8548%" y="1957" width="0.1344%" height="15" fill="rgb(247,16,28)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1967.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="56.8548%" y="1941" width="0.1344%" height="15" fill="rgb(231,147,38)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1951.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="56.8548%" y="1925" width="0.1344%" height="15" fill="rgb(253,81,48)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1935.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="56.8548%" y="1909" width="0.1344%" height="15" fill="rgb(249,222,43)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1919.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="56.8548%" y="1893" width="0.1344%" height="15" fill="rgb(221,3,27)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="56.8548%" y="1877" width="0.1344%" height="15" fill="rgb(228,180,5)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1887.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="56.8548%" y="1861" width="0.1344%" height="15" fill="rgb(227,131,42)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1871.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="56.8548%" y="1845" width="0.1344%" height="15" fill="rgb(212,3,39)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1855.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="56.8548%" y="1829" width="0.1344%" height="15" fill="rgb(226,45,5)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1839.50"></text></g><g><title>`0x7FFE2C802D6A (1 samples, 0.13%)</title><rect x="56.8548%" y="1813" width="0.1344%" height="15" fill="rgb(215,167,45)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1823.50"></text></g><g><title>`0x7FFE2F0E2FC5 (1 samples, 0.13%)</title><rect x="56.8548%" y="1797" width="0.1344%" height="15" fill="rgb(250,218,53)" fg:x="423" fg:w="1"/><text x="57.1048%" y="1807.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (2 samples, 0.27%)</title><rect x="56.8548%" y="2005" width="0.2688%" height="15" fill="rgb(207,140,0)" fg:x="423" fg:w="2"/><text x="57.1048%" y="2015.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (2 samples, 0.27%)</title><rect x="56.8548%" y="1989" width="0.2688%" height="15" fill="rgb(238,133,51)" fg:x="423" fg:w="2"/><text x="57.1048%" y="1999.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.13%)</title><rect x="56.9892%" y="1973" width="0.1344%" height="15" fill="rgb(218,203,53)" fg:x="424" fg:w="1"/><text x="57.2392%" y="1983.50"></text></g><g><title>`0x7FFE2C8CFD37 (1 samples, 0.13%)</title><rect x="56.9892%" y="1957" width="0.1344%" height="15" fill="rgb(226,184,25)" fg:x="424" fg:w="1"/><text x="57.2392%" y="1967.50"></text></g><g><title>`0x7FFE2F12686D (1 samples, 0.13%)</title><rect x="56.9892%" y="1941" width="0.1344%" height="15" fill="rgb(231,121,21)" fg:x="424" fg:w="1"/><text x="57.2392%" y="1951.50"></text></g><g><title>`0x7FFE2F055969 (1 samples, 0.13%)</title><rect x="56.9892%" y="1925" width="0.1344%" height="15" fill="rgb(251,14,34)" fg:x="424" fg:w="1"/><text x="57.2392%" y="1935.50"></text></g><g><title>`0x7FFE2F057917 (1 samples, 0.13%)</title><rect x="56.9892%" y="1909" width="0.1344%" height="15" fill="rgb(249,193,11)" fg:x="424" fg:w="1"/><text x="57.2392%" y="1919.50"></text></g><g><title>`0x7FFE2C8774BC (2 samples, 0.27%)</title><rect x="57.1237%" y="1941" width="0.2688%" height="15" fill="rgb(220,172,37)" fg:x="425" fg:w="2"/><text x="57.3737%" y="1951.50"></text></g><g><title>`0x7FFE2C902481 (2 samples, 0.27%)</title><rect x="57.1237%" y="1925" width="0.2688%" height="15" fill="rgb(231,229,43)" fg:x="425" fg:w="2"/><text x="57.3737%" y="1935.50"></text></g><g><title>`0x7FFE2C90B036 (2 samples, 0.27%)</title><rect x="57.1237%" y="1909" width="0.2688%" height="15" fill="rgb(250,161,5)" fg:x="425" fg:w="2"/><text x="57.3737%" y="1919.50"></text></g><g><title>`0x7FFE2F1A3474 (2 samples, 0.27%)</title><rect x="57.1237%" y="1893" width="0.2688%" height="15" fill="rgb(218,225,18)" fg:x="425" fg:w="2"/><text x="57.3737%" y="1903.50"></text></g><g><title>`0x7FFE2C8776C5 (11 samples, 1.48%)</title><rect x="57.3925%" y="1941" width="1.4785%" height="15" fill="rgb(245,45,42)" fg:x="427" fg:w="11"/><text x="57.6425%" y="1951.50"></text></g><g><title>`0x7FFE2F1A4C44 (11 samples, 1.48%)</title><rect x="57.3925%" y="1925" width="1.4785%" height="15" fill="rgb(211,115,1)" fg:x="427" fg:w="11"/><text x="57.6425%" y="1935.50"></text></g><g><title>`0x7FFE2DD2E1E0 (1 samples, 0.13%)</title><rect x="58.8710%" y="1893" width="0.1344%" height="15" fill="rgb(248,133,52)" fg:x="438" fg:w="1"/><text x="59.1210%" y="1903.50"></text></g><g><title>`0x7FFE2C8D46EF (1 samples, 0.13%)</title><rect x="58.8710%" y="1877" width="0.1344%" height="15" fill="rgb(238,100,21)" fg:x="438" fg:w="1"/><text x="59.1210%" y="1887.50"></text></g><g><title>`0x7FFE2F0ED2C8 (1 samples, 0.13%)</title><rect x="58.8710%" y="1861" width="0.1344%" height="15" fill="rgb(247,144,11)" fg:x="438" fg:w="1"/><text x="59.1210%" y="1871.50"></text></g><g><title>`0x7FFE2F0EDA1D (1 samples, 0.13%)</title><rect x="58.8710%" y="1845" width="0.1344%" height="15" fill="rgb(206,164,16)" fg:x="438" fg:w="1"/><text x="59.1210%" y="1855.50"></text></g><g><title>`0x7FFE2F1A8AC4 (1 samples, 0.13%)</title><rect x="58.8710%" y="1829" width="0.1344%" height="15" fill="rgb(222,34,3)" fg:x="438" fg:w="1"/><text x="59.1210%" y="1839.50"></text></g><g><title>`0x7FFE2DD2D5B5 (2 samples, 0.27%)</title><rect x="58.8710%" y="1909" width="0.2688%" height="15" fill="rgb(248,82,4)" fg:x="438" fg:w="2"/><text x="59.1210%" y="1919.50"></text></g><g><title>`0x7FFE2DD2E2FE (1 samples, 0.13%)</title><rect x="59.0054%" y="1893" width="0.1344%" height="15" fill="rgb(228,81,46)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1903.50"></text></g><g><title>`0x7FFE2C7FDD0F (1 samples, 0.13%)</title><rect x="59.0054%" y="1877" width="0.1344%" height="15" fill="rgb(227,67,47)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1887.50"></text></g><g><title>`0x7FFE2F054F46 (1 samples, 0.13%)</title><rect x="59.0054%" y="1861" width="0.1344%" height="15" fill="rgb(215,93,53)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1871.50"></text></g><g><title>`0x7FFE2F0BB4D6 (1 samples, 0.13%)</title><rect x="59.0054%" y="1845" width="0.1344%" height="15" fill="rgb(248,194,39)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1855.50"></text></g><g><title>`0x7FFE2F0BB939 (1 samples, 0.13%)</title><rect x="59.0054%" y="1829" width="0.1344%" height="15" fill="rgb(215,5,19)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1839.50"></text></g><g><title>`0x7FFE2F164651 (1 samples, 0.13%)</title><rect x="59.0054%" y="1813" width="0.1344%" height="15" fill="rgb(226,215,51)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1823.50"></text></g><g><title>`0x7FFE2F1646D8 (1 samples, 0.13%)</title><rect x="59.0054%" y="1797" width="0.1344%" height="15" fill="rgb(225,56,26)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1807.50"></text></g><g><title>`0x7FFE2F16B10F (1 samples, 0.13%)</title><rect x="59.0054%" y="1781" width="0.1344%" height="15" fill="rgb(222,75,29)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1791.50"></text></g><g><title>`0x7FFE2F16DF19 (1 samples, 0.13%)</title><rect x="59.0054%" y="1765" width="0.1344%" height="15" fill="rgb(236,139,6)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1775.50"></text></g><g><title>`0x7FFE2F10A915 (1 samples, 0.13%)</title><rect x="59.0054%" y="1749" width="0.1344%" height="15" fill="rgb(223,137,36)" fg:x="439" fg:w="1"/><text x="59.2554%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (27 samples, 3.63%)</title><rect x="57.1237%" y="2005" width="3.6290%" height="15" fill="rgb(226,99,2)" fg:x="425" fg:w="27"/><text x="57.3737%" y="2015.50">fuzz..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (27 samples, 3.63%)</title><rect x="57.1237%" y="1989" width="3.6290%" height="15" fill="rgb(206,133,23)" fg:x="425" fg:w="27"/><text x="57.3737%" y="1999.50">fuzz..</text></g><g><title>`0x7FFE2DD4C6D4 (27 samples, 3.63%)</title><rect x="57.1237%" y="1973" width="3.6290%" height="15" fill="rgb(243,173,15)" fg:x="425" fg:w="27"/><text x="57.3737%" y="1983.50">`0x7..</text></g><g><title>`0x7FFE2C874E26 (27 samples, 3.63%)</title><rect x="57.1237%" y="1957" width="3.6290%" height="15" fill="rgb(228,69,28)" fg:x="425" fg:w="27"/><text x="57.3737%" y="1967.50">`0x7..</text></g><g><title>`0x7FFE2C8787CB (14 samples, 1.88%)</title><rect x="58.8710%" y="1941" width="1.8817%" height="15" fill="rgb(212,51,22)" fg:x="438" fg:w="14"/><text x="59.1210%" y="1951.50">`..</text></g><g><title>`0x7FFE2DD2D052 (14 samples, 1.88%)</title><rect x="58.8710%" y="1925" width="1.8817%" height="15" fill="rgb(227,113,0)" fg:x="438" fg:w="14"/><text x="59.1210%" y="1935.50">`..</text></g><g><title>`0x7FFE2DD2D646 (12 samples, 1.61%)</title><rect x="59.1398%" y="1909" width="1.6129%" height="15" fill="rgb(252,84,27)" fg:x="440" fg:w="12"/><text x="59.3898%" y="1919.50"></text></g><g><title>`0x7FFE2F1A3BB4 (12 samples, 1.61%)</title><rect x="59.1398%" y="1893" width="1.6129%" height="15" fill="rgb(223,145,39)" fg:x="440" fg:w="12"/><text x="59.3898%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="60.7527%" y="1973" width="0.1344%" height="15" fill="rgb(239,219,30)" fg:x="452" fg:w="1"/><text x="61.0027%" y="1983.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$4 (1 samples, 0.13%)</title><rect x="60.7527%" y="1957" width="0.1344%" height="15" fill="rgb(224,196,39)" fg:x="452" fg:w="1"/><text x="61.0027%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="60.7527%" y="1941" width="0.1344%" height="15" fill="rgb(205,35,43)" fg:x="452" fg:w="1"/><text x="61.0027%" y="1951.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="60.7527%" y="1925" width="0.1344%" height="15" fill="rgb(228,201,21)" fg:x="452" fg:w="1"/><text x="61.0027%" y="1935.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="60.7527%" y="1909" width="0.1344%" height="15" fill="rgb(237,118,16)" fg:x="452" fg:w="1"/><text x="61.0027%" y="1919.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="60.7527%" y="1893" width="0.1344%" height="15" fill="rgb(241,17,19)" fg:x="452" fg:w="1"/><text x="61.0027%" y="1903.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="60.7527%" y="1877" width="0.1344%" height="15" fill="rgb(214,10,25)" fg:x="452" fg:w="1"/><text x="61.0027%" y="1887.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="60.7527%" y="1861" width="0.1344%" height="15" fill="rgb(238,37,29)" fg:x="452" fg:w="1"/><text x="61.0027%" y="1871.50"></text></g><g><title>`0x7FFE2C81DF99 (10 samples, 1.34%)</title><rect x="60.8871%" y="1909" width="1.3441%" height="15" fill="rgb(253,83,25)" fg:x="453" fg:w="10"/><text x="61.1371%" y="1919.50"></text></g><g><title>`0x7FFE2F1A39D4 (10 samples, 1.34%)</title><rect x="60.8871%" y="1893" width="1.3441%" height="15" fill="rgb(234,192,12)" fg:x="453" fg:w="10"/><text x="61.1371%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (42 samples, 5.65%)</title><rect x="56.7204%" y="2181" width="5.6452%" height="15" fill="rgb(241,216,45)" fg:x="422" fg:w="42"/><text x="56.9704%" y="2191.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (42 samples, 5.65%)</title><rect x="56.7204%" y="2165" width="5.6452%" height="15" fill="rgb(242,22,33)" fg:x="422" fg:w="42"/><text x="56.9704%" y="2175.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (42 samples, 5.65%)</title><rect x="56.7204%" y="2149" width="5.6452%" height="15" fill="rgb(231,105,49)" fg:x="422" fg:w="42"/><text x="56.9704%" y="2159.50">fuzzit...</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (42 samples, 5.65%)</title><rect x="56.7204%" y="2133" width="5.6452%" height="15" fill="rgb(218,204,15)" fg:x="422" fg:w="42"/><text x="56.9704%" y="2143.50">fuzzit...</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (42 samples, 5.65%)</title><rect x="56.7204%" y="2117" width="5.6452%" height="15" fill="rgb(235,138,41)" fg:x="422" fg:w="42"/><text x="56.9704%" y="2127.50">fuzzit...</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (42 samples, 5.65%)</title><rect x="56.7204%" y="2101" width="5.6452%" height="15" fill="rgb(246,0,9)" fg:x="422" fg:w="42"/><text x="56.9704%" y="2111.50">fuzzit...</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (42 samples, 5.65%)</title><rect x="56.7204%" y="2085" width="5.6452%" height="15" fill="rgb(210,74,4)" fg:x="422" fg:w="42"/><text x="56.9704%" y="2095.50">fuzzit...</text></g><g><title>fuzzit.exe`std::process::Command::output (42 samples, 5.65%)</title><rect x="56.7204%" y="2069" width="5.6452%" height="15" fill="rgb(250,60,41)" fg:x="422" fg:w="42"/><text x="56.9704%" y="2079.50">fuzzit...</text></g><g><title>fuzzit.exe`std::sys::process::output (42 samples, 5.65%)</title><rect x="56.7204%" y="2053" width="5.6452%" height="15" fill="rgb(220,115,12)" fg:x="422" fg:w="42"/><text x="56.9704%" y="2063.50">fuzzit...</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (41 samples, 5.51%)</title><rect x="56.8548%" y="2037" width="5.5108%" height="15" fill="rgb(237,100,13)" fg:x="423" fg:w="41"/><text x="57.1048%" y="2047.50">fuzzit...</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (41 samples, 5.51%)</title><rect x="56.8548%" y="2021" width="5.5108%" height="15" fill="rgb(213,55,26)" fg:x="423" fg:w="41"/><text x="57.1048%" y="2031.50">fuzzit...</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (12 samples, 1.61%)</title><rect x="60.7527%" y="2005" width="1.6129%" height="15" fill="rgb(216,17,4)" fg:x="452" fg:w="12"/><text x="61.0027%" y="2015.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (12 samples, 1.61%)</title><rect x="60.7527%" y="1989" width="1.6129%" height="15" fill="rgb(220,153,47)" fg:x="452" fg:w="12"/><text x="61.0027%" y="1999.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (11 samples, 1.48%)</title><rect x="60.8871%" y="1973" width="1.4785%" height="15" fill="rgb(215,131,9)" fg:x="453" fg:w="11"/><text x="61.1371%" y="1983.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (11 samples, 1.48%)</title><rect x="60.8871%" y="1957" width="1.4785%" height="15" fill="rgb(233,46,42)" fg:x="453" fg:w="11"/><text x="61.1371%" y="1967.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (11 samples, 1.48%)</title><rect x="60.8871%" y="1941" width="1.4785%" height="15" fill="rgb(226,86,7)" fg:x="453" fg:w="11"/><text x="61.1371%" y="1951.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (11 samples, 1.48%)</title><rect x="60.8871%" y="1925" width="1.4785%" height="15" fill="rgb(239,226,21)" fg:x="453" fg:w="11"/><text x="61.1371%" y="1935.50"></text></g><g><title>fuzzit.exe`std::sys::args::windows::to_user_path (1 samples, 0.13%)</title><rect x="62.2312%" y="1909" width="0.1344%" height="15" fill="rgb(244,137,22)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1919.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="62.2312%" y="1893" width="0.1344%" height="15" fill="rgb(211,139,35)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::to_u16s::inner (1 samples, 0.13%)</title><rect x="62.2312%" y="1877" width="0.1344%" height="15" fill="rgb(214,62,50)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1887.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$8::deref (1 samples, 0.13%)</title><rect x="62.2312%" y="1861" width="0.1344%" height="15" fill="rgb(212,113,44)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1871.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_slice (1 samples, 0.13%)</title><rect x="62.2312%" y="1845" width="0.1344%" height="15" fill="rgb(226,150,43)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1855.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_ptr (1 samples, 0.13%)</title><rect x="62.2312%" y="1829" width="0.1344%" height="15" fill="rgb(250,71,37)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1839.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.13%)</title><rect x="62.2312%" y="1813" width="0.1344%" height="15" fill="rgb(219,76,19)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1823.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.13%)</title><rect x="62.2312%" y="1797" width="0.1344%" height="15" fill="rgb(250,39,11)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1807.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.13%)</title><rect x="62.2312%" y="1781" width="0.1344%" height="15" fill="rgb(230,64,31)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1791.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_desugared&lt;u16,alloc::alloc::Global,std::sys_common::wtf8::EncodeWide&gt; (1 samples, 0.13%)</title><rect x="62.2312%" y="1765" width="0.1344%" height="15" fill="rgb(208,222,23)" fg:x="463" fg:w="1"/><text x="62.4812%" y="1775.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.13%)</title><rect x="62.3656%" y="1861" width="0.1344%" height="15" fill="rgb(227,125,18)" fg:x="464" fg:w="1"/><text x="62.6156%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.13%)</title><rect x="62.3656%" y="1845" width="0.1344%" height="15" fill="rgb(234,210,9)" fg:x="464" fg:w="1"/><text x="62.6156%" y="1855.50"></text></g><g><title>`0x7FFE2C7FF101 (1 samples, 0.13%)</title><rect x="62.3656%" y="1829" width="0.1344%" height="15" fill="rgb(217,127,24)" fg:x="464" fg:w="1"/><text x="62.6156%" y="1839.50"></text></g><g><title>`0x7FFE2C7FF238 (1 samples, 0.13%)</title><rect x="62.3656%" y="1813" width="0.1344%" height="15" fill="rgb(239,141,48)" fg:x="464" fg:w="1"/><text x="62.6156%" y="1823.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="62.5000%" y="1765" width="0.1344%" height="15" fill="rgb(227,109,8)" fg:x="465" fg:w="1"/><text x="62.7500%" y="1775.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="62.5000%" y="1749" width="0.1344%" height="15" fill="rgb(235,184,23)" fg:x="465" fg:w="1"/><text x="62.7500%" y="1759.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="62.5000%" y="1733" width="0.1344%" height="15" fill="rgb(227,226,48)" fg:x="465" fg:w="1"/><text x="62.7500%" y="1743.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.40%)</title><rect x="62.6344%" y="1765" width="0.4032%" height="15" fill="rgb(206,150,11)" fg:x="466" fg:w="3"/><text x="62.8844%" y="1775.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.40%)</title><rect x="62.6344%" y="1749" width="0.4032%" height="15" fill="rgb(254,2,33)" fg:x="466" fg:w="3"/><text x="62.8844%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 0.94%)</title><rect x="62.5000%" y="1829" width="0.9409%" height="15" fill="rgb(243,160,20)" fg:x="465" fg:w="7"/><text x="62.7500%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 0.94%)</title><rect x="62.5000%" y="1813" width="0.9409%" height="15" fill="rgb(218,208,30)" fg:x="465" fg:w="7"/><text x="62.7500%" y="1823.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 0.94%)</title><rect x="62.5000%" y="1797" width="0.9409%" height="15" fill="rgb(224,120,49)" fg:x="465" fg:w="7"/><text x="62.7500%" y="1807.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 0.94%)</title><rect x="62.5000%" y="1781" width="0.9409%" height="15" fill="rgb(246,12,2)" fg:x="465" fg:w="7"/><text x="62.7500%" y="1791.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="63.0376%" y="1765" width="0.4032%" height="15" fill="rgb(236,117,3)" fg:x="469" fg:w="3"/><text x="63.2876%" y="1775.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="63.0376%" y="1749" width="0.4032%" height="15" fill="rgb(216,128,52)" fg:x="469" fg:w="3"/><text x="63.2876%" y="1759.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="63.0376%" y="1733" width="0.4032%" height="15" fill="rgb(246,145,19)" fg:x="469" fg:w="3"/><text x="63.2876%" y="1743.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="63.0376%" y="1717" width="0.4032%" height="15" fill="rgb(222,11,46)" fg:x="469" fg:w="3"/><text x="63.2876%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="63.4409%" y="1797" width="0.1344%" height="15" fill="rgb(245,82,36)" fg:x="472" fg:w="1"/><text x="63.6909%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.13%)</title><rect x="63.4409%" y="1781" width="0.1344%" height="15" fill="rgb(250,73,51)" fg:x="472" fg:w="1"/><text x="63.6909%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="63.4409%" y="1765" width="0.1344%" height="15" fill="rgb(221,189,23)" fg:x="472" fg:w="1"/><text x="63.6909%" y="1775.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="63.4409%" y="1749" width="0.1344%" height="15" fill="rgb(210,33,7)" fg:x="472" fg:w="1"/><text x="63.6909%" y="1759.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="63.4409%" y="1733" width="0.1344%" height="15" fill="rgb(210,107,22)" fg:x="472" fg:w="1"/><text x="63.6909%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="63.4409%" y="1717" width="0.1344%" height="15" fill="rgb(222,116,37)" fg:x="472" fg:w="1"/><text x="63.6909%" y="1727.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="63.4409%" y="1701" width="0.1344%" height="15" fill="rgb(254,17,48)" fg:x="472" fg:w="1"/><text x="63.6909%" y="1711.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="63.4409%" y="1685" width="0.1344%" height="15" fill="rgb(224,36,32)" fg:x="472" fg:w="1"/><text x="63.6909%" y="1695.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (11 samples, 1.48%)</title><rect x="62.3656%" y="2117" width="1.4785%" height="15" fill="rgb(232,90,46)" fg:x="464" fg:w="11"/><text x="62.6156%" y="2127.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="62.3656%" y="2101" width="1.4785%" height="15" fill="rgb(241,66,40)" fg:x="464" fg:w="11"/><text x="62.6156%" y="2111.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="62.3656%" y="2085" width="1.4785%" height="15" fill="rgb(249,184,29)" fg:x="464" fg:w="11"/><text x="62.6156%" y="2095.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="62.3656%" y="2069" width="1.4785%" height="15" fill="rgb(231,181,1)" fg:x="464" fg:w="11"/><text x="62.6156%" y="2079.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="62.3656%" y="2053" width="1.4785%" height="15" fill="rgb(224,94,2)" fg:x="464" fg:w="11"/><text x="62.6156%" y="2063.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (11 samples, 1.48%)</title><rect x="62.3656%" y="2037" width="1.4785%" height="15" fill="rgb(229,170,15)" fg:x="464" fg:w="11"/><text x="62.6156%" y="2047.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="62.3656%" y="2021" width="1.4785%" height="15" fill="rgb(240,127,35)" fg:x="464" fg:w="11"/><text x="62.6156%" y="2031.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="62.3656%" y="2005" width="1.4785%" height="15" fill="rgb(248,196,34)" fg:x="464" fg:w="11"/><text x="62.6156%" y="2015.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="62.3656%" y="1989" width="1.4785%" height="15" fill="rgb(236,137,7)" fg:x="464" fg:w="11"/><text x="62.6156%" y="1999.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="62.3656%" y="1973" width="1.4785%" height="15" fill="rgb(235,127,16)" fg:x="464" fg:w="11"/><text x="62.6156%" y="1983.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (11 samples, 1.48%)</title><rect x="62.3656%" y="1957" width="1.4785%" height="15" fill="rgb(250,192,54)" fg:x="464" fg:w="11"/><text x="62.6156%" y="1967.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (11 samples, 1.48%)</title><rect x="62.3656%" y="1941" width="1.4785%" height="15" fill="rgb(218,98,20)" fg:x="464" fg:w="11"/><text x="62.6156%" y="1951.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (11 samples, 1.48%)</title><rect x="62.3656%" y="1925" width="1.4785%" height="15" fill="rgb(230,176,47)" fg:x="464" fg:w="11"/><text x="62.6156%" y="1935.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (11 samples, 1.48%)</title><rect x="62.3656%" y="1909" width="1.4785%" height="15" fill="rgb(244,2,33)" fg:x="464" fg:w="11"/><text x="62.6156%" y="1919.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (11 samples, 1.48%)</title><rect x="62.3656%" y="1893" width="1.4785%" height="15" fill="rgb(231,100,17)" fg:x="464" fg:w="11"/><text x="62.6156%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (11 samples, 1.48%)</title><rect x="62.3656%" y="1877" width="1.4785%" height="15" fill="rgb(245,23,12)" fg:x="464" fg:w="11"/><text x="62.6156%" y="1887.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (10 samples, 1.34%)</title><rect x="62.5000%" y="1861" width="1.3441%" height="15" fill="rgb(249,55,22)" fg:x="465" fg:w="10"/><text x="62.7500%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (10 samples, 1.34%)</title><rect x="62.5000%" y="1845" width="1.3441%" height="15" fill="rgb(207,134,9)" fg:x="465" fg:w="10"/><text x="62.7500%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="63.4409%" y="1829" width="0.4032%" height="15" fill="rgb(218,134,0)" fg:x="472" fg:w="3"/><text x="63.6909%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="63.4409%" y="1813" width="0.4032%" height="15" fill="rgb(213,212,33)" fg:x="472" fg:w="3"/><text x="63.6909%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="63.5753%" y="1797" width="0.2688%" height="15" fill="rgb(252,106,18)" fg:x="473" fg:w="2"/><text x="63.8253%" y="1807.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="63.5753%" y="1781" width="0.2688%" height="15" fill="rgb(208,126,42)" fg:x="473" fg:w="2"/><text x="63.8253%" y="1791.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="63.5753%" y="1765" width="0.2688%" height="15" fill="rgb(246,175,29)" fg:x="473" fg:w="2"/><text x="63.8253%" y="1775.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="63.5753%" y="1749" width="0.2688%" height="15" fill="rgb(215,13,50)" fg:x="473" fg:w="2"/><text x="63.8253%" y="1759.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="63.5753%" y="1733" width="0.2688%" height="15" fill="rgb(216,172,15)" fg:x="473" fg:w="2"/><text x="63.8253%" y="1743.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="63.5753%" y="1717" width="0.2688%" height="15" fill="rgb(212,103,13)" fg:x="473" fg:w="2"/><text x="63.8253%" y="1727.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::no_work_found (1 samples, 0.13%)</title><rect x="63.8441%" y="1493" width="0.1344%" height="15" fill="rgb(231,171,36)" fg:x="475" fg:w="1"/><text x="64.0941%" y="1503.50"></text></g><g><title>`0x7FFE2C89696B (1 samples, 0.13%)</title><rect x="63.8441%" y="1477" width="0.1344%" height="15" fill="rgb(250,123,20)" fg:x="475" fg:w="1"/><text x="64.0941%" y="1487.50"></text></g><g><title>`0x7FFE2F10E134 (1 samples, 0.13%)</title><rect x="63.8441%" y="1461" width="0.1344%" height="15" fill="rgb(212,53,50)" fg:x="475" fg:w="1"/><text x="64.0941%" y="1471.50"></text></g><g><title>`0x7FFE2F1A38B4 (1 samples, 0.13%)</title><rect x="63.8441%" y="1445" width="0.1344%" height="15" fill="rgb(243,54,12)" fg:x="475" fg:w="1"/><text x="64.0941%" y="1455.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (2 samples, 0.27%)</title><rect x="63.8441%" y="1525" width="0.2688%" height="15" fill="rgb(234,101,34)" fg:x="475" fg:w="2"/><text x="64.0941%" y="1535.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 0.27%)</title><rect x="63.8441%" y="1509" width="0.2688%" height="15" fill="rgb(254,67,22)" fg:x="475" fg:w="2"/><text x="64.0941%" y="1519.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.13%)</title><rect x="63.9785%" y="1493" width="0.1344%" height="15" fill="rgb(250,35,47)" fg:x="476" fg:w="1"/><text x="64.2285%" y="1503.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.13%)</title><rect x="63.9785%" y="1477" width="0.1344%" height="15" fill="rgb(226,126,38)" fg:x="476" fg:w="1"/><text x="64.2285%" y="1487.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::counters::AtomicCounters::sub_sleeping_thread (1 samples, 0.13%)</title><rect x="63.9785%" y="1461" width="0.1344%" height="15" fill="rgb(216,138,53)" fg:x="476" fg:w="1"/><text x="64.2285%" y="1471.50"></text></g><g><title>fuzzit.exe`core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.13%)</title><rect x="63.9785%" y="1445" width="0.1344%" height="15" fill="rgb(246,199,43)" fg:x="476" fg:w="1"/><text x="64.2285%" y="1455.50"></text></g><g><title>fuzzit.exe`core::sync::atomic::atomic_sub (1 samples, 0.13%)</title><rect x="63.9785%" y="1429" width="0.1344%" height="15" fill="rgb(232,125,11)" fg:x="476" fg:w="1"/><text x="64.2285%" y="1439.50"></text></g><g><title>`0x7FFE2F0BC5CA (1 samples, 0.13%)</title><rect x="63.9785%" y="1413" width="0.1344%" height="15" fill="rgb(218,219,45)" fg:x="476" fg:w="1"/><text x="64.2285%" y="1423.50"></text></g><g><title>`0x7FFE2F1A4064 (1 samples, 0.13%)</title><rect x="63.9785%" y="1397" width="0.1344%" height="15" fill="rgb(216,102,54)" fg:x="476" fg:w="1"/><text x="64.2285%" y="1407.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="64.1129%" y="1285" width="0.1344%" height="15" fill="rgb(250,228,7)" fg:x="477" fg:w="1"/><text x="64.3629%" y="1295.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.13%)</title><rect x="64.1129%" y="1269" width="0.1344%" height="15" fill="rgb(226,125,25)" fg:x="477" fg:w="1"/><text x="64.3629%" y="1279.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.13%)</title><rect x="64.1129%" y="1253" width="0.1344%" height="15" fill="rgb(224,165,27)" fg:x="477" fg:w="1"/><text x="64.3629%" y="1263.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.13%)</title><rect x="64.1129%" y="1237" width="0.1344%" height="15" fill="rgb(233,86,3)" fg:x="477" fg:w="1"/><text x="64.3629%" y="1247.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.13%)</title><rect x="64.1129%" y="1221" width="0.1344%" height="15" fill="rgb(228,116,20)" fg:x="477" fg:w="1"/><text x="64.3629%" y="1231.50"></text></g><g><title>`0x7FFE2C8776C5 (4 samples, 0.54%)</title><rect x="64.2473%" y="1221" width="0.5376%" height="15" fill="rgb(209,192,17)" fg:x="478" fg:w="4"/><text x="64.4973%" y="1231.50"></text></g><g><title>`0x7FFE2F1A4C44 (4 samples, 0.54%)</title><rect x="64.2473%" y="1205" width="0.5376%" height="15" fill="rgb(224,88,34)" fg:x="478" fg:w="4"/><text x="64.4973%" y="1215.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 0.94%)</title><rect x="64.2473%" y="1285" width="0.9409%" height="15" fill="rgb(233,38,6)" fg:x="478" fg:w="7"/><text x="64.4973%" y="1295.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 0.94%)</title><rect x="64.2473%" y="1269" width="0.9409%" height="15" fill="rgb(212,59,30)" fg:x="478" fg:w="7"/><text x="64.4973%" y="1279.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 0.94%)</title><rect x="64.2473%" y="1253" width="0.9409%" height="15" fill="rgb(213,80,3)" fg:x="478" fg:w="7"/><text x="64.4973%" y="1263.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 0.94%)</title><rect x="64.2473%" y="1237" width="0.9409%" height="15" fill="rgb(251,178,7)" fg:x="478" fg:w="7"/><text x="64.4973%" y="1247.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="64.7849%" y="1221" width="0.4032%" height="15" fill="rgb(213,154,26)" fg:x="482" fg:w="3"/><text x="65.0349%" y="1231.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="64.7849%" y="1205" width="0.4032%" height="15" fill="rgb(238,165,49)" fg:x="482" fg:w="3"/><text x="65.0349%" y="1215.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="64.7849%" y="1189" width="0.4032%" height="15" fill="rgb(248,91,46)" fg:x="482" fg:w="3"/><text x="65.0349%" y="1199.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="64.7849%" y="1173" width="0.4032%" height="15" fill="rgb(244,21,52)" fg:x="482" fg:w="3"/><text x="65.0349%" y="1183.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="65.1882%" y="1253" width="0.1344%" height="15" fill="rgb(247,122,20)" fg:x="485" fg:w="1"/><text x="65.4382%" y="1263.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.13%)</title><rect x="65.1882%" y="1237" width="0.1344%" height="15" fill="rgb(218,27,9)" fg:x="485" fg:w="1"/><text x="65.4382%" y="1247.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="65.1882%" y="1221" width="0.1344%" height="15" fill="rgb(246,7,6)" fg:x="485" fg:w="1"/><text x="65.4382%" y="1231.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="65.1882%" y="1205" width="0.1344%" height="15" fill="rgb(227,135,54)" fg:x="485" fg:w="1"/><text x="65.4382%" y="1215.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="65.1882%" y="1189" width="0.1344%" height="15" fill="rgb(247,14,11)" fg:x="485" fg:w="1"/><text x="65.4382%" y="1199.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="65.1882%" y="1173" width="0.1344%" height="15" fill="rgb(206,149,34)" fg:x="485" fg:w="1"/><text x="65.4382%" y="1183.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="65.1882%" y="1157" width="0.1344%" height="15" fill="rgb(227,228,4)" fg:x="485" fg:w="1"/><text x="65.4382%" y="1167.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="65.1882%" y="1141" width="0.1344%" height="15" fill="rgb(238,218,28)" fg:x="485" fg:w="1"/><text x="65.4382%" y="1151.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (13 samples, 1.75%)</title><rect x="63.8441%" y="1797" width="1.7473%" height="15" fill="rgb(252,86,40)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1807.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 1.75%)</title><rect x="63.8441%" y="1781" width="1.7473%" height="15" fill="rgb(251,225,11)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1791.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (13 samples, 1.75%)</title><rect x="63.8441%" y="1765" width="1.7473%" height="15" fill="rgb(206,46,49)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1775.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (13 samples, 1.75%)</title><rect x="63.8441%" y="1749" width="1.7473%" height="15" fill="rgb(245,128,24)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1759.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (13 samples, 1.75%)</title><rect x="63.8441%" y="1733" width="1.7473%" height="15" fill="rgb(219,177,34)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1743.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (13 samples, 1.75%)</title><rect x="63.8441%" y="1717" width="1.7473%" height="15" fill="rgb(218,60,48)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1727.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (13 samples, 1.75%)</title><rect x="63.8441%" y="1701" width="1.7473%" height="15" fill="rgb(221,11,5)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1711.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (13 samples, 1.75%)</title><rect x="63.8441%" y="1685" width="1.7473%" height="15" fill="rgb(220,148,13)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1695.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (13 samples, 1.75%)</title><rect x="63.8441%" y="1669" width="1.7473%" height="15" fill="rgb(210,16,3)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1679.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (13 samples, 1.75%)</title><rect x="63.8441%" y="1653" width="1.7473%" height="15" fill="rgb(236,80,2)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1663.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (13 samples, 1.75%)</title><rect x="63.8441%" y="1637" width="1.7473%" height="15" fill="rgb(239,129,19)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1647.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (13 samples, 1.75%)</title><rect x="63.8441%" y="1621" width="1.7473%" height="15" fill="rgb(220,106,35)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1631.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (13 samples, 1.75%)</title><rect x="63.8441%" y="1605" width="1.7473%" height="15" fill="rgb(252,139,45)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1615.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (13 samples, 1.75%)</title><rect x="63.8441%" y="1589" width="1.7473%" height="15" fill="rgb(229,8,36)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1599.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (13 samples, 1.75%)</title><rect x="63.8441%" y="1573" width="1.7473%" height="15" fill="rgb(230,126,33)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1583.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="63.8441%" y="1557" width="1.7473%" height="15" fill="rgb(239,140,21)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1567.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="63.8441%" y="1541" width="1.7473%" height="15" fill="rgb(254,104,9)" fg:x="475" fg:w="13"/><text x="64.0941%" y="1551.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="64.1129%" y="1525" width="1.4785%" height="15" fill="rgb(239,52,14)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1535.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="64.1129%" y="1509" width="1.4785%" height="15" fill="rgb(208,227,44)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1519.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="64.1129%" y="1493" width="1.4785%" height="15" fill="rgb(246,18,19)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1503.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (11 samples, 1.48%)</title><rect x="64.1129%" y="1477" width="1.4785%" height="15" fill="rgb(235,228,25)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1487.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="64.1129%" y="1461" width="1.4785%" height="15" fill="rgb(240,156,20)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1471.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="64.1129%" y="1445" width="1.4785%" height="15" fill="rgb(224,8,20)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1455.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (11 samples, 1.48%)</title><rect x="64.1129%" y="1429" width="1.4785%" height="15" fill="rgb(214,12,52)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1439.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (11 samples, 1.48%)</title><rect x="64.1129%" y="1413" width="1.4785%" height="15" fill="rgb(211,220,47)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1423.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (11 samples, 1.48%)</title><rect x="64.1129%" y="1397" width="1.4785%" height="15" fill="rgb(250,173,5)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1407.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (11 samples, 1.48%)</title><rect x="64.1129%" y="1381" width="1.4785%" height="15" fill="rgb(250,125,52)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1391.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (11 samples, 1.48%)</title><rect x="64.1129%" y="1365" width="1.4785%" height="15" fill="rgb(209,133,18)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1375.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (11 samples, 1.48%)</title><rect x="64.1129%" y="1349" width="1.4785%" height="15" fill="rgb(216,173,22)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1359.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (11 samples, 1.48%)</title><rect x="64.1129%" y="1333" width="1.4785%" height="15" fill="rgb(205,3,22)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1343.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.48%)</title><rect x="64.1129%" y="1317" width="1.4785%" height="15" fill="rgb(248,22,20)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1327.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.48%)</title><rect x="64.1129%" y="1301" width="1.4785%" height="15" fill="rgb(233,6,29)" fg:x="477" fg:w="11"/><text x="64.3629%" y="1311.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="65.1882%" y="1285" width="0.4032%" height="15" fill="rgb(240,22,54)" fg:x="485" fg:w="3"/><text x="65.4382%" y="1295.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="65.1882%" y="1269" width="0.4032%" height="15" fill="rgb(231,133,32)" fg:x="485" fg:w="3"/><text x="65.4382%" y="1279.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="65.3226%" y="1253" width="0.2688%" height="15" fill="rgb(248,193,4)" fg:x="486" fg:w="2"/><text x="65.5726%" y="1263.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="65.3226%" y="1237" width="0.2688%" height="15" fill="rgb(211,178,46)" fg:x="486" fg:w="2"/><text x="65.5726%" y="1247.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="65.3226%" y="1221" width="0.2688%" height="15" fill="rgb(224,5,42)" fg:x="486" fg:w="2"/><text x="65.5726%" y="1231.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="65.3226%" y="1205" width="0.2688%" height="15" fill="rgb(239,176,25)" fg:x="486" fg:w="2"/><text x="65.5726%" y="1215.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="65.3226%" y="1189" width="0.2688%" height="15" fill="rgb(245,187,50)" fg:x="486" fg:w="2"/><text x="65.5726%" y="1199.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="65.3226%" y="1173" width="0.2688%" height="15" fill="rgb(248,24,15)" fg:x="486" fg:w="2"/><text x="65.5726%" y="1183.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.13%)</title><rect x="65.5914%" y="1589" width="0.1344%" height="15" fill="rgb(205,166,13)" fg:x="488" fg:w="1"/><text x="65.8414%" y="1599.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.13%)</title><rect x="65.5914%" y="1573" width="0.1344%" height="15" fill="rgb(208,114,23)" fg:x="488" fg:w="1"/><text x="65.8414%" y="1583.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.13%)</title><rect x="65.5914%" y="1557" width="0.1344%" height="15" fill="rgb(239,127,18)" fg:x="488" fg:w="1"/><text x="65.8414%" y="1567.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="65.5914%" y="1541" width="0.1344%" height="15" fill="rgb(219,154,28)" fg:x="488" fg:w="1"/><text x="65.8414%" y="1551.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="65.5914%" y="1525" width="0.1344%" height="15" fill="rgb(225,157,23)" fg:x="488" fg:w="1"/><text x="65.8414%" y="1535.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="65.7258%" y="1493" width="0.1344%" height="15" fill="rgb(219,8,6)" fg:x="489" fg:w="1"/><text x="65.9758%" y="1503.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="65.7258%" y="1477" width="0.1344%" height="15" fill="rgb(212,47,6)" fg:x="489" fg:w="1"/><text x="65.9758%" y="1487.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="65.7258%" y="1461" width="0.1344%" height="15" fill="rgb(224,190,4)" fg:x="489" fg:w="1"/><text x="65.9758%" y="1471.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.40%)</title><rect x="65.8602%" y="1493" width="0.4032%" height="15" fill="rgb(239,183,29)" fg:x="490" fg:w="3"/><text x="66.1102%" y="1503.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.40%)</title><rect x="65.8602%" y="1477" width="0.4032%" height="15" fill="rgb(213,57,7)" fg:x="490" fg:w="3"/><text x="66.1102%" y="1487.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="66.2634%" y="1493" width="0.4032%" height="15" fill="rgb(216,148,1)" fg:x="493" fg:w="3"/><text x="66.5134%" y="1503.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="66.2634%" y="1477" width="0.4032%" height="15" fill="rgb(236,182,29)" fg:x="493" fg:w="3"/><text x="66.5134%" y="1487.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="66.2634%" y="1461" width="0.4032%" height="15" fill="rgb(244,120,48)" fg:x="493" fg:w="3"/><text x="66.5134%" y="1471.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="66.2634%" y="1445" width="0.4032%" height="15" fill="rgb(206,71,34)" fg:x="493" fg:w="3"/><text x="66.5134%" y="1455.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.08%)</title><rect x="65.7258%" y="1557" width="1.0753%" height="15" fill="rgb(242,32,6)" fg:x="489" fg:w="8"/><text x="65.9758%" y="1567.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.08%)</title><rect x="65.7258%" y="1541" width="1.0753%" height="15" fill="rgb(241,35,3)" fg:x="489" fg:w="8"/><text x="65.9758%" y="1551.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.08%)</title><rect x="65.7258%" y="1525" width="1.0753%" height="15" fill="rgb(222,62,19)" fg:x="489" fg:w="8"/><text x="65.9758%" y="1535.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.08%)</title><rect x="65.7258%" y="1509" width="1.0753%" height="15" fill="rgb(223,110,41)" fg:x="489" fg:w="8"/><text x="65.9758%" y="1519.50"></text></g><g><title>`0x7FFE2C8796C7 (1 samples, 0.13%)</title><rect x="66.6667%" y="1493" width="0.1344%" height="15" fill="rgb(208,224,4)" fg:x="496" fg:w="1"/><text x="66.9167%" y="1503.50"></text></g><g><title>`0x7FFE2DD40D96 (1 samples, 0.13%)</title><rect x="66.6667%" y="1477" width="0.1344%" height="15" fill="rgb(241,137,19)" fg:x="496" fg:w="1"/><text x="66.9167%" y="1487.50"></text></g><g><title>`0x7FFE2DD410BE (1 samples, 0.13%)</title><rect x="66.6667%" y="1461" width="0.1344%" height="15" fill="rgb(244,24,17)" fg:x="496" fg:w="1"/><text x="66.9167%" y="1471.50"></text></g><g><title>`0x7FFE2F079E0F (1 samples, 0.13%)</title><rect x="66.6667%" y="1445" width="0.1344%" height="15" fill="rgb(245,178,49)" fg:x="496" fg:w="1"/><text x="66.9167%" y="1455.50"></text></g><g><title>`0x7FFE2F1A5E24 (1 samples, 0.13%)</title><rect x="66.6667%" y="1429" width="0.1344%" height="15" fill="rgb(219,160,38)" fg:x="496" fg:w="1"/><text x="66.9167%" y="1439.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (1 samples, 0.13%)</title><rect x="66.8011%" y="1525" width="0.1344%" height="15" fill="rgb(228,137,14)" fg:x="497" fg:w="1"/><text x="67.0511%" y="1535.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (1 samples, 0.13%)</title><rect x="66.8011%" y="1509" width="0.1344%" height="15" fill="rgb(237,134,11)" fg:x="497" fg:w="1"/><text x="67.0511%" y="1519.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="66.8011%" y="1493" width="0.1344%" height="15" fill="rgb(211,126,44)" fg:x="497" fg:w="1"/><text x="67.0511%" y="1503.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.13%)</title><rect x="66.8011%" y="1477" width="0.1344%" height="15" fill="rgb(226,171,33)" fg:x="497" fg:w="1"/><text x="67.0511%" y="1487.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.13%)</title><rect x="66.8011%" y="1461" width="0.1344%" height="15" fill="rgb(253,99,13)" fg:x="497" fg:w="1"/><text x="67.0511%" y="1471.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.13%)</title><rect x="66.8011%" y="1445" width="0.1344%" height="15" fill="rgb(244,48,7)" fg:x="497" fg:w="1"/><text x="67.0511%" y="1455.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.13%)</title><rect x="66.8011%" y="1429" width="0.1344%" height="15" fill="rgb(244,217,54)" fg:x="497" fg:w="1"/><text x="67.0511%" y="1439.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (36 samples, 4.84%)</title><rect x="62.3656%" y="2181" width="4.8387%" height="15" fill="rgb(224,15,18)" fg:x="464" fg:w="36"/><text x="62.6156%" y="2191.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (36 samples, 4.84%)</title><rect x="62.3656%" y="2165" width="4.8387%" height="15" fill="rgb(244,99,12)" fg:x="464" fg:w="36"/><text x="62.6156%" y="2175.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (36 samples, 4.84%)</title><rect x="62.3656%" y="2149" width="4.8387%" height="15" fill="rgb(233,226,8)" fg:x="464" fg:w="36"/><text x="62.6156%" y="2159.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (36 samples, 4.84%)</title><rect x="62.3656%" y="2133" width="4.8387%" height="15" fill="rgb(229,211,3)" fg:x="464" fg:w="36"/><text x="62.6156%" y="2143.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="2117" width="3.3602%" height="15" fill="rgb(216,140,21)" fg:x="475" fg:w="25"/><text x="64.0941%" y="2127.50">fuz..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="2101" width="3.3602%" height="15" fill="rgb(234,122,30)" fg:x="475" fg:w="25"/><text x="64.0941%" y="2111.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="2085" width="3.3602%" height="15" fill="rgb(236,25,46)" fg:x="475" fg:w="25"/><text x="64.0941%" y="2095.50">fuz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="2069" width="3.3602%" height="15" fill="rgb(217,52,54)" fg:x="475" fg:w="25"/><text x="64.0941%" y="2079.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="2053" width="3.3602%" height="15" fill="rgb(222,29,26)" fg:x="475" fg:w="25"/><text x="64.0941%" y="2063.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (25 samples, 3.36%)</title><rect x="63.8441%" y="2037" width="3.3602%" height="15" fill="rgb(216,177,29)" fg:x="475" fg:w="25"/><text x="64.0941%" y="2047.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="2021" width="3.3602%" height="15" fill="rgb(247,136,51)" fg:x="475" fg:w="25"/><text x="64.0941%" y="2031.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="2005" width="3.3602%" height="15" fill="rgb(231,47,47)" fg:x="475" fg:w="25"/><text x="64.0941%" y="2015.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="1989" width="3.3602%" height="15" fill="rgb(211,192,36)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1999.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="1973" width="3.3602%" height="15" fill="rgb(229,156,32)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1983.50">fuz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="1957" width="3.3602%" height="15" fill="rgb(248,213,20)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1967.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="1941" width="3.3602%" height="15" fill="rgb(217,64,7)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1951.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (25 samples, 3.36%)</title><rect x="63.8441%" y="1925" width="3.3602%" height="15" fill="rgb(232,142,8)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1935.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="1909" width="3.3602%" height="15" fill="rgb(224,92,44)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1919.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (25 samples, 3.36%)</title><rect x="63.8441%" y="1893" width="3.3602%" height="15" fill="rgb(214,169,17)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1903.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (25 samples, 3.36%)</title><rect x="63.8441%" y="1877" width="3.3602%" height="15" fill="rgb(210,59,37)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1887.50">fuz..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (25 samples, 3.36%)</title><rect x="63.8441%" y="1861" width="3.3602%" height="15" fill="rgb(214,116,48)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1871.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (25 samples, 3.36%)</title><rect x="63.8441%" y="1845" width="3.3602%" height="15" fill="rgb(244,191,6)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1855.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="63.8441%" y="1829" width="3.3602%" height="15" fill="rgb(241,50,52)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1839.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="63.8441%" y="1813" width="3.3602%" height="15" fill="rgb(236,75,39)" fg:x="475" fg:w="25"/><text x="64.0941%" y="1823.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="65.5914%" y="1797" width="1.6129%" height="15" fill="rgb(236,99,0)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1807.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="65.5914%" y="1781" width="1.6129%" height="15" fill="rgb(207,202,15)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1791.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="65.5914%" y="1765" width="1.6129%" height="15" fill="rgb(233,207,14)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1775.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.61%)</title><rect x="65.5914%" y="1749" width="1.6129%" height="15" fill="rgb(226,27,51)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1759.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="65.5914%" y="1733" width="1.6129%" height="15" fill="rgb(206,104,42)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1743.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="65.5914%" y="1717" width="1.6129%" height="15" fill="rgb(212,225,4)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1727.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="65.5914%" y="1701" width="1.6129%" height="15" fill="rgb(233,96,42)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1711.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (12 samples, 1.61%)</title><rect x="65.5914%" y="1685" width="1.6129%" height="15" fill="rgb(229,21,32)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1695.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.61%)</title><rect x="65.5914%" y="1669" width="1.6129%" height="15" fill="rgb(226,216,24)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1679.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.61%)</title><rect x="65.5914%" y="1653" width="1.6129%" height="15" fill="rgb(221,163,17)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1663.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.61%)</title><rect x="65.5914%" y="1637" width="1.6129%" height="15" fill="rgb(216,216,42)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1647.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.61%)</title><rect x="65.5914%" y="1621" width="1.6129%" height="15" fill="rgb(240,118,7)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.61%)</title><rect x="65.5914%" y="1605" width="1.6129%" height="15" fill="rgb(221,67,37)" fg:x="488" fg:w="12"/><text x="65.8414%" y="1615.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (11 samples, 1.48%)</title><rect x="65.7258%" y="1589" width="1.4785%" height="15" fill="rgb(241,32,44)" fg:x="489" fg:w="11"/><text x="65.9758%" y="1599.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (11 samples, 1.48%)</title><rect x="65.7258%" y="1573" width="1.4785%" height="15" fill="rgb(235,204,43)" fg:x="489" fg:w="11"/><text x="65.9758%" y="1583.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="66.8011%" y="1557" width="0.4032%" height="15" fill="rgb(213,116,10)" fg:x="497" fg:w="3"/><text x="67.0511%" y="1567.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="66.8011%" y="1541" width="0.4032%" height="15" fill="rgb(239,15,48)" fg:x="497" fg:w="3"/><text x="67.0511%" y="1551.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="66.9355%" y="1525" width="0.2688%" height="15" fill="rgb(207,123,36)" fg:x="498" fg:w="2"/><text x="67.1855%" y="1535.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="66.9355%" y="1509" width="0.2688%" height="15" fill="rgb(209,103,30)" fg:x="498" fg:w="2"/><text x="67.1855%" y="1519.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="66.9355%" y="1493" width="0.2688%" height="15" fill="rgb(238,100,19)" fg:x="498" fg:w="2"/><text x="67.1855%" y="1503.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="66.9355%" y="1477" width="0.2688%" height="15" fill="rgb(244,30,14)" fg:x="498" fg:w="2"/><text x="67.1855%" y="1487.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="66.9355%" y="1461" width="0.2688%" height="15" fill="rgb(249,174,6)" fg:x="498" fg:w="2"/><text x="67.1855%" y="1471.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="66.9355%" y="1445" width="0.2688%" height="15" fill="rgb(235,213,41)" fg:x="498" fg:w="2"/><text x="67.1855%" y="1455.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (2 samples, 0.27%)</title><rect x="67.2043%" y="1941" width="0.2688%" height="15" fill="rgb(213,118,6)" fg:x="500" fg:w="2"/><text x="67.4543%" y="1951.50"></text></g><g><title>`0x7FFE2C8031A9 (2 samples, 0.27%)</title><rect x="67.2043%" y="1925" width="0.2688%" height="15" fill="rgb(235,44,51)" fg:x="500" fg:w="2"/><text x="67.4543%" y="1935.50"></text></g><g><title>`0x7FFE2F1A3414 (2 samples, 0.27%)</title><rect x="67.2043%" y="1909" width="0.2688%" height="15" fill="rgb(217,9,53)" fg:x="500" fg:w="2"/><text x="67.4543%" y="1919.50"></text></g><g><title>`0x7FFE2F1A32E3 (1 samples, 0.13%)</title><rect x="67.4731%" y="1861" width="0.1344%" height="15" fill="rgb(237,172,34)" fg:x="502" fg:w="1"/><text x="67.7231%" y="1871.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (4 samples, 0.54%)</title><rect x="67.2043%" y="1973" width="0.5376%" height="15" fill="rgb(206,206,11)" fg:x="500" fg:w="4"/><text x="67.4543%" y="1983.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (4 samples, 0.54%)</title><rect x="67.2043%" y="1957" width="0.5376%" height="15" fill="rgb(214,149,29)" fg:x="500" fg:w="4"/><text x="67.4543%" y="1967.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (2 samples, 0.27%)</title><rect x="67.4731%" y="1941" width="0.2688%" height="15" fill="rgb(208,123,3)" fg:x="502" fg:w="2"/><text x="67.7231%" y="1951.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::handle::Handle::read_overlapped (2 samples, 0.27%)</title><rect x="67.4731%" y="1925" width="0.2688%" height="15" fill="rgb(229,126,4)" fg:x="502" fg:w="2"/><text x="67.7231%" y="1935.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (2 samples, 0.27%)</title><rect x="67.4731%" y="1909" width="0.2688%" height="15" fill="rgb(222,92,36)" fg:x="502" fg:w="2"/><text x="67.7231%" y="1919.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (2 samples, 0.27%)</title><rect x="67.4731%" y="1893" width="0.2688%" height="15" fill="rgb(216,39,41)" fg:x="502" fg:w="2"/><text x="67.7231%" y="1903.50"></text></g><g><title>`0x7FFE2C7FF67A (2 samples, 0.27%)</title><rect x="67.4731%" y="1877" width="0.2688%" height="15" fill="rgb(253,127,28)" fg:x="502" fg:w="2"/><text x="67.7231%" y="1887.50"></text></g><g><title>`0x7FFE2F1A32F4 (1 samples, 0.13%)</title><rect x="67.6075%" y="1861" width="0.1344%" height="15" fill="rgb(249,152,51)" fg:x="503" fg:w="1"/><text x="67.8575%" y="1871.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="67.7419%" y="1941" width="0.1344%" height="15" fill="rgb(209,123,42)" fg:x="504" fg:w="1"/><text x="67.9919%" y="1951.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.13%)</title><rect x="67.7419%" y="1925" width="0.1344%" height="15" fill="rgb(241,118,22)" fg:x="504" fg:w="1"/><text x="67.9919%" y="1935.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.13%)</title><rect x="67.7419%" y="1909" width="0.1344%" height="15" fill="rgb(208,25,7)" fg:x="504" fg:w="1"/><text x="67.9919%" y="1919.50"></text></g><g><title>`0x7FFE2C8CFD37 (1 samples, 0.13%)</title><rect x="67.7419%" y="1893" width="0.1344%" height="15" fill="rgb(243,144,39)" fg:x="504" fg:w="1"/><text x="67.9919%" y="1903.50"></text></g><g><title>`0x7FFE2F126805 (1 samples, 0.13%)</title><rect x="67.7419%" y="1877" width="0.1344%" height="15" fill="rgb(250,50,5)" fg:x="504" fg:w="1"/><text x="67.9919%" y="1887.50"></text></g><g><title>`0x7FFE2C876D00 (3 samples, 0.40%)</title><rect x="67.8763%" y="1877" width="0.4032%" height="15" fill="rgb(207,67,11)" fg:x="505" fg:w="3"/><text x="68.1263%" y="1887.50"></text></g><g><title>`0x7FFE2C81DF99 (3 samples, 0.40%)</title><rect x="67.8763%" y="1861" width="0.4032%" height="15" fill="rgb(245,204,40)" fg:x="505" fg:w="3"/><text x="68.1263%" y="1871.50"></text></g><g><title>`0x7FFE2F1A39D4 (3 samples, 0.40%)</title><rect x="67.8763%" y="1845" width="0.4032%" height="15" fill="rgb(238,228,24)" fg:x="505" fg:w="3"/><text x="68.1263%" y="1855.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.13%)</title><rect x="68.2796%" y="1877" width="0.1344%" height="15" fill="rgb(217,116,22)" fg:x="508" fg:w="1"/><text x="68.5296%" y="1887.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.13%)</title><rect x="68.2796%" y="1861" width="0.1344%" height="15" fill="rgb(234,98,12)" fg:x="508" fg:w="1"/><text x="68.5296%" y="1871.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.13%)</title><rect x="68.2796%" y="1845" width="0.1344%" height="15" fill="rgb(242,170,50)" fg:x="508" fg:w="1"/><text x="68.5296%" y="1855.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="68.2796%" y="1829" width="0.1344%" height="15" fill="rgb(235,7,5)" fg:x="508" fg:w="1"/><text x="68.5296%" y="1839.50"></text></g><g><title>`0x7FFE2C8776C5 (20 samples, 2.69%)</title><rect x="68.4140%" y="1877" width="2.6882%" height="15" fill="rgb(241,114,28)" fg:x="509" fg:w="20"/><text x="68.6640%" y="1887.50">`0..</text></g><g><title>`0x7FFE2F1A4C44 (20 samples, 2.69%)</title><rect x="68.4140%" y="1861" width="2.6882%" height="15" fill="rgb(246,112,42)" fg:x="509" fg:w="20"/><text x="68.6640%" y="1871.50">`0..</text></g><g><title>`0x7FFE2C8776DA (1 samples, 0.13%)</title><rect x="71.1022%" y="1877" width="0.1344%" height="15" fill="rgb(248,228,14)" fg:x="529" fg:w="1"/><text x="71.3522%" y="1887.50"></text></g><g><title>`0x7FFE2DD2D5CA (1 samples, 0.13%)</title><rect x="71.2366%" y="1845" width="0.1344%" height="15" fill="rgb(208,133,18)" fg:x="530" fg:w="1"/><text x="71.4866%" y="1855.50"></text></g><g><title>`0x7FFE2DD2DE5C (1 samples, 0.13%)</title><rect x="71.2366%" y="1829" width="0.1344%" height="15" fill="rgb(207,35,49)" fg:x="530" fg:w="1"/><text x="71.4866%" y="1839.50"></text></g><g><title>`0x7FFE2DD2E744 (1 samples, 0.13%)</title><rect x="71.2366%" y="1813" width="0.1344%" height="15" fill="rgb(205,68,36)" fg:x="530" fg:w="1"/><text x="71.4866%" y="1823.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="71.2366%" y="1797" width="0.1344%" height="15" fill="rgb(245,62,40)" fg:x="530" fg:w="1"/><text x="71.4866%" y="1807.50"></text></g><g><title>`0x7FFE2C8787CB (15 samples, 2.02%)</title><rect x="71.2366%" y="1877" width="2.0161%" height="15" fill="rgb(228,27,24)" fg:x="530" fg:w="15"/><text x="71.4866%" y="1887.50">`..</text></g><g><title>`0x7FFE2DD2D052 (15 samples, 2.02%)</title><rect x="71.2366%" y="1861" width="2.0161%" height="15" fill="rgb(253,19,12)" fg:x="530" fg:w="15"/><text x="71.4866%" y="1871.50">`..</text></g><g><title>`0x7FFE2DD2D646 (14 samples, 1.88%)</title><rect x="71.3710%" y="1845" width="1.8817%" height="15" fill="rgb(232,28,20)" fg:x="531" fg:w="14"/><text x="71.6210%" y="1855.50">`..</text></g><g><title>`0x7FFE2F1A3BB4 (14 samples, 1.88%)</title><rect x="71.3710%" y="1829" width="1.8817%" height="15" fill="rgb(218,35,51)" fg:x="531" fg:w="14"/><text x="71.6210%" y="1839.50">`..</text></g><g><title>`0x7FFE2DD376F3 (1 samples, 0.13%)</title><rect x="73.2527%" y="1845" width="0.1344%" height="15" fill="rgb(212,90,40)" fg:x="545" fg:w="1"/><text x="73.5027%" y="1855.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="73.2527%" y="1829" width="0.1344%" height="15" fill="rgb(220,172,12)" fg:x="545" fg:w="1"/><text x="73.5027%" y="1839.50"></text></g><g><title>`0x7FFE2C87892F (2 samples, 0.27%)</title><rect x="73.2527%" y="1877" width="0.2688%" height="15" fill="rgb(226,159,20)" fg:x="545" fg:w="2"/><text x="73.5027%" y="1887.50"></text></g><g><title>`0x7FFE2DD37F15 (2 samples, 0.27%)</title><rect x="73.2527%" y="1861" width="0.2688%" height="15" fill="rgb(234,205,16)" fg:x="545" fg:w="2"/><text x="73.5027%" y="1871.50"></text></g><g><title>`0x7FFE2DD37743 (1 samples, 0.13%)</title><rect x="73.3871%" y="1845" width="0.1344%" height="15" fill="rgb(207,9,39)" fg:x="546" fg:w="1"/><text x="73.6371%" y="1855.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.13%)</title><rect x="73.3871%" y="1829" width="0.1344%" height="15" fill="rgb(249,143,15)" fg:x="546" fg:w="1"/><text x="73.6371%" y="1839.50"></text></g><g><title>`0x7FFE2C879763 (1 samples, 0.13%)</title><rect x="73.5215%" y="1877" width="0.1344%" height="15" fill="rgb(253,133,29)" fg:x="547" fg:w="1"/><text x="73.7715%" y="1887.50"></text></g><g><title>`0x7FFE2F1A3974 (1 samples, 0.13%)</title><rect x="73.5215%" y="1861" width="0.1344%" height="15" fill="rgb(221,187,0)" fg:x="547" fg:w="1"/><text x="73.7715%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (44 samples, 5.91%)</title><rect x="67.8763%" y="1941" width="5.9140%" height="15" fill="rgb(205,204,26)" fg:x="505" fg:w="44"/><text x="68.1263%" y="1951.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (44 samples, 5.91%)</title><rect x="67.8763%" y="1925" width="5.9140%" height="15" fill="rgb(224,68,54)" fg:x="505" fg:w="44"/><text x="68.1263%" y="1935.50">fuzzit.e..</text></g><g><title>`0x7FFE2DD4C6D4 (44 samples, 5.91%)</title><rect x="67.8763%" y="1909" width="5.9140%" height="15" fill="rgb(209,67,4)" fg:x="505" fg:w="44"/><text x="68.1263%" y="1919.50">`0x7FFE2..</text></g><g><title>`0x7FFE2C874E26 (44 samples, 5.91%)</title><rect x="67.8763%" y="1893" width="5.9140%" height="15" fill="rgb(228,229,18)" fg:x="505" fg:w="44"/><text x="68.1263%" y="1903.50">`0x7FFE2..</text></g><g><title>`0x7FFE2C87A57A (1 samples, 0.13%)</title><rect x="73.6559%" y="1877" width="0.1344%" height="15" fill="rgb(231,89,13)" fg:x="548" fg:w="1"/><text x="73.9059%" y="1887.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="73.6559%" y="1861" width="0.1344%" height="15" fill="rgb(210,182,18)" fg:x="548" fg:w="1"/><text x="73.9059%" y="1871.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::capacity (1 samples, 0.13%)</title><rect x="73.7903%" y="1861" width="0.1344%" height="15" fill="rgb(240,105,2)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1871.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::capacity (1 samples, 0.13%)</title><rect x="73.7903%" y="1845" width="0.1344%" height="15" fill="rgb(207,170,50)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1855.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::capacity (1 samples, 0.13%)</title><rect x="73.7903%" y="1829" width="0.1344%" height="15" fill="rgb(232,133,24)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1839.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="73.7903%" y="1813" width="0.1344%" height="15" fill="rgb(235,166,27)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1823.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.13%)</title><rect x="73.7903%" y="1797" width="0.1344%" height="15" fill="rgb(209,19,13)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1807.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="73.7903%" y="1781" width="0.1344%" height="15" fill="rgb(226,79,39)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1791.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="73.7903%" y="1765" width="0.1344%" height="15" fill="rgb(222,163,10)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1775.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::grow (1 samples, 0.13%)</title><rect x="73.7903%" y="1749" width="0.1344%" height="15" fill="rgb(214,44,19)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1759.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::grow_impl (1 samples, 0.13%)</title><rect x="73.7903%" y="1733" width="0.1344%" height="15" fill="rgb(210,217,13)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1743.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="73.7903%" y="1717" width="0.1344%" height="15" fill="rgb(237,61,54)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1727.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="73.7903%" y="1701" width="0.1344%" height="15" fill="rgb(226,184,24)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1711.50"></text></g><g><title>`0x7FFE2F090F54 (1 samples, 0.13%)</title><rect x="73.7903%" y="1685" width="0.1344%" height="15" fill="rgb(223,226,4)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1695.50"></text></g><g><title>`0x7FFE2F0923C9 (1 samples, 0.13%)</title><rect x="73.7903%" y="1669" width="0.1344%" height="15" fill="rgb(210,26,41)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1679.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="73.7903%" y="1653" width="0.1344%" height="15" fill="rgb(220,221,6)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1663.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.13%)</title><rect x="73.7903%" y="1637" width="0.1344%" height="15" fill="rgb(225,89,49)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1647.50"></text></g><g><title>`0x7FFE2F067842 (1 samples, 0.13%)</title><rect x="73.7903%" y="1621" width="0.1344%" height="15" fill="rgb(218,70,45)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1631.50"></text></g><g><title>`0x7FFE2F068C1F (1 samples, 0.13%)</title><rect x="73.7903%" y="1605" width="0.1344%" height="15" fill="rgb(238,166,21)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1615.50"></text></g><g><title>`0x7FFE2F0694B3 (1 samples, 0.13%)</title><rect x="73.7903%" y="1589" width="0.1344%" height="15" fill="rgb(224,141,44)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1599.50"></text></g><g><title>`0x7FFE2F1A3534 (1 samples, 0.13%)</title><rect x="73.7903%" y="1573" width="0.1344%" height="15" fill="rgb(230,12,49)" fg:x="549" fg:w="1"/><text x="74.0403%" y="1583.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (2 samples, 0.27%)</title><rect x="73.7903%" y="1909" width="0.2688%" height="15" fill="rgb(212,174,12)" fg:x="549" fg:w="2"/><text x="74.0403%" y="1919.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (2 samples, 0.27%)</title><rect x="73.7903%" y="1893" width="0.2688%" height="15" fill="rgb(246,67,9)" fg:x="549" fg:w="2"/><text x="74.0403%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (2 samples, 0.27%)</title><rect x="73.7903%" y="1877" width="0.2688%" height="15" fill="rgb(239,35,23)" fg:x="549" fg:w="2"/><text x="74.0403%" y="1887.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.13%)</title><rect x="73.9247%" y="1861" width="0.1344%" height="15" fill="rgb(211,167,0)" fg:x="550" fg:w="1"/><text x="74.1747%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.13%)</title><rect x="73.9247%" y="1845" width="0.1344%" height="15" fill="rgb(225,119,45)" fg:x="550" fg:w="1"/><text x="74.1747%" y="1855.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.13%)</title><rect x="73.9247%" y="1829" width="0.1344%" height="15" fill="rgb(210,162,6)" fg:x="550" fg:w="1"/><text x="74.1747%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.13%)</title><rect x="73.9247%" y="1813" width="0.1344%" height="15" fill="rgb(208,118,35)" fg:x="550" fg:w="1"/><text x="74.1747%" y="1823.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.13%)</title><rect x="73.9247%" y="1797" width="0.1344%" height="15" fill="rgb(239,4,53)" fg:x="550" fg:w="1"/><text x="74.1747%" y="1807.50"></text></g><g><title>fuzzit.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.13%)</title><rect x="73.9247%" y="1781" width="0.1344%" height="15" fill="rgb(213,130,21)" fg:x="550" fg:w="1"/><text x="74.1747%" y="1791.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::append_elements (1 samples, 0.13%)</title><rect x="73.9247%" y="1765" width="0.1344%" height="15" fill="rgb(235,148,0)" fg:x="550" fg:w="1"/><text x="74.1747%" y="1775.50"></text></g><g><title>`0x7FFE11AF094A (1 samples, 0.13%)</title><rect x="73.9247%" y="1749" width="0.1344%" height="15" fill="rgb(244,224,18)" fg:x="550" fg:w="1"/><text x="74.1747%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="74.0591%" y="1909" width="0.1344%" height="15" fill="rgb(211,214,4)" fg:x="551" fg:w="1"/><text x="74.3091%" y="1919.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (1 samples, 0.13%)</title><rect x="74.0591%" y="1893" width="0.1344%" height="15" fill="rgb(206,119,25)" fg:x="551" fg:w="1"/><text x="74.3091%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (1 samples, 0.13%)</title><rect x="74.0591%" y="1877" width="0.1344%" height="15" fill="rgb(243,93,47)" fg:x="551" fg:w="1"/><text x="74.3091%" y="1887.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="74.0591%" y="1861" width="0.1344%" height="15" fill="rgb(224,194,6)" fg:x="551" fg:w="1"/><text x="74.3091%" y="1871.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="74.0591%" y="1845" width="0.1344%" height="15" fill="rgb(243,229,6)" fg:x="551" fg:w="1"/><text x="74.3091%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (1 samples, 0.13%)</title><rect x="74.0591%" y="1829" width="0.1344%" height="15" fill="rgb(207,23,50)" fg:x="551" fg:w="1"/><text x="74.3091%" y="1839.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="74.0591%" y="1813" width="0.1344%" height="15" fill="rgb(253,192,32)" fg:x="551" fg:w="1"/><text x="74.3091%" y="1823.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="74.0591%" y="1797" width="0.1344%" height="15" fill="rgb(213,21,6)" fg:x="551" fg:w="1"/><text x="74.3091%" y="1807.50"></text></g><g><title>`0x7FFE2C81DEF3 (1 samples, 0.13%)</title><rect x="74.1935%" y="1845" width="0.1344%" height="15" fill="rgb(243,151,13)" fg:x="552" fg:w="1"/><text x="74.4435%" y="1855.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (144 samples, 19.35%)</title><rect x="56.5860%" y="2277" width="19.3548%" height="15" fill="rgb(233,165,41)" fg:x="421" fg:w="144"/><text x="56.8360%" y="2287.50">fuzzit.exe`rayon::iter::map::i..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (144 samples, 19.35%)</title><rect x="56.5860%" y="2261" width="19.3548%" height="15" fill="rgb(246,176,45)" fg:x="421" fg:w="144"/><text x="56.8360%" y="2271.50">fuzzit.exe`rayon::iter::plumbi..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (144 samples, 19.35%)</title><rect x="56.5860%" y="2245" width="19.3548%" height="15" fill="rgb(217,170,52)" fg:x="421" fg:w="144"/><text x="56.8360%" y="2255.50">fuzzit.exe`core::ops::function..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (144 samples, 19.35%)</title><rect x="56.5860%" y="2229" width="19.3548%" height="15" fill="rgb(214,203,54)" fg:x="421" fg:w="144"/><text x="56.8360%" y="2239.50">fuzzit.exe`fuzzit::git_data::c..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (143 samples, 19.22%)</title><rect x="56.7204%" y="2213" width="19.2204%" height="15" fill="rgb(248,215,49)" fg:x="422" fg:w="143"/><text x="56.9704%" y="2223.50">fuzzit.exe`rayon_core::registr..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (143 samples, 19.22%)</title><rect x="56.7204%" y="2197" width="19.2204%" height="15" fill="rgb(208,46,10)" fg:x="422" fg:w="143"/><text x="56.9704%" y="2207.50">fuzzit.exe`rayon_core::join::j..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (65 samples, 8.74%)</title><rect x="67.2043%" y="2181" width="8.7366%" height="15" fill="rgb(254,5,31)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2191.50">fuzzit.exe`r..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (65 samples, 8.74%)</title><rect x="67.2043%" y="2165" width="8.7366%" height="15" fill="rgb(222,104,33)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2175.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (65 samples, 8.74%)</title><rect x="67.2043%" y="2149" width="8.7366%" height="15" fill="rgb(248,49,16)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2159.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (65 samples, 8.74%)</title><rect x="67.2043%" y="2133" width="8.7366%" height="15" fill="rgb(232,198,41)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2143.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (65 samples, 8.74%)</title><rect x="67.2043%" y="2117" width="8.7366%" height="15" fill="rgb(214,125,3)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2127.50">fuzzit.exe`c..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (65 samples, 8.74%)</title><rect x="67.2043%" y="2101" width="8.7366%" height="15" fill="rgb(229,220,28)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2111.50">fuzzit.exe`r..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (65 samples, 8.74%)</title><rect x="67.2043%" y="2085" width="8.7366%" height="15" fill="rgb(222,64,37)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2095.50">fuzzit.exe`r..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (65 samples, 8.74%)</title><rect x="67.2043%" y="2069" width="8.7366%" height="15" fill="rgb(249,184,13)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2079.50">fuzzit.exe`f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (65 samples, 8.74%)</title><rect x="67.2043%" y="2053" width="8.7366%" height="15" fill="rgb(252,176,6)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2063.50">fuzzit.exe`e..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (65 samples, 8.74%)</title><rect x="67.2043%" y="2037" width="8.7366%" height="15" fill="rgb(228,153,7)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2047.50">fuzzit.exe`f..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (65 samples, 8.74%)</title><rect x="67.2043%" y="2021" width="8.7366%" height="15" fill="rgb(242,193,5)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2031.50">fuzzit.exe`e..</text></g><g><title>fuzzit.exe`std::process::Command::output (65 samples, 8.74%)</title><rect x="67.2043%" y="2005" width="8.7366%" height="15" fill="rgb(232,140,9)" fg:x="500" fg:w="65"/><text x="67.4543%" y="2015.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`std::sys::process::output (65 samples, 8.74%)</title><rect x="67.2043%" y="1989" width="8.7366%" height="15" fill="rgb(213,222,16)" fg:x="500" fg:w="65"/><text x="67.4543%" y="1999.50">fuzzit.exe`s..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (61 samples, 8.20%)</title><rect x="67.7419%" y="1973" width="8.1989%" height="15" fill="rgb(222,75,50)" fg:x="504" fg:w="61"/><text x="67.9919%" y="1983.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (61 samples, 8.20%)</title><rect x="67.7419%" y="1957" width="8.1989%" height="15" fill="rgb(205,180,2)" fg:x="504" fg:w="61"/><text x="67.9919%" y="1967.50">fuzzit.exe`..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (16 samples, 2.15%)</title><rect x="73.7903%" y="1941" width="2.1505%" height="15" fill="rgb(216,34,7)" fg:x="549" fg:w="16"/><text x="74.0403%" y="1951.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (16 samples, 2.15%)</title><rect x="73.7903%" y="1925" width="2.1505%" height="15" fill="rgb(253,16,32)" fg:x="549" fg:w="16"/><text x="74.0403%" y="1935.50">f..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (13 samples, 1.75%)</title><rect x="74.1935%" y="1909" width="1.7473%" height="15" fill="rgb(208,97,28)" fg:x="552" fg:w="13"/><text x="74.4435%" y="1919.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (13 samples, 1.75%)</title><rect x="74.1935%" y="1893" width="1.7473%" height="15" fill="rgb(225,92,11)" fg:x="552" fg:w="13"/><text x="74.4435%" y="1903.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (13 samples, 1.75%)</title><rect x="74.1935%" y="1877" width="1.7473%" height="15" fill="rgb(243,38,12)" fg:x="552" fg:w="13"/><text x="74.4435%" y="1887.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (13 samples, 1.75%)</title><rect x="74.1935%" y="1861" width="1.7473%" height="15" fill="rgb(208,139,16)" fg:x="552" fg:w="13"/><text x="74.4435%" y="1871.50"></text></g><g><title>`0x7FFE2C81DF99 (12 samples, 1.61%)</title><rect x="74.3280%" y="1845" width="1.6129%" height="15" fill="rgb(227,24,9)" fg:x="553" fg:w="12"/><text x="74.5780%" y="1855.50"></text></g><g><title>`0x7FFE2F1A39D4 (12 samples, 1.61%)</title><rect x="74.3280%" y="1829" width="1.6129%" height="15" fill="rgb(206,62,11)" fg:x="553" fg:w="12"/><text x="74.5780%" y="1839.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="75.9409%" y="1669" width="0.1344%" height="15" fill="rgb(228,134,27)" fg:x="565" fg:w="1"/><text x="76.1909%" y="1679.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="75.9409%" y="1653" width="0.1344%" height="15" fill="rgb(205,55,33)" fg:x="565" fg:w="1"/><text x="76.1909%" y="1663.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="75.9409%" y="1637" width="0.1344%" height="15" fill="rgb(243,75,43)" fg:x="565" fg:w="1"/><text x="76.1909%" y="1647.50"></text></g><g><title>`0x7FFE2C8776C5 (2 samples, 0.27%)</title><rect x="76.0753%" y="1669" width="0.2688%" height="15" fill="rgb(223,27,42)" fg:x="566" fg:w="2"/><text x="76.3253%" y="1679.50"></text></g><g><title>`0x7FFE2F1A4C44 (2 samples, 0.27%)</title><rect x="76.0753%" y="1653" width="0.2688%" height="15" fill="rgb(232,189,33)" fg:x="566" fg:w="2"/><text x="76.3253%" y="1663.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="76.3441%" y="1669" width="0.4032%" height="15" fill="rgb(210,9,39)" fg:x="568" fg:w="3"/><text x="76.5941%" y="1679.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="76.3441%" y="1653" width="0.4032%" height="15" fill="rgb(242,85,26)" fg:x="568" fg:w="3"/><text x="76.5941%" y="1663.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="76.3441%" y="1637" width="0.4032%" height="15" fill="rgb(248,44,4)" fg:x="568" fg:w="3"/><text x="76.5941%" y="1647.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="76.3441%" y="1621" width="0.4032%" height="15" fill="rgb(250,96,46)" fg:x="568" fg:w="3"/><text x="76.5941%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (7 samples, 0.94%)</title><rect x="75.9409%" y="1733" width="0.9409%" height="15" fill="rgb(229,116,26)" fg:x="565" fg:w="7"/><text x="76.1909%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (7 samples, 0.94%)</title><rect x="75.9409%" y="1717" width="0.9409%" height="15" fill="rgb(246,94,34)" fg:x="565" fg:w="7"/><text x="76.1909%" y="1727.50"></text></g><g><title>`0x7FFE2DD4C6D4 (7 samples, 0.94%)</title><rect x="75.9409%" y="1701" width="0.9409%" height="15" fill="rgb(251,73,21)" fg:x="565" fg:w="7"/><text x="76.1909%" y="1711.50"></text></g><g><title>`0x7FFE2C874E26 (7 samples, 0.94%)</title><rect x="75.9409%" y="1685" width="0.9409%" height="15" fill="rgb(254,121,25)" fg:x="565" fg:w="7"/><text x="76.1909%" y="1695.50"></text></g><g><title>`0x7FFE2C8796C7 (1 samples, 0.13%)</title><rect x="76.7473%" y="1669" width="0.1344%" height="15" fill="rgb(215,161,49)" fg:x="571" fg:w="1"/><text x="76.9973%" y="1679.50"></text></g><g><title>`0x7FFE2DD40D96 (1 samples, 0.13%)</title><rect x="76.7473%" y="1653" width="0.1344%" height="15" fill="rgb(221,43,13)" fg:x="571" fg:w="1"/><text x="76.9973%" y="1663.50"></text></g><g><title>`0x7FFE2DD4111D (1 samples, 0.13%)</title><rect x="76.7473%" y="1637" width="0.1344%" height="15" fill="rgb(249,5,37)" fg:x="571" fg:w="1"/><text x="76.9973%" y="1647.50"></text></g><g><title>`0x7FFE2DD41344 (1 samples, 0.13%)</title><rect x="76.7473%" y="1621" width="0.1344%" height="15" fill="rgb(226,25,44)" fg:x="571" fg:w="1"/><text x="76.9973%" y="1631.50"></text></g><g><title>`0x7FFE2DD41514 (1 samples, 0.13%)</title><rect x="76.7473%" y="1605" width="0.1344%" height="15" fill="rgb(238,189,16)" fg:x="571" fg:w="1"/><text x="76.9973%" y="1615.50"></text></g><g><title>`0x7FFE2F0ED578 (1 samples, 0.13%)</title><rect x="76.7473%" y="1589" width="0.1344%" height="15" fill="rgb(251,186,8)" fg:x="571" fg:w="1"/><text x="76.9973%" y="1599.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (1 samples, 0.13%)</title><rect x="76.8817%" y="1701" width="0.1344%" height="15" fill="rgb(254,34,31)" fg:x="572" fg:w="1"/><text x="77.1317%" y="1711.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (1 samples, 0.13%)</title><rect x="76.8817%" y="1685" width="0.1344%" height="15" fill="rgb(225,215,27)" fg:x="572" fg:w="1"/><text x="77.1317%" y="1695.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="76.8817%" y="1669" width="0.1344%" height="15" fill="rgb(221,192,48)" fg:x="572" fg:w="1"/><text x="77.1317%" y="1679.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.13%)</title><rect x="76.8817%" y="1653" width="0.1344%" height="15" fill="rgb(219,137,20)" fg:x="572" fg:w="1"/><text x="77.1317%" y="1663.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.13%)</title><rect x="76.8817%" y="1637" width="0.1344%" height="15" fill="rgb(219,84,11)" fg:x="572" fg:w="1"/><text x="77.1317%" y="1647.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.13%)</title><rect x="76.8817%" y="1621" width="0.1344%" height="15" fill="rgb(224,10,23)" fg:x="572" fg:w="1"/><text x="77.1317%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.13%)</title><rect x="76.8817%" y="1605" width="0.1344%" height="15" fill="rgb(248,22,39)" fg:x="572" fg:w="1"/><text x="77.1317%" y="1615.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2245" width="1.3441%" height="15" fill="rgb(212,154,20)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2255.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2229" width="1.3441%" height="15" fill="rgb(236,199,50)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2239.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2213" width="1.3441%" height="15" fill="rgb(211,9,17)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2223.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2197" width="1.3441%" height="15" fill="rgb(243,216,36)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2207.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2181" width="1.3441%" height="15" fill="rgb(250,2,10)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2191.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2165" width="1.3441%" height="15" fill="rgb(226,50,48)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2175.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2149" width="1.3441%" height="15" fill="rgb(243,81,16)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2159.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2133" width="1.3441%" height="15" fill="rgb(250,14,2)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2143.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2117" width="1.3441%" height="15" fill="rgb(233,135,29)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2127.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (10 samples, 1.34%)</title><rect x="75.9409%" y="2101" width="1.3441%" height="15" fill="rgb(224,64,43)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2111.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2085" width="1.3441%" height="15" fill="rgb(238,84,13)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2095.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2069" width="1.3441%" height="15" fill="rgb(253,48,26)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2079.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (10 samples, 1.34%)</title><rect x="75.9409%" y="2053" width="1.3441%" height="15" fill="rgb(205,223,31)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2063.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (10 samples, 1.34%)</title><rect x="75.9409%" y="2037" width="1.3441%" height="15" fill="rgb(221,41,32)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2047.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="2021" width="1.3441%" height="15" fill="rgb(213,158,31)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2031.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="2005" width="1.3441%" height="15" fill="rgb(245,126,43)" fg:x="565" fg:w="10"/><text x="76.1909%" y="2015.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="1989" width="1.3441%" height="15" fill="rgb(227,7,22)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1999.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="1973" width="1.3441%" height="15" fill="rgb(252,90,44)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1983.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="1957" width="1.3441%" height="15" fill="rgb(253,91,0)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1967.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="1941" width="1.3441%" height="15" fill="rgb(252,175,49)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1951.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (10 samples, 1.34%)</title><rect x="75.9409%" y="1925" width="1.3441%" height="15" fill="rgb(246,150,1)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1935.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="1909" width="1.3441%" height="15" fill="rgb(241,192,25)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1919.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="1893" width="1.3441%" height="15" fill="rgb(239,187,11)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="1877" width="1.3441%" height="15" fill="rgb(218,202,51)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1887.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (10 samples, 1.34%)</title><rect x="75.9409%" y="1861" width="1.3441%" height="15" fill="rgb(225,176,8)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1871.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (10 samples, 1.34%)</title><rect x="75.9409%" y="1845" width="1.3441%" height="15" fill="rgb(219,122,41)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1855.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (10 samples, 1.34%)</title><rect x="75.9409%" y="1829" width="1.3441%" height="15" fill="rgb(248,140,20)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1839.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (10 samples, 1.34%)</title><rect x="75.9409%" y="1813" width="1.3441%" height="15" fill="rgb(245,41,37)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1823.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (10 samples, 1.34%)</title><rect x="75.9409%" y="1797" width="1.3441%" height="15" fill="rgb(235,82,39)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (10 samples, 1.34%)</title><rect x="75.9409%" y="1781" width="1.3441%" height="15" fill="rgb(230,108,42)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (10 samples, 1.34%)</title><rect x="75.9409%" y="1765" width="1.3441%" height="15" fill="rgb(215,150,50)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1775.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (10 samples, 1.34%)</title><rect x="75.9409%" y="1749" width="1.3441%" height="15" fill="rgb(233,212,5)" fg:x="565" fg:w="10"/><text x="76.1909%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="76.8817%" y="1733" width="0.4032%" height="15" fill="rgb(245,80,22)" fg:x="572" fg:w="3"/><text x="77.1317%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="76.8817%" y="1717" width="0.4032%" height="15" fill="rgb(238,129,16)" fg:x="572" fg:w="3"/><text x="77.1317%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="77.0161%" y="1701" width="0.2688%" height="15" fill="rgb(240,19,0)" fg:x="573" fg:w="2"/><text x="77.2661%" y="1711.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="77.0161%" y="1685" width="0.2688%" height="15" fill="rgb(232,42,35)" fg:x="573" fg:w="2"/><text x="77.2661%" y="1695.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="77.0161%" y="1669" width="0.2688%" height="15" fill="rgb(223,130,24)" fg:x="573" fg:w="2"/><text x="77.2661%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="77.0161%" y="1653" width="0.2688%" height="15" fill="rgb(237,16,22)" fg:x="573" fg:w="2"/><text x="77.2661%" y="1663.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="77.0161%" y="1637" width="0.2688%" height="15" fill="rgb(248,192,20)" fg:x="573" fg:w="2"/><text x="77.2661%" y="1647.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="77.0161%" y="1621" width="0.2688%" height="15" fill="rgb(233,167,2)" fg:x="573" fg:w="2"/><text x="77.2661%" y="1631.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.13%)</title><rect x="77.2849%" y="1797" width="0.1344%" height="15" fill="rgb(252,71,44)" fg:x="575" fg:w="1"/><text x="77.5349%" y="1807.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="77.2849%" y="1781" width="0.1344%" height="15" fill="rgb(238,37,47)" fg:x="575" fg:w="1"/><text x="77.5349%" y="1791.50"></text></g><g><title>`0x7FFE2C8774BC (2 samples, 0.27%)</title><rect x="77.2849%" y="1829" width="0.2688%" height="15" fill="rgb(214,202,54)" fg:x="575" fg:w="2"/><text x="77.5349%" y="1839.50"></text></g><g><title>`0x7FFE2C902481 (2 samples, 0.27%)</title><rect x="77.2849%" y="1813" width="0.2688%" height="15" fill="rgb(254,165,40)" fg:x="575" fg:w="2"/><text x="77.5349%" y="1823.50"></text></g><g><title>`0x7FFE2C90B08F (1 samples, 0.13%)</title><rect x="77.4194%" y="1797" width="0.1344%" height="15" fill="rgb(246,173,38)" fg:x="576" fg:w="1"/><text x="77.6694%" y="1807.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="77.4194%" y="1781" width="0.1344%" height="15" fill="rgb(215,3,27)" fg:x="576" fg:w="1"/><text x="77.6694%" y="1791.50"></text></g><g><title>`0x7FFE2C8776C5 (6 samples, 0.81%)</title><rect x="77.5538%" y="1829" width="0.8065%" height="15" fill="rgb(239,169,51)" fg:x="577" fg:w="6"/><text x="77.8038%" y="1839.50"></text></g><g><title>`0x7FFE2F1A4C44 (6 samples, 0.81%)</title><rect x="77.5538%" y="1813" width="0.8065%" height="15" fill="rgb(212,5,25)" fg:x="577" fg:w="6"/><text x="77.8038%" y="1823.50"></text></g><g><title>`0x7FFE2C8787CB (5 samples, 0.67%)</title><rect x="78.3602%" y="1829" width="0.6720%" height="15" fill="rgb(243,45,17)" fg:x="583" fg:w="5"/><text x="78.6102%" y="1839.50"></text></g><g><title>`0x7FFE2DD2D052 (5 samples, 0.67%)</title><rect x="78.3602%" y="1813" width="0.6720%" height="15" fill="rgb(242,97,9)" fg:x="583" fg:w="5"/><text x="78.6102%" y="1823.50"></text></g><g><title>`0x7FFE2DD2D646 (5 samples, 0.67%)</title><rect x="78.3602%" y="1797" width="0.6720%" height="15" fill="rgb(228,71,31)" fg:x="583" fg:w="5"/><text x="78.6102%" y="1807.50"></text></g><g><title>`0x7FFE2F1A3BB4 (5 samples, 0.67%)</title><rect x="78.3602%" y="1781" width="0.6720%" height="15" fill="rgb(252,184,16)" fg:x="583" fg:w="5"/><text x="78.6102%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (14 samples, 1.88%)</title><rect x="77.2849%" y="1893" width="1.8817%" height="15" fill="rgb(236,169,46)" fg:x="575" fg:w="14"/><text x="77.5349%" y="1903.50">f..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (14 samples, 1.88%)</title><rect x="77.2849%" y="1877" width="1.8817%" height="15" fill="rgb(207,17,47)" fg:x="575" fg:w="14"/><text x="77.5349%" y="1887.50">f..</text></g><g><title>`0x7FFE2DD4C6D4 (14 samples, 1.88%)</title><rect x="77.2849%" y="1861" width="1.8817%" height="15" fill="rgb(206,201,28)" fg:x="575" fg:w="14"/><text x="77.5349%" y="1871.50">`..</text></g><g><title>`0x7FFE2C874E26 (14 samples, 1.88%)</title><rect x="77.2849%" y="1845" width="1.8817%" height="15" fill="rgb(224,184,23)" fg:x="575" fg:w="14"/><text x="77.5349%" y="1855.50">`..</text></g><g><title>`0x7FFE2C878B3F (1 samples, 0.13%)</title><rect x="79.0323%" y="1829" width="0.1344%" height="15" fill="rgb(208,139,48)" fg:x="588" fg:w="1"/><text x="79.2823%" y="1839.50"></text></g><g><title>`0x7FFE2F075D02 (1 samples, 0.13%)</title><rect x="79.0323%" y="1813" width="0.1344%" height="15" fill="rgb(208,130,10)" fg:x="588" fg:w="1"/><text x="79.2823%" y="1823.50"></text></g><g><title>`0x7FFE2F1A43E4 (1 samples, 0.13%)</title><rect x="79.0323%" y="1797" width="0.1344%" height="15" fill="rgb(211,213,45)" fg:x="588" fg:w="1"/><text x="79.2823%" y="1807.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (19 samples, 2.55%)</title><rect x="77.2849%" y="1973" width="2.5538%" height="15" fill="rgb(235,100,30)" fg:x="575" fg:w="19"/><text x="77.5349%" y="1983.50">fu..</text></g><g><title>fuzzit.exe`std::process::Command::output (19 samples, 2.55%)</title><rect x="77.2849%" y="1957" width="2.5538%" height="15" fill="rgb(206,144,31)" fg:x="575" fg:w="19"/><text x="77.5349%" y="1967.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::output (19 samples, 2.55%)</title><rect x="77.2849%" y="1941" width="2.5538%" height="15" fill="rgb(224,200,26)" fg:x="575" fg:w="19"/><text x="77.5349%" y="1951.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (19 samples, 2.55%)</title><rect x="77.2849%" y="1925" width="2.5538%" height="15" fill="rgb(247,104,53)" fg:x="575" fg:w="19"/><text x="77.5349%" y="1935.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (19 samples, 2.55%)</title><rect x="77.2849%" y="1909" width="2.5538%" height="15" fill="rgb(220,14,17)" fg:x="575" fg:w="19"/><text x="77.5349%" y="1919.50">fu..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (5 samples, 0.67%)</title><rect x="79.1667%" y="1893" width="0.6720%" height="15" fill="rgb(230,140,40)" fg:x="589" fg:w="5"/><text x="79.4167%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (5 samples, 0.67%)</title><rect x="79.1667%" y="1877" width="0.6720%" height="15" fill="rgb(229,2,41)" fg:x="589" fg:w="5"/><text x="79.4167%" y="1887.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (5 samples, 0.67%)</title><rect x="79.1667%" y="1861" width="0.6720%" height="15" fill="rgb(232,89,16)" fg:x="589" fg:w="5"/><text x="79.4167%" y="1871.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (5 samples, 0.67%)</title><rect x="79.1667%" y="1845" width="0.6720%" height="15" fill="rgb(247,59,52)" fg:x="589" fg:w="5"/><text x="79.4167%" y="1855.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (5 samples, 0.67%)</title><rect x="79.1667%" y="1829" width="0.6720%" height="15" fill="rgb(226,110,21)" fg:x="589" fg:w="5"/><text x="79.4167%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (5 samples, 0.67%)</title><rect x="79.1667%" y="1813" width="0.6720%" height="15" fill="rgb(224,176,43)" fg:x="589" fg:w="5"/><text x="79.4167%" y="1823.50"></text></g><g><title>`0x7FFE2C81DF99 (5 samples, 0.67%)</title><rect x="79.1667%" y="1797" width="0.6720%" height="15" fill="rgb(221,73,6)" fg:x="589" fg:w="5"/><text x="79.4167%" y="1807.50"></text></g><g><title>`0x7FFE2F1A39D4 (5 samples, 0.67%)</title><rect x="79.1667%" y="1781" width="0.6720%" height="15" fill="rgb(232,78,19)" fg:x="589" fg:w="5"/><text x="79.4167%" y="1791.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (20 samples, 2.69%)</title><rect x="77.2849%" y="2181" width="2.6882%" height="15" fill="rgb(233,112,48)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2191.50">fu..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (20 samples, 2.69%)</title><rect x="77.2849%" y="2165" width="2.6882%" height="15" fill="rgb(243,131,47)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2175.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (20 samples, 2.69%)</title><rect x="77.2849%" y="2149" width="2.6882%" height="15" fill="rgb(226,51,1)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2159.50">fu..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (20 samples, 2.69%)</title><rect x="77.2849%" y="2133" width="2.6882%" height="15" fill="rgb(247,58,7)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2143.50">fu..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (20 samples, 2.69%)</title><rect x="77.2849%" y="2117" width="2.6882%" height="15" fill="rgb(209,7,32)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2127.50">fu..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (20 samples, 2.69%)</title><rect x="77.2849%" y="2101" width="2.6882%" height="15" fill="rgb(209,39,41)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2111.50">fu..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (20 samples, 2.69%)</title><rect x="77.2849%" y="2085" width="2.6882%" height="15" fill="rgb(226,182,46)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2095.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (20 samples, 2.69%)</title><rect x="77.2849%" y="2069" width="2.6882%" height="15" fill="rgb(230,219,10)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2079.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (20 samples, 2.69%)</title><rect x="77.2849%" y="2053" width="2.6882%" height="15" fill="rgb(227,175,30)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2063.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (20 samples, 2.69%)</title><rect x="77.2849%" y="2037" width="2.6882%" height="15" fill="rgb(217,2,50)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2047.50">fu..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (20 samples, 2.69%)</title><rect x="77.2849%" y="2021" width="2.6882%" height="15" fill="rgb(229,160,0)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2031.50">fu..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (20 samples, 2.69%)</title><rect x="77.2849%" y="2005" width="2.6882%" height="15" fill="rgb(207,78,37)" fg:x="575" fg:w="20"/><text x="77.5349%" y="2015.50">fu..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (20 samples, 2.69%)</title><rect x="77.2849%" y="1989" width="2.6882%" height="15" fill="rgb(225,57,0)" fg:x="575" fg:w="20"/><text x="77.5349%" y="1999.50">fu..</text></g><g><title>fuzzit.exe`std::process::Command::args(alloc::vec::Vec&lt;ref$ (1 samples, 0.13%)</title><rect x="79.8387%" y="1973" width="0.1344%" height="15" fill="rgb(232,154,2)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1983.50"></text></g><g><title>fuzzit.exe`alloc::vec::impl$17::into_iter(alloc::vec::Vec&lt;ref$ (1 samples, 0.13%)</title><rect x="79.8387%" y="1957" width="0.1344%" height="15" fill="rgb(241,212,25)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1967.50"></text></g><g><title>fuzzit.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;ref$ (1 samples, 0.13%)</title><rect x="79.8387%" y="1941" width="0.1344%" height="15" fill="rgb(226,69,20)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1951.50"></text></g><g><title>fuzzit.exe`core::slice::iter::Iter&lt;ref$&lt;str$&gt; &gt;::new(ref$&lt;slice2$&lt;ref$ (1 samples, 0.13%)</title><rect x="79.8387%" y="1925" width="0.1344%" height="15" fill="rgb(247,184,54)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1935.50"></text></g><g><title>fuzzit.exe`core::ptr::mut_ptr::impl$0::add(ref$ (1 samples, 0.13%)</title><rect x="79.8387%" y="1909" width="0.1344%" height="15" fill="rgb(210,145,0)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1919.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::new (1 samples, 0.13%)</title><rect x="79.8387%" y="1893" width="0.1344%" height="15" fill="rgb(253,82,12)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1903.50"></text></g><g><title>fuzzit.exe`std::ffi::os_str::OsStr::to_os_string (1 samples, 0.13%)</title><rect x="79.8387%" y="1877" width="0.1344%" height="15" fill="rgb(245,42,11)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1887.50"></text></g><g><title>fuzzit.exe`std::sys::os_str::wtf8::Slice::to_owned (1 samples, 0.13%)</title><rect x="79.8387%" y="1861" width="0.1344%" height="15" fill="rgb(219,147,32)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8::to_owned (1 samples, 0.13%)</title><rect x="79.8387%" y="1845" width="0.1344%" height="15" fill="rgb(246,12,7)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1855.50"></text></g><g><title>fuzzit.exe`alloc::slice::impl$0::to_vec (1 samples, 0.13%)</title><rect x="79.8387%" y="1829" width="0.1344%" height="15" fill="rgb(243,50,9)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1839.50"></text></g><g><title>fuzzit.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.13%)</title><rect x="79.8387%" y="1813" width="0.1344%" height="15" fill="rgb(219,149,6)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1823.50"></text></g><g><title>fuzzit.exe`alloc::slice::impl$0::to_vec_in::impl$1::to_vec (1 samples, 0.13%)</title><rect x="79.8387%" y="1797" width="0.1344%" height="15" fill="rgb(241,51,42)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1807.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.13%)</title><rect x="79.8387%" y="1781" width="0.1344%" height="15" fill="rgb(226,128,27)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1791.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.13%)</title><rect x="79.8387%" y="1765" width="0.1344%" height="15" fill="rgb(244,144,4)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1775.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.13%)</title><rect x="79.8387%" y="1749" width="0.1344%" height="15" fill="rgb(221,4,13)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1759.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.13%)</title><rect x="79.8387%" y="1733" width="0.1344%" height="15" fill="rgb(208,170,28)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1743.50"></text></g><g><title>fuzzit.exe`alloc::alloc::impl$1::allocate (1 samples, 0.13%)</title><rect x="79.8387%" y="1717" width="0.1344%" height="15" fill="rgb(226,131,13)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1727.50"></text></g><g><title>fuzzit.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.13%)</title><rect x="79.8387%" y="1701" width="0.1344%" height="15" fill="rgb(215,72,41)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1711.50"></text></g><g><title>fuzzit.exe`alloc::alloc::alloc (1 samples, 0.13%)</title><rect x="79.8387%" y="1685" width="0.1344%" height="15" fill="rgb(243,108,20)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1695.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="79.8387%" y="1669" width="0.1344%" height="15" fill="rgb(230,189,17)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1679.50"></text></g><g><title>`0x7FFE2F090F33 (1 samples, 0.13%)</title><rect x="79.8387%" y="1653" width="0.1344%" height="15" fill="rgb(220,50,17)" fg:x="594" fg:w="1"/><text x="80.0887%" y="1663.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="79.9731%" y="1557" width="0.1344%" height="15" fill="rgb(248,152,48)" fg:x="595" fg:w="1"/><text x="80.2231%" y="1567.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="79.9731%" y="1541" width="0.1344%" height="15" fill="rgb(244,91,11)" fg:x="595" fg:w="1"/><text x="80.2231%" y="1551.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="79.9731%" y="1525" width="0.1344%" height="15" fill="rgb(220,157,5)" fg:x="595" fg:w="1"/><text x="80.2231%" y="1535.50"></text></g><g><title>`0x7FFE2C8776C5 (2 samples, 0.27%)</title><rect x="80.1075%" y="1557" width="0.2688%" height="15" fill="rgb(253,137,8)" fg:x="596" fg:w="2"/><text x="80.3575%" y="1567.50"></text></g><g><title>`0x7FFE2F1A4C44 (2 samples, 0.27%)</title><rect x="80.1075%" y="1541" width="0.2688%" height="15" fill="rgb(217,137,51)" fg:x="596" fg:w="2"/><text x="80.3575%" y="1551.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (6 samples, 0.81%)</title><rect x="79.9731%" y="1621" width="0.8065%" height="15" fill="rgb(218,209,53)" fg:x="595" fg:w="6"/><text x="80.2231%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (6 samples, 0.81%)</title><rect x="79.9731%" y="1605" width="0.8065%" height="15" fill="rgb(249,137,25)" fg:x="595" fg:w="6"/><text x="80.2231%" y="1615.50"></text></g><g><title>`0x7FFE2DD4C6D4 (6 samples, 0.81%)</title><rect x="79.9731%" y="1589" width="0.8065%" height="15" fill="rgb(239,155,26)" fg:x="595" fg:w="6"/><text x="80.2231%" y="1599.50"></text></g><g><title>`0x7FFE2C874E26 (6 samples, 0.81%)</title><rect x="79.9731%" y="1573" width="0.8065%" height="15" fill="rgb(227,85,46)" fg:x="595" fg:w="6"/><text x="80.2231%" y="1583.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="80.3763%" y="1557" width="0.4032%" height="15" fill="rgb(251,107,43)" fg:x="598" fg:w="3"/><text x="80.6263%" y="1567.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="80.3763%" y="1541" width="0.4032%" height="15" fill="rgb(234,170,33)" fg:x="598" fg:w="3"/><text x="80.6263%" y="1551.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="80.3763%" y="1525" width="0.4032%" height="15" fill="rgb(206,29,35)" fg:x="598" fg:w="3"/><text x="80.6263%" y="1535.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="80.3763%" y="1509" width="0.4032%" height="15" fill="rgb(227,138,25)" fg:x="598" fg:w="3"/><text x="80.6263%" y="1519.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (8 samples, 1.08%)</title><rect x="79.9731%" y="1973" width="1.0753%" height="15" fill="rgb(249,131,35)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (8 samples, 1.08%)</title><rect x="79.9731%" y="1957" width="1.0753%" height="15" fill="rgb(239,6,40)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1967.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (8 samples, 1.08%)</title><rect x="79.9731%" y="1941" width="1.0753%" height="15" fill="rgb(246,136,47)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1951.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (8 samples, 1.08%)</title><rect x="79.9731%" y="1925" width="1.0753%" height="15" fill="rgb(253,58,26)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1935.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(tuple$ (8 samples, 1.08%)</title><rect x="79.9731%" y="1909" width="1.0753%" height="15" fill="rgb(237,141,10)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1919.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;alloc::string::String&gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="79.9731%" y="1893" width="1.0753%" height="15" fill="rgb(234,156,12)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="79.9731%" y="1877" width="1.0753%" height="15" fill="rgb(243,224,36)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1887.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="79.9731%" y="1861" width="1.0753%" height="15" fill="rgb(205,229,51)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1871.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="79.9731%" y="1845" width="1.0753%" height="15" fill="rgb(223,189,4)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1855.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (8 samples, 1.08%)</title><rect x="79.9731%" y="1829" width="1.0753%" height="15" fill="rgb(249,167,54)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1839.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="79.9731%" y="1813" width="1.0753%" height="15" fill="rgb(218,34,28)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1823.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$9::call::closure$0(rayon_core::job::impl$9::call::closure_env$0&lt;alloc::string::String,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="79.9731%" y="1797" width="1.0753%" height="15" fill="rgb(232,109,42)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1807.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="79.9731%" y="1781" width="1.0753%" height="15" fill="rgb(248,214,46)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1791.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (8 samples, 1.08%)</title><rect x="79.9731%" y="1765" width="1.0753%" height="15" fill="rgb(244,216,40)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1775.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (8 samples, 1.08%)</title><rect x="79.9731%" y="1749" width="1.0753%" height="15" fill="rgb(231,226,31)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1759.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (8 samples, 1.08%)</title><rect x="79.9731%" y="1733" width="1.0753%" height="15" fill="rgb(238,38,43)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1743.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (8 samples, 1.08%)</title><rect x="79.9731%" y="1717" width="1.0753%" height="15" fill="rgb(208,88,43)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1727.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (8 samples, 1.08%)</title><rect x="79.9731%" y="1701" width="1.0753%" height="15" fill="rgb(205,136,37)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1711.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (8 samples, 1.08%)</title><rect x="79.9731%" y="1685" width="1.0753%" height="15" fill="rgb(237,34,14)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1695.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (8 samples, 1.08%)</title><rect x="79.9731%" y="1669" width="1.0753%" height="15" fill="rgb(236,193,44)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (8 samples, 1.08%)</title><rect x="79.9731%" y="1653" width="1.0753%" height="15" fill="rgb(231,48,10)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1663.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (8 samples, 1.08%)</title><rect x="79.9731%" y="1637" width="1.0753%" height="15" fill="rgb(213,141,34)" fg:x="595" fg:w="8"/><text x="80.2231%" y="1647.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (2 samples, 0.27%)</title><rect x="80.7796%" y="1621" width="0.2688%" height="15" fill="rgb(249,130,34)" fg:x="601" fg:w="2"/><text x="81.0296%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (2 samples, 0.27%)</title><rect x="80.7796%" y="1605" width="0.2688%" height="15" fill="rgb(219,42,41)" fg:x="601" fg:w="2"/><text x="81.0296%" y="1615.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="80.7796%" y="1589" width="0.2688%" height="15" fill="rgb(224,100,54)" fg:x="601" fg:w="2"/><text x="81.0296%" y="1599.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="80.7796%" y="1573" width="0.2688%" height="15" fill="rgb(229,200,27)" fg:x="601" fg:w="2"/><text x="81.0296%" y="1583.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="80.7796%" y="1557" width="0.2688%" height="15" fill="rgb(217,118,10)" fg:x="601" fg:w="2"/><text x="81.0296%" y="1567.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="80.7796%" y="1541" width="0.2688%" height="15" fill="rgb(206,22,3)" fg:x="601" fg:w="2"/><text x="81.0296%" y="1551.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="80.7796%" y="1525" width="0.2688%" height="15" fill="rgb(232,163,46)" fg:x="601" fg:w="2"/><text x="81.0296%" y="1535.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="80.7796%" y="1509" width="0.2688%" height="15" fill="rgb(206,95,13)" fg:x="601" fg:w="2"/><text x="81.0296%" y="1519.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="81.0484%" y="1733" width="0.1344%" height="15" fill="rgb(253,154,18)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.13%)</title><rect x="81.0484%" y="1717" width="0.1344%" height="15" fill="rgb(219,32,23)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open (1 samples, 0.13%)</title><rect x="81.0484%" y="1701" width="0.1344%" height="15" fill="rgb(230,191,45)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1711.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="81.0484%" y="1685" width="0.1344%" height="15" fill="rgb(229,64,36)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1695.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (1 samples, 0.13%)</title><rect x="81.0484%" y="1669" width="0.1344%" height="15" fill="rgb(205,129,25)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1679.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::impl$3::drop (1 samples, 0.13%)</title><rect x="81.0484%" y="1653" width="0.1344%" height="15" fill="rgb(254,112,7)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1663.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.13%)</title><rect x="81.0484%" y="1637" width="0.1344%" height="15" fill="rgb(226,53,48)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1647.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.13%)</title><rect x="81.0484%" y="1621" width="0.1344%" height="15" fill="rgb(214,153,38)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::fs::windows::File::open_native (1 samples, 0.13%)</title><rect x="81.0484%" y="1605" width="0.1344%" height="15" fill="rgb(243,101,7)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1615.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.13%)</title><rect x="81.0484%" y="1589" width="0.1344%" height="15" fill="rgb(240,140,22)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1599.50"></text></g><g><title>fuzzit.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.13%)</title><rect x="81.0484%" y="1573" width="0.1344%" height="15" fill="rgb(235,114,2)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1583.50"></text></g><g><title>`0x7FFE2C8045C7 (1 samples, 0.13%)</title><rect x="81.0484%" y="1557" width="0.1344%" height="15" fill="rgb(242,59,12)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1567.50"></text></g><g><title>`0x7FFE2C802CD7 (1 samples, 0.13%)</title><rect x="81.0484%" y="1541" width="0.1344%" height="15" fill="rgb(252,134,9)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1551.50"></text></g><g><title>`0x7FFE2F1A3CD4 (1 samples, 0.13%)</title><rect x="81.0484%" y="1525" width="0.1344%" height="15" fill="rgb(236,4,44)" fg:x="603" fg:w="1"/><text x="81.2984%" y="1535.50"></text></g><g><title>`0x7FFE2C8776C5 (5 samples, 0.67%)</title><rect x="81.1828%" y="1669" width="0.6720%" height="15" fill="rgb(254,172,41)" fg:x="604" fg:w="5"/><text x="81.4328%" y="1679.50"></text></g><g><title>`0x7FFE2F1A4C44 (5 samples, 0.67%)</title><rect x="81.1828%" y="1653" width="0.6720%" height="15" fill="rgb(244,63,20)" fg:x="604" fg:w="5"/><text x="81.4328%" y="1663.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.54%)</title><rect x="81.8548%" y="1669" width="0.5376%" height="15" fill="rgb(250,73,31)" fg:x="609" fg:w="4"/><text x="82.1048%" y="1679.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.54%)</title><rect x="81.8548%" y="1653" width="0.5376%" height="15" fill="rgb(241,38,36)" fg:x="609" fg:w="4"/><text x="82.1048%" y="1663.50"></text></g><g><title>`0x7FFE2DD2D646 (4 samples, 0.54%)</title><rect x="81.8548%" y="1637" width="0.5376%" height="15" fill="rgb(245,211,2)" fg:x="609" fg:w="4"/><text x="82.1048%" y="1647.50"></text></g><g><title>`0x7FFE2F1A3BB4 (4 samples, 0.54%)</title><rect x="81.8548%" y="1621" width="0.5376%" height="15" fill="rgb(206,120,28)" fg:x="609" fg:w="4"/><text x="82.1048%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (10 samples, 1.34%)</title><rect x="81.1828%" y="1733" width="1.3441%" height="15" fill="rgb(211,59,34)" fg:x="604" fg:w="10"/><text x="81.4328%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (10 samples, 1.34%)</title><rect x="81.1828%" y="1717" width="1.3441%" height="15" fill="rgb(233,168,5)" fg:x="604" fg:w="10"/><text x="81.4328%" y="1727.50"></text></g><g><title>`0x7FFE2DD4C6D4 (10 samples, 1.34%)</title><rect x="81.1828%" y="1701" width="1.3441%" height="15" fill="rgb(234,33,13)" fg:x="604" fg:w="10"/><text x="81.4328%" y="1711.50"></text></g><g><title>`0x7FFE2C874E26 (10 samples, 1.34%)</title><rect x="81.1828%" y="1685" width="1.3441%" height="15" fill="rgb(231,150,26)" fg:x="604" fg:w="10"/><text x="81.4328%" y="1695.50"></text></g><g><title>`0x7FFE2C8796C7 (1 samples, 0.13%)</title><rect x="82.3925%" y="1669" width="0.1344%" height="15" fill="rgb(217,191,4)" fg:x="613" fg:w="1"/><text x="82.6425%" y="1679.50"></text></g><g><title>`0x7FFE2DD40D96 (1 samples, 0.13%)</title><rect x="82.3925%" y="1653" width="0.1344%" height="15" fill="rgb(246,198,38)" fg:x="613" fg:w="1"/><text x="82.6425%" y="1663.50"></text></g><g><title>`0x7FFE2DD410BE (1 samples, 0.13%)</title><rect x="82.3925%" y="1637" width="0.1344%" height="15" fill="rgb(245,64,37)" fg:x="613" fg:w="1"/><text x="82.6425%" y="1647.50"></text></g><g><title>`0x7FFE2F079E0F (1 samples, 0.13%)</title><rect x="82.3925%" y="1621" width="0.1344%" height="15" fill="rgb(250,30,36)" fg:x="613" fg:w="1"/><text x="82.6425%" y="1631.50"></text></g><g><title>`0x7FFE2F1A5E24 (1 samples, 0.13%)</title><rect x="82.3925%" y="1605" width="0.1344%" height="15" fill="rgb(217,86,53)" fg:x="613" fg:w="1"/><text x="82.6425%" y="1615.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (41 samples, 5.51%)</title><rect x="77.2849%" y="2245" width="5.5108%" height="15" fill="rgb(228,157,16)" fg:x="575" fg:w="41"/><text x="77.5349%" y="2255.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (41 samples, 5.51%)</title><rect x="77.2849%" y="2229" width="5.5108%" height="15" fill="rgb(217,59,31)" fg:x="575" fg:w="41"/><text x="77.5349%" y="2239.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (41 samples, 5.51%)</title><rect x="77.2849%" y="2213" width="5.5108%" height="15" fill="rgb(237,138,41)" fg:x="575" fg:w="41"/><text x="77.5349%" y="2223.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (41 samples, 5.51%)</title><rect x="77.2849%" y="2197" width="5.5108%" height="15" fill="rgb(227,91,49)" fg:x="575" fg:w="41"/><text x="77.5349%" y="2207.50">fuzzit...</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (21 samples, 2.82%)</title><rect x="79.9731%" y="2181" width="2.8226%" height="15" fill="rgb(247,21,44)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2191.50">fu..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (21 samples, 2.82%)</title><rect x="79.9731%" y="2165" width="2.8226%" height="15" fill="rgb(219,210,51)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2175.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (21 samples, 2.82%)</title><rect x="79.9731%" y="2149" width="2.8226%" height="15" fill="rgb(209,140,6)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2159.50">fu..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (21 samples, 2.82%)</title><rect x="79.9731%" y="2133" width="2.8226%" height="15" fill="rgb(221,188,24)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2143.50">fu..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (21 samples, 2.82%)</title><rect x="79.9731%" y="2117" width="2.8226%" height="15" fill="rgb(232,154,20)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2127.50">fu..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (21 samples, 2.82%)</title><rect x="79.9731%" y="2101" width="2.8226%" height="15" fill="rgb(244,137,50)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2111.50">fu..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (21 samples, 2.82%)</title><rect x="79.9731%" y="2085" width="2.8226%" height="15" fill="rgb(225,185,43)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2095.50">fu..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (21 samples, 2.82%)</title><rect x="79.9731%" y="2069" width="2.8226%" height="15" fill="rgb(213,205,38)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2079.50">fu..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (21 samples, 2.82%)</title><rect x="79.9731%" y="2053" width="2.8226%" height="15" fill="rgb(236,73,12)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2063.50">fu..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (21 samples, 2.82%)</title><rect x="79.9731%" y="2037" width="2.8226%" height="15" fill="rgb(235,219,13)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2047.50">fu..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (21 samples, 2.82%)</title><rect x="79.9731%" y="2021" width="2.8226%" height="15" fill="rgb(218,59,36)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2031.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (21 samples, 2.82%)</title><rect x="79.9731%" y="2005" width="2.8226%" height="15" fill="rgb(205,110,39)" fg:x="595" fg:w="21"/><text x="80.2231%" y="2015.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (21 samples, 2.82%)</title><rect x="79.9731%" y="1989" width="2.8226%" height="15" fill="rgb(218,206,42)" fg:x="595" fg:w="21"/><text x="80.2231%" y="1999.50">fu..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="81.0484%" y="1973" width="1.7473%" height="15" fill="rgb(248,125,24)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1983.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="81.0484%" y="1957" width="1.7473%" height="15" fill="rgb(242,28,27)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1967.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="81.0484%" y="1941" width="1.7473%" height="15" fill="rgb(216,228,15)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1951.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (13 samples, 1.75%)</title><rect x="81.0484%" y="1925" width="1.7473%" height="15" fill="rgb(235,116,46)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1935.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="81.0484%" y="1909" width="1.7473%" height="15" fill="rgb(224,18,32)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1919.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="81.0484%" y="1893" width="1.7473%" height="15" fill="rgb(252,5,12)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="81.0484%" y="1877" width="1.7473%" height="15" fill="rgb(251,36,5)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1887.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (13 samples, 1.75%)</title><rect x="81.0484%" y="1861" width="1.7473%" height="15" fill="rgb(217,53,14)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1871.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (13 samples, 1.75%)</title><rect x="81.0484%" y="1845" width="1.7473%" height="15" fill="rgb(215,86,45)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1855.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (13 samples, 1.75%)</title><rect x="81.0484%" y="1829" width="1.7473%" height="15" fill="rgb(242,169,11)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1839.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (13 samples, 1.75%)</title><rect x="81.0484%" y="1813" width="1.7473%" height="15" fill="rgb(211,213,45)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1823.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (13 samples, 1.75%)</title><rect x="81.0484%" y="1797" width="1.7473%" height="15" fill="rgb(205,88,11)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (13 samples, 1.75%)</title><rect x="81.0484%" y="1781" width="1.7473%" height="15" fill="rgb(252,69,26)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (13 samples, 1.75%)</title><rect x="81.0484%" y="1765" width="1.7473%" height="15" fill="rgb(246,123,37)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1775.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (13 samples, 1.75%)</title><rect x="81.0484%" y="1749" width="1.7473%" height="15" fill="rgb(212,205,5)" fg:x="603" fg:w="13"/><text x="81.2984%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (2 samples, 0.27%)</title><rect x="82.5269%" y="1733" width="0.2688%" height="15" fill="rgb(253,148,0)" fg:x="614" fg:w="2"/><text x="82.7769%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (2 samples, 0.27%)</title><rect x="82.5269%" y="1717" width="0.2688%" height="15" fill="rgb(239,22,4)" fg:x="614" fg:w="2"/><text x="82.7769%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="82.5269%" y="1701" width="0.2688%" height="15" fill="rgb(226,26,53)" fg:x="614" fg:w="2"/><text x="82.7769%" y="1711.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="82.5269%" y="1685" width="0.2688%" height="15" fill="rgb(225,229,45)" fg:x="614" fg:w="2"/><text x="82.7769%" y="1695.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="82.5269%" y="1669" width="0.2688%" height="15" fill="rgb(220,60,37)" fg:x="614" fg:w="2"/><text x="82.7769%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="82.5269%" y="1653" width="0.2688%" height="15" fill="rgb(217,180,35)" fg:x="614" fg:w="2"/><text x="82.7769%" y="1663.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="82.5269%" y="1637" width="0.2688%" height="15" fill="rgb(229,7,53)" fg:x="614" fg:w="2"/><text x="82.7769%" y="1647.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="82.5269%" y="1621" width="0.2688%" height="15" fill="rgb(254,137,3)" fg:x="614" fg:w="2"/><text x="82.7769%" y="1631.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="82.7957%" y="1941" width="0.1344%" height="15" fill="rgb(215,140,41)" fg:x="616" fg:w="1"/><text x="83.0457%" y="1951.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="82.7957%" y="1925" width="0.1344%" height="15" fill="rgb(250,80,15)" fg:x="616" fg:w="1"/><text x="83.0457%" y="1935.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="82.7957%" y="1909" width="0.1344%" height="15" fill="rgb(252,191,6)" fg:x="616" fg:w="1"/><text x="83.0457%" y="1919.50"></text></g><g><title>`0x7FFE2C8CFD81 (1 samples, 0.13%)</title><rect x="82.9301%" y="1845" width="0.1344%" height="15" fill="rgb(246,217,18)" fg:x="617" fg:w="1"/><text x="83.1801%" y="1855.50"></text></g><g><title>`0x7FFE2F0A5BA3 (1 samples, 0.13%)</title><rect x="82.9301%" y="1829" width="0.1344%" height="15" fill="rgb(223,93,7)" fg:x="617" fg:w="1"/><text x="83.1801%" y="1839.50"></text></g><g><title>`0x7FFE2F1A3654 (1 samples, 0.13%)</title><rect x="82.9301%" y="1813" width="0.1344%" height="15" fill="rgb(225,55,52)" fg:x="617" fg:w="1"/><text x="83.1801%" y="1823.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (2 samples, 0.27%)</title><rect x="82.9301%" y="1893" width="0.2688%" height="15" fill="rgb(240,31,24)" fg:x="617" fg:w="2"/><text x="83.1801%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (2 samples, 0.27%)</title><rect x="82.9301%" y="1877" width="0.2688%" height="15" fill="rgb(205,56,52)" fg:x="617" fg:w="2"/><text x="83.1801%" y="1887.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (2 samples, 0.27%)</title><rect x="82.9301%" y="1861" width="0.2688%" height="15" fill="rgb(246,146,12)" fg:x="617" fg:w="2"/><text x="83.1801%" y="1871.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.13%)</title><rect x="83.0645%" y="1845" width="0.1344%" height="15" fill="rgb(239,84,36)" fg:x="618" fg:w="1"/><text x="83.3145%" y="1855.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.13%)</title><rect x="83.0645%" y="1829" width="0.1344%" height="15" fill="rgb(207,41,40)" fg:x="618" fg:w="1"/><text x="83.3145%" y="1839.50"></text></g><g><title>`0x7FFE2C90B036 (1 samples, 0.13%)</title><rect x="83.1989%" y="1797" width="0.1344%" height="15" fill="rgb(241,179,25)" fg:x="619" fg:w="1"/><text x="83.4489%" y="1807.50"></text></g><g><title>`0x7FFE2F1A3474 (1 samples, 0.13%)</title><rect x="83.1989%" y="1781" width="0.1344%" height="15" fill="rgb(210,0,34)" fg:x="619" fg:w="1"/><text x="83.4489%" y="1791.50"></text></g><g><title>`0x7FFE2C8774BC (2 samples, 0.27%)</title><rect x="83.1989%" y="1829" width="0.2688%" height="15" fill="rgb(225,217,29)" fg:x="619" fg:w="2"/><text x="83.4489%" y="1839.50"></text></g><g><title>`0x7FFE2C902481 (2 samples, 0.27%)</title><rect x="83.1989%" y="1813" width="0.2688%" height="15" fill="rgb(216,191,38)" fg:x="619" fg:w="2"/><text x="83.4489%" y="1823.50"></text></g><g><title>`0x7FFE2C90B06A (1 samples, 0.13%)</title><rect x="83.3333%" y="1797" width="0.1344%" height="15" fill="rgb(232,140,52)" fg:x="620" fg:w="1"/><text x="83.5833%" y="1807.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.13%)</title><rect x="83.3333%" y="1781" width="0.1344%" height="15" fill="rgb(223,158,51)" fg:x="620" fg:w="1"/><text x="83.5833%" y="1791.50"></text></g><g><title>`0x7FFE2C8776C5 (14 samples, 1.88%)</title><rect x="83.4677%" y="1829" width="1.8817%" height="15" fill="rgb(235,29,51)" fg:x="621" fg:w="14"/><text x="83.7177%" y="1839.50">`..</text></g><g><title>`0x7FFE2F1A4C44 (14 samples, 1.88%)</title><rect x="83.4677%" y="1813" width="1.8817%" height="15" fill="rgb(215,181,18)" fg:x="621" fg:w="14"/><text x="83.7177%" y="1823.50">`..</text></g><g><title>`0x7FFE2C8787CB (14 samples, 1.88%)</title><rect x="85.3495%" y="1829" width="1.8817%" height="15" fill="rgb(227,125,34)" fg:x="635" fg:w="14"/><text x="85.5995%" y="1839.50">`..</text></g><g><title>`0x7FFE2DD2D052 (14 samples, 1.88%)</title><rect x="85.3495%" y="1813" width="1.8817%" height="15" fill="rgb(230,197,49)" fg:x="635" fg:w="14"/><text x="85.5995%" y="1823.50">`..</text></g><g><title>`0x7FFE2DD2D646 (14 samples, 1.88%)</title><rect x="85.3495%" y="1797" width="1.8817%" height="15" fill="rgb(239,141,16)" fg:x="635" fg:w="14"/><text x="85.5995%" y="1807.50">`..</text></g><g><title>`0x7FFE2F1A3BB4 (14 samples, 1.88%)</title><rect x="85.3495%" y="1781" width="1.8817%" height="15" fill="rgb(225,105,43)" fg:x="635" fg:w="14"/><text x="85.5995%" y="1791.50">`..</text></g><g><title>`0x7FFE2C879723 (1 samples, 0.13%)</title><rect x="87.2312%" y="1829" width="0.1344%" height="15" fill="rgb(214,131,14)" fg:x="649" fg:w="1"/><text x="87.4812%" y="1839.50"></text></g><g><title>`0x7FFE2F1A3534 (1 samples, 0.13%)</title><rect x="87.2312%" y="1813" width="0.1344%" height="15" fill="rgb(229,177,11)" fg:x="649" fg:w="1"/><text x="87.4812%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (33 samples, 4.44%)</title><rect x="83.1989%" y="1893" width="4.4355%" height="15" fill="rgb(231,180,14)" fg:x="619" fg:w="33"/><text x="83.4489%" y="1903.50">fuzzi..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (33 samples, 4.44%)</title><rect x="83.1989%" y="1877" width="4.4355%" height="15" fill="rgb(232,88,2)" fg:x="619" fg:w="33"/><text x="83.4489%" y="1887.50">fuzzi..</text></g><g><title>`0x7FFE2DD4C6D4 (33 samples, 4.44%)</title><rect x="83.1989%" y="1861" width="4.4355%" height="15" fill="rgb(205,220,8)" fg:x="619" fg:w="33"/><text x="83.4489%" y="1871.50">`0x7F..</text></g><g><title>`0x7FFE2C874E26 (33 samples, 4.44%)</title><rect x="83.1989%" y="1845" width="4.4355%" height="15" fill="rgb(225,23,53)" fg:x="619" fg:w="33"/><text x="83.4489%" y="1855.50">`0x7F..</text></g><g><title>`0x7FFE2C87A57A (2 samples, 0.27%)</title><rect x="87.3656%" y="1829" width="0.2688%" height="15" fill="rgb(213,62,29)" fg:x="650" fg:w="2"/><text x="87.6156%" y="1839.50"></text></g><g><title>`0x7FFE2F1A3414 (2 samples, 0.27%)</title><rect x="87.3656%" y="1813" width="0.2688%" height="15" fill="rgb(227,75,7)" fg:x="650" fg:w="2"/><text x="87.6156%" y="1823.50"></text></g><g><title>fuzzit.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.13%)</title><rect x="87.6344%" y="1861" width="0.1344%" height="15" fill="rgb(207,105,14)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1871.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.13%)</title><rect x="87.6344%" y="1845" width="0.1344%" height="15" fill="rgb(245,62,29)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1855.50"></text></g><g><title>fuzzit.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.13%)</title><rect x="87.6344%" y="1829" width="0.1344%" height="15" fill="rgb(236,202,4)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::impl$0::next (1 samples, 0.13%)</title><rect x="87.6344%" y="1813" width="0.1344%" height="15" fill="rgb(250,67,1)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1823.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::push (1 samples, 0.13%)</title><rect x="87.6344%" y="1797" width="0.1344%" height="15" fill="rgb(253,115,44)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1807.50"></text></g><g><title>fuzzit.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.13%)</title><rect x="87.6344%" y="1781" width="0.1344%" height="15" fill="rgb(251,139,18)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1791.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.13%)</title><rect x="87.6344%" y="1765" width="0.1344%" height="15" fill="rgb(218,22,32)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1775.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.13%)</title><rect x="87.6344%" y="1749" width="0.1344%" height="15" fill="rgb(243,53,5)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1759.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.13%)</title><rect x="87.6344%" y="1733" width="0.1344%" height="15" fill="rgb(227,56,16)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1743.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="87.6344%" y="1717" width="0.1344%" height="15" fill="rgb(245,53,0)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1727.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_one (1 samples, 0.13%)</title><rect x="87.6344%" y="1701" width="0.1344%" height="15" fill="rgb(216,170,35)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1711.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.13%)</title><rect x="87.6344%" y="1685" width="0.1344%" height="15" fill="rgb(211,200,8)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1695.50"></text></g><g><title>fuzzit.exe`core::result::impl$27::branch (1 samples, 0.13%)</title><rect x="87.6344%" y="1669" width="0.1344%" height="15" fill="rgb(228,204,44)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1679.50"></text></g><g><title>fuzzit.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.13%)</title><rect x="87.6344%" y="1653" width="0.1344%" height="15" fill="rgb(214,121,17)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1663.50"></text></g><g><title>fuzzit.exe`core::result::Result::map_err (1 samples, 0.13%)</title><rect x="87.6344%" y="1637" width="0.1344%" height="15" fill="rgb(233,64,38)" fg:x="652" fg:w="1"/><text x="87.8844%" y="1647.50"></text></g><g><title>fuzzit.exe`std::env::current_exe (1 samples, 0.13%)</title><rect x="87.7688%" y="1861" width="0.1344%" height="15" fill="rgb(253,54,19)" fg:x="653" fg:w="1"/><text x="88.0188%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::os::current_exe (1 samples, 0.13%)</title><rect x="87.7688%" y="1845" width="0.1344%" height="15" fill="rgb(253,94,18)" fg:x="653" fg:w="1"/><text x="88.0188%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.13%)</title><rect x="87.7688%" y="1829" width="0.1344%" height="15" fill="rgb(227,57,52)" fg:x="653" fg:w="1"/><text x="88.0188%" y="1839.50"></text></g><g><title>fuzzit.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.13%)</title><rect x="87.7688%" y="1813" width="0.1344%" height="15" fill="rgb(230,228,50)" fg:x="653" fg:w="1"/><text x="88.0188%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.13%)</title><rect x="87.7688%" y="1797" width="0.1344%" height="15" fill="rgb(217,205,27)" fg:x="653" fg:w="1"/><text x="88.0188%" y="1807.50"></text></g><g><title>fuzzit.exe`core::char::decode::impl$0::next (1 samples, 0.13%)</title><rect x="87.7688%" y="1781" width="0.1344%" height="15" fill="rgb(252,71,50)" fg:x="653" fg:w="1"/><text x="88.0188%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.13%)</title><rect x="87.7688%" y="1765" width="0.1344%" height="15" fill="rgb(209,86,4)" fg:x="653" fg:w="1"/><text x="88.0188%" y="1775.50"></text></g><g><title>fuzzit.exe`core::char::methods::encode_utf8_raw (1 samples, 0.13%)</title><rect x="87.7688%" y="1749" width="0.1344%" height="15" fill="rgb(229,94,0)" fg:x="653" fg:w="1"/><text x="88.0188%" y="1759.50"></text></g><g><title>fuzzit.exe`core::char::methods::len_utf8 (1 samples, 0.13%)</title><rect x="87.7688%" y="1733" width="0.1344%" height="15" fill="rgb(252,223,21)" fg:x="653" fg:w="1"/><text x="88.0188%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::fill_utf16_buf (2 samples, 0.27%)</title><rect x="87.9032%" y="1861" width="0.2688%" height="15" fill="rgb(230,210,4)" fg:x="654" fg:w="2"/><text x="88.1532%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths::closure$2 (2 samples, 0.27%)</title><rect x="87.9032%" y="1845" width="0.2688%" height="15" fill="rgb(240,149,38)" fg:x="654" fg:w="2"/><text x="88.1532%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (2 samples, 0.27%)</title><rect x="87.9032%" y="1829" width="0.2688%" height="15" fill="rgb(254,105,20)" fg:x="654" fg:w="2"/><text x="88.1532%" y="1839.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="87.9032%" y="1813" width="0.2688%" height="15" fill="rgb(253,87,46)" fg:x="654" fg:w="2"/><text x="88.1532%" y="1823.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (2 samples, 0.27%)</title><rect x="87.9032%" y="1797" width="0.2688%" height="15" fill="rgb(253,116,33)" fg:x="654" fg:w="2"/><text x="88.1532%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (2 samples, 0.27%)</title><rect x="87.9032%" y="1781" width="0.2688%" height="15" fill="rgb(229,198,5)" fg:x="654" fg:w="2"/><text x="88.1532%" y="1791.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="87.9032%" y="1765" width="0.2688%" height="15" fill="rgb(242,38,37)" fg:x="654" fg:w="2"/><text x="88.1532%" y="1775.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="87.9032%" y="1749" width="0.2688%" height="15" fill="rgb(242,69,53)" fg:x="654" fg:w="2"/><text x="88.1532%" y="1759.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (48 samples, 6.45%)</title><rect x="82.7957%" y="2069" width="6.4516%" height="15" fill="rgb(249,80,16)" fg:x="616" fg:w="48"/><text x="83.0457%" y="2079.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (48 samples, 6.45%)</title><rect x="82.7957%" y="2053" width="6.4516%" height="15" fill="rgb(206,128,11)" fg:x="616" fg:w="48"/><text x="83.0457%" y="2063.50">fuzzit.e..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (48 samples, 6.45%)</title><rect x="82.7957%" y="2037" width="6.4516%" height="15" fill="rgb(212,35,20)" fg:x="616" fg:w="48"/><text x="83.0457%" y="2047.50">fuzzit.e..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (48 samples, 6.45%)</title><rect x="82.7957%" y="2021" width="6.4516%" height="15" fill="rgb(236,79,13)" fg:x="616" fg:w="48"/><text x="83.0457%" y="2031.50">fuzzit.e..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (48 samples, 6.45%)</title><rect x="82.7957%" y="2005" width="6.4516%" height="15" fill="rgb(233,123,3)" fg:x="616" fg:w="48"/><text x="83.0457%" y="2015.50">fuzzit.e..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (48 samples, 6.45%)</title><rect x="82.7957%" y="1989" width="6.4516%" height="15" fill="rgb(214,93,52)" fg:x="616" fg:w="48"/><text x="83.0457%" y="1999.50">fuzzit.e..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (48 samples, 6.45%)</title><rect x="82.7957%" y="1973" width="6.4516%" height="15" fill="rgb(251,37,40)" fg:x="616" fg:w="48"/><text x="83.0457%" y="1983.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::process::Command::output (48 samples, 6.45%)</title><rect x="82.7957%" y="1957" width="6.4516%" height="15" fill="rgb(227,80,54)" fg:x="616" fg:w="48"/><text x="83.0457%" y="1967.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::output (47 samples, 6.32%)</title><rect x="82.9301%" y="1941" width="6.3172%" height="15" fill="rgb(254,48,11)" fg:x="617" fg:w="47"/><text x="83.1801%" y="1951.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (47 samples, 6.32%)</title><rect x="82.9301%" y="1925" width="6.3172%" height="15" fill="rgb(235,193,26)" fg:x="617" fg:w="47"/><text x="83.1801%" y="1935.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (47 samples, 6.32%)</title><rect x="82.9301%" y="1909" width="6.3172%" height="15" fill="rgb(229,99,21)" fg:x="617" fg:w="47"/><text x="83.1801%" y="1919.50">fuzzit.e..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (12 samples, 1.61%)</title><rect x="87.6344%" y="1893" width="1.6129%" height="15" fill="rgb(211,140,41)" fg:x="652" fg:w="12"/><text x="87.8844%" y="1903.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (12 samples, 1.61%)</title><rect x="87.6344%" y="1877" width="1.6129%" height="15" fill="rgb(240,227,30)" fg:x="652" fg:w="12"/><text x="87.8844%" y="1887.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (8 samples, 1.08%)</title><rect x="88.1720%" y="1861" width="1.0753%" height="15" fill="rgb(215,224,45)" fg:x="656" fg:w="8"/><text x="88.4220%" y="1871.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (8 samples, 1.08%)</title><rect x="88.1720%" y="1845" width="1.0753%" height="15" fill="rgb(206,123,31)" fg:x="656" fg:w="8"/><text x="88.4220%" y="1855.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (8 samples, 1.08%)</title><rect x="88.1720%" y="1829" width="1.0753%" height="15" fill="rgb(210,138,16)" fg:x="656" fg:w="8"/><text x="88.4220%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (8 samples, 1.08%)</title><rect x="88.1720%" y="1813" width="1.0753%" height="15" fill="rgb(228,57,28)" fg:x="656" fg:w="8"/><text x="88.4220%" y="1823.50"></text></g><g><title>`0x7FFE2C81DF99 (8 samples, 1.08%)</title><rect x="88.1720%" y="1797" width="1.0753%" height="15" fill="rgb(242,170,10)" fg:x="656" fg:w="8"/><text x="88.4220%" y="1807.50"></text></g><g><title>`0x7FFE2F1A39D4 (8 samples, 1.08%)</title><rect x="88.1720%" y="1781" width="1.0753%" height="15" fill="rgb(228,214,39)" fg:x="656" fg:w="8"/><text x="88.4220%" y="1791.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.13%)</title><rect x="89.2473%" y="1861" width="0.1344%" height="15" fill="rgb(218,179,33)" fg:x="664" fg:w="1"/><text x="89.4973%" y="1871.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.13%)</title><rect x="89.2473%" y="1845" width="0.1344%" height="15" fill="rgb(235,193,39)" fg:x="664" fg:w="1"/><text x="89.4973%" y="1855.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.13%)</title><rect x="89.2473%" y="1829" width="0.1344%" height="15" fill="rgb(219,221,36)" fg:x="664" fg:w="1"/><text x="89.4973%" y="1839.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="89.2473%" y="1813" width="0.1344%" height="15" fill="rgb(248,218,19)" fg:x="664" fg:w="1"/><text x="89.4973%" y="1823.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="89.2473%" y="1797" width="0.1344%" height="15" fill="rgb(205,50,9)" fg:x="664" fg:w="1"/><text x="89.4973%" y="1807.50"></text></g><g><title>`0x7FFE2C8774BC (2 samples, 0.27%)</title><rect x="89.3817%" y="1765" width="0.2688%" height="15" fill="rgb(238,81,28)" fg:x="665" fg:w="2"/><text x="89.6317%" y="1775.50"></text></g><g><title>`0x7FFE2C902481 (2 samples, 0.27%)</title><rect x="89.3817%" y="1749" width="0.2688%" height="15" fill="rgb(235,110,19)" fg:x="665" fg:w="2"/><text x="89.6317%" y="1759.50"></text></g><g><title>`0x7FFE2C90B036 (2 samples, 0.27%)</title><rect x="89.3817%" y="1733" width="0.2688%" height="15" fill="rgb(214,7,14)" fg:x="665" fg:w="2"/><text x="89.6317%" y="1743.50"></text></g><g><title>`0x7FFE2F1A3474 (2 samples, 0.27%)</title><rect x="89.3817%" y="1717" width="0.2688%" height="15" fill="rgb(211,77,3)" fg:x="665" fg:w="2"/><text x="89.6317%" y="1727.50"></text></g><g><title>`0x7FFE2C8776C5 (10 samples, 1.34%)</title><rect x="89.6505%" y="1765" width="1.3441%" height="15" fill="rgb(229,5,9)" fg:x="667" fg:w="10"/><text x="89.9005%" y="1775.50"></text></g><g><title>`0x7FFE2F1A4C44 (10 samples, 1.34%)</title><rect x="89.6505%" y="1749" width="1.3441%" height="15" fill="rgb(225,90,11)" fg:x="667" fg:w="10"/><text x="89.9005%" y="1759.50"></text></g><g><title>`0x7FFE2DD2D5FB (1 samples, 0.13%)</title><rect x="90.9946%" y="1733" width="0.1344%" height="15" fill="rgb(242,56,8)" fg:x="677" fg:w="1"/><text x="91.2446%" y="1743.50"></text></g><g><title>`0x7FFE2DD2E523 (1 samples, 0.13%)</title><rect x="90.9946%" y="1717" width="0.1344%" height="15" fill="rgb(249,212,39)" fg:x="677" fg:w="1"/><text x="91.2446%" y="1727.50"></text></g><g><title>`0x7FFE2F1A3514 (1 samples, 0.13%)</title><rect x="90.9946%" y="1701" width="0.1344%" height="15" fill="rgb(236,90,9)" fg:x="677" fg:w="1"/><text x="91.2446%" y="1711.50"></text></g><g><title>`0x7FFE2C8787CB (10 samples, 1.34%)</title><rect x="90.9946%" y="1765" width="1.3441%" height="15" fill="rgb(206,88,35)" fg:x="677" fg:w="10"/><text x="91.2446%" y="1775.50"></text></g><g><title>`0x7FFE2DD2D052 (10 samples, 1.34%)</title><rect x="90.9946%" y="1749" width="1.3441%" height="15" fill="rgb(205,126,30)" fg:x="677" fg:w="10"/><text x="91.2446%" y="1759.50"></text></g><g><title>`0x7FFE2DD2D646 (9 samples, 1.21%)</title><rect x="91.1290%" y="1733" width="1.2097%" height="15" fill="rgb(230,176,12)" fg:x="678" fg:w="9"/><text x="91.3790%" y="1743.50"></text></g><g><title>`0x7FFE2F1A3BB4 (9 samples, 1.21%)</title><rect x="91.1290%" y="1717" width="1.2097%" height="15" fill="rgb(243,19,9)" fg:x="678" fg:w="9"/><text x="91.3790%" y="1727.50"></text></g><g><title>`0x7FFE2C878B0D (1 samples, 0.13%)</title><rect x="92.3387%" y="1765" width="0.1344%" height="15" fill="rgb(245,171,17)" fg:x="687" fg:w="1"/><text x="92.5887%" y="1775.50"></text></g><g><title>`0x7FFE2C8E4695 (1 samples, 0.13%)</title><rect x="92.3387%" y="1749" width="0.1344%" height="15" fill="rgb(227,52,21)" fg:x="687" fg:w="1"/><text x="92.5887%" y="1759.50"></text></g><g><title>`0x7FFE2F075912 (1 samples, 0.13%)</title><rect x="92.3387%" y="1733" width="0.1344%" height="15" fill="rgb(238,69,14)" fg:x="687" fg:w="1"/><text x="92.5887%" y="1743.50"></text></g><g><title>`0x7FFE2F075B93 (1 samples, 0.13%)</title><rect x="92.3387%" y="1717" width="0.1344%" height="15" fill="rgb(241,156,39)" fg:x="687" fg:w="1"/><text x="92.5887%" y="1727.50"></text></g><g><title>`0x7FFE2F090E14 (1 samples, 0.13%)</title><rect x="92.3387%" y="1701" width="0.1344%" height="15" fill="rgb(212,227,28)" fg:x="687" fg:w="1"/><text x="92.5887%" y="1711.50"></text></g><g><title>`0x7FFE2F091241 (1 samples, 0.13%)</title><rect x="92.3387%" y="1685" width="0.1344%" height="15" fill="rgb(209,118,27)" fg:x="687" fg:w="1"/><text x="92.5887%" y="1695.50"></text></g><g><title>`0x7FFE2F066315 (1 samples, 0.13%)</title><rect x="92.3387%" y="1669" width="0.1344%" height="15" fill="rgb(226,102,5)" fg:x="687" fg:w="1"/><text x="92.5887%" y="1679.50"></text></g><g><title>`0x7FFE2C878B3F (1 samples, 0.13%)</title><rect x="92.4731%" y="1765" width="0.1344%" height="15" fill="rgb(223,34,3)" fg:x="688" fg:w="1"/><text x="92.7231%" y="1775.50"></text></g><g><title>`0x7FFE2F075D02 (1 samples, 0.13%)</title><rect x="92.4731%" y="1749" width="0.1344%" height="15" fill="rgb(221,81,38)" fg:x="688" fg:w="1"/><text x="92.7231%" y="1759.50"></text></g><g><title>`0x7FFE2F1A43E4 (1 samples, 0.13%)</title><rect x="92.4731%" y="1733" width="0.1344%" height="15" fill="rgb(236,219,28)" fg:x="688" fg:w="1"/><text x="92.7231%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (25 samples, 3.36%)</title><rect x="89.3817%" y="1829" width="3.3602%" height="15" fill="rgb(213,200,14)" fg:x="665" fg:w="25"/><text x="89.6317%" y="1839.50">fuz..</text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (25 samples, 3.36%)</title><rect x="89.3817%" y="1813" width="3.3602%" height="15" fill="rgb(240,33,19)" fg:x="665" fg:w="25"/><text x="89.6317%" y="1823.50">fuz..</text></g><g><title>`0x7FFE2DD4C6D4 (25 samples, 3.36%)</title><rect x="89.3817%" y="1797" width="3.3602%" height="15" fill="rgb(233,113,27)" fg:x="665" fg:w="25"/><text x="89.6317%" y="1807.50">`0x..</text></g><g><title>`0x7FFE2C874E26 (25 samples, 3.36%)</title><rect x="89.3817%" y="1781" width="3.3602%" height="15" fill="rgb(220,221,18)" fg:x="665" fg:w="25"/><text x="89.6317%" y="1791.50">`0x..</text></g><g><title>`0x7FFE2C879723 (1 samples, 0.13%)</title><rect x="92.6075%" y="1765" width="0.1344%" height="15" fill="rgb(238,92,8)" fg:x="689" fg:w="1"/><text x="92.8575%" y="1775.50"></text></g><g><title>`0x7FFE2F1A3534 (1 samples, 0.13%)</title><rect x="92.6075%" y="1749" width="0.1344%" height="15" fill="rgb(222,164,16)" fg:x="689" fg:w="1"/><text x="92.8575%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Stdio::to_handle (1 samples, 0.13%)</title><rect x="92.7419%" y="1829" width="0.1344%" height="15" fill="rgb(241,119,3)" fg:x="690" fg:w="1"/><text x="92.9919%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.13%)</title><rect x="92.7419%" y="1813" width="0.1344%" height="15" fill="rgb(241,44,8)" fg:x="690" fg:w="1"/><text x="92.9919%" y="1823.50"></text></g><g><title>`0x7FFE2C8CFEE5 (1 samples, 0.13%)</title><rect x="92.7419%" y="1797" width="0.1344%" height="15" fill="rgb(230,36,40)" fg:x="690" fg:w="1"/><text x="92.9919%" y="1807.50"></text></g><g><title>`0x7FFE2F1A4984 (1 samples, 0.13%)</title><rect x="92.7419%" y="1781" width="0.1344%" height="15" fill="rgb(243,16,36)" fg:x="690" fg:w="1"/><text x="92.9919%" y="1791.50"></text></g><g><title>fuzzit.exe`std::env::_var_os (1 samples, 0.13%)</title><rect x="92.8763%" y="1797" width="0.1344%" height="15" fill="rgb(231,4,26)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::env::windows::getenv (1 samples, 0.13%)</title><rect x="92.8763%" y="1781" width="0.1344%" height="15" fill="rgb(240,9,31)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1791.50"></text></g><g><title>fuzzit.exe`core::result::Result::ok (1 samples, 0.13%)</title><rect x="92.8763%" y="1765" width="0.1344%" height="15" fill="rgb(207,173,15)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1775.50"></text></g><g><title>`0x7FFE2F0C1358 (1 samples, 0.13%)</title><rect x="92.8763%" y="1749" width="0.1344%" height="15" fill="rgb(224,192,53)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1759.50"></text></g><g><title>`0x7FFE2F09469B (1 samples, 0.13%)</title><rect x="92.8763%" y="1733" width="0.1344%" height="15" fill="rgb(223,67,28)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1743.50"></text></g><g><title>`0x7FFE2F041B02 (1 samples, 0.13%)</title><rect x="92.8763%" y="1717" width="0.1344%" height="15" fill="rgb(211,20,47)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1727.50"></text></g><g><title>`0x7FFE2F0C13F0 (1 samples, 0.13%)</title><rect x="92.8763%" y="1701" width="0.1344%" height="15" fill="rgb(240,228,2)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1711.50"></text></g><g><title>`0x7FFE2F096686 (1 samples, 0.13%)</title><rect x="92.8763%" y="1685" width="0.1344%" height="15" fill="rgb(248,151,12)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1695.50"></text></g><g><title>`0x7FFE2F0D7088 (1 samples, 0.13%)</title><rect x="92.8763%" y="1669" width="0.1344%" height="15" fill="rgb(244,8,39)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1679.50"></text></g><g><title>`0x7FFE2F099CCE (1 samples, 0.13%)</title><rect x="92.8763%" y="1653" width="0.1344%" height="15" fill="rgb(222,26,8)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1663.50"></text></g><g><title>`0x7FFE2F1212A9 (1 samples, 0.13%)</title><rect x="92.8763%" y="1637" width="0.1344%" height="15" fill="rgb(213,106,44)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1647.50"></text></g><g><title>`0x7FFE2F1A35F4 (1 samples, 0.13%)</title><rect x="92.8763%" y="1621" width="0.1344%" height="15" fill="rgb(214,129,20)" fg:x="691" fg:w="1"/><text x="93.1263%" y="1631.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (85 samples, 11.42%)</title><rect x="82.7957%" y="2165" width="11.4247%" height="15" fill="rgb(212,32,13)" fg:x="616" fg:w="85"/><text x="83.0457%" y="2175.50">fuzzit.exe`rayon:..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (85 samples, 11.42%)</title><rect x="82.7957%" y="2149" width="11.4247%" height="15" fill="rgb(208,168,33)" fg:x="616" fg:w="85"/><text x="83.0457%" y="2159.50">fuzzit.exe`rayon:..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (85 samples, 11.42%)</title><rect x="82.7957%" y="2133" width="11.4247%" height="15" fill="rgb(231,207,8)" fg:x="616" fg:w="85"/><text x="83.0457%" y="2143.50">fuzzit.exe`core::..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (85 samples, 11.42%)</title><rect x="82.7957%" y="2117" width="11.4247%" height="15" fill="rgb(235,219,23)" fg:x="616" fg:w="85"/><text x="83.0457%" y="2127.50">fuzzit.exe`fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (85 samples, 11.42%)</title><rect x="82.7957%" y="2101" width="11.4247%" height="15" fill="rgb(226,216,26)" fg:x="616" fg:w="85"/><text x="83.0457%" y="2111.50">fuzzit.exe`rayon_..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (85 samples, 11.42%)</title><rect x="82.7957%" y="2085" width="11.4247%" height="15" fill="rgb(239,137,16)" fg:x="616" fg:w="85"/><text x="83.0457%" y="2095.50">fuzzit.exe`rayon_..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 4.97%)</title><rect x="89.2473%" y="2069" width="4.9731%" height="15" fill="rgb(207,12,36)" fg:x="664" fg:w="37"/><text x="89.4973%" y="2079.50">fuzzit..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 4.97%)</title><rect x="89.2473%" y="2053" width="4.9731%" height="15" fill="rgb(210,214,24)" fg:x="664" fg:w="37"/><text x="89.4973%" y="2063.50">fuzzit..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 4.97%)</title><rect x="89.2473%" y="2037" width="4.9731%" height="15" fill="rgb(206,56,30)" fg:x="664" fg:w="37"/><text x="89.4973%" y="2047.50">fuzzit..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (37 samples, 4.97%)</title><rect x="89.2473%" y="2021" width="4.9731%" height="15" fill="rgb(228,143,26)" fg:x="664" fg:w="37"/><text x="89.4973%" y="2031.50">fuzzit..</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 4.97%)</title><rect x="89.2473%" y="2005" width="4.9731%" height="15" fill="rgb(216,218,46)" fg:x="664" fg:w="37"/><text x="89.4973%" y="2015.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (37 samples, 4.97%)</title><rect x="89.2473%" y="1989" width="4.9731%" height="15" fill="rgb(206,6,19)" fg:x="664" fg:w="37"/><text x="89.4973%" y="1999.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (37 samples, 4.97%)</title><rect x="89.2473%" y="1973" width="4.9731%" height="15" fill="rgb(239,177,51)" fg:x="664" fg:w="37"/><text x="89.4973%" y="1983.50">fuzzit..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (37 samples, 4.97%)</title><rect x="89.2473%" y="1957" width="4.9731%" height="15" fill="rgb(216,55,25)" fg:x="664" fg:w="37"/><text x="89.4973%" y="1967.50">fuzzit..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (37 samples, 4.97%)</title><rect x="89.2473%" y="1941" width="4.9731%" height="15" fill="rgb(231,163,29)" fg:x="664" fg:w="37"/><text x="89.4973%" y="1951.50">fuzzit..</text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (37 samples, 4.97%)</title><rect x="89.2473%" y="1925" width="4.9731%" height="15" fill="rgb(232,149,50)" fg:x="664" fg:w="37"/><text x="89.4973%" y="1935.50">fuzzit..</text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (37 samples, 4.97%)</title><rect x="89.2473%" y="1909" width="4.9731%" height="15" fill="rgb(223,142,48)" fg:x="664" fg:w="37"/><text x="89.4973%" y="1919.50">fuzzit..</text></g><g><title>fuzzit.exe`std::process::Command::output (37 samples, 4.97%)</title><rect x="89.2473%" y="1893" width="4.9731%" height="15" fill="rgb(245,83,23)" fg:x="664" fg:w="37"/><text x="89.4973%" y="1903.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::process::output (37 samples, 4.97%)</title><rect x="89.2473%" y="1877" width="4.9731%" height="15" fill="rgb(224,63,2)" fg:x="664" fg:w="37"/><text x="89.4973%" y="1887.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (36 samples, 4.84%)</title><rect x="89.3817%" y="1861" width="4.8387%" height="15" fill="rgb(218,65,53)" fg:x="665" fg:w="36"/><text x="89.6317%" y="1871.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (36 samples, 4.84%)</title><rect x="89.3817%" y="1845" width="4.8387%" height="15" fill="rgb(221,84,29)" fg:x="665" fg:w="36"/><text x="89.6317%" y="1855.50">fuzzit..</text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (10 samples, 1.34%)</title><rect x="92.8763%" y="1829" width="1.3441%" height="15" fill="rgb(234,0,32)" fg:x="691" fg:w="10"/><text x="93.1263%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (10 samples, 1.34%)</title><rect x="92.8763%" y="1813" width="1.3441%" height="15" fill="rgb(206,20,16)" fg:x="691" fg:w="10"/><text x="93.1263%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (9 samples, 1.21%)</title><rect x="93.0108%" y="1797" width="1.2097%" height="15" fill="rgb(244,172,18)" fg:x="692" fg:w="9"/><text x="93.2608%" y="1807.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (9 samples, 1.21%)</title><rect x="93.0108%" y="1781" width="1.2097%" height="15" fill="rgb(254,133,1)" fg:x="692" fg:w="9"/><text x="93.2608%" y="1791.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (9 samples, 1.21%)</title><rect x="93.0108%" y="1765" width="1.2097%" height="15" fill="rgb(222,206,41)" fg:x="692" fg:w="9"/><text x="93.2608%" y="1775.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (9 samples, 1.21%)</title><rect x="93.0108%" y="1749" width="1.2097%" height="15" fill="rgb(212,3,42)" fg:x="692" fg:w="9"/><text x="93.2608%" y="1759.50"></text></g><g><title>`0x7FFE2C81DF99 (9 samples, 1.21%)</title><rect x="93.0108%" y="1733" width="1.2097%" height="15" fill="rgb(241,11,4)" fg:x="692" fg:w="9"/><text x="93.2608%" y="1743.50"></text></g><g><title>`0x7FFE2F1A39D4 (9 samples, 1.21%)</title><rect x="93.0108%" y="1717" width="1.2097%" height="15" fill="rgb(205,19,26)" fg:x="692" fg:w="9"/><text x="93.2608%" y="1727.50"></text></g><g><title>`0x7FFE2C8774BC (1 samples, 0.13%)</title><rect x="94.2204%" y="1557" width="0.1344%" height="15" fill="rgb(210,179,32)" fg:x="701" fg:w="1"/><text x="94.4704%" y="1567.50"></text></g><g><title>`0x7FFE2C902481 (1 samples, 0.13%)</title><rect x="94.2204%" y="1541" width="0.1344%" height="15" fill="rgb(227,116,49)" fg:x="701" fg:w="1"/><text x="94.4704%" y="1551.50"></text></g><g><title>`0x7FFE2C90B08F (1 samples, 0.13%)</title><rect x="94.2204%" y="1525" width="0.1344%" height="15" fill="rgb(211,146,6)" fg:x="701" fg:w="1"/><text x="94.4704%" y="1535.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="94.2204%" y="1509" width="0.1344%" height="15" fill="rgb(219,44,39)" fg:x="701" fg:w="1"/><text x="94.4704%" y="1519.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.40%)</title><rect x="94.3548%" y="1557" width="0.4032%" height="15" fill="rgb(234,128,11)" fg:x="702" fg:w="3"/><text x="94.6048%" y="1567.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.40%)</title><rect x="94.3548%" y="1541" width="0.4032%" height="15" fill="rgb(220,183,53)" fg:x="702" fg:w="3"/><text x="94.6048%" y="1551.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.08%)</title><rect x="94.2204%" y="1621" width="1.0753%" height="15" fill="rgb(213,219,32)" fg:x="701" fg:w="8"/><text x="94.4704%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.08%)</title><rect x="94.2204%" y="1605" width="1.0753%" height="15" fill="rgb(232,156,16)" fg:x="701" fg:w="8"/><text x="94.4704%" y="1615.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.08%)</title><rect x="94.2204%" y="1589" width="1.0753%" height="15" fill="rgb(246,135,34)" fg:x="701" fg:w="8"/><text x="94.4704%" y="1599.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.08%)</title><rect x="94.2204%" y="1573" width="1.0753%" height="15" fill="rgb(241,99,0)" fg:x="701" fg:w="8"/><text x="94.4704%" y="1583.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.54%)</title><rect x="94.7581%" y="1557" width="0.5376%" height="15" fill="rgb(222,103,45)" fg:x="705" fg:w="4"/><text x="95.0081%" y="1567.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.54%)</title><rect x="94.7581%" y="1541" width="0.5376%" height="15" fill="rgb(212,57,4)" fg:x="705" fg:w="4"/><text x="95.0081%" y="1551.50"></text></g><g><title>`0x7FFE2DD2D646 (4 samples, 0.54%)</title><rect x="94.7581%" y="1525" width="0.5376%" height="15" fill="rgb(215,68,47)" fg:x="705" fg:w="4"/><text x="95.0081%" y="1535.50"></text></g><g><title>`0x7FFE2F1A3BB4 (4 samples, 0.54%)</title><rect x="94.7581%" y="1509" width="0.5376%" height="15" fill="rgb(230,84,2)" fg:x="705" fg:w="4"/><text x="95.0081%" y="1519.50"></text></g><g><title>fuzzit.exe`std::path::PathBuf::pop (1 samples, 0.13%)</title><rect x="95.2957%" y="1589" width="0.1344%" height="15" fill="rgb(220,102,14)" fg:x="709" fg:w="1"/><text x="95.5457%" y="1599.50"></text></g><g><title>fuzzit.exe`std::path::impl$45::deref (1 samples, 0.13%)</title><rect x="95.2957%" y="1573" width="0.1344%" height="15" fill="rgb(240,10,32)" fg:x="709" fg:w="1"/><text x="95.5457%" y="1583.50"></text></g><g><title>fuzzit.exe`std::path::Path::parent (1 samples, 0.13%)</title><rect x="95.2957%" y="1557" width="0.1344%" height="15" fill="rgb(215,47,27)" fg:x="709" fg:w="1"/><text x="95.5457%" y="1567.50"></text></g><g><title>fuzzit.exe`std::path::Path::components (1 samples, 0.13%)</title><rect x="95.2957%" y="1541" width="0.1344%" height="15" fill="rgb(233,188,43)" fg:x="709" fg:w="1"/><text x="95.5457%" y="1551.50"></text></g><g><title>fuzzit.exe`std::path::has_physical_root (1 samples, 0.13%)</title><rect x="95.2957%" y="1525" width="0.1344%" height="15" fill="rgb(253,190,1)" fg:x="709" fg:w="1"/><text x="95.5457%" y="1535.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (12 samples, 1.61%)</title><rect x="94.2204%" y="2133" width="1.6129%" height="15" fill="rgb(206,114,52)" fg:x="701" fg:w="12"/><text x="94.4704%" y="2143.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 1.61%)</title><rect x="94.2204%" y="2117" width="1.6129%" height="15" fill="rgb(233,120,37)" fg:x="701" fg:w="12"/><text x="94.4704%" y="2127.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (12 samples, 1.61%)</title><rect x="94.2204%" y="2101" width="1.6129%" height="15" fill="rgb(214,52,39)" fg:x="701" fg:w="12"/><text x="94.4704%" y="2111.50"></text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (12 samples, 1.61%)</title><rect x="94.2204%" y="2085" width="1.6129%" height="15" fill="rgb(223,80,29)" fg:x="701" fg:w="12"/><text x="94.4704%" y="2095.50"></text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (12 samples, 1.61%)</title><rect x="94.2204%" y="2069" width="1.6129%" height="15" fill="rgb(230,101,40)" fg:x="701" fg:w="12"/><text x="94.4704%" y="2079.50"></text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.61%)</title><rect x="94.2204%" y="2053" width="1.6129%" height="15" fill="rgb(219,211,8)" fg:x="701" fg:w="12"/><text x="94.4704%" y="2063.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.61%)</title><rect x="94.2204%" y="2037" width="1.6129%" height="15" fill="rgb(252,126,28)" fg:x="701" fg:w="12"/><text x="94.4704%" y="2047.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.61%)</title><rect x="94.2204%" y="2021" width="1.6129%" height="15" fill="rgb(215,56,38)" fg:x="701" fg:w="12"/><text x="94.4704%" y="2031.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.61%)</title><rect x="94.2204%" y="2005" width="1.6129%" height="15" fill="rgb(249,55,44)" fg:x="701" fg:w="12"/><text x="94.4704%" y="2015.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.61%)</title><rect x="94.2204%" y="1989" width="1.6129%" height="15" fill="rgb(220,221,32)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1999.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (12 samples, 1.61%)</title><rect x="94.2204%" y="1973" width="1.6129%" height="15" fill="rgb(212,216,41)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1983.50"></text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (12 samples, 1.61%)</title><rect x="94.2204%" y="1957" width="1.6129%" height="15" fill="rgb(228,213,43)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1967.50"></text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (12 samples, 1.61%)</title><rect x="94.2204%" y="1941" width="1.6129%" height="15" fill="rgb(211,31,26)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1951.50"></text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (12 samples, 1.61%)</title><rect x="94.2204%" y="1925" width="1.6129%" height="15" fill="rgb(229,202,19)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1935.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1909" width="1.6129%" height="15" fill="rgb(229,105,46)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1919.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1893" width="1.6129%" height="15" fill="rgb(235,108,1)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1877" width="1.6129%" height="15" fill="rgb(245,111,35)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1861" width="1.6129%" height="15" fill="rgb(219,185,31)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1871.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1845" width="1.6129%" height="15" fill="rgb(214,4,43)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1855.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1829" width="1.6129%" height="15" fill="rgb(235,227,40)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1839.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.61%)</title><rect x="94.2204%" y="1813" width="1.6129%" height="15" fill="rgb(230,88,30)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1823.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1797" width="1.6129%" height="15" fill="rgb(216,217,1)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1807.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1781" width="1.6129%" height="15" fill="rgb(248,139,50)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1791.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1765" width="1.6129%" height="15" fill="rgb(233,1,21)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1775.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (12 samples, 1.61%)</title><rect x="94.2204%" y="1749" width="1.6129%" height="15" fill="rgb(215,183,12)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1759.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.61%)</title><rect x="94.2204%" y="1733" width="1.6129%" height="15" fill="rgb(229,104,42)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1743.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.61%)</title><rect x="94.2204%" y="1717" width="1.6129%" height="15" fill="rgb(243,34,48)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1727.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.61%)</title><rect x="94.2204%" y="1701" width="1.6129%" height="15" fill="rgb(239,11,44)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1711.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.61%)</title><rect x="94.2204%" y="1685" width="1.6129%" height="15" fill="rgb(231,98,35)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1695.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.61%)</title><rect x="94.2204%" y="1669" width="1.6129%" height="15" fill="rgb(233,28,25)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (12 samples, 1.61%)</title><rect x="94.2204%" y="1653" width="1.6129%" height="15" fill="rgb(234,123,11)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1663.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (12 samples, 1.61%)</title><rect x="94.2204%" y="1637" width="1.6129%" height="15" fill="rgb(220,69,3)" fg:x="701" fg:w="12"/><text x="94.4704%" y="1647.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (4 samples, 0.54%)</title><rect x="95.2957%" y="1621" width="0.5376%" height="15" fill="rgb(214,64,36)" fg:x="709" fg:w="4"/><text x="95.5457%" y="1631.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (4 samples, 0.54%)</title><rect x="95.2957%" y="1605" width="0.5376%" height="15" fill="rgb(211,138,32)" fg:x="709" fg:w="4"/><text x="95.5457%" y="1615.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (3 samples, 0.40%)</title><rect x="95.4301%" y="1589" width="0.4032%" height="15" fill="rgb(213,118,47)" fg:x="710" fg:w="3"/><text x="95.6801%" y="1599.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="95.4301%" y="1573" width="0.4032%" height="15" fill="rgb(243,124,49)" fg:x="710" fg:w="3"/><text x="95.6801%" y="1583.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="95.4301%" y="1557" width="0.4032%" height="15" fill="rgb(221,30,28)" fg:x="710" fg:w="3"/><text x="95.6801%" y="1567.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (3 samples, 0.40%)</title><rect x="95.4301%" y="1541" width="0.4032%" height="15" fill="rgb(246,37,13)" fg:x="710" fg:w="3"/><text x="95.6801%" y="1551.50"></text></g><g><title>`0x7FFE2C81DF99 (3 samples, 0.40%)</title><rect x="95.4301%" y="1525" width="0.4032%" height="15" fill="rgb(249,66,14)" fg:x="710" fg:w="3"/><text x="95.6801%" y="1535.50"></text></g><g><title>`0x7FFE2F1A39D4 (3 samples, 0.40%)</title><rect x="95.4301%" y="1509" width="0.4032%" height="15" fill="rgb(213,166,5)" fg:x="710" fg:w="3"/><text x="95.6801%" y="1519.50"></text></g><g><title>fuzzit.exe`core::result::Result::unwrap (1 samples, 0.13%)</title><rect x="95.8333%" y="1813" width="0.1344%" height="15" fill="rgb(221,66,24)" fg:x="713" fg:w="1"/><text x="96.0833%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::pipe::read2 (1 samples, 0.13%)</title><rect x="95.8333%" y="1797" width="0.1344%" height="15" fill="rgb(210,132,17)" fg:x="713" fg:w="1"/><text x="96.0833%" y="1807.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.13%)</title><rect x="95.8333%" y="1781" width="0.1344%" height="15" fill="rgb(243,202,5)" fg:x="713" fg:w="1"/><text x="96.0833%" y="1791.50"></text></g><g><title>`0x7FFE2C8031A9 (1 samples, 0.13%)</title><rect x="95.8333%" y="1765" width="0.1344%" height="15" fill="rgb(233,70,48)" fg:x="713" fg:w="1"/><text x="96.0833%" y="1775.50"></text></g><g><title>`0x7FFE2F1A3414 (1 samples, 0.13%)</title><rect x="95.8333%" y="1749" width="0.1344%" height="15" fill="rgb(238,41,26)" fg:x="713" fg:w="1"/><text x="96.0833%" y="1759.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="95.9677%" y="1717" width="0.1344%" height="15" fill="rgb(241,19,31)" fg:x="714" fg:w="1"/><text x="96.2177%" y="1727.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="95.9677%" y="1701" width="0.1344%" height="15" fill="rgb(214,76,10)" fg:x="714" fg:w="1"/><text x="96.2177%" y="1711.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="95.9677%" y="1685" width="0.1344%" height="15" fill="rgb(254,202,22)" fg:x="714" fg:w="1"/><text x="96.2177%" y="1695.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.40%)</title><rect x="96.1022%" y="1717" width="0.4032%" height="15" fill="rgb(214,72,24)" fg:x="715" fg:w="3"/><text x="96.3522%" y="1727.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.40%)</title><rect x="96.1022%" y="1701" width="0.4032%" height="15" fill="rgb(221,92,46)" fg:x="715" fg:w="3"/><text x="96.3522%" y="1711.50"></text></g><g><title>`0x7FFE2C8787CB (4 samples, 0.54%)</title><rect x="96.5054%" y="1717" width="0.5376%" height="15" fill="rgb(246,13,50)" fg:x="718" fg:w="4"/><text x="96.7554%" y="1727.50"></text></g><g><title>`0x7FFE2DD2D052 (4 samples, 0.54%)</title><rect x="96.5054%" y="1701" width="0.5376%" height="15" fill="rgb(240,165,38)" fg:x="718" fg:w="4"/><text x="96.7554%" y="1711.50"></text></g><g><title>`0x7FFE2DD2D646 (4 samples, 0.54%)</title><rect x="96.5054%" y="1685" width="0.5376%" height="15" fill="rgb(241,24,51)" fg:x="718" fg:w="4"/><text x="96.7554%" y="1695.50"></text></g><g><title>`0x7FFE2F1A3BB4 (4 samples, 0.54%)</title><rect x="96.5054%" y="1669" width="0.5376%" height="15" fill="rgb(227,51,44)" fg:x="718" fg:w="4"/><text x="96.7554%" y="1679.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (9 samples, 1.21%)</title><rect x="95.9677%" y="1781" width="1.2097%" height="15" fill="rgb(231,121,3)" fg:x="714" fg:w="9"/><text x="96.2177%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (9 samples, 1.21%)</title><rect x="95.9677%" y="1765" width="1.2097%" height="15" fill="rgb(245,3,41)" fg:x="714" fg:w="9"/><text x="96.2177%" y="1775.50"></text></g><g><title>`0x7FFE2DD4C6D4 (9 samples, 1.21%)</title><rect x="95.9677%" y="1749" width="1.2097%" height="15" fill="rgb(214,13,26)" fg:x="714" fg:w="9"/><text x="96.2177%" y="1759.50"></text></g><g><title>`0x7FFE2C874E26 (9 samples, 1.21%)</title><rect x="95.9677%" y="1733" width="1.2097%" height="15" fill="rgb(252,75,11)" fg:x="714" fg:w="9"/><text x="96.2177%" y="1743.50"></text></g><g><title>`0x7FFE2C8796C7 (1 samples, 0.13%)</title><rect x="97.0430%" y="1717" width="0.1344%" height="15" fill="rgb(218,226,17)" fg:x="722" fg:w="1"/><text x="97.2930%" y="1727.50"></text></g><g><title>`0x7FFE2DD40D96 (1 samples, 0.13%)</title><rect x="97.0430%" y="1701" width="0.1344%" height="15" fill="rgb(248,89,38)" fg:x="722" fg:w="1"/><text x="97.2930%" y="1711.50"></text></g><g><title>`0x7FFE2DD410BE (1 samples, 0.13%)</title><rect x="97.0430%" y="1685" width="0.1344%" height="15" fill="rgb(237,73,46)" fg:x="722" fg:w="1"/><text x="97.2930%" y="1695.50"></text></g><g><title>`0x7FFE2F079E0F (1 samples, 0.13%)</title><rect x="97.0430%" y="1669" width="0.1344%" height="15" fill="rgb(242,78,33)" fg:x="722" fg:w="1"/><text x="97.2930%" y="1679.50"></text></g><g><title>`0x7FFE2F1A5E24 (1 samples, 0.13%)</title><rect x="97.0430%" y="1653" width="0.1344%" height="15" fill="rgb(235,60,3)" fg:x="722" fg:w="1"/><text x="97.2930%" y="1663.50"></text></g><g><title>`0x7FFE2C81DF4E (1 samples, 0.13%)</title><rect x="97.1774%" y="1685" width="0.1344%" height="15" fill="rgb(216,172,19)" fg:x="723" fg:w="1"/><text x="97.4274%" y="1695.50"></text></g><g><title>`0x7FFE2F11D2DD (1 samples, 0.13%)</title><rect x="97.1774%" y="1669" width="0.1344%" height="15" fill="rgb(227,6,42)" fg:x="723" fg:w="1"/><text x="97.4274%" y="1679.50"></text></g><g><title>`0x7FFE2F0558A8 (1 samples, 0.13%)</title><rect x="97.1774%" y="1653" width="0.1344%" height="15" fill="rgb(223,207,42)" fg:x="723" fg:w="1"/><text x="97.4274%" y="1663.50"></text></g><g><title>fuzzit.exe`rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;::run_inline&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt; &gt;,alloc::string::String&gt;(rayon_core::job::StackJob&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="95.8333%" y="1957" width="1.7473%" height="15" fill="rgb(246,138,30)" fg:x="713" fg:w="13"/><text x="96.0833%" y="1967.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_b::closure$0(rayon_core::join::join_context::call_b::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="95.8333%" y="1941" width="1.7473%" height="15" fill="rgb(251,199,47)" fg:x="713" fg:w="13"/><text x="96.0833%" y="1951.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (13 samples, 1.75%)</title><rect x="95.8333%" y="1925" width="1.7473%" height="15" fill="rgb(228,218,44)" fg:x="713" fg:w="13"/><text x="96.0833%" y="1935.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$1 (13 samples, 1.75%)</title><rect x="95.8333%" y="1909" width="1.7473%" height="15" fill="rgb(220,68,6)" fg:x="713" fg:w="13"/><text x="96.0833%" y="1919.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (13 samples, 1.75%)</title><rect x="95.8333%" y="1893" width="1.7473%" height="15" fill="rgb(240,60,26)" fg:x="713" fg:w="13"/><text x="96.0833%" y="1903.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (13 samples, 1.75%)</title><rect x="95.8333%" y="1877" width="1.7473%" height="15" fill="rgb(211,200,19)" fg:x="713" fg:w="13"/><text x="96.0833%" y="1887.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (13 samples, 1.75%)</title><rect x="95.8333%" y="1861" width="1.7473%" height="15" fill="rgb(242,145,30)" fg:x="713" fg:w="13"/><text x="96.0833%" y="1871.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (13 samples, 1.75%)</title><rect x="95.8333%" y="1845" width="1.7473%" height="15" fill="rgb(225,64,13)" fg:x="713" fg:w="13"/><text x="96.0833%" y="1855.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (13 samples, 1.75%)</title><rect x="95.8333%" y="1829" width="1.7473%" height="15" fill="rgb(218,103,35)" fg:x="713" fg:w="13"/><text x="96.0833%" y="1839.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (12 samples, 1.61%)</title><rect x="95.9677%" y="1813" width="1.6129%" height="15" fill="rgb(216,93,46)" fg:x="714" fg:w="12"/><text x="96.2177%" y="1823.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (12 samples, 1.61%)</title><rect x="95.9677%" y="1797" width="1.6129%" height="15" fill="rgb(225,159,27)" fg:x="714" fg:w="12"/><text x="96.2177%" y="1807.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (3 samples, 0.40%)</title><rect x="97.1774%" y="1781" width="0.4032%" height="15" fill="rgb(225,204,11)" fg:x="723" fg:w="3"/><text x="97.4274%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (3 samples, 0.40%)</title><rect x="97.1774%" y="1765" width="0.4032%" height="15" fill="rgb(205,56,4)" fg:x="723" fg:w="3"/><text x="97.4274%" y="1775.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (3 samples, 0.40%)</title><rect x="97.1774%" y="1749" width="0.4032%" height="15" fill="rgb(206,6,35)" fg:x="723" fg:w="3"/><text x="97.4274%" y="1759.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="97.1774%" y="1733" width="0.4032%" height="15" fill="rgb(247,73,52)" fg:x="723" fg:w="3"/><text x="97.4274%" y="1743.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (3 samples, 0.40%)</title><rect x="97.1774%" y="1717" width="0.4032%" height="15" fill="rgb(246,97,4)" fg:x="723" fg:w="3"/><text x="97.4274%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (3 samples, 0.40%)</title><rect x="97.1774%" y="1701" width="0.4032%" height="15" fill="rgb(212,37,15)" fg:x="723" fg:w="3"/><text x="97.4274%" y="1711.50"></text></g><g><title>`0x7FFE2C81DF99 (2 samples, 0.27%)</title><rect x="97.3118%" y="1685" width="0.2688%" height="15" fill="rgb(208,130,40)" fg:x="724" fg:w="2"/><text x="97.5618%" y="1695.50"></text></g><g><title>`0x7FFE2F1A39D4 (2 samples, 0.27%)</title><rect x="97.3118%" y="1669" width="0.2688%" height="15" fill="rgb(236,55,29)" fg:x="724" fg:w="2"/><text x="97.5618%" y="1679.50"></text></g><g><title>`0x7FFE2C876D00 (1 samples, 0.13%)</title><rect x="97.5806%" y="1653" width="0.1344%" height="15" fill="rgb(209,156,45)" fg:x="726" fg:w="1"/><text x="97.8306%" y="1663.50"></text></g><g><title>`0x7FFE2C81DF99 (1 samples, 0.13%)</title><rect x="97.5806%" y="1637" width="0.1344%" height="15" fill="rgb(249,107,4)" fg:x="726" fg:w="1"/><text x="97.8306%" y="1647.50"></text></g><g><title>`0x7FFE2F1A39D4 (1 samples, 0.13%)</title><rect x="97.5806%" y="1621" width="0.1344%" height="15" fill="rgb(227,7,13)" fg:x="726" fg:w="1"/><text x="97.8306%" y="1631.50"></text></g><g><title>`0x7FFE2C8776C5 (3 samples, 0.40%)</title><rect x="97.7151%" y="1653" width="0.4032%" height="15" fill="rgb(250,129,14)" fg:x="727" fg:w="3"/><text x="97.9651%" y="1663.50"></text></g><g><title>`0x7FFE2F1A4C44 (3 samples, 0.40%)</title><rect x="97.7151%" y="1637" width="0.4032%" height="15" fill="rgb(229,92,13)" fg:x="727" fg:w="3"/><text x="97.9651%" y="1647.50"></text></g><g><title>`0x7FFE2C8787CB (3 samples, 0.40%)</title><rect x="98.1183%" y="1653" width="0.4032%" height="15" fill="rgb(245,98,39)" fg:x="730" fg:w="3"/><text x="98.3683%" y="1663.50"></text></g><g><title>`0x7FFE2DD2D052 (3 samples, 0.40%)</title><rect x="98.1183%" y="1637" width="0.4032%" height="15" fill="rgb(234,135,48)" fg:x="730" fg:w="3"/><text x="98.3683%" y="1647.50"></text></g><g><title>`0x7FFE2DD2D646 (3 samples, 0.40%)</title><rect x="98.1183%" y="1621" width="0.4032%" height="15" fill="rgb(230,98,28)" fg:x="730" fg:w="3"/><text x="98.3683%" y="1631.50"></text></g><g><title>`0x7FFE2F1A3BB4 (3 samples, 0.40%)</title><rect x="98.1183%" y="1605" width="0.4032%" height="15" fill="rgb(223,121,0)" fg:x="730" fg:w="3"/><text x="98.3683%" y="1615.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::cvt (8 samples, 1.08%)</title><rect x="97.5806%" y="1717" width="1.0753%" height="15" fill="rgb(234,173,33)" fg:x="726" fg:w="8"/><text x="97.8306%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::pal::windows::impl$3::is_zero (8 samples, 1.08%)</title><rect x="97.5806%" y="1701" width="1.0753%" height="15" fill="rgb(245,47,8)" fg:x="726" fg:w="8"/><text x="97.8306%" y="1711.50"></text></g><g><title>`0x7FFE2DD4C6D4 (8 samples, 1.08%)</title><rect x="97.5806%" y="1685" width="1.0753%" height="15" fill="rgb(205,17,20)" fg:x="726" fg:w="8"/><text x="97.8306%" y="1695.50"></text></g><g><title>`0x7FFE2C874E26 (8 samples, 1.08%)</title><rect x="97.5806%" y="1669" width="1.0753%" height="15" fill="rgb(232,151,16)" fg:x="726" fg:w="8"/><text x="97.8306%" y="1679.50"></text></g><g><title>`0x7FFE2C879D64 (1 samples, 0.13%)</title><rect x="98.5215%" y="1653" width="0.1344%" height="15" fill="rgb(208,30,32)" fg:x="733" fg:w="1"/><text x="98.7715%" y="1663.50"></text></g><g><title>`0x7FFE2F0C32F7 (1 samples, 0.13%)</title><rect x="98.5215%" y="1637" width="0.1344%" height="15" fill="rgb(254,26,3)" fg:x="733" fg:w="1"/><text x="98.7715%" y="1647.50"></text></g><g><title>`0x7FFE2F0C0EC8 (1 samples, 0.13%)</title><rect x="98.5215%" y="1621" width="0.1344%" height="15" fill="rgb(240,177,30)" fg:x="733" fg:w="1"/><text x="98.7715%" y="1631.50"></text></g><g><title>`0x7FFE2C81DF4E (1 samples, 0.13%)</title><rect x="98.6559%" y="1621" width="0.1344%" height="15" fill="rgb(248,76,44)" fg:x="734" fg:w="1"/><text x="98.9059%" y="1631.50"></text></g><g><title>`0x7FFE2F11D2DD (1 samples, 0.13%)</title><rect x="98.6559%" y="1605" width="0.1344%" height="15" fill="rgb(241,186,54)" fg:x="734" fg:w="1"/><text x="98.9059%" y="1615.50"></text></g><g><title>`0x7FFE2F055909 (1 samples, 0.13%)</title><rect x="98.6559%" y="1589" width="0.1344%" height="15" fill="rgb(249,171,29)" fg:x="734" fg:w="1"/><text x="98.9059%" y="1599.50"></text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::execute (618 samples, 83.06%)</title><rect x="16.1290%" y="2533" width="83.0645%" height="15" fill="rgb(237,151,44)" fg:x="120" fg:w="618"/><text x="16.3790%" y="2543.50">fuzzit.exe`rayon_core::registry::WorkerThread::execute</text></g><g><title>fuzzit.exe`rayon_core::job::JobRef::execute (618 samples, 83.06%)</title><rect x="16.1290%" y="2517" width="83.0645%" height="15" fill="rgb(228,174,30)" fg:x="120" fg:w="618"/><text x="16.3790%" y="2527.50">fuzzit.exe`rayon_core::job::JobRef::execute</text></g><g><title>fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(tuple$ (479 samples, 64.38%)</title><rect x="34.8118%" y="2501" width="64.3817%" height="15" fill="rgb(252,14,37)" fg:x="259" fg:w="479"/><text x="35.0618%" y="2511.50">fuzzit.exe`rayon_core::job::impl$4::execute&lt;rayon_core::latch::SpinLatch,rayon_core::join::join_context::ca..</text></g><g><title>fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;::call(rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (479 samples, 64.38%)</title><rect x="34.8118%" y="2485" width="64.3817%" height="15" fill="rgb(207,111,40)" fg:x="259" fg:w="479"/><text x="35.0618%" y="2495.50">fuzzit.exe`enum2$&lt;rayon_core::job::JobResult&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::st..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (479 samples, 64.38%)</title><rect x="34.8118%" y="2469" width="64.3817%" height="15" fill="rgb(248,171,54)" fg:x="259" fg:w="479"/><text x="35.0618%" y="2479.50">fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::col..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (479 samples, 64.38%)</title><rect x="34.8118%" y="2453" width="64.3817%" height="15" fill="rgb(211,127,2)" fg:x="259" fg:w="479"/><text x="35.0618%" y="2463.50">fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::cal..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon_core::join::join_context::call_b::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (479 samples, 64.38%)</title><rect x="34.8118%" y="2437" width="64.3817%" height="15" fill="rgb(236,87,47)" fg:x="259" fg:w="479"/><text x="35.0618%" y="2447.50">fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::job::impl$9::call::cl..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (479 samples, 64.38%)</title><rect x="34.8118%" y="2421" width="64.3817%" height="15" fill="rgb(223,190,45)" fg:x="259" fg:w="479"/><text x="35.0618%" y="2431.50">fuzzit.exe`std::panicking::try::do_call</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (479 samples, 64.38%)</title><rect x="34.8118%" y="2405" width="64.3817%" height="15" fill="rgb(215,5,16)" fg:x="259" fg:w="479"/><text x="35.0618%" y="2415.50">fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::Pa..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (369 samples, 49.60%)</title><rect x="49.5968%" y="2389" width="49.5968%" height="15" fill="rgb(252,82,33)" fg:x="369" fg:w="369"/><text x="49.8468%" y="2399.50">fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (369 samples, 49.60%)</title><rect x="49.5968%" y="2373" width="49.5968%" height="15" fill="rgb(247,213,44)" fg:x="369" fg:w="369"/><text x="49.8468%" y="2383.50">fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (317 samples, 42.61%)</title><rect x="56.5860%" y="2357" width="42.6075%" height="15" fill="rgb(205,196,44)" fg:x="421" fg:w="317"/><text x="56.8360%" y="2367.50">fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_c..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (317 samples, 42.61%)</title><rect x="56.5860%" y="2341" width="42.6075%" height="15" fill="rgb(237,96,54)" fg:x="421" fg:w="317"/><text x="56.8360%" y="2351.50">fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUn..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (317 samples, 42.61%)</title><rect x="56.5860%" y="2325" width="42.6075%" height="15" fill="rgb(230,113,34)" fg:x="421" fg:w="317"/><text x="56.8360%" y="2335.50">fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindS..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (317 samples, 42.61%)</title><rect x="56.5860%" y="2309" width="42.6075%" height="15" fill="rgb(221,224,12)" fg:x="421" fg:w="317"/><text x="56.8360%" y="2319.50">fuzzit.exe`std::panicking::try::do_call</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (317 samples, 42.61%)</title><rect x="56.5860%" y="2293" width="42.6075%" height="15" fill="rgb(219,112,44)" fg:x="421" fg:w="317"/><text x="56.8360%" y="2303.50">fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;ray..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (173 samples, 23.25%)</title><rect x="75.9409%" y="2277" width="23.2527%" height="15" fill="rgb(210,31,13)" fg:x="565" fg:w="173"/><text x="76.1909%" y="2287.50">fuzzit.exe`rayon_core::registry::in_w..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (173 samples, 23.25%)</title><rect x="75.9409%" y="2261" width="23.2527%" height="15" fill="rgb(230,25,16)" fg:x="565" fg:w="173"/><text x="76.1909%" y="2271.50">fuzzit.exe`rayon_core::join::join_con..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (122 samples, 16.40%)</title><rect x="82.7957%" y="2245" width="16.3978%" height="15" fill="rgb(246,108,53)" fg:x="616" fg:w="122"/><text x="83.0457%" y="2255.50">fuzzit.exe`rayon_core::un..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (122 samples, 16.40%)</title><rect x="82.7957%" y="2229" width="16.3978%" height="15" fill="rgb(241,172,50)" fg:x="616" fg:w="122"/><text x="83.0457%" y="2239.50">fuzzit.exe`std::panic::ca..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (122 samples, 16.40%)</title><rect x="82.7957%" y="2213" width="16.3978%" height="15" fill="rgb(235,141,10)" fg:x="616" fg:w="122"/><text x="83.0457%" y="2223.50">fuzzit.exe`std::panicking..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (122 samples, 16.40%)</title><rect x="82.7957%" y="2197" width="16.3978%" height="15" fill="rgb(220,174,43)" fg:x="616" fg:w="122"/><text x="83.0457%" y="2207.50">fuzzit.exe`std::panicking..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (122 samples, 16.40%)</title><rect x="82.7957%" y="2181" width="16.3978%" height="15" fill="rgb(215,181,40)" fg:x="616" fg:w="122"/><text x="83.0457%" y="2191.50">fuzzit.exe`rayon::iter::p..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;,tuple$&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (37 samples, 4.97%)</title><rect x="94.2204%" y="2165" width="4.9731%" height="15" fill="rgb(230,97,2)" fg:x="701" fg:w="37"/><text x="94.4704%" y="2175.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$1&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::collect::consumer::CollectResult&lt;tuple$ (37 samples, 4.97%)</title><rect x="94.2204%" y="2149" width="4.9731%" height="15" fill="rgb(211,25,27)" fg:x="701" fg:w="37"/><text x="94.4704%" y="2159.50">fuzzit..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="95.8333%" y="2133" width="3.3602%" height="15" fill="rgb(230,87,26)" fg:x="713" fg:w="25"/><text x="96.0833%" y="2143.50">fuz..</text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="95.8333%" y="2117" width="3.3602%" height="15" fill="rgb(227,160,17)" fg:x="713" fg:w="25"/><text x="96.0833%" y="2127.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,rayon::iter::plumbing::bridge_producer_consumer::helper::closure_env$0&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="95.8333%" y="2101" width="3.3602%" height="15" fill="rgb(244,85,34)" fg:x="713" fg:w="25"/><text x="96.0833%" y="2111.50">fuz..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (25 samples, 3.36%)</title><rect x="95.8333%" y="2085" width="3.3602%" height="15" fill="rgb(207,70,0)" fg:x="713" fg:w="25"/><text x="96.0833%" y="2095.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::bridge_producer_consumer::helper&lt;rayon::slice::IterProducer&lt;std::path::PathBuf&gt;,rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt;(unsigned long long, bool, rayon::iter::plumbing::LengthSplitter, rayon::slice::IterProducer&lt;std::path::PathBuf&gt;, rayon::iter::map::MapConsumer&lt;rayon::iter::collect::consumer::CollectConsumer&lt;tuple$ (25 samples, 3.36%)</title><rect x="95.8333%" y="2069" width="3.3602%" height="15" fill="rgb(223,129,7)" fg:x="713" fg:w="25"/><text x="96.0833%" y="2079.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::map::impl$8::complete(rayon::iter::map::MapFolder&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$ (25 samples, 3.36%)</title><rect x="95.8333%" y="2053" width="3.3602%" height="15" fill="rgb(246,105,7)" fg:x="713" fg:w="25"/><text x="96.0833%" y="2063.50">fuz..</text></g><g><title>fuzzit.exe`rayon::iter::plumbing::Folder::consume_iter&lt;rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;,tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$&lt;fuzzit::git_data::collect_git_data::closure_env$0&gt; &gt; &gt;(rayon::iter::collect::consumer::CollectResult&lt;tuple$&lt;alloc::string::String,fuzzit::git_data::GitData&gt; &gt;, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;std::path::PathBuf&gt;,ref$ (25 samples, 3.36%)</title><rect x="95.8333%" y="2037" width="3.3602%" height="15" fill="rgb(215,154,42)" fg:x="713" fg:w="25"/><text x="96.0833%" y="2047.50">fuz..</text></g><g><title>fuzzit.exe`core::ops::function::impls::impl$1::call_mut&lt;tuple$&lt;ref$&lt;std::path::PathBuf&gt; &gt;,fuzzit::git_data::collect_git_data::closure_env$0&gt; (25 samples, 3.36%)</title><rect x="95.8333%" y="2021" width="3.3602%" height="15" fill="rgb(220,215,30)" fg:x="713" fg:w="25"/><text x="96.0833%" y="2031.50">fuz..</text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0 (25 samples, 3.36%)</title><rect x="95.8333%" y="2005" width="3.3602%" height="15" fill="rgb(228,81,51)" fg:x="713" fg:w="25"/><text x="96.0833%" y="2015.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::registry::in_worker&lt;rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;,tuple$&lt;alloc::string::String,alloc::string::String&gt; &gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="95.8333%" y="1989" width="3.3602%" height="15" fill="rgb(247,71,54)" fg:x="713" fg:w="25"/><text x="96.0833%" y="1999.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::join::join_context::closure$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$1&gt;,alloc::string::String,alloc::string::String&gt;(rayon_core::join::join_context::closure_env$0&lt;rayon_core::join::join::call::closure_env$0&lt;alloc::string::String,fuzzit::git_data::collect_git_data::closure$0::closure_env$0&gt;,rayon_core::join::join::call::closure_env$0 (25 samples, 3.36%)</title><rect x="95.8333%" y="1973" width="3.3602%" height="15" fill="rgb(234,176,34)" fg:x="713" fg:w="25"/><text x="96.0833%" y="1983.50">fuz..</text></g><g><title>fuzzit.exe`rayon_core::unwind::halt_unwinding(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="97.5806%" y="1957" width="1.6129%" height="15" fill="rgb(241,103,54)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1967.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="97.5806%" y="1941" width="1.6129%" height="15" fill="rgb(228,22,34)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1951.50"></text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="97.5806%" y="1925" width="1.6129%" height="15" fill="rgb(241,179,48)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1935.50"></text></g><g><title>fuzzit.exe`std::panicking::try::do_call (12 samples, 1.61%)</title><rect x="97.5806%" y="1909" width="1.6129%" height="15" fill="rgb(235,167,37)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1919.50"></text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="97.5806%" y="1893" width="1.6129%" height="15" fill="rgb(213,109,30)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1903.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join_context::call_a::closure$0(rayon_core::join::join_context::call_a::closure_env$0&lt;alloc::string::String,rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="97.5806%" y="1877" width="1.6129%" height="15" fill="rgb(222,172,16)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1887.50"></text></g><g><title>fuzzit.exe`rayon_core::join::join::call::closure$0(rayon_core::join::join::call::closure_env$0 (12 samples, 1.61%)</title><rect x="97.5806%" y="1861" width="1.6129%" height="15" fill="rgb(233,192,5)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1871.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::collect_git_data::closure$0::closure$0 (12 samples, 1.61%)</title><rect x="97.5806%" y="1845" width="1.6129%" height="15" fill="rgb(247,189,41)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1855.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,eyre::Report&gt; &gt;::unwrap_or_default(enum2$&lt;core::result::Result (12 samples, 1.61%)</title><rect x="97.5806%" y="1829" width="1.6129%" height="15" fill="rgb(218,134,47)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1839.50"></text></g><g><title>fuzzit.exe`fuzzit::git_data::execute_git_command (12 samples, 1.61%)</title><rect x="97.5806%" y="1813" width="1.6129%" height="15" fill="rgb(216,29,3)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1823.50"></text></g><g><title>fuzzit.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (12 samples, 1.61%)</title><rect x="97.5806%" y="1797" width="1.6129%" height="15" fill="rgb(246,140,12)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1807.50"></text></g><g><title>fuzzit.exe`std::process::Command::output (12 samples, 1.61%)</title><rect x="97.5806%" y="1781" width="1.6129%" height="15" fill="rgb(230,136,11)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1791.50"></text></g><g><title>fuzzit.exe`std::sys::process::output (12 samples, 1.61%)</title><rect x="97.5806%" y="1765" width="1.6129%" height="15" fill="rgb(247,22,47)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1775.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn (12 samples, 1.61%)</title><rect x="97.5806%" y="1749" width="1.6129%" height="15" fill="rgb(218,84,22)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1759.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::Command::spawn_with_attributes (12 samples, 1.61%)</title><rect x="97.5806%" y="1733" width="1.6129%" height="15" fill="rgb(216,87,39)" fg:x="726" fg:w="12"/><text x="97.8306%" y="1743.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe (4 samples, 0.54%)</title><rect x="98.6559%" y="1717" width="0.5376%" height="15" fill="rgb(221,178,8)" fg:x="734" fg:w="4"/><text x="98.9059%" y="1727.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::search_paths (4 samples, 0.54%)</title><rect x="98.6559%" y="1701" width="0.5376%" height="15" fill="rgb(230,42,11)" fg:x="734" fg:w="4"/><text x="98.9059%" y="1711.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::resolve_exe::closure$0 (4 samples, 0.54%)</title><rect x="98.6559%" y="1685" width="0.5376%" height="15" fill="rgb(237,229,4)" fg:x="734" fg:w="4"/><text x="98.9059%" y="1695.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="98.6559%" y="1669" width="0.5376%" height="15" fill="rgb(222,31,33)" fg:x="734" fg:w="4"/><text x="98.9059%" y="1679.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place (4 samples, 0.54%)</title><rect x="98.6559%" y="1653" width="0.5376%" height="15" fill="rgb(210,17,39)" fg:x="734" fg:w="4"/><text x="98.9059%" y="1663.50"></text></g><g><title>fuzzit.exe`std::sys::process::windows::program_exists (4 samples, 0.54%)</title><rect x="98.6559%" y="1637" width="0.5376%" height="15" fill="rgb(244,93,20)" fg:x="734" fg:w="4"/><text x="98.9059%" y="1647.50"></text></g><g><title>`0x7FFE2C81DF99 (3 samples, 0.40%)</title><rect x="98.7903%" y="1621" width="0.4032%" height="15" fill="rgb(210,40,47)" fg:x="735" fg:w="3"/><text x="99.0403%" y="1631.50"></text></g><g><title>`0x7FFE2F1A39D4 (3 samples, 0.40%)</title><rect x="98.7903%" y="1605" width="0.4032%" height="15" fill="rgb(239,211,47)" fg:x="735" fg:w="3"/><text x="99.0403%" y="1615.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::no_work_found (4 samples, 0.54%)</title><rect x="99.1935%" y="2533" width="0.5376%" height="15" fill="rgb(251,223,49)" fg:x="738" fg:w="4"/><text x="99.4435%" y="2543.50"></text></g><g><title>`0x7FFE2C89696B (4 samples, 0.54%)</title><rect x="99.1935%" y="2517" width="0.5376%" height="15" fill="rgb(221,149,5)" fg:x="738" fg:w="4"/><text x="99.4435%" y="2527.50"></text></g><g><title>`0x7FFE2F10E134 (4 samples, 0.54%)</title><rect x="99.1935%" y="2501" width="0.5376%" height="15" fill="rgb(219,224,51)" fg:x="738" fg:w="4"/><text x="99.4435%" y="2511.50"></text></g><g><title>`0x7FFE2F1A38B4 (4 samples, 0.54%)</title><rect x="99.1935%" y="2485" width="0.5376%" height="15" fill="rgb(223,7,8)" fg:x="738" fg:w="4"/><text x="99.4435%" y="2495.50"></text></g><g><title>fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (628 samples, 84.41%)</title><rect x="15.4570%" y="2709" width="84.4086%" height="15" fill="rgb(241,217,22)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2719.50">fuzzit.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$..</text></g><g><title>fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (628 samples, 84.41%)</title><rect x="15.4570%" y="2693" width="84.4086%" height="15" fill="rgb(248,209,0)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2703.50">fuzzit.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;ray..</text></g><g><title>fuzzit.exe`std::panicking::try::do_call (628 samples, 84.41%)</title><rect x="15.4570%" y="2677" width="84.4086%" height="15" fill="rgb(217,205,4)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2687.50">fuzzit.exe`std::panicking::try::do_call</text></g><g><title>fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (628 samples, 84.41%)</title><rect x="15.4570%" y="2661" width="84.4086%" height="15" fill="rgb(228,124,39)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2671.50">fuzzit.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::clo..</text></g><g><title>fuzzit.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (628 samples, 84.41%)</title><rect x="15.4570%" y="2645" width="84.4086%" height="15" fill="rgb(250,116,42)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2655.50">fuzzit.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;rayon_..</text></g><g><title>fuzzit.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt; (628 samples, 84.41%)</title><rect x="15.4570%" y="2629" width="84.4086%" height="15" fill="rgb(223,202,9)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2639.50">fuzzit.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>fuzzit.exe`rayon_core::registry::ThreadBuilder::run (628 samples, 84.41%)</title><rect x="15.4570%" y="2613" width="84.4086%" height="15" fill="rgb(242,222,40)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2623.50">fuzzit.exe`rayon_core::registry::ThreadBuilder::run</text></g><g><title>fuzzit.exe`rayon_core::registry::main_loop (628 samples, 84.41%)</title><rect x="15.4570%" y="2597" width="84.4086%" height="15" fill="rgb(229,99,46)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2607.50">fuzzit.exe`rayon_core::registry::main_loop</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work (628 samples, 84.41%)</title><rect x="15.4570%" y="2581" width="84.4086%" height="15" fill="rgb(225,56,46)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2591.50">fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_out_of_work</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until (628 samples, 84.41%)</title><rect x="15.4570%" y="2565" width="84.4086%" height="15" fill="rgb(227,94,5)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2575.50">fuzzit.exe`rayon_core::registry::WorkerThread::wait_until</text></g><g><title>fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold (628 samples, 84.41%)</title><rect x="15.4570%" y="2549" width="84.4086%" height="15" fill="rgb(205,112,38)" fg:x="115" fg:w="628"/><text x="15.7070%" y="2559.50">fuzzit.exe`rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::work_found (1 samples, 0.13%)</title><rect x="99.7312%" y="2533" width="0.1344%" height="15" fill="rgb(231,133,46)" fg:x="742" fg:w="1"/><text x="99.9812%" y="2543.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_any_threads (1 samples, 0.13%)</title><rect x="99.7312%" y="2517" width="0.1344%" height="15" fill="rgb(217,16,9)" fg:x="742" fg:w="1"/><text x="99.9812%" y="2527.50"></text></g><g><title>fuzzit.exe`rayon_core::sleep::Sleep::wake_specific_thread (1 samples, 0.13%)</title><rect x="99.7312%" y="2501" width="0.1344%" height="15" fill="rgb(249,173,9)" fg:x="742" fg:w="1"/><text x="99.9812%" y="2511.50"></text></g><g><title>fuzzit.exe`core::ptr::drop_in_place(std::sync::poison::mutex::MutexGuard (1 samples, 0.13%)</title><rect x="99.7312%" y="2485" width="0.1344%" height="15" fill="rgb(205,163,53)" fg:x="742" fg:w="1"/><text x="99.9812%" y="2495.50"></text></g><g><title>fuzzit.exe`std::sync::poison::mutex::impl$14::drop(std::sync::poison::mutex::MutexGuard (1 samples, 0.13%)</title><rect x="99.7312%" y="2469" width="0.1344%" height="15" fill="rgb(217,54,41)" fg:x="742" fg:w="1"/><text x="99.9812%" y="2479.50"></text></g><g><title>fuzzit.exe`std::sys::sync::mutex::futex::Mutex::unlock (1 samples, 0.13%)</title><rect x="99.7312%" y="2453" width="0.1344%" height="15" fill="rgb(228,216,12)" fg:x="742" fg:w="1"/><text x="99.9812%" y="2463.50"></text></g><g><title>all (744 samples, 100%)</title><rect x="0.0000%" y="2885" width="100.0000%" height="15" fill="rgb(244,228,15)" fg:x="0" fg:w="744"/><text x="0.2500%" y="2895.50"></text></g><g><title>`0x7FFE2F048D9C (704 samples, 94.62%)</title><rect x="5.3763%" y="2869" width="94.6237%" height="15" fill="rgb(221,176,53)" fg:x="40" fg:w="704"/><text x="5.6263%" y="2879.50">`0x7FFE2F048D9C</text></g><g><title>`0x7FFE2DD3E8D7 (704 samples, 94.62%)</title><rect x="5.3763%" y="2853" width="94.6237%" height="15" fill="rgb(205,94,34)" fg:x="40" fg:w="704"/><text x="5.6263%" y="2863.50">`0x7FFE2DD3E8D7</text></g><g><title>fuzzit.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (630 samples, 84.68%)</title><rect x="15.3226%" y="2837" width="84.6774%" height="15" fill="rgb(213,110,48)" fg:x="114" fg:w="630"/><text x="15.5726%" y="2847.50">fuzzit.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>fuzzit.exe`alloc::boxed::impl$28::call_once (630 samples, 84.68%)</title><rect x="15.3226%" y="2821" width="84.6774%" height="15" fill="rgb(236,142,28)" fg:x="114" fg:w="630"/><text x="15.5726%" y="2831.50">fuzzit.exe`alloc::boxed::impl$28::call_once</text></g><g><title>fuzzit.exe`alloc::boxed::impl$28::call_once (630 samples, 84.68%)</title><rect x="15.3226%" y="2805" width="84.6774%" height="15" fill="rgb(225,135,29)" fg:x="114" fg:w="630"/><text x="15.5726%" y="2815.50">fuzzit.exe`alloc::boxed::impl$28::call_once</text></g><g><title>fuzzit.exe`alloc::boxed::impl$8::drop (630 samples, 84.68%)</title><rect x="15.3226%" y="2789" width="84.6774%" height="15" fill="rgb(252,45,31)" fg:x="114" fg:w="630"/><text x="15.5726%" y="2799.50">fuzzit.exe`alloc::boxed::impl$8::drop</text></g><g><title>fuzzit.exe`core::alloc::layout::Layout::for_value_raw (630 samples, 84.68%)</title><rect x="15.3226%" y="2773" width="84.6774%" height="15" fill="rgb(211,187,50)" fg:x="114" fg:w="630"/><text x="15.5726%" y="2783.50">fuzzit.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>fuzzit.exe`core::mem::size_of_val_raw (630 samples, 84.68%)</title><rect x="15.3226%" y="2757" width="84.6774%" height="15" fill="rgb(229,109,7)" fg:x="114" fg:w="630"/><text x="15.5726%" y="2767.50">fuzzit.exe`core::mem::size_of_val_raw</text></g><g><title>fuzzit.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (630 samples, 84.68%)</title><rect x="15.3226%" y="2741" width="84.6774%" height="15" fill="rgb(251,131,51)" fg:x="114" fg:w="630"/><text x="15.5726%" y="2751.50">fuzzit.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::c..</text></g><g><title>fuzzit.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2::spawn::closure_env$0,tuple$ (629 samples, 84.54%)</title><rect x="15.4570%" y="2725" width="84.5430%" height="15" fill="rgb(251,180,35)" fg:x="115" fg:w="629"/><text x="15.7070%" y="2735.50">fuzzit.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;rayon_core::registry::impl$2..</text></g><g><title>fuzzit.exe`std::thread::impl$23::clone (1 samples, 0.13%)</title><rect x="99.8656%" y="2709" width="0.1344%" height="15" fill="rgb(211,46,32)" fg:x="743" fg:w="1"/><text x="100.1156%" y="2719.50"></text></g><g><title>fuzzit.exe`core::pin::impl$28::clone(core::pin::Pin&lt;alloc::sync::Arc (1 samples, 0.13%)</title><rect x="99.8656%" y="2693" width="0.1344%" height="15" fill="rgb(248,123,17)" fg:x="743" fg:w="1"/><text x="100.1156%" y="2703.50"></text></g><g><title>fuzzit.exe`alloc::sync::impl$28::clone(alloc::sync::Arc (1 samples, 0.13%)</title><rect x="99.8656%" y="2677" width="0.1344%" height="15" fill="rgb(227,141,18)" fg:x="743" fg:w="1"/><text x="100.1156%" y="2687.50"></text></g></svg></svg>